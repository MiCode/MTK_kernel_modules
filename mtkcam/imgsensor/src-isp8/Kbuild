# SPDX-License-Identifier: GPL-2.0
# Copyright (C) 2020 MediaTek Inc.

MKFILE_PATH := $(lastword $(MAKEFILE_LIST))
$(info IMGSENSOR_SRC_V4L2_MKFILE_PATH: $(MKFILE_PATH))
IMGSENSOR_DRIVER_PATH := $(patsubst %/,%,$(dir $(realpath $(MKFILE_PATH))))
$(info IMGSENSOR_DRIVER_PATH: $(IMGSENSOR_DRIVER_PATH))
MTK_DRIVER_PATH := $(DEVICE_MODULES_PATH)/drivers/misc/mediatek
$(info IMGSENSOR_MTK_DRIVER_PATH: $(MTK_DRIVER_PATH))
MTK_ISP_DRIVER_PATH := $(DEVICE_MODULES_PATH)/../vendor/mediatek/kernel_modules/mtkcam
$(info IMGSENSOR_MTK_ISP_DRIVER_PATH: $(MTK_ISP_DRIVER_PATH))
IMGSENSOR_PROJECT := $(subst ",,$(CONFIG_MTK_IMGSENSOR_PROJECT))
$(info IMGSENSOR_PROJECT: $(IMGSENSOR_PROJECT))

FRAME_SYNC := frame-sync
VIRT_SENSOR := virt-sensor
KO_CODE_PATH := $(if $(filter /%,$(src)),,$(srctree)/)$(src)

$(info IMGSENSOR_DEVICE_MODULES_PATH: $(DEVICE_MODULES_PATH))

$(info IMGSENSOR_srctree: $(srctree))

$(info IMGSENSOR_src: $(src))

subdir-ccflags-y += \
	-I$(DEVICE_MODULES_PATH)/include \
	-I$(MTK_DRIVER_PATH)/imgsensor/inc \
	-I$(IMGSENSOR_DRIVER_PATH)/ \
	-I$(IMGSENSOR_DRIVER_PATH)/../inc \
	-I$(MTK_ISP_DRIVER_PATH)/ \
	-I$(MTK_ISP_DRIVER_PATH)/include/ \
	-I$(DEVICE_MODULES_PATH)/drivers/misc/mediatek/include/mt-plat/ \
	-I$(DEVICE_MODULES_PATH)/drivers/misc/mediatek/i3c_i2c_wrap \
	-I$(DEVICE_MODULES_PATH)/drivers/i3c/master \
	-I$(srctree)/drivers/thermal


obj-y += imgsensor-glue/
subdir-ccflags-y += -D__XIAOMI_CAMERA__

obj-$(CONFIG_MTK_V4L2_IMGSENSOR) += imgsensor_isp8.o
imgsensor_isp8-objs :=
imgsensor_isp8-objs += \
	adaptor-hw.o \
	adaptor-drv.o \
	adaptor-i2c.o \
	adaptor-ctrls.o \
	adaptor-sentest-ctrl.o \
	adaptor-sentest-ioctrl.o \
	adaptor-ioctl.o \
	adaptor-command.o \
	adaptor-common-ctrl.o \
	adaptor-subdrv-ctrl.o \
	adaptor-fsync-ctrls.o \
	adaptor-trace.o \
	adaptor-util.o \

define FILTER_DRV
ifeq ($(wildcard $(IMGSENSOR_DRIVER_PATH)/camera_project/$(IMGSENSOR_PROJECT)/$(1)),)
ifeq ($(wildcard $(IMGSENSOR_DRIVER_PATH)/common/$(1)),)
unknown_drv += $(1)
else
common_drv += $(1)
total_subdrvs += $(1)
endif
else
project_drv += $(1)
total_subdrvs += $(1)
endif
ifneq ($(wildcard $(IMGSENSOR_DRIVER_PATH)/camera_project/k6983v1_64_alpha/$(1)),)
alpha_drv += $(1)
total_subdrvs += $(1)
unknown_drv :=
endif
ifneq ($(wildcard $(IMGSENSOR_DRIVER_PATH)/camera_project/k6985v1_64_alpha/$(1)),)
alpha_drv_k6985 += $(1)
total_subdrvs += $(1)
unknown_drv :=
endif
endef

$(foreach drv,$(subst $\",,$(CONFIG_CUSTOM_KERNEL_IMGSENSOR)),$(eval $(call FILTER_DRV,$(drv))))

ifneq ($(wildcard $(IMGSENSOR_DRIVER_PATH)/$(FRAME_SYNC)/Makefile),)
$(info framesync_drv: $(FRAME_SYNC))
include $(IMGSENSOR_DRIVER_PATH)/$(FRAME_SYNC)/Makefile
else
$(info framesync_drv: NOT FOUND)
endif

ifneq ($(wildcard $(IMGSENSOR_DRIVER_PATH)/$(VIRT_SENSOR)/Makefile),)
$(info virt-sensor: $(VIRT_SENSOR))
include $(IMGSENSOR_DRIVER_PATH)/$(VIRT_SENSOR)/Makefile
else
$(info virt-sensor: NOT FOUND)
endif

define add_subdrv
$(eval subdrv-rpath = $1)
$(eval include $(KO_CODE_PATH)/$1/Makefile)
endef

ifneq ($(unknown_drv),)
$(info unknown_drv: $(unknown_drv))
endif

ifneq ($(common_drv),)
$(info common_drv : $(common_drv))
$(foreach drv,$(common_drv),$(eval $(call add_subdrv,common/$(drv))))
endif

ifneq ($(project_drv),)
$(info project_drv : $(project_drv))
$(foreach drv,$(project_drv),$(eval $(call add_subdrv,camera_project/$(IMGSENSOR_PROJECT)/$(drv))))
endif

ifneq ($(alpha_drv),)
$(info alpha_drv : $(alpha_drv))
$(foreach drv,$(alpha_drv),$(eval $(call add_subdrv,camera_project/k6983v1_64_alpha/$(drv))))
endif

ifneq ($(alpha_drv_k6985),)
$(info alpha_drv_k6985 : $(alpha_drv_k6985))
$(foreach drv,$(alpha_drv_k6985),$(eval $(call add_subdrv,camera_project/k6985v1_64_alpha/$(drv))))
endif

comma := ,
empty :=
space := $(empty) $(empty)

IMGSENSOR_SUBDRVS := $(subst $(space),$(comma),$(foreach e,$(total_subdrvs),E($(e))))
ifneq ($(IMGSENSOR_SUBDRVS),)
subdir-ccflags-y += -D'IMGSENSOR_SUBDRVS=$(IMGSENSOR_SUBDRVS)'
endif

$(info imgsensor_isp8-objs : $(imgsensor_isp8-objs))
$(info imgsensor_isp8 subdir-ccflags-y : $(subdir-ccflags-y))

