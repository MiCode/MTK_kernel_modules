/* SPDX-License-Identifier: GPL-2.0 */
/*
 * Copyright (c) 2019 MediaTek Inc.
 */
/*****************************************************************************
 *
 * Filename:
 * ---------
 *	 imx598_Sensor_setting.h
 *
 * Project:
 * --------
 * Description:
 * ------------
 *	 CMOS sensor header file
 *
 ****************************************************************************/
#ifndef _IMX598_SENSOR_SETTING_H
#define _IMX598_SENSOR_SETTING_H

#include "kd_camera_typedef.h"

// NOTE:
// for 2 exp setting,  VCID of LE/SE should be 0x00 and 0x02
// which align 3 exp setting LE/NE/SE 0x00,  0x01,  0x02
// to seamless switch,  VC ID of SE should remain the same
// SONY sensor: VCID of 2nd frame at 0x3070; VCID of 3rd frame at 0x3080
// must be two different value

static u16 imx598_init_setting[] = {
	0x0136, 0x18,
	0x0137, 0x00,
	0x3C7E, 0x01,
	0x3C7F, 0x03,
	0x3C00, 0x10,
	0x3C01, 0x10,
	0x3C02, 0x10,
	0x3C03, 0x10,
	0x3C04, 0x10,
	0x3C05, 0x01,
	0x3C06, 0x00,
	0x3C07, 0x00,
	0x3C08, 0x03,
	0x3C09, 0xFF,
	0x3C0A, 0x01,
	0x3C0B, 0x00,
	0x3C0C, 0x00,
	0x3C0D, 0x03,
	0x3C0E, 0xFF,
	0x3C0F, 0x20,
	0x6E1D, 0x00,
	0x6E25, 0x00,
	0x6E38, 0x03,
	0x6E3B, 0x01,
	0x9004, 0x2C,
	0x9200, 0xF4,
	0x9201, 0xA7,
	0x9202, 0xF4,
	0x9203, 0xAA,
	0x9204, 0xF4,
	0x9205, 0xAD,
	0x9206, 0xF4,
	0x9207, 0xB0,
	0x9208, 0xF4,
	0x9209, 0xB3,
	0x920A, 0xB7,
	0x920B, 0x34,
	0x920C, 0xB7,
	0x920D, 0x36,
	0x920E, 0xB7,
	0x920F, 0x37,
	0x9210, 0xB7,
	0x9211, 0x38,
	0x9212, 0xB7,
	0x9213, 0x39,
	0x9214, 0xB7,
	0x9215, 0x3A,
	0x9216, 0xB7,
	0x9217, 0x3C,
	0x9218, 0xB7,
	0x9219, 0x3D,
	0x921A, 0xB7,
	0x921B, 0x3E,
	0x921C, 0xB7,
	0x921D, 0x3F,
	0x921E, 0x85,
	0x921F, 0x77,
	0x9226, 0x42,
	0x9227, 0x52,
	0x9228, 0x60,
	0x9229, 0xB9,
	0x922A, 0x60,
	0x922B, 0xBF,
	0x922C, 0x60,
	0x922D, 0xC5,
	0x922E, 0x60,
	0x922F, 0xCB,
	0x9230, 0x60,
	0x9231, 0xD1,
	0x9232, 0x60,
	0x9233, 0xD7,
	0x9234, 0x60,
	0x9235, 0xDD,
	0x9236, 0x60,
	0x9237, 0xE3,
	0x9238, 0x60,
	0x9239, 0xE9,
	0x923A, 0x60,
	0x923B, 0xEF,
	0x923C, 0x60,
	0x923D, 0xF5,
	0x923E, 0x60,
	0x923F, 0xF9,
	0x9240, 0x60,
	0x9241, 0xFD,
	0x9242, 0x61,
	0x9243, 0x01,
	0x9244, 0x61,
	0x9245, 0x05,
	0x924A, 0x61,
	0x924B, 0x6B,
	0x924C, 0x61,
	0x924D, 0x7F,
	0x924E, 0x61,
	0x924F, 0x92,
	0x9250, 0x61,
	0x9251, 0x9C,
	0x9252, 0x61,
	0x9253, 0xAB,
	0x9254, 0x61,
	0x9255, 0xC4,
	0x9256, 0x61,
	0x9257, 0xCE,
	0x9810, 0x14,
	0x9814, 0x14,
	0xC449, 0x04,
	0xC44A, 0x01,
	0xE286, 0x31,
	0xE2A6, 0x32,
	0xE2C6, 0x33,
	0x88D6, 0x60,
	0x9852, 0x00,
	0xAE09, 0xFF,
	0xAE0A, 0xFF,
	0xAE12, 0x58,
	0xAE13, 0x58,
	0xAE15, 0x10,
	0xAE16, 0x10,
	0xB071, 0x00,
};

static u16 imx598_preview_setting[] = {
	0x0112, 0x0A,
	0x0113, 0x0A,
	0x0114, 0x03,
	0x0342, 0x1E,
	0x0343, 0xC0,
	0x0340, 0x0E,
	0x0341, 0x4A,
	0x0344, 0x00,
	0x0345, 0x00,
	0x0346, 0x00,
	0x0347, 0x00,
	0x0348, 0x1F,
	0x0349, 0x3F,
	0x034A, 0x17,
	0x034B, 0x6F,
	0x0900, 0x01,
	0x0901, 0x22,
	0x0902, 0x08,
	0x3246, 0x81,
	0x3247, 0x81,
	0x0401, 0x00,
	0x0404, 0x00,
	0x0405, 0x10,
	0x0408, 0x00,
	0x0409, 0x00,
	0x040A, 0x00,
	0x040B, 0x00,
	0x040C, 0x0F,
	0x040D, 0xA0,
	0x040E, 0x0B,
	0x040F, 0xB8,
	0x034C, 0x0F,
	0x034D, 0xA0,
	0x034E, 0x0B,
	0x034F, 0xB8,
	0x0301, 0x05,
	0x0303, 0x02,
	0x0305, 0x03,
	0x0306, 0x01,
	0x0307, 0x0E,
	0x030B, 0x01,
	0x030D, 0x03,
	0x030E, 0x01,
	0x030F, 0x13,
	0x0310, 0x01,
	0x3620, 0x00,
	0x3621, 0x00,
	0x380C, 0x80,
	0x3C13, 0x00,
	0x3C14, 0x28,
	0x3C15, 0x28,
	0x3C16, 0x32,
	0x3C17, 0x46,
	0x3C18, 0x67,
	0x3C19, 0x8F,
	0x3C1A, 0x8F,
	0x3C1B, 0x99,
	0x3C1C, 0xAD,
	0x3C1D, 0xCE,
	0x3C1E, 0x8F,
	0x3C1F, 0x8F,
	0x3C20, 0x99,
	0x3C21, 0xAD,
	0x3C22, 0xCE,
	0x3C25, 0x22,
	0x3C26, 0x23,
	0x3C27, 0xE6,
	0x3C28, 0xE6,
	0x3C29, 0x08,
	0x3C2A, 0x0F,
	0x3C2B, 0x14,
	0x3F0C, 0x01,
	0x3F14, 0x00,
	0x3F80, 0x06,
	0x3F81, 0xB7,
	0x3F82, 0x00,
	0x3F83, 0x00,
	0x3F8C, 0x07,
	0x3F8D, 0xD0,
	0x3FF4, 0x01,
	0x3FF5, 0x40,
	0x3FFC, 0x02,
	0x3FFD, 0x15,
	0x0202, 0x0E,
	0x0203, 0x1A,
	0x0224, 0x01,
	0x0225, 0xF4,
	0x3FE0, 0x01,
	0x3FE1, 0xF4,
	0x0204, 0x00,
	0x0205, 0x70,
	0x0216, 0x00,
	0x0217, 0x70,
	0x0218, 0x01,
	0x0219, 0x00,
	0x020E, 0x01,
	0x020F, 0x00,
	0x0210, 0x01,
	0x0211, 0x00,
	0x0212, 0x01,
	0x0213, 0x00,
	0x0214, 0x01,
	0x0215, 0x00,
	0x3FE2, 0x00,
	0x3FE3, 0x70,
	0x3FE4, 0x01,
	0x3FE5, 0x00,
	0x3E20, 0x02,
	0x3E3B, 0x01,
	0x4034, 0x01,
	0x4035, 0xF0,
};
static u16 imx598_capture_setting[] = {
	0x0112, 0x0A,
	0x0113, 0x0A,
	0x0114, 0x03,
	0x0342, 0x1E,
	0x0343, 0xC0,
	0x0340, 0x0E,
	0x0341, 0x4A,
	0x0344, 0x00,
	0x0345, 0x00,
	0x0346, 0x00,
	0x0347, 0x00,
	0x0348, 0x1F,
	0x0349, 0x3F,
	0x034A, 0x17,
	0x034B, 0x6F,
	0x0900, 0x01,
	0x0901, 0x22,
	0x0902, 0x08,
	0x3246, 0x81,
	0x3247, 0x81,
	0x0401, 0x00,
	0x0404, 0x00,
	0x0405, 0x10,
	0x0408, 0x00,
	0x0409, 0x00,
	0x040A, 0x00,
	0x040B, 0x00,
	0x040C, 0x0F,
	0x040D, 0xA0,
	0x040E, 0x0B,
	0x040F, 0xB8,
	0x034C, 0x0F,
	0x034D, 0xA0,
	0x034E, 0x0B,
	0x034F, 0xB8,
	0x0301, 0x05,
	0x0303, 0x02,
	0x0305, 0x03,
	0x0306, 0x01,
	0x0307, 0x0E,
	0x030B, 0x01,
	0x030D, 0x03,
	0x030E, 0x01,
	0x030F, 0x13,
	0x0310, 0x01,
	0x3620, 0x00,
	0x3621, 0x00,
	0x380C, 0x80,
	0x3C13, 0x00,
	0x3C14, 0x28,
	0x3C15, 0x28,
	0x3C16, 0x32,
	0x3C17, 0x46,
	0x3C18, 0x67,
	0x3C19, 0x8F,
	0x3C1A, 0x8F,
	0x3C1B, 0x99,
	0x3C1C, 0xAD,
	0x3C1D, 0xCE,
	0x3C1E, 0x8F,
	0x3C1F, 0x8F,
	0x3C20, 0x99,
	0x3C21, 0xAD,
	0x3C22, 0xCE,
	0x3C25, 0x22,
	0x3C26, 0x23,
	0x3C27, 0xE6,
	0x3C28, 0xE6,
	0x3C29, 0x08,
	0x3C2A, 0x0F,
	0x3C2B, 0x14,
	0x3F0C, 0x01,
	0x3F14, 0x00,
	0x3F80, 0x06,
	0x3F81, 0xB7,
	0x3F82, 0x00,
	0x3F83, 0x00,
	0x3F8C, 0x07,
	0x3F8D, 0xD0,
	0x3FF4, 0x01,
	0x3FF5, 0x40,
	0x3FFC, 0x02,
	0x3FFD, 0x15,
	0x0202, 0x0E,
	0x0203, 0x1A,
	0x0224, 0x01,
	0x0225, 0xF4,
	0x3FE0, 0x01,
	0x3FE1, 0xF4,
	0x0204, 0x00,
	0x0205, 0x70,
	0x0216, 0x00,
	0x0217, 0x70,
	0x0218, 0x01,
	0x0219, 0x00,
	0x020E, 0x01,
	0x020F, 0x00,
	0x0210, 0x01,
	0x0211, 0x00,
	0x0212, 0x01,
	0x0213, 0x00,
	0x0214, 0x01,
	0x0215, 0x00,
	0x3FE2, 0x00,
	0x3FE3, 0x70,
	0x3FE4, 0x01,
	0x3FE5, 0x00,
	0x3E20, 0x02,
	0x3E3B, 0x01,
	0x4034, 0x01,
	0x4035, 0xF0,
};
static u16 imx598_normal_video_setting[] = {
	0x0112, 0x0A,
	0x0113, 0x0A,
	0x0114, 0x03,
	0x0342, 0x11,
	0x0343, 0xF0,
	0x0340, 0x13,
	0x0341, 0x98,
	0x0344, 0x00,
	0x0345, 0x00,
	0x0346, 0x02,
	0x0347, 0xE8,
	0x0348, 0x1F,
	0x0349, 0x3F,
	0x034A, 0x14,
	0x034B, 0x87,
	0x0900, 0x01,
	0x0901, 0x22,
	0x0902, 0x08,
	0x3246, 0x81,
	0x3247, 0x81,
	0x0401, 0x00,
	0x0404, 0x00,
	0x0405, 0x10,
	0x0408, 0x00,
	0x0409, 0x00,
	0x040A, 0x00,
	0x040B, 0x00,
	0x040C, 0x0F,
	0x040D, 0xA0,
	0x040E, 0x08,
	0x040F, 0xD0,
	0x034C, 0x0F,
	0x034D, 0xA0,
	0x034E, 0x08,
	0x034F, 0xD0,
	0x0301, 0x05,
	0x0303, 0x02,
	0x0305, 0x03,
	0x0306, 0x00,
	0x0307, 0xD8,
	0x030B, 0x01,
	0x030D, 0x03,
	0x030E, 0x01,
	0x030F, 0x13,
	0x0310, 0x01,
	0x3620, 0x00,
	0x3621, 0x00,
	0x380C, 0x80,
	0x3C13, 0x00,
	0x3C14, 0x28,
	0x3C15, 0x28,
	0x3C16, 0x32,
	0x3C17, 0x46,
	0x3C18, 0x67,
	0x3C19, 0x8F,
	0x3C1A, 0x8F,
	0x3C1B, 0x99,
	0x3C1C, 0xAD,
	0x3C1D, 0xCE,
	0x3C1E, 0x8F,
	0x3C1F, 0x8F,
	0x3C20, 0x99,
	0x3C21, 0xAD,
	0x3C22, 0xCE,
	0x3C25, 0x22,
	0x3C26, 0x23,
	0x3C27, 0xE6,
	0x3C28, 0xE6,
	0x3C29, 0x08,
	0x3C2A, 0x0F,
	0x3C2B, 0x14,
	0x3F0C, 0x00,
	0x3F14, 0x01,
	0x3F80, 0x00,
	0x3F81, 0x00,
	0x3F82, 0x04,
	0x3F83, 0x38,
	0x3F8C, 0x00,
	0x3F8D, 0x00,
	0x3FF4, 0x00,
	0x3FF5, 0x00,
	0x3FFC, 0x00,
	0x3FFD, 0x00,
	0x0202, 0x13,
	0x0203, 0x68,
	0x0224, 0x01,
	0x0225, 0xF4,
	0x3FE0, 0x01,
	0x3FE1, 0xF4,
	0x0204, 0x00,
	0x0205, 0x70,
	0x0216, 0x00,
	0x0217, 0x70,
	0x0218, 0x01,
	0x0219, 0x00,
	0x020E, 0x01,
	0x020F, 0x00,
	0x0210, 0x01,
	0x0211, 0x00,
	0x0212, 0x01,
	0x0213, 0x00,
	0x0214, 0x01,
	0x0215, 0x00,
	0x3FE2, 0x00,
	0x3FE3, 0x70,
	0x3FE4, 0x01,
	0x3FE5, 0x00,
	0x3E20, 0x02,
	0x3E3B, 0x00,
	0x4034, 0x01,
	0x4035, 0xF0,
};
static u16 imx598_hs_video_setting[] = {
	0x0112, 0x0A,
	0x0113, 0x0A,
	0x0114, 0x03,
	0x0342, 0x11,
	0x0343, 0xF0,
	0x0340, 0x09,
	0x0341, 0xCC,
	0x0344, 0x00,
	0x0345, 0x00,
	0x0346, 0x02,
	0x0347, 0xE8,
	0x0348, 0x1F,
	0x0349, 0x3F,
	0x034A, 0x14,
	0x034B, 0x87,
	0x0900, 0x01,
	0x0901, 0x22,
	0x0902, 0x08,
	0x3246, 0x81,
	0x3247, 0x81,
	0x0401, 0x00,
	0x0404, 0x00,
	0x0405, 0x10,
	0x0408, 0x00,
	0x0409, 0x00,
	0x040A, 0x00,
	0x040B, 0x00,
	0x040C, 0x0F,
	0x040D, 0xA0,
	0x040E, 0x08,
	0x040F, 0xD0,
	0x034C, 0x0F,
	0x034D, 0xA0,
	0x034E, 0x08,
	0x034F, 0xD0,
	0x0301, 0x05,
	0x0303, 0x02,
	0x0305, 0x03,
	0x0306, 0x00,
	0x0307, 0xD8,
	0x030B, 0x01,
	0x030D, 0x03,
	0x030E, 0x01,
	0x030F, 0x13,
	0x0310, 0x01,
	0x3620, 0x00,
	0x3621, 0x00,
	0x380C, 0x80,
	0x3C13, 0x00,
	0x3C14, 0x28,
	0x3C15, 0x28,
	0x3C16, 0x32,
	0x3C17, 0x46,
	0x3C18, 0x67,
	0x3C19, 0x8F,
	0x3C1A, 0x8F,
	0x3C1B, 0x99,
	0x3C1C, 0xAD,
	0x3C1D, 0xCE,
	0x3C1E, 0x8F,
	0x3C1F, 0x8F,
	0x3C20, 0x99,
	0x3C21, 0xAD,
	0x3C22, 0xCE,
	0x3C25, 0x22,
	0x3C26, 0x23,
	0x3C27, 0xE6,
	0x3C28, 0xE6,
	0x3C29, 0x08,
	0x3C2A, 0x0F,
	0x3C2B, 0x14,
	0x3F0C, 0x00,
	0x3F14, 0x01,
	0x3F80, 0x00,
	0x3F81, 0x00,
	0x3F82, 0x04,
	0x3F83, 0x38,
	0x3F8C, 0x00,
	0x3F8D, 0x00,
	0x3FF4, 0x00,
	0x3FF5, 0x00,
	0x3FFC, 0x00,
	0x3FFD, 0x00,
	0x0202, 0x09,
	0x0203, 0x9C,
	0x0224, 0x01,
	0x0225, 0xF4,
	0x3FE0, 0x01,
	0x3FE1, 0xF4,
	0x0204, 0x00,
	0x0205, 0x70,
	0x0216, 0x00,
	0x0217, 0x70,
	0x0218, 0x01,
	0x0219, 0x00,
	0x020E, 0x01,
	0x020F, 0x00,
	0x0210, 0x01,
	0x0211, 0x00,
	0x0212, 0x01,
	0x0213, 0x00,
	0x0214, 0x01,
	0x0215, 0x00,
	0x3FE2, 0x00,
	0x3FE3, 0x70,
	0x3FE4, 0x01,
	0x3FE5, 0x00,
	0x3E20, 0x02,
	0x3E3B, 0x00,
	0x4034, 0x01,
	0x4035, 0xF0,
};
static u16 imx598_slim_video_setting[] = {
	0x0112, 0x0A,
	0x0113, 0x0A,
	0x0114, 0x03,
	0x0342, 0x11,
	0x0343, 0xF0,
	0x0340, 0x18,
	0x0341, 0x7E,
	0x0344, 0x00,
	0x0345, 0x00,
	0x0346, 0x02,
	0x0347, 0xE8,
	0x0348, 0x1F,
	0x0349, 0x3F,
	0x034A, 0x14,
	0x034B, 0x87,
	0x0900, 0x01,
	0x0901, 0x22,
	0x0902, 0x08,
	0x3246, 0x81,
	0x3247, 0x81,
	0x0401, 0x00,
	0x0404, 0x00,
	0x0405, 0x10,
	0x0408, 0x00,
	0x0409, 0x00,
	0x040A, 0x00,
	0x040B, 0x00,
	0x040C, 0x0F,
	0x040D, 0xA0,
	0x040E, 0x08,
	0x040F, 0xD0,
	0x034C, 0x0F,
	0x034D, 0xA0,
	0x034E, 0x08,
	0x034F, 0xD0,
	0x0301, 0x05,
	0x0303, 0x02,
	0x0305, 0x03,
	0x0306, 0x01,
	0x0307, 0x0E,
	0x030B, 0x01,
	0x030D, 0x03,
	0x030E, 0x01,
	0x030F, 0x13,
	0x0310, 0x01,
	0x3620, 0x00,
	0x3621, 0x00,
	0x380C, 0x80,
	0x3C13, 0x00,
	0x3C14, 0x28,
	0x3C15, 0x28,
	0x3C16, 0x32,
	0x3C17, 0x46,
	0x3C18, 0x67,
	0x3C19, 0x8F,
	0x3C1A, 0x8F,
	0x3C1B, 0x99,
	0x3C1C, 0xAD,
	0x3C1D, 0xCE,
	0x3C1E, 0x8F,
	0x3C1F, 0x8F,
	0x3C20, 0x99,
	0x3C21, 0xAD,
	0x3C22, 0xCE,
	0x3C25, 0x22,
	0x3C26, 0x23,
	0x3C27, 0xE6,
	0x3C28, 0xE6,
	0x3C29, 0x08,
	0x3C2A, 0x0F,
	0x3C2B, 0x14,
	0x3F0C, 0x00,
	0x3F14, 0x01,
	0x3F80, 0x00,
	0x3F81, 0x00,
	0x3F82, 0x04,
	0x3F83, 0x38,
	0x3F8C, 0x00,
	0x3F8D, 0x00,
	0x3FF4, 0x00,
	0x3FF5, 0x00,
	0x3FFC, 0x00,
	0x3FFD, 0x00,
	0x0202, 0x18,
	0x0203, 0x4E,
	0x0224, 0x01,
	0x0225, 0xF4,
	0x3FE0, 0x01,
	0x3FE1, 0xF4,
	0x0204, 0x00,
	0x0205, 0x70,
	0x0216, 0x00,
	0x0217, 0x70,
	0x0218, 0x01,
	0x0219, 0x00,
	0x020E, 0x01,
	0x020F, 0x00,
	0x0210, 0x01,
	0x0211, 0x00,
	0x0212, 0x01,
	0x0213, 0x00,
	0x0214, 0x01,
	0x0215, 0x00,
	0x3FE2, 0x00,
	0x3FE3, 0x70,
	0x3FE4, 0x01,
	0x3FE5, 0x00,
	0x3E20, 0x02,
	0x3E3B, 0x00,
	0x4034, 0x01,
	0x4035, 0xF0,
};
static u16 imx598_custom1_setting[] = {
	0x0112, 0x0A,
	0x0113, 0x0A,
	0x0114, 0x03,
	0x0342, 0x11,
	0x0343, 0xF0,
	0x0340, 0x18,
	0x0341, 0x7E,
	0x0344, 0x00,
	0x0345, 0x00,
	0x0346, 0x00,
	0x0347, 0x00,
	0x0348, 0x1F,
	0x0349, 0x3F,
	0x034A, 0x17,
	0x034B, 0x6F,
	0x0900, 0x01,
	0x0901, 0x22,
	0x0902, 0x08,
	0x3246, 0x81,
	0x3247, 0x81,
	0x0401, 0x00,
	0x0404, 0x00,
	0x0405, 0x10,
	0x0408, 0x00,
	0x0409, 0x00,
	0x040A, 0x00,
	0x040B, 0x00,
	0x040C, 0x0F,
	0x040D, 0xA0,
	0x040E, 0x0B,
	0x040F, 0xB8,
	0x034C, 0x0F,
	0x034D, 0xA0,
	0x034E, 0x0B,
	0x034F, 0xB8,
	0x0301, 0x05,
	0x0303, 0x02,
	0x0305, 0x03,
	0x0306, 0x01,
	0x0307, 0x0E,
	0x030B, 0x01,
	0x030D, 0x03,
	0x030E, 0x01,
	0x030F, 0x13,
	0x0310, 0x01,
	0x3620, 0x00,
	0x3621, 0x00,
	0x380C, 0x80,
	0x3C13, 0x00,
	0x3C14, 0x28,
	0x3C15, 0x28,
	0x3C16, 0x32,
	0x3C17, 0x46,
	0x3C18, 0x67,
	0x3C19, 0x8F,
	0x3C1A, 0x8F,
	0x3C1B, 0x99,
	0x3C1C, 0xAD,
	0x3C1D, 0xCE,
	0x3C1E, 0x8F,
	0x3C1F, 0x8F,
	0x3C20, 0x99,
	0x3C21, 0xAD,
	0x3C22, 0xCE,
	0x3C25, 0x22,
	0x3C26, 0x23,
	0x3C27, 0xE6,
	0x3C28, 0xE6,
	0x3C29, 0x08,
	0x3C2A, 0x0F,
	0x3C2B, 0x14,
	0x3F0C, 0x00,
	0x3F14, 0x01,
	0x3F80, 0x00,
	0x3F81, 0x00,
	0x3F82, 0x04,
	0x3F83, 0x38,
	0x3F8C, 0x00,
	0x3F8D, 0x00,
	0x3FF4, 0x00,
	0x3FF5, 0x00,
	0x3FFC, 0x00,
	0x3FFD, 0x00,
	0x0202, 0x18,
	0x0203, 0x4E,
	0x0224, 0x01,
	0x0225, 0xF4,
	0x3FE0, 0x01,
	0x3FE1, 0xF4,
	0x0204, 0x00,
	0x0205, 0x70,
	0x0216, 0x00,
	0x0217, 0x70,
	0x0218, 0x01,
	0x0219, 0x00,
	0x020E, 0x01,
	0x020F, 0x00,
	0x0210, 0x01,
	0x0211, 0x00,
	0x0212, 0x01,
	0x0213, 0x00,
	0x0214, 0x01,
	0x0215, 0x00,
	0x3FE2, 0x00,
	0x3FE3, 0x70,
	0x3FE4, 0x01,
	0x3FE5, 0x00,
	0x3E20, 0x02,
	0x3E3B, 0x00,
	0x4034, 0x01,
	0x4035, 0xF0,
};

static u16 imx598_custom2_setting[] = {
	/* 4Lane */
	/* reg_6_1 */
	/* V2H2_CROP 2000_1132_30FPS_Tline_7.046us */
	/* H: 2000 */
	/* V: 1132 */
	/* MIPI output setting */
	0x0112, 0x0A,
	0x0113, 0x0A,
	0x0114, 0x03,
	/* Line Length PCK Setting */
	0x0342, 0x0B,
	0x0343, 0x60,
	/* Frame Length Lines Setting */
	0x0340, 0x12,
	0x0341, 0x74,
	/* ROI Setting */
	0x0344, 0x00,
	0x0345, 0x00,
	0x0346, 0x02,
	0x0347, 0xE0,
	0x0348, 0x1F,
	0x0349, 0x3F,
	0x034A, 0x14,
	0x034B, 0x8F,
	/* Mode Setting */
	0x0900, 0x01,
	0x0901, 0x44,
	0x0902, 0x08,
	0x3246, 0x89,
	0x3247, 0x89,
	/* Digital Crop & Scaling */
	0x0401, 0x00,
	0x0404, 0x00,
	0x0405, 0x10,
	0x0408, 0x00,
	0x0409, 0x00,
	0x040A, 0x00,
	0x040B, 0x00,
	0x040C, 0x07,
	0x040D, 0xD0,
	0x040E, 0x04,
	0x040F, 0x6C,
	/* Output Size Setting */
	0x034C, 0x07,
	0x034D, 0xD0,
	0x034E, 0x04,
	0x034F, 0x6C,
	/* Clock Setting */
	0x0301, 0x05,
	0x0303, 0x04,
	0x0305, 0x03,
	0x0306, 0x01,
	0x0307, 0x02,
	0x030B, 0x01,
	0x030D, 0x03,
	0x030E, 0x01,
	0x030F, 0x13,
	0x0310, 0x01,
	/* Other Setting */
	0x3620, 0x00,
	0x3621, 0x00,
	0x380C, 0x80,
	0x3C13, 0x00,
	0x3C14, 0x28,
	0x3C15, 0x28,
	0x3C16, 0x32,
	0x3C17, 0x46,
	0x3C18, 0x67,
	0x3C19, 0x8F,
	0x3C1A, 0x8F,
	0x3C1B, 0x99,
	0x3C1C, 0xAD,
	0x3C1D, 0xCE,
	0x3C1E, 0x8F,
	0x3C1F, 0x8F,
	0x3C20, 0x99,
	0x3C21, 0xAD,
	0x3C22, 0xCE,
	0x3C25, 0x22,
	0x3C26, 0x23,
	0x3C27, 0xE6,
	0x3C28, 0xE6,
	0x3C29, 0x08,
	0x3C2A, 0x0F,
	0x3C2B, 0x14,
	0x3F0C, 0x00,
	0x3F14, 0x00,
	0x3F80, 0x00,
	0x3F81, 0x00,
	0x3F82, 0x00,
	0x3F83, 0x00,
	0x3F8C, 0x00,
	0x3F8D, 0x00,
	0x3FF4, 0x00,
	0x3FF5, 0x4C,
	0x3FFC, 0x00,
	0x3FFD, 0x00,
	/* Integration Setting */
	0x0202, 0x12,
	0x0203, 0x44,
	0x0224, 0x01,
	0x0225, 0xF4,
	0x3FE0, 0x01,
	0x3FE1, 0xF4,
	/* Gain Setting */
	0x0204, 0x00,
	0x0205, 0x70,
	0x0216, 0x00,
	0x0217, 0x70,
	0x0218, 0x01,
	0x0219, 0x00,
	0x020E, 0x01,
	0x020F, 0x00,
	0x0210, 0x01,
	0x0211, 0x00,
	0x0212, 0x01,
	0x0213, 0x00,
	0x0214, 0x01,
	0x0215, 0x00,
	0x3FE2, 0x00,
	0x3FE3, 0x70,
	0x3FE4, 0x01,
	0x3FE5, 0x00,
	/* PDAF TYPE Setting */
	0x3E20, 0x01,
	/* PDAF TYPE2 Setting */
	0x3E3B, 0x00,
	0x4034, 0x01,
	0x4035, 0xF0,
};

static u16 imx598_custom3_setting[] = {
	0x0112, 0x0A,
	0x0113, 0x0A,
	0x0114, 0x03,
	0x0342, 0x0B,
	0x0343, 0x60,
	0x0340, 0x1D,
	0x0341, 0x30,
	0x0344, 0x00,
	0x0345, 0x00,
	0x0346, 0x00,
	0x0347, 0x00,
	0x0348, 0x1F,
	0x0349, 0x3F,
	0x034A, 0x17,
	0x034B, 0x6F,
	0x0900, 0x01,
	0x0901, 0x44,
	0x0902, 0x08,
	0x3246, 0x89,
	0x3247, 0x89,
	0x0401, 0x00,
	0x0404, 0x00,
	0x0405, 0x10,
	0x0408, 0x00,
	0x0409, 0x00,
	0x040A, 0x00,
	0x040B, 0x00,
	0x040C, 0x07,
	0x040D, 0xD0,
	0x040E, 0x05,
	0x040F, 0xDC,
	0x034C, 0x07,
	0x034D, 0xD0,
	0x034E, 0x05,
	0x034F, 0xDC,
	0x0301, 0x05,
	0x0303, 0x02,
	0x0305, 0x03,
	0x0306, 0x00,
	0x0307, 0xCC,
	0x030B, 0x01,
	0x030D, 0x03,
	0x030E, 0x01,
	0x030F, 0x13,
	0x0310, 0x01,
	0x3620, 0x00,
	0x3621, 0x00,
	0x380C, 0x80,
	0x3C13, 0x00,
	0x3C14, 0x28,
	0x3C15, 0x28,
	0x3C16, 0x32,
	0x3C17, 0x46,
	0x3C18, 0x67,
	0x3C19, 0x8F,
	0x3C1A, 0x8F,
	0x3C1B, 0x99,
	0x3C1C, 0xAD,
	0x3C1D, 0xCE,
	0x3C1E, 0x8F,
	0x3C1F, 0x8F,
	0x3C20, 0x99,
	0x3C21, 0xAD,
	0x3C22, 0xCE,
	0x3C25, 0x22,
	0x3C26, 0x23,
	0x3C27, 0xE6,
	0x3C28, 0xE6,
	0x3C29, 0x08,
	0x3C2A, 0x0F,
	0x3C2B, 0x14,
	0x3F0C, 0x00,
	0x3F14, 0x00,
	0x3F80, 0x00,
	0x3F81, 0x00,
	0x3F82, 0x00,
	0x3F83, 0x00,
	0x3F8C, 0x00,
	0x3F8D, 0x00,
	0x3FF4, 0x00,
	0x3FF5, 0x4C,
	0x3FFC, 0x00,
	0x3FFD, 0x00,
	0x0202, 0x1D,
	0x0203, 0x00,
	0x0224, 0x01,
	0x0225, 0xF4,
	0x3FE0, 0x01,
	0x3FE1, 0xF4,
	0x0204, 0x00,
	0x0205, 0x70,
	0x0216, 0x00,
	0x0217, 0x70,
	0x0218, 0x01,
	0x0219, 0x00,
	0x020E, 0x01,
	0x020F, 0x00,
	0x0210, 0x01,
	0x0211, 0x00,
	0x0212, 0x01,
	0x0213, 0x00,
	0x0214, 0x01,
	0x0215, 0x00,
	0x3FE2, 0x00,
	0x3FE3, 0x70,
	0x3FE4, 0x01,
	0x3FE5, 0x00,
};

static u16 imx598_custom4_setting[] = {
	/* 4Lane */
	/* reg_0_0 */
	/* V2H2_CROP_FHD_2000_1500_60FPS_w/oPD */
	/* H: 2000 */
	/* V: 1500 */
	/* MIPI output setting */
	0x0112, 0x0A,
	0x0113, 0x0A,
	0x0114, 0x03,
	/* Line Length PCK Setting */
	0x0342, 0x0B,
	0x0343, 0x60,
	/* Frame Length Lines Setting */
	0x0340, 0x13,
	0x0341, 0x50,
	/* ROI Setting */
	0x0344, 0x00,
	0x0345, 0x00,
	0x0346, 0x00,
	0x0347, 0x00,
	0x0348, 0x1F,
	0x0349, 0x3F,
	0x034A, 0x17,
	0x034B, 0x6F,
	/* Mode Setting */
	0x0900, 0x01,
	0x0901, 0x44,
	0x0902, 0x08,
	0x3246, 0x89,
	0x3247, 0x89,
	/* Digital Crop & Scaling */
	0x0401, 0x00,
	0x0404, 0x00,
	0x0405, 0x10,
	0x0408, 0x00,
	0x0409, 0x00,
	0x040A, 0x00,
	0x040B, 0x00,
	0x040C, 0x07,
	0x040D, 0xD0,
	0x040E, 0x05,
	0x040F, 0xDC,
	/* Output Size Setting */
	0x034C, 0x07,
	0x034D, 0xD0,
	0x034E, 0x05,
	0x034F, 0xDC,
	/* Clock Setting */
	0x0301, 0x05,
	0x0303, 0x02,
	0x0305, 0x03,
	0x0306, 0x01,
	0x0307, 0x0E,
	0x030B, 0x01,
	0x030D, 0x03,
	0x030E, 0x01,
	0x030F, 0x13,
	0x0310, 0x01,
	/* Other Setting */
	0x3620, 0x00,
	0x3621, 0x00,
	0x380C, 0x80,
	0x3C13, 0x00,
	0x3C14, 0x28,
	0x3C15, 0x28,
	0x3C16, 0x32,
	0x3C17, 0x46,
	0x3C18, 0x67,
	0x3C19, 0x8F,
	0x3C1A, 0x8F,
	0x3C1B, 0x99,
	0x3C1C, 0xAD,
	0x3C1D, 0xCE,
	0x3C1E, 0x8F,
	0x3C1F, 0x8F,
	0x3C20, 0x99,
	0x3C21, 0xAD,
	0x3C22, 0xCE,
	0x3C25, 0x22,
	0x3C26, 0x23,
	0x3C27, 0xE6,
	0x3C28, 0xE6,
	0x3C29, 0x08,
	0x3C2A, 0x0F,
	0x3C2B, 0x14,
	0x3F0C, 0x00,
	0x3F14, 0x00,
	0x3F80, 0x00,
	0x3F81, 0x00,
	0x3F82, 0x00,
	0x3F83, 0x00,
	0x3F8C, 0x00,
	0x3F8D, 0x00,
	0x3FF4, 0x00,
	0x3FF5, 0x4C,
	0x3FFC, 0x00,
	0x3FFD, 0x00,
	/* Integration Setting */
	0x0202, 0x13,
	0x0203, 0x20,
	0x0224, 0x01,
	0x0225, 0xF4,
	0x3FE0, 0x01,
	0x3FE1, 0xF4,
	/* Gain Setting */
	0x0204, 0x00,
	0x0205, 0x70,
	0x0216, 0x00,
	0x0217, 0x70,
	0x0218, 0x01,
	0x0219, 0x00,
	0x020E, 0x01,
	0x020F, 0x00,
	0x0210, 0x01,
	0x0211, 0x00,
	0x0212, 0x01,
	0x0213, 0x00,
	0x0214, 0x01,
	0x0215, 0x00,
	0x3FE2, 0x00,
	0x3FE3, 0x70,
	0x3FE4, 0x01,
	0x3FE5, 0x00,
	/* PDAF TYPE Setting */
	0x3E20, 0x01,
	/* PDAF TYPE2 Setting */
	0x3E3B, 0x00,
	0x4034, 0x01,
	0x4035, 0xF0,
};

/* seamless_switch */
#define PHASE_PIX_OUT_EN            0x30B4
#define LINE_LEN_UPPER              0x0342
#define LINE_LEN_LOWER              0x0343
#define FRAME_LEN_UPPER             0x0340
#define FRAME_LEN_LOWER             0x0341
#define DOL_EN                      0x33D0
#define DOL_MODE                    0x33D1
#define BINNING_TYPE                0x0901
#define BINNING_PRIORITY_H          0x3200
#define BINNING_PRIORITY_V          0x3201
#define X_ADD_STA_UPPER             0x0344
#define X_ADD_STA_LOWER             0x0345
#define Y_ADD_STA_UPPER             0x0346
#define Y_ADD_STA_LOWER             0x0347
#define X_ADD_END_UPPER             0x0348
#define X_ADD_END_LOWER             0x0349
#define Y_ADD_END_UPPER             0x034A
#define Y_ADD_END_LOWER             0x034B
#define DIG_CROP_X_OFFSET_UPPER     0x0408
#define DIG_CROP_X_OFFSET_LOWER     0x0409
#define DIG_CROP_Y_OFFSET_UPPER     0x040A
#define DIG_CROP_Y_OFFSET_LOWER     0x040B
#define DIG_CROP_IMAGE_WIDTH_UPPER  0x040C
#define DIG_CROP_IMAGE_WIDTH_LOWER  0x040D
#define DIG_CROP_IMAGE_HEIGHT_UPPER 0x040E
#define DIG_CROP_IMAGE_HEIGHT_LOWER 0x040F
#define X_OUT_SIZE_UPPER            0x034C
#define X_OUT_SIZE_LOWER            0x034D
#define Y_OUT_SIZE_UPPER            0x034E
#define Y_OUT_SIZE_LOWER            0x034F

// video stagger seamless switch (1exp-2exp)
static u16 imx598_seamless_normal_video[] = {
	PHASE_PIX_OUT_EN, 0x01,
	FRAME_LEN_UPPER, 0x12,
	FRAME_LEN_LOWER, 0xBA,
	DOL_EN, 0x00,
};
static u16 imx598_seamless_custom4[] = {
	PHASE_PIX_OUT_EN, 0x03,
	FRAME_LEN_UPPER, 0x09,
	FRAME_LEN_LOWER, 0x5C,
	DOL_EN, 0x01,
};

// stagger seamless switch (1exp-2exp-3exp)
// normal seamless switch
static u16 imx598_seamless_custom9[] = {
	0x0342, 0x3D,
	0x0343, 0x00,
	0x0340, 0x0E,
	0x0341, 0xE2,
	0x0346, 0x00,
	0x034A, 0x17,
	0x0900, 0x01,
	0x0901, 0x22,
	0x0902, 0x08,
	0x3005, 0x02,
	0x3120, 0x04,
	0x3200, 0x41,
	0x3201, 0x41,
	0x32D6, 0x00,
	0x0408, 0x00,
	0x319C, 0x01,
	0x3800, 0x01,
	0x3801, 0x01,
	0x3802, 0x02,
	0x3847, 0x03,
	0x38C4, 0x01,
	0x38C5, 0x2C,
	0x0202, 0x0E,
	0x0203, 0xB2,
	0x3803, 0x00,
	0x3804, 0x17,
	0x3805, 0xC0,
	0x040C, 0x10,
	0x040E, 0x0C,
	0x034C, 0x10,
	0x034E, 0x0C,
	0x0225, 0xF4,
	0x30B4, 0x01,
	0x3068, 0x06,
	0x3069, 0x30,
	0x33D0, 0x00,
	0x3077, 0x01,
	0x3078, 0x30,
};
static u16 imx598_seamless_custom10[] = {
	0x0342, 0x2D,
	0x0343, 0x20,
	0x0340, 0x14,
	0x0341, 0x20,
	0x0346, 0x06,
	0x034A, 0x11,
	0x0900, 0x00,
	0x0901, 0x11,
	0x0902, 0x0A,
	0x3005, 0x00,
	0x3120, 0x00,
	0x3200, 0x00,
	0x3201, 0x00,
	0x32D6, 0x01,
	0x0408, 0x08,
	0x319C, 0x00,
	0x3800, 0x00,
	0x3801, 0x00,
	0x3802, 0x04,
	0x3847, 0x00,
	0x38C4, 0x02,
	0x38C5, 0x26,
	0x0202, 0x13,
	0x0203, 0xF0,
	0x3803, 0x01,
	0x3804, 0x16,
	0x3805, 0xB0,
	0x040C, 0x10,
	0x040E, 0x0C,
	0x034C, 0x10,
	0x034E, 0x0C,
	0x0225, 0xF4,
	0x30B4, 0x01,
	0x3068, 0x06,
	0x3069, 0x30,
	0x33D0, 0x00,
	0x3077, 0x01,
	0x3078, 0x30,
};
static u16 imx598_seamless_custom11[] = {
	0x0342, 0x2D,
	0x0343, 0x20,
	0x0340, 0x19,
	0x0341, 0x28,
	0x0900, 0x00,
	0x0901, 0x11,
	0x0902, 0x0A,
	0x3005, 0x00,
	0x3120, 0x00,
	0x3200, 0x00,
	0x3201, 0x00,
	0x32D6, 0x01,
	0x040C, 0x20,
	0x040E, 0x18,
	0x034C, 0x20,
	0x034E, 0x18,
	0x319C, 0x00,
	0x3800, 0x00,
	0x3801, 0x00,
	0x3802, 0x04,
	0x3847, 0x00,
	0x38C4, 0x02,
	0x38C5, 0x26,
	0x0202, 0x18,
	0x0203, 0xF8,
	0x3803, 0x01,
	0x3804, 0x16,
	0x3805, 0xB0,
	0x0346, 0x00,
	0x034A, 0x17,
	0x0408, 0x00,
	0x0225, 0xF4,
	0x30B4, 0x01,
	0x3068, 0x06,
	0x3069, 0x30,
	0x33D0, 0x00,
	0x3077, 0x01,
	0x3078, 0x30,
};
static u16 imx598_seamless_custom12[] = {
	0x0340, 0x0C,
	0x0341, 0x68,
	0x0202, 0x0A,
	0x0203, 0xA0,
	0x0225, 0x54,
	0x30B4, 0x03,
	0x3068, 0x06,
	0x3069, 0x30,
	0x33D0, 0x01,
	0x3077, 0x01,
	0x3078, 0x30,
	0x0342, 0x3D,
	0x0343, 0x00,
	0x0346, 0x00,
	0x034A, 0x17,
	0x0900, 0x01,
	0x0901, 0x22,
	0x0902, 0x08,
	0x3005, 0x02,
	0x3120, 0x04,
	0x3200, 0x41,
	0x3201, 0x41,
	0x32D6, 0x00,
	0x0408, 0x00,
	0x319C, 0x01,
	0x3800, 0x01,
	0x3801, 0x01,
	0x3802, 0x02,
	0x3847, 0x03,
	0x38C4, 0x01,
	0x38C5, 0x2C,
	0x3803, 0x00,
	0x3804, 0x17,
	0x3805, 0xC0,
	0x0340, 0x0C,
	0x0341, 0x68,
	0x040C, 0x10,
	0x040E, 0x0C,
	0x034C, 0x10,
	0x034E, 0x0C,
	0x0202, 0x0A,
	0x0203, 0xA0,
	0x0225, 0x54,
	0x30B4, 0x03,
	0x3068, 0x06,
	0x3069, 0x30,
	0x33D0, 0x01,
	0x3077, 0x01,
	0x3078, 0x30,
};
static u16 imx598_seamless_custom13[] = {
	LINE_LEN_UPPER, 0x3D,
	LINE_LEN_LOWER, 0x00,
	FRAME_LEN_UPPER, 0x0E,
	FRAME_LEN_LOWER, 0xE2,
	Y_ADD_STA_UPPER, 0x03,
	Y_ADD_STA_LOWER, 0x00,
	Y_ADD_END_UPPER, 0x14,
	Y_ADD_END_LOWER, 0xFF,
	0x0900, 0x01,
	0x0901, 0x22,
	0x0902, 0x08,
	0x3005, 0x02,
	0x3120, 0x04,
	BINNING_PRIORITY_H, 0x41,
	BINNING_PRIORITY_V, 0x41,
	DIG_CROP_X_OFFSET_UPPER, 0x00,
	0x319C, 0x01,
	0x3800, 0x01,
	0x3801, 0x01,
	0x3802, 0x02,
	0x3847, 0x03,
	0x38C5, 0x2C,
	0x0202, 0x0E,
	0x0203, 0xB2,
	0x3803, 0x00,
	0x3804, 0x17,
	0x3805, 0xC0,
};
static u16 imx598_seamless_custom14[] = {
	LINE_LEN_UPPER, 0x5A,
	LINE_LEN_LOWER, 0x40,
	FRAME_LEN_UPPER, 0x0A,
	FRAME_LEN_LOWER, 0x10,
	Y_ADD_STA_UPPER, 0x07,
	Y_ADD_STA_LOWER, 0x80,
	Y_ADD_END_UPPER, 0x10,
	Y_ADD_END_LOWER, 0x7F,
	0x0900, 0x00,
	0x0901, 0x11,
	0x0902, 0x0A,
	0x3005, 0x00,
	0x3120, 0x00,
	BINNING_PRIORITY_H, 0x00,
	BINNING_PRIORITY_V, 0x00,
	DIG_CROP_X_OFFSET_UPPER, 0x08,
	0x319C, 0x00,
	0x3800, 0x00,
	0x3801, 0x00,
	0x3802, 0x04,
	0x3847, 0x00,
	0x38C5, 0x7C,
	0x0202, 0x09,
	0x0203, 0xE0,
	0x3803, 0x01,
	0x3804, 0x43,
	0x3805, 0xD0,
};
static u16 imx598_seamless_custom15[] = {
	FRAME_LEN_UPPER, 0x1D,
	FRAME_LEN_LOWER, 0x4C,
	0x0202, 0x1D,
	0x0203, 0x1C,
	0x0225, 0xF4,
	0x30B4, 0x01,
	0x3068, 0x06,
	0x3069, 0x30,
	DOL_EN, 0x00,
	0x3077, 0x01,
	0x3078, 0x30,
	0x3079, 0x07,
	0x307A, 0x30,
};
static u16 imx598_seamless_custom16[] = {
	FRAME_LEN_UPPER, 0x0E,
	FRAME_LEN_LOWER, 0xA4,
	0x0202, 0x0C,
	0x0203, 0xA0,
	0x0225, 0x94,
	0x30B4, 0x03,
	0x3068, 0x06,
	0x3069, 0x30,
	DOL_EN, 0x01,
	0x3077, 0x01,
	0x3078, 0x30,
	0x3079, 0x07,
	0x307A, 0x30,
};
#endif
