/* SPDX-License-Identifier: BSD-2-Clause */
/*
 * Copyright (c) 2021 MediaTek Inc.
 */

//[File]            : wf_ple_top.h
//[Revision time]   : Thu Jun 24 17:13:57 2021
//[Description]     : This file is auto generated by CODA
//[Copyright]       : Copyright (C) 2021 Mediatek Incorportion. All rights reserved.

#ifndef __WF_PLE_TOP_REGS_H__
#define __WF_PLE_TOP_REGS_H__

#ifdef __cplusplus
extern "C" {
#endif


//****************************************************************************
//
//                     WF_PLE_TOP CR Definitions                     
//
//****************************************************************************

#define WF_PLE_TOP_BASE                                        0x820c0000

#define WF_PLE_TOP_GC_ADDR                                     (WF_PLE_TOP_BASE + 0x00) // 0000
#define WF_PLE_TOP_PBUF_CTRL_ADDR                              (WF_PLE_TOP_BASE + 0x04) // 0004
#define WF_PLE_TOP_FREEPG_START_END_ADDR                       (WF_PLE_TOP_BASE + 0x08) // 0008
#define WF_PLE_TOP_PG_HIF_GROUP_ADDR                           (WF_PLE_TOP_BASE + 0x0c) // 000C
#define WF_PLE_TOP_PG_HIF_WMTXD_GROUP_ADDR                     (WF_PLE_TOP_BASE + 0x10) // 0010
#define WF_PLE_TOP_PG_HIF_TXCMD_GROUP_ADDR                     (WF_PLE_TOP_BASE + 0x14) // 0014
#define WF_PLE_TOP_PG_CPU_GROUP_ADDR                           (WF_PLE_TOP_BASE + 0x18) // 0018
#define WF_PLE_TOP_SRAM_MBIST_DELSEL1_ADDR                     (WF_PLE_TOP_BASE + 0x20) // 0020
#define WF_PLE_TOP_SRAM_MBIST_DELSEL2_ADDR                     (WF_PLE_TOP_BASE + 0x24) // 0024
#define WF_PLE_TOP_SRAM_MBIST_DELSEL3_ADDR                     (WF_PLE_TOP_BASE + 0x28) // 0028
#define WF_PLE_TOP_SRAM_MBIST_DELSEL4_ADDR                     (WF_PLE_TOP_BASE + 0x2c) // 002C
#define WF_PLE_TOP_SRAM_MBIST_DELSEL5_ADDR                     (WF_PLE_TOP_BASE + 0x30) // 0030
#define WF_PLE_TOP_SRAM_MBIST_DELSEL6_ADDR                     (WF_PLE_TOP_BASE + 0x34) // 0034
#define WF_PLE_TOP_SRAM_MBIST_DELSEL7_ADDR                     (WF_PLE_TOP_BASE + 0x38) // 0038
#define WF_PLE_TOP_SRAM_MBIST_DELSEL8_ADDR                     (WF_PLE_TOP_BASE + 0x3c) // 003C
#define WF_PLE_TOP_SRAM_MBIST_DELSEL9_ADDR                     (WF_PLE_TOP_BASE + 0x40) // 0040
#define WF_PLE_TOP_SRAM_MBIST_DELSEL10_ADDR                    (WF_PLE_TOP_BASE + 0x44) // 0044
#define WF_PLE_TOP_SRAM_MBIST_CTRL_ADDR                        (WF_PLE_TOP_BASE + 0x48) // 0048
#define WF_PLE_TOP_TWT_TX_CTRL0_ADDR                           (WF_PLE_TOP_BASE + 0x04c) // 004C
#define WF_PLE_TOP_SPL_GEN_CTRL_ADDR                           (WF_PLE_TOP_BASE + 0x050) // 0050
#define WF_PLE_TOP_EN_UMAC_L1_DCM_ADDR                         (WF_PLE_TOP_BASE + 0x054) // 0054
#define WF_PLE_TOP_PCIE_POWER_CTRL_ADDR                        (WF_PLE_TOP_BASE + 0x058) // 0058
#define WF_PLE_TOP_TIMEOUT_CTRL_ADDR                           (WF_PLE_TOP_BASE + 0x05c) // 005C
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_ADDR                        (WF_PLE_TOP_BASE + 0x060) // 0060
#define WF_PLE_TOP_PLE_FUNC_CTRL_1_ADDR                        (WF_PLE_TOP_BASE + 0x064) // 0064
#define WF_PLE_TOP_PORT_SER_CTRL_ADDR                          (WF_PLE_TOP_BASE + 0x06c) // 006C
#define WF_PLE_TOP_MACTX_SER_CTRL_ADDR                         (WF_PLE_TOP_BASE + 0x070) // 0070
#define WF_PLE_TOP_RELEASE_CTRL_4_ADDR                         (WF_PLE_TOP_BASE + 0x78) // 0078
#define WF_PLE_TOP_RELEASE_CTRL_5_ADDR                         (WF_PLE_TOP_BASE + 0x7c) // 007C
#define WF_PLE_TOP_INT_N9_EN_MASK_ADDR                         (WF_PLE_TOP_BASE + 0x80) // 0080
#define WF_PLE_TOP_INT_N9_ERR_MASK_ADDR                        (WF_PLE_TOP_BASE + 0x84) // 0084
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_ADDR                      (WF_PLE_TOP_BASE + 0x88) // 0088
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR                     (WF_PLE_TOP_BASE + 0x8c) // 008C
#define WF_PLE_TOP_HOST_REPORT0_ADDR                           (WF_PLE_TOP_BASE + 0x90) // 0090
#define WF_PLE_TOP_HOST_REPORT1_ADDR                           (WF_PLE_TOP_BASE + 0x94) // 0094
#define WF_PLE_TOP_HOST_REPORT2_ADDR                           (WF_PLE_TOP_BASE + 0x98) // 0098
#define WF_PLE_TOP_RELEASE_CTRL_0_ADDR                         (WF_PLE_TOP_BASE + 0x9c) // 009C
#define WF_PLE_TOP_RELEASE_CTRL_1_ADDR                         (WF_PLE_TOP_BASE + 0xA0) // 00A0
#define WF_PLE_TOP_RELEASE_CTRL_2_ADDR                         (WF_PLE_TOP_BASE + 0xA4) // 00A4
#define WF_PLE_TOP_RELEASE_CTRL_3_ADDR                         (WF_PLE_TOP_BASE + 0xa8) // 00A8
#define WF_PLE_TOP_BLK_MODE_RATE_LMT_ADDR                      (WF_PLE_TOP_BASE + 0xac) // 00AC
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_ADDR                     (WF_PLE_TOP_BASE + 0xb0) // 00B0
#define WF_PLE_TOP_PLE_DELAY_TX_CTRL_ADDR                      (WF_PLE_TOP_BASE + 0xb4) // 00B4
#define WF_PLE_TOP_PLE_STATION_REDIR_CTRL_ADDR                 (WF_PLE_TOP_BASE + 0xb8) // 00B8
#define WF_PLE_TOP_MACTX_LENGTH_LIMIT_ADDR                     (WF_PLE_TOP_BASE + 0xBC) // 00BC
#define WF_PLE_TOP_TXS_BUF_PAUSE_ADDR                          (WF_PLE_TOP_BASE + 0xc0) // 00C0
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_ADDR                      (WF_PLE_TOP_BASE + 0xc4) // 00C4
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_ADDR                  (WF_PLE_TOP_BASE + 0xc8) // 00C8
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_ADDR                  (WF_PLE_TOP_BASE + 0xcC) // 00CC
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_ADDR                    (WF_PLE_TOP_BASE + 0xd0) // 00D0
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_ADDR                  (WF_PLE_TOP_BASE + 0xd4) // 00D4
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_ADDR                       (WF_PLE_TOP_BASE + 0xd8) // 00D8
#define WF_PLE_TOP_FSM_IDLE_WD_EN_ADDR                         (WF_PLE_TOP_BASE + 0xdc) // 00DC
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_1_ADDR                     (WF_PLE_TOP_BASE + 0xe0) // 00E0
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_ADDR                       (WF_PLE_TOP_BASE + 0xe4) // 00E4
#define WF_PLE_TOP_ERLY_TRM_CTRL0_ADDR                         (WF_PLE_TOP_BASE + 0xe8) // 00E8
#define WF_PLE_TOP_ERLY_TRM_CTRL1_ADDR                         (WF_PLE_TOP_BASE + 0xec) // 00EC
#define WF_PLE_TOP_DIS_STA_MAP0_ADDR                           (WF_PLE_TOP_BASE + 0x100) // 0100
#define WF_PLE_TOP_DIS_STA_MAP1_ADDR                           (WF_PLE_TOP_BASE + 0x104) // 0104
#define WF_PLE_TOP_DIS_STA_MAP2_ADDR                           (WF_PLE_TOP_BASE + 0x108) // 0108
#define WF_PLE_TOP_DIS_STA_MAP3_ADDR                           (WF_PLE_TOP_BASE + 0x10c) // 010C
#define WF_PLE_TOP_DIS_STA_MAP4_ADDR                           (WF_PLE_TOP_BASE + 0x110) // 0110
#define WF_PLE_TOP_DIS_STA_MAP5_ADDR                           (WF_PLE_TOP_BASE + 0x114) // 0114
#define WF_PLE_TOP_DIS_STA_MAP6_ADDR                           (WF_PLE_TOP_BASE + 0x118) // 0118
#define WF_PLE_TOP_DIS_STA_MAP7_ADDR                           (WF_PLE_TOP_BASE + 0x11c) // 011C
#define WF_PLE_TOP_DIS_STA_MAP8_ADDR                           (WF_PLE_TOP_BASE + 0x120) // 0120
#define WF_PLE_TOP_DIS_STA_MAP9_ADDR                           (WF_PLE_TOP_BASE + 0x124) // 0124
#define WF_PLE_TOP_DIS_STA_MAP10_ADDR                          (WF_PLE_TOP_BASE + 0x128) // 0128
#define WF_PLE_TOP_DIS_STA_MAP11_ADDR                          (WF_PLE_TOP_BASE + 0x12c) // 012C
#define WF_PLE_TOP_DIS_STA_MAP12_ADDR                          (WF_PLE_TOP_BASE + 0x130) // 0130
#define WF_PLE_TOP_DIS_STA_MAP13_ADDR                          (WF_PLE_TOP_BASE + 0x134) // 0134
#define WF_PLE_TOP_DIS_STA_MAP14_ADDR                          (WF_PLE_TOP_BASE + 0x138) // 0138
#define WF_PLE_TOP_DIS_STA_MAP15_ADDR                          (WF_PLE_TOP_BASE + 0x13c) // 013C
#define WF_PLE_TOP_DIS_STA_MAP16_ADDR                          (WF_PLE_TOP_BASE + 0x140) // 0140
#define WF_PLE_TOP_DIS_STA_MAP17_ADDR                          (WF_PLE_TOP_BASE + 0x144) // 0144
#define WF_PLE_TOP_DIS_STA_MAP18_ADDR                          (WF_PLE_TOP_BASE + 0x148) // 0148
#define WF_PLE_TOP_DIS_STA_MAP19_ADDR                          (WF_PLE_TOP_BASE + 0x14c) // 014C
#define WF_PLE_TOP_DIS_STA_MAP20_ADDR                          (WF_PLE_TOP_BASE + 0x150) // 0150
#define WF_PLE_TOP_DIS_STA_MAP21_ADDR                          (WF_PLE_TOP_BASE + 0x154) // 0154
#define WF_PLE_TOP_DIS_STA_MAP22_ADDR                          (WF_PLE_TOP_BASE + 0x158) // 0158
#define WF_PLE_TOP_DIS_STA_MAP23_ADDR                          (WF_PLE_TOP_BASE + 0x15c) // 015C
#define WF_PLE_TOP_DIS_STA_MAP24_ADDR                          (WF_PLE_TOP_BASE + 0x160) // 0160
#define WF_PLE_TOP_DIS_STA_MAP25_ADDR                          (WF_PLE_TOP_BASE + 0x164) // 0164
#define WF_PLE_TOP_DIS_STA_MAP26_ADDR                          (WF_PLE_TOP_BASE + 0x168) // 0168
#define WF_PLE_TOP_DIS_STA_MAP27_ADDR                          (WF_PLE_TOP_BASE + 0x16c) // 016C
#define WF_PLE_TOP_DIS_STA_MAP28_ADDR                          (WF_PLE_TOP_BASE + 0x170) // 0170
#define WF_PLE_TOP_DIS_STA_MAP29_ADDR                          (WF_PLE_TOP_BASE + 0x174) // 0174
#define WF_PLE_TOP_DIS_STA_MAP30_ADDR                          (WF_PLE_TOP_BASE + 0x178) // 0178
#define WF_PLE_TOP_DIS_STA_MAP31_ADDR                          (WF_PLE_TOP_BASE + 0x17c) // 017C
#define WF_PLE_TOP_DIS_STA_MAP_EXT0_ADDR                       (WF_PLE_TOP_BASE + 0x180) // 0180
#define WF_PLE_TOP_DIS_STA_MAP_EXT1_ADDR                       (WF_PLE_TOP_BASE + 0x184) // 0184
#define WF_PLE_TOP_STATION_REDIR0_ADDR                         (WF_PLE_TOP_BASE + 0x200) // 0200
#define WF_PLE_TOP_STATION_REDIR1_ADDR                         (WF_PLE_TOP_BASE + 0x204) // 0204
#define WF_PLE_TOP_STATION_REDIR2_ADDR                         (WF_PLE_TOP_BASE + 0x208) // 0208
#define WF_PLE_TOP_STATION_REDIR3_ADDR                         (WF_PLE_TOP_BASE + 0x20c) // 020C
#define WF_PLE_TOP_STATION_REDIR4_ADDR                         (WF_PLE_TOP_BASE + 0x210) // 0210
#define WF_PLE_TOP_STATION_REDIR5_ADDR                         (WF_PLE_TOP_BASE + 0x214) // 0214
#define WF_PLE_TOP_STATION_REDIR6_ADDR                         (WF_PLE_TOP_BASE + 0x218) // 0218
#define WF_PLE_TOP_STATION_REDIR7_ADDR                         (WF_PLE_TOP_BASE + 0x21c) // 021C
#define WF_PLE_TOP_STATION_REDIR8_ADDR                         (WF_PLE_TOP_BASE + 0x220) // 0220
#define WF_PLE_TOP_STATION_REDIR9_ADDR                         (WF_PLE_TOP_BASE + 0x224) // 0224
#define WF_PLE_TOP_STATION_REDIR10_ADDR                        (WF_PLE_TOP_BASE + 0x228) // 0228
#define WF_PLE_TOP_STATION_REDIR11_ADDR                        (WF_PLE_TOP_BASE + 0x22c) // 022C
#define WF_PLE_TOP_STATION_REDIR12_ADDR                        (WF_PLE_TOP_BASE + 0x230) // 0230
#define WF_PLE_TOP_STATION_REDIR13_ADDR                        (WF_PLE_TOP_BASE + 0x234) // 0234
#define WF_PLE_TOP_STATION_REDIR14_ADDR                        (WF_PLE_TOP_BASE + 0x238) // 0238
#define WF_PLE_TOP_STATION_REDIR15_ADDR                        (WF_PLE_TOP_BASE + 0x23c) // 023C
#define WF_PLE_TOP_STATION_REDIR16_ADDR                        (WF_PLE_TOP_BASE + 0x240) // 0240
#define WF_PLE_TOP_STATION_REDIR17_ADDR                        (WF_PLE_TOP_BASE + 0x244) // 0244
#define WF_PLE_TOP_STATION_REDIR18_ADDR                        (WF_PLE_TOP_BASE + 0x248) // 0248
#define WF_PLE_TOP_STATION_REDIR19_ADDR                        (WF_PLE_TOP_BASE + 0x24c) // 024C
#define WF_PLE_TOP_STATION_REDIR20_ADDR                        (WF_PLE_TOP_BASE + 0x250) // 0250
#define WF_PLE_TOP_STATION_REDIR21_ADDR                        (WF_PLE_TOP_BASE + 0x254) // 0254
#define WF_PLE_TOP_STATION_REDIR22_ADDR                        (WF_PLE_TOP_BASE + 0x258) // 0258
#define WF_PLE_TOP_STATION_REDIR23_ADDR                        (WF_PLE_TOP_BASE + 0x25c) // 025C
#define WF_PLE_TOP_STATION_REDIR24_ADDR                        (WF_PLE_TOP_BASE + 0x260) // 0260
#define WF_PLE_TOP_STATION_REDIR25_ADDR                        (WF_PLE_TOP_BASE + 0x264) // 0264
#define WF_PLE_TOP_STATION_REDIR26_ADDR                        (WF_PLE_TOP_BASE + 0x268) // 0268
#define WF_PLE_TOP_STATION_REDIR27_ADDR                        (WF_PLE_TOP_BASE + 0x26c) // 026C
#define WF_PLE_TOP_STATION_REDIR28_ADDR                        (WF_PLE_TOP_BASE + 0x270) // 0270
#define WF_PLE_TOP_STATION_REDIR29_ADDR                        (WF_PLE_TOP_BASE + 0x274) // 0274
#define WF_PLE_TOP_STATION_REDIR30_ADDR                        (WF_PLE_TOP_BASE + 0x278) // 0278
#define WF_PLE_TOP_STATION_REDIR31_ADDR                        (WF_PLE_TOP_BASE + 0x27c) // 027C
#define WF_PLE_TOP_STATION_REDIR_EXT0_ADDR                     (WF_PLE_TOP_BASE + 0x280) // 0280
#define WF_PLE_TOP_STATION_REDIR_EXT1_ADDR                     (WF_PLE_TOP_BASE + 0x284) // 0284
#define WF_PLE_TOP_INT_N9_STS_ADDR                             (WF_PLE_TOP_BASE + 0x300) // 0300
#define WF_PLE_TOP_INT_N9_ERR_STS_ADDR                         (WF_PLE_TOP_BASE + 0x304) // 0304
#define WF_PLE_TOP_INT_N9_ERR_STS_1_ADDR                       (WF_PLE_TOP_BASE + 0x308) // 0308
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR                      (WF_PLE_TOP_BASE + 0x30c) // 030C
#define WF_PLE_TOP_C_GET_FID_0_ADDR                            (WF_PLE_TOP_BASE + 0x310) // 0310
#define WF_PLE_TOP_C_GET_FID_1_ADDR                            (WF_PLE_TOP_BASE + 0x314) // 0314
#define WF_PLE_TOP_TO_N9_INT_ADDR                              (WF_PLE_TOP_BASE + 0x318) // 0318
#define WF_PLE_TOP_C_EN_QUEUE_0_ADDR                           (WF_PLE_TOP_BASE + 0x320) // 0320
#define WF_PLE_TOP_C_EN_QUEUE_1_ADDR                           (WF_PLE_TOP_BASE + 0x324) // 0324
#define WF_PLE_TOP_C_EN_QUEUE_2_ADDR                           (WF_PLE_TOP_BASE + 0x328) // 0328
#define WF_PLE_TOP_C_DE_QUEUE_0_ADDR                           (WF_PLE_TOP_BASE + 0x330) // 0330
#define WF_PLE_TOP_C_DE_QUEUE_1_ADDR                           (WF_PLE_TOP_BASE + 0x334) // 0334
#define WF_PLE_TOP_C_DE_QUEUE_2_ADDR                           (WF_PLE_TOP_BASE + 0x338) // 0338
#define WF_PLE_TOP_C_DE_QUEUE_3_ADDR                           (WF_PLE_TOP_BASE + 0x33c) // 033C
#define WF_PLE_TOP_C_DE_QUEUE_4_ADDR                           (WF_PLE_TOP_BASE + 0x340) // 0340
#define WF_PLE_TOP_ALLOCATE_0_ADDR                             (WF_PLE_TOP_BASE + 0x350) // 0350
#define WF_PLE_TOP_ALLOCATE_1_ADDR                             (WF_PLE_TOP_BASE + 0x354) // 0354
#define WF_PLE_TOP_ALLOCATE_2_ADDR                             (WF_PLE_TOP_BASE + 0x358) // 0358
#define WF_PLE_TOP_QUEUE_EMPTY_ADDR                            (WF_PLE_TOP_BASE + 0x360) // 0360
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_ADDR                        (WF_PLE_TOP_BASE + 0x370) // 0370
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ADDR                 (WF_PLE_TOP_BASE + 0x374) // 0374
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_ADDR                      (WF_PLE_TOP_BASE + 0x378) // 0378
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_ADDR               (WF_PLE_TOP_BASE + 0x37c) // 037C
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ADDR                    (WF_PLE_TOP_BASE + 0x380) // 0380
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ADDR             (WF_PLE_TOP_BASE + 0x384) // 0384
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_ADDR                  (WF_PLE_TOP_BASE + 0x388) // 0388
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_ADDR           (WF_PLE_TOP_BASE + 0x38c) // 038C
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ADDR                    (WF_PLE_TOP_BASE + 0x390) // 0390
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ADDR             (WF_PLE_TOP_BASE + 0x394) // 0394
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_ADDR                  (WF_PLE_TOP_BASE + 0x398) // 0398
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_ADDR           (WF_PLE_TOP_BASE + 0x39c) // 039C
#define WF_PLE_TOP_FREEPG_CNT_ADDR                             (WF_PLE_TOP_BASE + 0x3a0) // 03A0
#define WF_PLE_TOP_FREEPG_HEAD_TAIL_ADDR                       (WF_PLE_TOP_BASE + 0x3a4) // 03A4
#define WF_PLE_TOP_HIF_PG_INFO_ADDR                            (WF_PLE_TOP_BASE + 0x3a8) // 03A8
#define WF_PLE_TOP_HIF_WMTXD_PG_INFO_ADDR                      (WF_PLE_TOP_BASE + 0x3ac) // 03AC
#define WF_PLE_TOP_HIF_TXCMD_PG_INFO_ADDR                      (WF_PLE_TOP_BASE + 0x3b0) // 03B0
#define WF_PLE_TOP_CPU_PG_INFO_ADDR                            (WF_PLE_TOP_BASE + 0x3b4) // 03B4
#define WF_PLE_TOP_PLE_LOG_0_ADDR                              (WF_PLE_TOP_BASE + 0x3b8) // 03B8
#define WF_PLE_TOP_PLE_LOG_1_ADDR                              (WF_PLE_TOP_BASE + 0x3bc) // 03BC
#define WF_PLE_TOP_PLE_LOG_2_ADDR                              (WF_PLE_TOP_BASE + 0x3c0) // 03C0
#define WF_PLE_TOP_PLE_LOG_3_ADDR                              (WF_PLE_TOP_BASE + 0x3c4) // 03C4
#define WF_PLE_TOP_RL_BUF_CTRL_0_ADDR                          (WF_PLE_TOP_BASE + 0x3d0) // 03D0
#define WF_PLE_TOP_RL_BUF_CTRL_1_ADDR                          (WF_PLE_TOP_BASE + 0x3d4) // 03D4
#define WF_PLE_TOP_RL_BUF_CTRL_2_ADDR                          (WF_PLE_TOP_BASE + 0x3d8) // 03D8
#define WF_PLE_TOP_RL_BUF_CTRL_3_ADDR                          (WF_PLE_TOP_BASE + 0x3dc) // 03DC
#define WF_PLE_TOP_FL_QUE_CTRL_0_ADDR                          (WF_PLE_TOP_BASE + 0x3e0) // 03E0
#define WF_PLE_TOP_FL_QUE_CTRL_1_ADDR                          (WF_PLE_TOP_BASE + 0x3e4) // 03E4
#define WF_PLE_TOP_FL_QUE_CTRL_2_ADDR                          (WF_PLE_TOP_BASE + 0x3e8) // 03E8
#define WF_PLE_TOP_FL_QUE_CTRL_3_ADDR                          (WF_PLE_TOP_BASE + 0x3ec) // 03EC
#define WF_PLE_TOP_PL_QUE_CTRL_0_ADDR                          (WF_PLE_TOP_BASE + 0x3f0) // 03F0
#define WF_PLE_TOP_HIF_ENQ_PKT_NUM_ADDR                        (WF_PLE_TOP_BASE + 0x400) // 0400
#define WF_PLE_TOP_CPU_ENQ_PKT_NUM_ADDR                        (WF_PLE_TOP_BASE + 0x404) // 0404
#define WF_PLE_TOP_RLS_MSDU_PKT_NUM_ADDR                       (WF_PLE_TOP_BASE + 0x408) // 0408
#define WF_PLE_TOP_HOST_REPORT_NUM_ADDR                        (WF_PLE_TOP_BASE + 0x40c) // 040C
#define WF_PLE_TOP_FUNC_ACT_CNT_0_ADDR                         (WF_PLE_TOP_BASE + 0x420) // 0420
#define WF_PLE_TOP_FUNC_ACT_CNT_1_ADDR                         (WF_PLE_TOP_BASE + 0x424) // 0424
#define WF_PLE_TOP_SRAM_MBIST_DONE_ADDR                        (WF_PLE_TOP_BASE + 0x438) // 0438
#define WF_PLE_TOP_SRAM_MBIST_FAIL_ADDR                        (WF_PLE_TOP_BASE + 0x43c) // 043C
#define WF_PLE_TOP_SRAM_MBIST_REP_CTRL_ADDR                    (WF_PLE_TOP_BASE + 0x444) // 0444
#define WF_PLE_TOP_SRAM_MBIST_REP_FUSE_ADDR                    (WF_PLE_TOP_BASE + 0x44c) // 044C
#define WF_PLE_TOP_WMMAC_PGCNT_0_ADDR                          (WF_PLE_TOP_BASE + 0x450) // 0450
#define WF_PLE_TOP_WMMAC_PGCNT_1_ADDR                          (WF_PLE_TOP_BASE + 0x454) // 0454
#define WF_PLE_TOP_WMMAC_PGCNT_2_ADDR                          (WF_PLE_TOP_BASE + 0x458) // 0458
#define WF_PLE_TOP_WMMAC_PGCNT_3_ADDR                          (WF_PLE_TOP_BASE + 0x45c) // 045C
#define WF_PLE_TOP_WMMAC_PGCNT_4_ADDR                          (WF_PLE_TOP_BASE + 0x460) // 0460
#define WF_PLE_TOP_WMMAC_PGCNT_5_ADDR                          (WF_PLE_TOP_BASE + 0x464) // 0464
#define WF_PLE_TOP_WMMAC_PGCNT_6_ADDR                          (WF_PLE_TOP_BASE + 0x468) // 0468
#define WF_PLE_TOP_WMMAC_PGCNT_7_ADDR                          (WF_PLE_TOP_BASE + 0x46c) // 046C
#define WF_PLE_TOP_AC0_QUEUE_EMPTY0_ADDR                       (WF_PLE_TOP_BASE + 0x600) // 0600
#define WF_PLE_TOP_AC0_QUEUE_EMPTY1_ADDR                       (WF_PLE_TOP_BASE + 0x604) // 0604
#define WF_PLE_TOP_AC0_QUEUE_EMPTY2_ADDR                       (WF_PLE_TOP_BASE + 0x608) // 0608
#define WF_PLE_TOP_AC0_QUEUE_EMPTY3_ADDR                       (WF_PLE_TOP_BASE + 0x60c) // 060C
#define WF_PLE_TOP_AC0_QUEUE_EMPTY4_ADDR                       (WF_PLE_TOP_BASE + 0x610) // 0610
#define WF_PLE_TOP_AC0_QUEUE_EMPTY5_ADDR                       (WF_PLE_TOP_BASE + 0x614) // 0614
#define WF_PLE_TOP_AC0_QUEUE_EMPTY6_ADDR                       (WF_PLE_TOP_BASE + 0x618) // 0618
#define WF_PLE_TOP_AC0_QUEUE_EMPTY7_ADDR                       (WF_PLE_TOP_BASE + 0x61c) // 061C
#define WF_PLE_TOP_AC0_QUEUE_EMPTY8_ADDR                       (WF_PLE_TOP_BASE + 0x620) // 0620
#define WF_PLE_TOP_AC0_QUEUE_EMPTY9_ADDR                       (WF_PLE_TOP_BASE + 0x624) // 0624
#define WF_PLE_TOP_AC0_QUEUE_EMPTY10_ADDR                      (WF_PLE_TOP_BASE + 0x628) // 0628
#define WF_PLE_TOP_AC0_QUEUE_EMPTY11_ADDR                      (WF_PLE_TOP_BASE + 0x62c) // 062C
#define WF_PLE_TOP_AC0_QUEUE_EMPTY12_ADDR                      (WF_PLE_TOP_BASE + 0x630) // 0630
#define WF_PLE_TOP_AC0_QUEUE_EMPTY13_ADDR                      (WF_PLE_TOP_BASE + 0x634) // 0634
#define WF_PLE_TOP_AC0_QUEUE_EMPTY14_ADDR                      (WF_PLE_TOP_BASE + 0x638) // 0638
#define WF_PLE_TOP_AC0_QUEUE_EMPTY15_ADDR                      (WF_PLE_TOP_BASE + 0x63c) // 063C
#define WF_PLE_TOP_AC0_QUEUE_EMPTY16_ADDR                      (WF_PLE_TOP_BASE + 0x640) // 0640
#define WF_PLE_TOP_AC0_QUEUE_EMPTY17_ADDR                      (WF_PLE_TOP_BASE + 0x644) // 0644
#define WF_PLE_TOP_AC0_QUEUE_EMPTY18_ADDR                      (WF_PLE_TOP_BASE + 0x648) // 0648
#define WF_PLE_TOP_AC0_QUEUE_EMPTY19_ADDR                      (WF_PLE_TOP_BASE + 0x64c) // 064C
#define WF_PLE_TOP_AC0_QUEUE_EMPTY20_ADDR                      (WF_PLE_TOP_BASE + 0x650) // 0650
#define WF_PLE_TOP_AC0_QUEUE_EMPTY21_ADDR                      (WF_PLE_TOP_BASE + 0x654) // 0654
#define WF_PLE_TOP_AC0_QUEUE_EMPTY22_ADDR                      (WF_PLE_TOP_BASE + 0x658) // 0658
#define WF_PLE_TOP_AC0_QUEUE_EMPTY23_ADDR                      (WF_PLE_TOP_BASE + 0x65c) // 065C
#define WF_PLE_TOP_AC0_QUEUE_EMPTY24_ADDR                      (WF_PLE_TOP_BASE + 0x660) // 0660
#define WF_PLE_TOP_AC0_QUEUE_EMPTY25_ADDR                      (WF_PLE_TOP_BASE + 0x664) // 0664
#define WF_PLE_TOP_AC0_QUEUE_EMPTY26_ADDR                      (WF_PLE_TOP_BASE + 0x668) // 0668
#define WF_PLE_TOP_AC0_QUEUE_EMPTY27_ADDR                      (WF_PLE_TOP_BASE + 0x66c) // 066C
#define WF_PLE_TOP_AC0_QUEUE_EMPTY28_ADDR                      (WF_PLE_TOP_BASE + 0x670) // 0670
#define WF_PLE_TOP_AC0_QUEUE_EMPTY29_ADDR                      (WF_PLE_TOP_BASE + 0x674) // 0674
#define WF_PLE_TOP_AC0_QUEUE_EMPTY30_ADDR                      (WF_PLE_TOP_BASE + 0x678) // 0678
#define WF_PLE_TOP_AC0_QUEUE_EMPTY31_ADDR                      (WF_PLE_TOP_BASE + 0x67c) // 067C
#define WF_PLE_TOP_AC0_QUEUE_EMPTY_EXT0_ADDR                   (WF_PLE_TOP_BASE + 0x680) // 0680
#define WF_PLE_TOP_AC0_QUEUE_EMPTY_EXT1_ADDR                   (WF_PLE_TOP_BASE + 0x684) // 0684
#define WF_PLE_TOP_AC1_QUEUE_EMPTY0_ADDR                       (WF_PLE_TOP_BASE + 0x700) // 0700
#define WF_PLE_TOP_AC1_QUEUE_EMPTY1_ADDR                       (WF_PLE_TOP_BASE + 0x704) // 0704
#define WF_PLE_TOP_AC1_QUEUE_EMPTY2_ADDR                       (WF_PLE_TOP_BASE + 0x708) // 0708
#define WF_PLE_TOP_AC1_QUEUE_EMPTY3_ADDR                       (WF_PLE_TOP_BASE + 0x70c) // 070C
#define WF_PLE_TOP_AC1_QUEUE_EMPTY4_ADDR                       (WF_PLE_TOP_BASE + 0x710) // 0710
#define WF_PLE_TOP_AC1_QUEUE_EMPTY5_ADDR                       (WF_PLE_TOP_BASE + 0x714) // 0714
#define WF_PLE_TOP_AC1_QUEUE_EMPTY6_ADDR                       (WF_PLE_TOP_BASE + 0x718) // 0718
#define WF_PLE_TOP_AC1_QUEUE_EMPTY7_ADDR                       (WF_PLE_TOP_BASE + 0x71c) // 071C
#define WF_PLE_TOP_AC1_QUEUE_EMPTY8_ADDR                       (WF_PLE_TOP_BASE + 0x720) // 0720
#define WF_PLE_TOP_AC1_QUEUE_EMPTY9_ADDR                       (WF_PLE_TOP_BASE + 0x724) // 0724
#define WF_PLE_TOP_AC1_QUEUE_EMPTY10_ADDR                      (WF_PLE_TOP_BASE + 0x728) // 0728
#define WF_PLE_TOP_AC1_QUEUE_EMPTY11_ADDR                      (WF_PLE_TOP_BASE + 0x72c) // 072C
#define WF_PLE_TOP_AC1_QUEUE_EMPTY12_ADDR                      (WF_PLE_TOP_BASE + 0x730) // 0730
#define WF_PLE_TOP_AC1_QUEUE_EMPTY13_ADDR                      (WF_PLE_TOP_BASE + 0x734) // 0734
#define WF_PLE_TOP_AC1_QUEUE_EMPTY14_ADDR                      (WF_PLE_TOP_BASE + 0x738) // 0738
#define WF_PLE_TOP_AC1_QUEUE_EMPTY15_ADDR                      (WF_PLE_TOP_BASE + 0x73c) // 073C
#define WF_PLE_TOP_AC1_QUEUE_EMPTY16_ADDR                      (WF_PLE_TOP_BASE + 0x740) // 0740
#define WF_PLE_TOP_AC1_QUEUE_EMPTY17_ADDR                      (WF_PLE_TOP_BASE + 0x744) // 0744
#define WF_PLE_TOP_AC1_QUEUE_EMPTY18_ADDR                      (WF_PLE_TOP_BASE + 0x748) // 0748
#define WF_PLE_TOP_AC1_QUEUE_EMPTY19_ADDR                      (WF_PLE_TOP_BASE + 0x74c) // 074C
#define WF_PLE_TOP_AC1_QUEUE_EMPTY20_ADDR                      (WF_PLE_TOP_BASE + 0x750) // 0750
#define WF_PLE_TOP_AC1_QUEUE_EMPTY21_ADDR                      (WF_PLE_TOP_BASE + 0x754) // 0754
#define WF_PLE_TOP_AC1_QUEUE_EMPTY22_ADDR                      (WF_PLE_TOP_BASE + 0x758) // 0758
#define WF_PLE_TOP_AC1_QUEUE_EMPTY23_ADDR                      (WF_PLE_TOP_BASE + 0x75c) // 075C
#define WF_PLE_TOP_AC1_QUEUE_EMPTY24_ADDR                      (WF_PLE_TOP_BASE + 0x760) // 0760
#define WF_PLE_TOP_AC1_QUEUE_EMPTY25_ADDR                      (WF_PLE_TOP_BASE + 0x764) // 0764
#define WF_PLE_TOP_AC1_QUEUE_EMPTY26_ADDR                      (WF_PLE_TOP_BASE + 0x768) // 0768
#define WF_PLE_TOP_AC1_QUEUE_EMPTY27_ADDR                      (WF_PLE_TOP_BASE + 0x76c) // 076C
#define WF_PLE_TOP_AC1_QUEUE_EMPTY28_ADDR                      (WF_PLE_TOP_BASE + 0x770) // 0770
#define WF_PLE_TOP_AC1_QUEUE_EMPTY29_ADDR                      (WF_PLE_TOP_BASE + 0x774) // 0774
#define WF_PLE_TOP_AC1_QUEUE_EMPTY30_ADDR                      (WF_PLE_TOP_BASE + 0x778) // 0778
#define WF_PLE_TOP_AC1_QUEUE_EMPTY31_ADDR                      (WF_PLE_TOP_BASE + 0x77c) // 077C
#define WF_PLE_TOP_AC1_QUEUE_EMPTY_EXT0_ADDR                   (WF_PLE_TOP_BASE + 0x780) // 0780
#define WF_PLE_TOP_AC1_QUEUE_EMPTY_EXT1_ADDR                   (WF_PLE_TOP_BASE + 0x784) // 0784
#define WF_PLE_TOP_AC2_QUEUE_EMPTY0_ADDR                       (WF_PLE_TOP_BASE + 0x800) // 0800
#define WF_PLE_TOP_AC2_QUEUE_EMPTY1_ADDR                       (WF_PLE_TOP_BASE + 0x804) // 0804
#define WF_PLE_TOP_AC2_QUEUE_EMPTY2_ADDR                       (WF_PLE_TOP_BASE + 0x808) // 0808
#define WF_PLE_TOP_AC2_QUEUE_EMPTY3_ADDR                       (WF_PLE_TOP_BASE + 0x80c) // 080C
#define WF_PLE_TOP_AC2_QUEUE_EMPTY4_ADDR                       (WF_PLE_TOP_BASE + 0x810) // 0810
#define WF_PLE_TOP_AC2_QUEUE_EMPTY5_ADDR                       (WF_PLE_TOP_BASE + 0x814) // 0814
#define WF_PLE_TOP_AC2_QUEUE_EMPTY6_ADDR                       (WF_PLE_TOP_BASE + 0x818) // 0818
#define WF_PLE_TOP_AC2_QUEUE_EMPTY7_ADDR                       (WF_PLE_TOP_BASE + 0x81c) // 081C
#define WF_PLE_TOP_AC2_QUEUE_EMPTY8_ADDR                       (WF_PLE_TOP_BASE + 0x820) // 0820
#define WF_PLE_TOP_AC2_QUEUE_EMPTY9_ADDR                       (WF_PLE_TOP_BASE + 0x824) // 0824
#define WF_PLE_TOP_AC2_QUEUE_EMPTY10_ADDR                      (WF_PLE_TOP_BASE + 0x828) // 0828
#define WF_PLE_TOP_AC2_QUEUE_EMPTY11_ADDR                      (WF_PLE_TOP_BASE + 0x82c) // 082C
#define WF_PLE_TOP_AC2_QUEUE_EMPTY12_ADDR                      (WF_PLE_TOP_BASE + 0x830) // 0830
#define WF_PLE_TOP_AC2_QUEUE_EMPTY13_ADDR                      (WF_PLE_TOP_BASE + 0x834) // 0834
#define WF_PLE_TOP_AC2_QUEUE_EMPTY14_ADDR                      (WF_PLE_TOP_BASE + 0x838) // 0838
#define WF_PLE_TOP_AC2_QUEUE_EMPTY15_ADDR                      (WF_PLE_TOP_BASE + 0x83c) // 083C
#define WF_PLE_TOP_AC2_QUEUE_EMPTY16_ADDR                      (WF_PLE_TOP_BASE + 0x840) // 0840
#define WF_PLE_TOP_AC2_QUEUE_EMPTY17_ADDR                      (WF_PLE_TOP_BASE + 0x844) // 0844
#define WF_PLE_TOP_AC2_QUEUE_EMPTY18_ADDR                      (WF_PLE_TOP_BASE + 0x848) // 0848
#define WF_PLE_TOP_AC2_QUEUE_EMPTY19_ADDR                      (WF_PLE_TOP_BASE + 0x84c) // 084C
#define WF_PLE_TOP_AC2_QUEUE_EMPTY20_ADDR                      (WF_PLE_TOP_BASE + 0x850) // 0850
#define WF_PLE_TOP_AC2_QUEUE_EMPTY21_ADDR                      (WF_PLE_TOP_BASE + 0x854) // 0854
#define WF_PLE_TOP_AC2_QUEUE_EMPTY22_ADDR                      (WF_PLE_TOP_BASE + 0x858) // 0858
#define WF_PLE_TOP_AC2_QUEUE_EMPTY23_ADDR                      (WF_PLE_TOP_BASE + 0x85c) // 085C
#define WF_PLE_TOP_AC2_QUEUE_EMPTY24_ADDR                      (WF_PLE_TOP_BASE + 0x860) // 0860
#define WF_PLE_TOP_AC2_QUEUE_EMPTY25_ADDR                      (WF_PLE_TOP_BASE + 0x864) // 0864
#define WF_PLE_TOP_AC2_QUEUE_EMPTY26_ADDR                      (WF_PLE_TOP_BASE + 0x868) // 0868
#define WF_PLE_TOP_AC2_QUEUE_EMPTY27_ADDR                      (WF_PLE_TOP_BASE + 0x86c) // 086C
#define WF_PLE_TOP_AC2_QUEUE_EMPTY28_ADDR                      (WF_PLE_TOP_BASE + 0x870) // 0870
#define WF_PLE_TOP_AC2_QUEUE_EMPTY29_ADDR                      (WF_PLE_TOP_BASE + 0x874) // 0874
#define WF_PLE_TOP_AC2_QUEUE_EMPTY30_ADDR                      (WF_PLE_TOP_BASE + 0x878) // 0878
#define WF_PLE_TOP_AC2_QUEUE_EMPTY31_ADDR                      (WF_PLE_TOP_BASE + 0x87c) // 087C
#define WF_PLE_TOP_AC2_QUEUE_EMPTY_EXT0_ADDR                   (WF_PLE_TOP_BASE + 0x880) // 0880
#define WF_PLE_TOP_AC2_QUEUE_EMPTY_EXT1_ADDR                   (WF_PLE_TOP_BASE + 0x884) // 0884
#define WF_PLE_TOP_AC3_QUEUE_EMPTY0_ADDR                       (WF_PLE_TOP_BASE + 0x900) // 0900
#define WF_PLE_TOP_AC3_QUEUE_EMPTY1_ADDR                       (WF_PLE_TOP_BASE + 0x904) // 0904
#define WF_PLE_TOP_AC3_QUEUE_EMPTY2_ADDR                       (WF_PLE_TOP_BASE + 0x908) // 0908
#define WF_PLE_TOP_AC3_QUEUE_EMPTY3_ADDR                       (WF_PLE_TOP_BASE + 0x90c) // 090C
#define WF_PLE_TOP_AC3_QUEUE_EMPTY4_ADDR                       (WF_PLE_TOP_BASE + 0x910) // 0910
#define WF_PLE_TOP_AC3_QUEUE_EMPTY5_ADDR                       (WF_PLE_TOP_BASE + 0x914) // 0914
#define WF_PLE_TOP_AC3_QUEUE_EMPTY6_ADDR                       (WF_PLE_TOP_BASE + 0x918) // 0918
#define WF_PLE_TOP_AC3_QUEUE_EMPTY7_ADDR                       (WF_PLE_TOP_BASE + 0x91c) // 091C
#define WF_PLE_TOP_AC3_QUEUE_EMPTY8_ADDR                       (WF_PLE_TOP_BASE + 0x920) // 0920
#define WF_PLE_TOP_AC3_QUEUE_EMPTY9_ADDR                       (WF_PLE_TOP_BASE + 0x924) // 0924
#define WF_PLE_TOP_AC3_QUEUE_EMPTY10_ADDR                      (WF_PLE_TOP_BASE + 0x928) // 0928
#define WF_PLE_TOP_AC3_QUEUE_EMPTY11_ADDR                      (WF_PLE_TOP_BASE + 0x92c) // 092C
#define WF_PLE_TOP_AC3_QUEUE_EMPTY12_ADDR                      (WF_PLE_TOP_BASE + 0x930) // 0930
#define WF_PLE_TOP_AC3_QUEUE_EMPTY13_ADDR                      (WF_PLE_TOP_BASE + 0x934) // 0934
#define WF_PLE_TOP_AC3_QUEUE_EMPTY14_ADDR                      (WF_PLE_TOP_BASE + 0x938) // 0938
#define WF_PLE_TOP_AC3_QUEUE_EMPTY15_ADDR                      (WF_PLE_TOP_BASE + 0x93c) // 093C
#define WF_PLE_TOP_AC3_QUEUE_EMPTY16_ADDR                      (WF_PLE_TOP_BASE + 0x940) // 0940
#define WF_PLE_TOP_AC3_QUEUE_EMPTY17_ADDR                      (WF_PLE_TOP_BASE + 0x944) // 0944
#define WF_PLE_TOP_AC3_QUEUE_EMPTY18_ADDR                      (WF_PLE_TOP_BASE + 0x948) // 0948
#define WF_PLE_TOP_AC3_QUEUE_EMPTY19_ADDR                      (WF_PLE_TOP_BASE + 0x94c) // 094C
#define WF_PLE_TOP_AC3_QUEUE_EMPTY20_ADDR                      (WF_PLE_TOP_BASE + 0x950) // 0950
#define WF_PLE_TOP_AC3_QUEUE_EMPTY21_ADDR                      (WF_PLE_TOP_BASE + 0x954) // 0954
#define WF_PLE_TOP_AC3_QUEUE_EMPTY22_ADDR                      (WF_PLE_TOP_BASE + 0x958) // 0958
#define WF_PLE_TOP_AC3_QUEUE_EMPTY23_ADDR                      (WF_PLE_TOP_BASE + 0x95c) // 095C
#define WF_PLE_TOP_AC3_QUEUE_EMPTY24_ADDR                      (WF_PLE_TOP_BASE + 0x960) // 0960
#define WF_PLE_TOP_AC3_QUEUE_EMPTY25_ADDR                      (WF_PLE_TOP_BASE + 0x964) // 0964
#define WF_PLE_TOP_AC3_QUEUE_EMPTY26_ADDR                      (WF_PLE_TOP_BASE + 0x968) // 0968
#define WF_PLE_TOP_AC3_QUEUE_EMPTY27_ADDR                      (WF_PLE_TOP_BASE + 0x96c) // 096C
#define WF_PLE_TOP_AC3_QUEUE_EMPTY28_ADDR                      (WF_PLE_TOP_BASE + 0x970) // 0970
#define WF_PLE_TOP_AC3_QUEUE_EMPTY29_ADDR                      (WF_PLE_TOP_BASE + 0x974) // 0974
#define WF_PLE_TOP_AC3_QUEUE_EMPTY30_ADDR                      (WF_PLE_TOP_BASE + 0x978) // 0978
#define WF_PLE_TOP_AC3_QUEUE_EMPTY31_ADDR                      (WF_PLE_TOP_BASE + 0x97c) // 097C
#define WF_PLE_TOP_AC3_QUEUE_EMPTY_EXT0_ADDR                   (WF_PLE_TOP_BASE + 0x980) // 0980
#define WF_PLE_TOP_AC3_QUEUE_EMPTY_EXT1_ADDR                   (WF_PLE_TOP_BASE + 0x984) // 0984
#define WF_PLE_TOP_PEEK_CR_00_ADDR                             (WF_PLE_TOP_BASE + 0xa00) // 0A00
#define WF_PLE_TOP_PEEK_CR_01_ADDR                             (WF_PLE_TOP_BASE + 0xa04) // 0A04
#define WF_PLE_TOP_PEEK_CR_02_ADDR                             (WF_PLE_TOP_BASE + 0xa08) // 0A08
#define WF_PLE_TOP_PEEK_CR_03_ADDR                             (WF_PLE_TOP_BASE + 0xa0c) // 0A0C
#define WF_PLE_TOP_PEEK_CR_04_ADDR                             (WF_PLE_TOP_BASE + 0xa10) // 0A10
#define WF_PLE_TOP_PEEK_CR_05_ADDR                             (WF_PLE_TOP_BASE + 0xa14) // 0A14
#define WF_PLE_TOP_PEEK_CR_06_ADDR                             (WF_PLE_TOP_BASE + 0xa18) // 0A18
#define WF_PLE_TOP_PEEK_CR_07_ADDR                             (WF_PLE_TOP_BASE + 0xa1c) // 0A1C
#define WF_PLE_TOP_PEEK_CR_08_ADDR                             (WF_PLE_TOP_BASE + 0xa20) // 0A20
#define WF_PLE_TOP_PEEK_CR_09_ADDR                             (WF_PLE_TOP_BASE + 0xa24) // 0A24
#define WF_PLE_TOP_PEEK_CR_10_ADDR                             (WF_PLE_TOP_BASE + 0xa28) // 0A28
#define WF_PLE_TOP_PEEK_CR_11_ADDR                             (WF_PLE_TOP_BASE + 0xa2c) // 0A2C
#define WF_PLE_TOP_MACTX0_DBG0_ADDR                            (WF_PLE_TOP_BASE + 0xa60) // 0A60
#define WF_PLE_TOP_MACTX0_DBG1_ADDR                            (WF_PLE_TOP_BASE + 0xa64) // 0A64
#define WF_PLE_TOP_MACTX1_DBG0_ADDR                            (WF_PLE_TOP_BASE + 0xa68) // 0A68
#define WF_PLE_TOP_MACTX1_DBG1_ADDR                            (WF_PLE_TOP_BASE + 0xa6C) // 0A6C
#define WF_PLE_TOP_AMSDU_GC_ADDR                               (WF_PLE_TOP_BASE + 0x1000) // 1000
#define WF_PLE_TOP_AMSDU_TXD_COMP_MAP_0_ADDR                   (WF_PLE_TOP_BASE + 0x1004) // 1004
#define WF_PLE_TOP_AMSDU_TXD_COMP_MAP_1_ADDR                   (WF_PLE_TOP_BASE + 0x1008) // 1008
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_MASK_ADDR                  (WF_PLE_TOP_BASE + 0x100c) // 100C
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_STS_ADDR                   (WF_PLE_TOP_BASE + 0x1010) // 1010
#define WF_PLE_TOP_AMSDU_PEEK_CR_00_ADDR                       (WF_PLE_TOP_BASE + 0x10d0) // 10D0
#define WF_PLE_TOP_AMSDU_PEEK_CR_01_ADDR                       (WF_PLE_TOP_BASE + 0x10d4) // 10D4
#define WF_PLE_TOP_AMSDU_PACK_1_MSDU_CNT_ADDR                  (WF_PLE_TOP_BASE + 0x10e0) // 10E0
#define WF_PLE_TOP_AMSDU_PACK_2_MSDU_CNT_ADDR                  (WF_PLE_TOP_BASE + 0x10e4) // 10E4
#define WF_PLE_TOP_AMSDU_PACK_3_MSDU_CNT_ADDR                  (WF_PLE_TOP_BASE + 0x10e8) // 10E8
#define WF_PLE_TOP_AMSDU_PACK_4_MSDU_CNT_ADDR                  (WF_PLE_TOP_BASE + 0x10ec) // 10EC
#define WF_PLE_TOP_AMSDU_PACK_5_MSDU_CNT_ADDR                  (WF_PLE_TOP_BASE + 0x10f0) // 10F0
#define WF_PLE_TOP_AMSDU_PACK_6_MSDU_CNT_ADDR                  (WF_PLE_TOP_BASE + 0x10f4) // 10F4
#define WF_PLE_TOP_AMSDU_PACK_7_MSDU_CNT_ADDR                  (WF_PLE_TOP_BASE + 0x10f8) // 10F8
#define WF_PLE_TOP_AMSDU_PACK_8_MSDU_CNT_ADDR                  (WF_PLE_TOP_BASE + 0x10fc) // 10FC
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY0_ADDR                 (WF_PLE_TOP_BASE + 0x1100) // 1100
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY1_ADDR                 (WF_PLE_TOP_BASE + 0x1104) // 1104
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY2_ADDR                 (WF_PLE_TOP_BASE + 0x1108) // 1108
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY3_ADDR                 (WF_PLE_TOP_BASE + 0x110c) // 110C
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY4_ADDR                 (WF_PLE_TOP_BASE + 0x1110) // 1110
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY5_ADDR                 (WF_PLE_TOP_BASE + 0x1114) // 1114
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY6_ADDR                 (WF_PLE_TOP_BASE + 0x1118) // 1118
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY7_ADDR                 (WF_PLE_TOP_BASE + 0x111c) // 111C
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY8_ADDR                 (WF_PLE_TOP_BASE + 0x1120) // 1120
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY9_ADDR                 (WF_PLE_TOP_BASE + 0x1124) // 1124
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY10_ADDR                (WF_PLE_TOP_BASE + 0x1128) // 1128
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY11_ADDR                (WF_PLE_TOP_BASE + 0x112c) // 112C
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY12_ADDR                (WF_PLE_TOP_BASE + 0x1130) // 1130
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY13_ADDR                (WF_PLE_TOP_BASE + 0x1134) // 1134
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY14_ADDR                (WF_PLE_TOP_BASE + 0x1138) // 1138
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY15_ADDR                (WF_PLE_TOP_BASE + 0x113c) // 113C
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY16_ADDR                (WF_PLE_TOP_BASE + 0x1140) // 1140
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY17_ADDR                (WF_PLE_TOP_BASE + 0x1144) // 1144
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY18_ADDR                (WF_PLE_TOP_BASE + 0x1148) // 1148
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY19_ADDR                (WF_PLE_TOP_BASE + 0x114c) // 114C
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY20_ADDR                (WF_PLE_TOP_BASE + 0x1150) // 1150
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY21_ADDR                (WF_PLE_TOP_BASE + 0x1154) // 1154
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY22_ADDR                (WF_PLE_TOP_BASE + 0x1158) // 1158
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY23_ADDR                (WF_PLE_TOP_BASE + 0x115c) // 115C
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY24_ADDR                (WF_PLE_TOP_BASE + 0x1160) // 1160
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY25_ADDR                (WF_PLE_TOP_BASE + 0x1164) // 1164
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY26_ADDR                (WF_PLE_TOP_BASE + 0x1168) // 1168
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY27_ADDR                (WF_PLE_TOP_BASE + 0x116c) // 116C
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY28_ADDR                (WF_PLE_TOP_BASE + 0x1170) // 1170
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY29_ADDR                (WF_PLE_TOP_BASE + 0x1174) // 1174
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY30_ADDR                (WF_PLE_TOP_BASE + 0x1178) // 1178
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY31_ADDR                (WF_PLE_TOP_BASE + 0x117c) // 117C
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY_EXT0_ADDR             (WF_PLE_TOP_BASE + 0x1180) // 1180
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY_EXT1_ADDR             (WF_PLE_TOP_BASE + 0x1184) // 1184
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY0_ADDR                 (WF_PLE_TOP_BASE + 0x1200) // 1200
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY1_ADDR                 (WF_PLE_TOP_BASE + 0x1204) // 1204
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY2_ADDR                 (WF_PLE_TOP_BASE + 0x1208) // 1208
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY3_ADDR                 (WF_PLE_TOP_BASE + 0x120c) // 120C
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY4_ADDR                 (WF_PLE_TOP_BASE + 0x1210) // 1210
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY5_ADDR                 (WF_PLE_TOP_BASE + 0x1214) // 1214
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY6_ADDR                 (WF_PLE_TOP_BASE + 0x1218) // 1218
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY7_ADDR                 (WF_PLE_TOP_BASE + 0x121c) // 121C
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY8_ADDR                 (WF_PLE_TOP_BASE + 0x1220) // 1220
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY9_ADDR                 (WF_PLE_TOP_BASE + 0x1224) // 1224
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY10_ADDR                (WF_PLE_TOP_BASE + 0x1228) // 1228
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY11_ADDR                (WF_PLE_TOP_BASE + 0x122c) // 122C
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY12_ADDR                (WF_PLE_TOP_BASE + 0x1230) // 1230
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY13_ADDR                (WF_PLE_TOP_BASE + 0x1234) // 1234
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY14_ADDR                (WF_PLE_TOP_BASE + 0x1238) // 1238
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY15_ADDR                (WF_PLE_TOP_BASE + 0x123c) // 123C
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY16_ADDR                (WF_PLE_TOP_BASE + 0x1240) // 1240
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY17_ADDR                (WF_PLE_TOP_BASE + 0x1244) // 1244
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY18_ADDR                (WF_PLE_TOP_BASE + 0x1248) // 1248
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY19_ADDR                (WF_PLE_TOP_BASE + 0x124c) // 124C
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY20_ADDR                (WF_PLE_TOP_BASE + 0x1250) // 1250
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY21_ADDR                (WF_PLE_TOP_BASE + 0x1254) // 1254
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY22_ADDR                (WF_PLE_TOP_BASE + 0x1258) // 1258
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY23_ADDR                (WF_PLE_TOP_BASE + 0x125c) // 125C
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY24_ADDR                (WF_PLE_TOP_BASE + 0x1260) // 1260
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY25_ADDR                (WF_PLE_TOP_BASE + 0x1264) // 1264
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY26_ADDR                (WF_PLE_TOP_BASE + 0x1268) // 1268
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY27_ADDR                (WF_PLE_TOP_BASE + 0x126c) // 126C
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY28_ADDR                (WF_PLE_TOP_BASE + 0x1270) // 1270
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY29_ADDR                (WF_PLE_TOP_BASE + 0x1274) // 1274
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY30_ADDR                (WF_PLE_TOP_BASE + 0x1278) // 1278
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY31_ADDR                (WF_PLE_TOP_BASE + 0x127c) // 127C
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY_EXT0_ADDR             (WF_PLE_TOP_BASE + 0x1280) // 1280
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY_EXT1_ADDR             (WF_PLE_TOP_BASE + 0x1284) // 1284
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY0_ADDR                 (WF_PLE_TOP_BASE + 0x1300) // 1300
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY1_ADDR                 (WF_PLE_TOP_BASE + 0x1304) // 1304
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY2_ADDR                 (WF_PLE_TOP_BASE + 0x1308) // 1308
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY3_ADDR                 (WF_PLE_TOP_BASE + 0x130c) // 130C
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY4_ADDR                 (WF_PLE_TOP_BASE + 0x1310) // 1310
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY5_ADDR                 (WF_PLE_TOP_BASE + 0x1314) // 1314
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY6_ADDR                 (WF_PLE_TOP_BASE + 0x1318) // 1318
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY7_ADDR                 (WF_PLE_TOP_BASE + 0x131c) // 131C
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY8_ADDR                 (WF_PLE_TOP_BASE + 0x1320) // 1320
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY9_ADDR                 (WF_PLE_TOP_BASE + 0x1324) // 1324
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY10_ADDR                (WF_PLE_TOP_BASE + 0x1328) // 1328
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY11_ADDR                (WF_PLE_TOP_BASE + 0x132c) // 132C
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY12_ADDR                (WF_PLE_TOP_BASE + 0x1330) // 1330
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY13_ADDR                (WF_PLE_TOP_BASE + 0x1334) // 1334
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY14_ADDR                (WF_PLE_TOP_BASE + 0x1338) // 1338
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY15_ADDR                (WF_PLE_TOP_BASE + 0x133c) // 133C
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY16_ADDR                (WF_PLE_TOP_BASE + 0x1340) // 1340
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY17_ADDR                (WF_PLE_TOP_BASE + 0x1344) // 1344
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY18_ADDR                (WF_PLE_TOP_BASE + 0x1348) // 1348
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY19_ADDR                (WF_PLE_TOP_BASE + 0x134c) // 134C
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY20_ADDR                (WF_PLE_TOP_BASE + 0x1350) // 1350
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY21_ADDR                (WF_PLE_TOP_BASE + 0x1354) // 1354
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY22_ADDR                (WF_PLE_TOP_BASE + 0x1358) // 1358
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY23_ADDR                (WF_PLE_TOP_BASE + 0x135c) // 135C
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY24_ADDR                (WF_PLE_TOP_BASE + 0x1360) // 1360
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY25_ADDR                (WF_PLE_TOP_BASE + 0x1364) // 1364
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY26_ADDR                (WF_PLE_TOP_BASE + 0x1368) // 1368
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY27_ADDR                (WF_PLE_TOP_BASE + 0x136c) // 136C
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY28_ADDR                (WF_PLE_TOP_BASE + 0x1370) // 1370
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY29_ADDR                (WF_PLE_TOP_BASE + 0x1374) // 1374
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY30_ADDR                (WF_PLE_TOP_BASE + 0x1378) // 1378
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY31_ADDR                (WF_PLE_TOP_BASE + 0x137c) // 137C
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY_EXT0_ADDR             (WF_PLE_TOP_BASE + 0x1380) // 1380
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY_EXT1_ADDR             (WF_PLE_TOP_BASE + 0x1384) // 1384
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY0_ADDR                 (WF_PLE_TOP_BASE + 0x1400) // 1400
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY1_ADDR                 (WF_PLE_TOP_BASE + 0x1404) // 1404
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY2_ADDR                 (WF_PLE_TOP_BASE + 0x1408) // 1408
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY3_ADDR                 (WF_PLE_TOP_BASE + 0x140c) // 140C
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY4_ADDR                 (WF_PLE_TOP_BASE + 0x1410) // 1410
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY5_ADDR                 (WF_PLE_TOP_BASE + 0x1414) // 1414
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY6_ADDR                 (WF_PLE_TOP_BASE + 0x1418) // 1418
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY7_ADDR                 (WF_PLE_TOP_BASE + 0x141c) // 141C
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY8_ADDR                 (WF_PLE_TOP_BASE + 0x1420) // 1420
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY9_ADDR                 (WF_PLE_TOP_BASE + 0x1424) // 1424
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY10_ADDR                (WF_PLE_TOP_BASE + 0x1428) // 1428
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY11_ADDR                (WF_PLE_TOP_BASE + 0x142c) // 142C
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY12_ADDR                (WF_PLE_TOP_BASE + 0x1430) // 1430
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY13_ADDR                (WF_PLE_TOP_BASE + 0x1434) // 1434
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY14_ADDR                (WF_PLE_TOP_BASE + 0x1438) // 1438
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY15_ADDR                (WF_PLE_TOP_BASE + 0x143c) // 143C
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY16_ADDR                (WF_PLE_TOP_BASE + 0x1440) // 1440
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY17_ADDR                (WF_PLE_TOP_BASE + 0x1444) // 1444
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY18_ADDR                (WF_PLE_TOP_BASE + 0x1448) // 1448
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY19_ADDR                (WF_PLE_TOP_BASE + 0x144c) // 144C
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY20_ADDR                (WF_PLE_TOP_BASE + 0x1450) // 1450
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY21_ADDR                (WF_PLE_TOP_BASE + 0x1454) // 1454
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY22_ADDR                (WF_PLE_TOP_BASE + 0x1458) // 1458
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY23_ADDR                (WF_PLE_TOP_BASE + 0x145c) // 145C
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY24_ADDR                (WF_PLE_TOP_BASE + 0x1460) // 1460
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY25_ADDR                (WF_PLE_TOP_BASE + 0x1464) // 1464
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY26_ADDR                (WF_PLE_TOP_BASE + 0x1468) // 1468
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY27_ADDR                (WF_PLE_TOP_BASE + 0x146c) // 146C
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY28_ADDR                (WF_PLE_TOP_BASE + 0x1470) // 1470
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY29_ADDR                (WF_PLE_TOP_BASE + 0x1474) // 1474
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY30_ADDR                (WF_PLE_TOP_BASE + 0x1478) // 1478
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY31_ADDR                (WF_PLE_TOP_BASE + 0x147c) // 147C
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY_EXT0_ADDR             (WF_PLE_TOP_BASE + 0x1480) // 1480
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY_EXT1_ADDR             (WF_PLE_TOP_BASE + 0x1484) // 1484




/* =====================================================================================

  ---GC (0x820c0000 + 0x00)---

    ALL_RESET[0]                 - (RW) Resets PLE logic and register
    LOGIC_RESET[1]               - (RW) Resets PLE logic circuit
    INIT_DONE[2]                 - (RO) PLE control SRAM initialization indicator
    RESERVED3[15..3]             - (RO) Reserved bits
    SRAM_MBIST_G1_RESET[16]      - (RW) Reset control of group 1 SRAM MBIST
    SRAM_MBIST_G2_RESET[17]      - (RW) Reset control of group 2 SRAM MBIST
    DIS_PLE_DYN_CKG[18]          - (RW) Disable control of wf_ple_top dynamic clock gating function
    DIS_PLE_MBIST_SRAM_DYN_CKG[19] - (RW) Disable control of wf_ple_top dynamic clock gating function
    RESERVED20[31..20]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_GC_DIS_PLE_MBIST_SRAM_DYN_CKG_ADDR          WF_PLE_TOP_GC_ADDR
#define WF_PLE_TOP_GC_DIS_PLE_MBIST_SRAM_DYN_CKG_MASK          0x00080000                // DIS_PLE_MBIST_SRAM_DYN_CKG[19]
#define WF_PLE_TOP_GC_DIS_PLE_MBIST_SRAM_DYN_CKG_SHFT          19
#define WF_PLE_TOP_GC_DIS_PLE_DYN_CKG_ADDR                     WF_PLE_TOP_GC_ADDR
#define WF_PLE_TOP_GC_DIS_PLE_DYN_CKG_MASK                     0x00040000                // DIS_PLE_DYN_CKG[18]
#define WF_PLE_TOP_GC_DIS_PLE_DYN_CKG_SHFT                     18
#define WF_PLE_TOP_GC_SRAM_MBIST_G2_RESET_ADDR                 WF_PLE_TOP_GC_ADDR
#define WF_PLE_TOP_GC_SRAM_MBIST_G2_RESET_MASK                 0x00020000                // SRAM_MBIST_G2_RESET[17]
#define WF_PLE_TOP_GC_SRAM_MBIST_G2_RESET_SHFT                 17
#define WF_PLE_TOP_GC_SRAM_MBIST_G1_RESET_ADDR                 WF_PLE_TOP_GC_ADDR
#define WF_PLE_TOP_GC_SRAM_MBIST_G1_RESET_MASK                 0x00010000                // SRAM_MBIST_G1_RESET[16]
#define WF_PLE_TOP_GC_SRAM_MBIST_G1_RESET_SHFT                 16
#define WF_PLE_TOP_GC_INIT_DONE_ADDR                           WF_PLE_TOP_GC_ADDR
#define WF_PLE_TOP_GC_INIT_DONE_MASK                           0x00000004                // INIT_DONE[2]
#define WF_PLE_TOP_GC_INIT_DONE_SHFT                           2
#define WF_PLE_TOP_GC_LOGIC_RESET_ADDR                         WF_PLE_TOP_GC_ADDR
#define WF_PLE_TOP_GC_LOGIC_RESET_MASK                         0x00000002                // LOGIC_RESET[1]
#define WF_PLE_TOP_GC_LOGIC_RESET_SHFT                         1
#define WF_PLE_TOP_GC_ALL_RESET_ADDR                           WF_PLE_TOP_GC_ADDR
#define WF_PLE_TOP_GC_ALL_RESET_MASK                           0x00000001                // ALL_RESET[0]
#define WF_PLE_TOP_GC_ALL_RESET_SHFT                           0

/* =====================================================================================

  ---PBUF_CTRL (0x820c0000 + 0x04)---

    TOTAL_PAGE_NUM[11..0]        - (RW) Total page number
                                     Set the total page before release PLE logic reset, and must not be changed after release logic reset.
    RESERVED12[16..12]           - (RO) Reserved bits
    PBUF_OFFSET[25..17]          - (RW) Packet buffer offset
                                     Set up the buffer offset before releasing PLE logic reset; it should not be changed after logic reset is released.
    RESERVED26[30..26]           - (RO) Reserved bits
    PAGE_SIZE_CFG[31]            - (RW) Configures page size
                                     Set up the page size before releasing PLE logic reset; it should not be changed after logic reset is released.

 =====================================================================================*/
#define WF_PLE_TOP_PBUF_CTRL_PAGE_SIZE_CFG_ADDR                WF_PLE_TOP_PBUF_CTRL_ADDR
#define WF_PLE_TOP_PBUF_CTRL_PAGE_SIZE_CFG_MASK                0x80000000                // PAGE_SIZE_CFG[31]
#define WF_PLE_TOP_PBUF_CTRL_PAGE_SIZE_CFG_SHFT                31
#define WF_PLE_TOP_PBUF_CTRL_PBUF_OFFSET_ADDR                  WF_PLE_TOP_PBUF_CTRL_ADDR
#define WF_PLE_TOP_PBUF_CTRL_PBUF_OFFSET_MASK                  0x03FE0000                // PBUF_OFFSET[25..17]
#define WF_PLE_TOP_PBUF_CTRL_PBUF_OFFSET_SHFT                  17
#define WF_PLE_TOP_PBUF_CTRL_TOTAL_PAGE_NUM_ADDR               WF_PLE_TOP_PBUF_CTRL_ADDR
#define WF_PLE_TOP_PBUF_CTRL_TOTAL_PAGE_NUM_MASK               0x00000FFF                // TOTAL_PAGE_NUM[11..0]
#define WF_PLE_TOP_PBUF_CTRL_TOTAL_PAGE_NUM_SHFT               0

/* =====================================================================================

  ---FREEPG_START_END (0x820c0000 + 0x08)---

    FREEPG_START[11..0]          - (RW) Start page for free page list
                                     Set start page before release PLE logic reset, and must not be changed after release logic reset.
    RESERVED12[15..12]           - (RO) Reserved bits
    FREEPG_END[27..16]           - (RW) End page for free page list
                                     Set end page before release PLE logic reset, and must not be changed after release logic reset.
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_FREEPG_START_END_FREEPG_END_ADDR            WF_PLE_TOP_FREEPG_START_END_ADDR
#define WF_PLE_TOP_FREEPG_START_END_FREEPG_END_MASK            0x0FFF0000                // FREEPG_END[27..16]
#define WF_PLE_TOP_FREEPG_START_END_FREEPG_END_SHFT            16
#define WF_PLE_TOP_FREEPG_START_END_FREEPG_START_ADDR          WF_PLE_TOP_FREEPG_START_END_ADDR
#define WF_PLE_TOP_FREEPG_START_END_FREEPG_START_MASK          0x00000FFF                // FREEPG_START[11..0]
#define WF_PLE_TOP_FREEPG_START_END_FREEPG_START_SHFT          0

/* =====================================================================================

  ---PG_HIF_GROUP (0x820c0000 + 0x0c)---

    HIF_MIN_QUOTA[11..0]         - (RW) Min. quota of HIF group
                                     Set the quota before release PLE logic reset ,and must not be changed after release logic reset.
    RESERVED12[15..12]           - (RO) Reserved bits
    HIF_MAX_QUOTA[27..16]        - (RW) Max. quota of HIF group
                                     Set up the quota before releasing PLE logic reset; it should not be changed after logic reset is released.
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_PG_HIF_GROUP_HIF_MAX_QUOTA_ADDR             WF_PLE_TOP_PG_HIF_GROUP_ADDR
#define WF_PLE_TOP_PG_HIF_GROUP_HIF_MAX_QUOTA_MASK             0x0FFF0000                // HIF_MAX_QUOTA[27..16]
#define WF_PLE_TOP_PG_HIF_GROUP_HIF_MAX_QUOTA_SHFT             16
#define WF_PLE_TOP_PG_HIF_GROUP_HIF_MIN_QUOTA_ADDR             WF_PLE_TOP_PG_HIF_GROUP_ADDR
#define WF_PLE_TOP_PG_HIF_GROUP_HIF_MIN_QUOTA_MASK             0x00000FFF                // HIF_MIN_QUOTA[11..0]
#define WF_PLE_TOP_PG_HIF_GROUP_HIF_MIN_QUOTA_SHFT             0

/* =====================================================================================

  ---PG_HIF_WMTXD_GROUP (0x820c0000 + 0x10)---

    HIF_WMTXD_MIN_QUOTA[11..0]   - (RW) Min. quota of HIF WMCPU TXD group
                                     Set the quota before release PLE logic reset ,and must not be changed after release logic reset.
    RESERVED12[15..12]           - (RO) Reserved bits
    HIF_WMTXD_MAX_QUOTA[27..16]  - (RW) Max. quota of HIF WMCPU TXD group
                                     Set up the quota before releasing PLE logic reset; it should not be changed after logic reset is released.
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_PG_HIF_WMTXD_GROUP_HIF_WMTXD_MAX_QUOTA_ADDR WF_PLE_TOP_PG_HIF_WMTXD_GROUP_ADDR
#define WF_PLE_TOP_PG_HIF_WMTXD_GROUP_HIF_WMTXD_MAX_QUOTA_MASK 0x0FFF0000                // HIF_WMTXD_MAX_QUOTA[27..16]
#define WF_PLE_TOP_PG_HIF_WMTXD_GROUP_HIF_WMTXD_MAX_QUOTA_SHFT 16
#define WF_PLE_TOP_PG_HIF_WMTXD_GROUP_HIF_WMTXD_MIN_QUOTA_ADDR WF_PLE_TOP_PG_HIF_WMTXD_GROUP_ADDR
#define WF_PLE_TOP_PG_HIF_WMTXD_GROUP_HIF_WMTXD_MIN_QUOTA_MASK 0x00000FFF                // HIF_WMTXD_MIN_QUOTA[11..0]
#define WF_PLE_TOP_PG_HIF_WMTXD_GROUP_HIF_WMTXD_MIN_QUOTA_SHFT 0

/* =====================================================================================

  ---PG_HIF_TXCMD_GROUP (0x820c0000 + 0x14)---

    HIF_TXCMD_MIN_QUOTA[11..0]   - (RW) Min. quota of HIF TXCMD group
                                     Set the quota before release PLE logic reset ,and must not be changed after release logic reset.
    RESERVED12[15..12]           - (RO) Reserved bits
    HIF_TXCMD_MAX_QUOTA[27..16]  - (RW) Max. quota of HIF TXCMD group
                                     Set up the quota before releasing PLE logic reset; it should not be changed after logic reset is released.
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_PG_HIF_TXCMD_GROUP_HIF_TXCMD_MAX_QUOTA_ADDR WF_PLE_TOP_PG_HIF_TXCMD_GROUP_ADDR
#define WF_PLE_TOP_PG_HIF_TXCMD_GROUP_HIF_TXCMD_MAX_QUOTA_MASK 0x0FFF0000                // HIF_TXCMD_MAX_QUOTA[27..16]
#define WF_PLE_TOP_PG_HIF_TXCMD_GROUP_HIF_TXCMD_MAX_QUOTA_SHFT 16
#define WF_PLE_TOP_PG_HIF_TXCMD_GROUP_HIF_TXCMD_MIN_QUOTA_ADDR WF_PLE_TOP_PG_HIF_TXCMD_GROUP_ADDR
#define WF_PLE_TOP_PG_HIF_TXCMD_GROUP_HIF_TXCMD_MIN_QUOTA_MASK 0x00000FFF                // HIF_TXCMD_MIN_QUOTA[11..0]
#define WF_PLE_TOP_PG_HIF_TXCMD_GROUP_HIF_TXCMD_MIN_QUOTA_SHFT 0

/* =====================================================================================

  ---PG_CPU_GROUP (0x820c0000 + 0x18)---

    CPU_MIN_QUOTA[11..0]         - (RW) Min. quota of CPU group
                                     Set up the quota before releasing PLE logic reset; it should not be changed after logic reset is released.
    RESERVED12[15..12]           - (RO) Reserved bits
    CPU_MAX_QUOTA[27..16]        - (RW) Max. quota of CPU group
                                     Set up the quota before releasing PLE logic reset; it should not be changed after logic reset is released.
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_PG_CPU_GROUP_CPU_MAX_QUOTA_ADDR             WF_PLE_TOP_PG_CPU_GROUP_ADDR
#define WF_PLE_TOP_PG_CPU_GROUP_CPU_MAX_QUOTA_MASK             0x0FFF0000                // CPU_MAX_QUOTA[27..16]
#define WF_PLE_TOP_PG_CPU_GROUP_CPU_MAX_QUOTA_SHFT             16
#define WF_PLE_TOP_PG_CPU_GROUP_CPU_MIN_QUOTA_ADDR             WF_PLE_TOP_PG_CPU_GROUP_ADDR
#define WF_PLE_TOP_PG_CPU_GROUP_CPU_MIN_QUOTA_MASK             0x00000FFF                // CPU_MIN_QUOTA[11..0]
#define WF_PLE_TOP_PG_CPU_GROUP_CPU_MIN_QUOTA_SHFT             0

/* =====================================================================================

  ---SRAM_MBIST_DELSEL1 (0x820c0000 + 0x20)---

    SRAM1_MBIST_DELSEL[31..0]    - (RW) MBIST delsel setting of SRAM1

 =====================================================================================*/
#define WF_PLE_TOP_SRAM_MBIST_DELSEL1_SRAM1_MBIST_DELSEL_ADDR  WF_PLE_TOP_SRAM_MBIST_DELSEL1_ADDR
#define WF_PLE_TOP_SRAM_MBIST_DELSEL1_SRAM1_MBIST_DELSEL_MASK  0xFFFFFFFF                // SRAM1_MBIST_DELSEL[31..0]
#define WF_PLE_TOP_SRAM_MBIST_DELSEL1_SRAM1_MBIST_DELSEL_SHFT  0

/* =====================================================================================

  ---SRAM_MBIST_DELSEL2 (0x820c0000 + 0x24)---

    SRAM2_MBIST_DELSEL[31..0]    - (RW) MBIST delsel setting of SRAM2

 =====================================================================================*/
#define WF_PLE_TOP_SRAM_MBIST_DELSEL2_SRAM2_MBIST_DELSEL_ADDR  WF_PLE_TOP_SRAM_MBIST_DELSEL2_ADDR
#define WF_PLE_TOP_SRAM_MBIST_DELSEL2_SRAM2_MBIST_DELSEL_MASK  0xFFFFFFFF                // SRAM2_MBIST_DELSEL[31..0]
#define WF_PLE_TOP_SRAM_MBIST_DELSEL2_SRAM2_MBIST_DELSEL_SHFT  0

/* =====================================================================================

  ---SRAM_MBIST_DELSEL3 (0x820c0000 + 0x28)---

    SRAM3_MBIST_DELSEL[31..0]    - (RW) MBIST delsel setting of SRAM3

 =====================================================================================*/
#define WF_PLE_TOP_SRAM_MBIST_DELSEL3_SRAM3_MBIST_DELSEL_ADDR  WF_PLE_TOP_SRAM_MBIST_DELSEL3_ADDR
#define WF_PLE_TOP_SRAM_MBIST_DELSEL3_SRAM3_MBIST_DELSEL_MASK  0xFFFFFFFF                // SRAM3_MBIST_DELSEL[31..0]
#define WF_PLE_TOP_SRAM_MBIST_DELSEL3_SRAM3_MBIST_DELSEL_SHFT  0

/* =====================================================================================

  ---SRAM_MBIST_DELSEL4 (0x820c0000 + 0x2c)---

    SRAM4_MBIST_DELSEL[31..0]    - (RW) MBIST delsel setting of SRAM4

 =====================================================================================*/
#define WF_PLE_TOP_SRAM_MBIST_DELSEL4_SRAM4_MBIST_DELSEL_ADDR  WF_PLE_TOP_SRAM_MBIST_DELSEL4_ADDR
#define WF_PLE_TOP_SRAM_MBIST_DELSEL4_SRAM4_MBIST_DELSEL_MASK  0xFFFFFFFF                // SRAM4_MBIST_DELSEL[31..0]
#define WF_PLE_TOP_SRAM_MBIST_DELSEL4_SRAM4_MBIST_DELSEL_SHFT  0

/* =====================================================================================

  ---SRAM_MBIST_DELSEL5 (0x820c0000 + 0x30)---

    SRAM5_MBIST_DELSEL[31..0]    - (RW) MBIST delsel setting of SRAM5

 =====================================================================================*/
#define WF_PLE_TOP_SRAM_MBIST_DELSEL5_SRAM5_MBIST_DELSEL_ADDR  WF_PLE_TOP_SRAM_MBIST_DELSEL5_ADDR
#define WF_PLE_TOP_SRAM_MBIST_DELSEL5_SRAM5_MBIST_DELSEL_MASK  0xFFFFFFFF                // SRAM5_MBIST_DELSEL[31..0]
#define WF_PLE_TOP_SRAM_MBIST_DELSEL5_SRAM5_MBIST_DELSEL_SHFT  0

/* =====================================================================================

  ---SRAM_MBIST_DELSEL6 (0x820c0000 + 0x34)---

    SRAM6_MBIST_DELSEL[31..0]    - (RW) MBIST delsel setting of SRAM6

 =====================================================================================*/
#define WF_PLE_TOP_SRAM_MBIST_DELSEL6_SRAM6_MBIST_DELSEL_ADDR  WF_PLE_TOP_SRAM_MBIST_DELSEL6_ADDR
#define WF_PLE_TOP_SRAM_MBIST_DELSEL6_SRAM6_MBIST_DELSEL_MASK  0xFFFFFFFF                // SRAM6_MBIST_DELSEL[31..0]
#define WF_PLE_TOP_SRAM_MBIST_DELSEL6_SRAM6_MBIST_DELSEL_SHFT  0

/* =====================================================================================

  ---SRAM_MBIST_DELSEL7 (0x820c0000 + 0x38)---

    SRAM7_MBIST_DELSEL[31..0]    - (RW) MBIST delsel setting of SRAM7

 =====================================================================================*/
#define WF_PLE_TOP_SRAM_MBIST_DELSEL7_SRAM7_MBIST_DELSEL_ADDR  WF_PLE_TOP_SRAM_MBIST_DELSEL7_ADDR
#define WF_PLE_TOP_SRAM_MBIST_DELSEL7_SRAM7_MBIST_DELSEL_MASK  0xFFFFFFFF                // SRAM7_MBIST_DELSEL[31..0]
#define WF_PLE_TOP_SRAM_MBIST_DELSEL7_SRAM7_MBIST_DELSEL_SHFT  0

/* =====================================================================================

  ---SRAM_MBIST_DELSEL8 (0x820c0000 + 0x3c)---

    SRAM8_MBIST_DELSEL[31..0]    - (RW) MBIST delsel setting of SRAM8

 =====================================================================================*/
#define WF_PLE_TOP_SRAM_MBIST_DELSEL8_SRAM8_MBIST_DELSEL_ADDR  WF_PLE_TOP_SRAM_MBIST_DELSEL8_ADDR
#define WF_PLE_TOP_SRAM_MBIST_DELSEL8_SRAM8_MBIST_DELSEL_MASK  0xFFFFFFFF                // SRAM8_MBIST_DELSEL[31..0]
#define WF_PLE_TOP_SRAM_MBIST_DELSEL8_SRAM8_MBIST_DELSEL_SHFT  0

/* =====================================================================================

  ---SRAM_MBIST_DELSEL9 (0x820c0000 + 0x40)---

    SRAM9_MBIST_DELSEL[31..0]    - (RW) MBIST delsel setting of SRAM9

 =====================================================================================*/
#define WF_PLE_TOP_SRAM_MBIST_DELSEL9_SRAM9_MBIST_DELSEL_ADDR  WF_PLE_TOP_SRAM_MBIST_DELSEL9_ADDR
#define WF_PLE_TOP_SRAM_MBIST_DELSEL9_SRAM9_MBIST_DELSEL_MASK  0xFFFFFFFF                // SRAM9_MBIST_DELSEL[31..0]
#define WF_PLE_TOP_SRAM_MBIST_DELSEL9_SRAM9_MBIST_DELSEL_SHFT  0

/* =====================================================================================

  ---SRAM_MBIST_DELSEL10 (0x820c0000 + 0x44)---

    SRAM10_MBIST_DELSEL[31..0]   - (RW) MBIST delsel setting of SRAM10

 =====================================================================================*/
#define WF_PLE_TOP_SRAM_MBIST_DELSEL10_SRAM10_MBIST_DELSEL_ADDR WF_PLE_TOP_SRAM_MBIST_DELSEL10_ADDR
#define WF_PLE_TOP_SRAM_MBIST_DELSEL10_SRAM10_MBIST_DELSEL_MASK 0xFFFFFFFF                // SRAM10_MBIST_DELSEL[31..0]
#define WF_PLE_TOP_SRAM_MBIST_DELSEL10_SRAM10_MBIST_DELSEL_SHFT 0

/* =====================================================================================

  ---SRAM_MBIST_CTRL (0x820c0000 + 0x48)---

    RESERVED0[9..0]              - (RO) Reserved bits
    G1_MBIST_USE_DEFAULT_DELSEL[10] - (RW) Control register for default DELSEL value of group 1 memory
    G2_MBIST_USE_DEFAULT_DELSEL[11] - (RW) Control register for default DELSEL value of group 2 memory
    RESERVED12[31..12]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_SRAM_MBIST_CTRL_G2_MBIST_USE_DEFAULT_DELSEL_ADDR WF_PLE_TOP_SRAM_MBIST_CTRL_ADDR
#define WF_PLE_TOP_SRAM_MBIST_CTRL_G2_MBIST_USE_DEFAULT_DELSEL_MASK 0x00000800                // G2_MBIST_USE_DEFAULT_DELSEL[11]
#define WF_PLE_TOP_SRAM_MBIST_CTRL_G2_MBIST_USE_DEFAULT_DELSEL_SHFT 11
#define WF_PLE_TOP_SRAM_MBIST_CTRL_G1_MBIST_USE_DEFAULT_DELSEL_ADDR WF_PLE_TOP_SRAM_MBIST_CTRL_ADDR
#define WF_PLE_TOP_SRAM_MBIST_CTRL_G1_MBIST_USE_DEFAULT_DELSEL_MASK 0x00000400                // G1_MBIST_USE_DEFAULT_DELSEL[10]
#define WF_PLE_TOP_SRAM_MBIST_CTRL_G1_MBIST_USE_DEFAULT_DELSEL_SHFT 10

/* =====================================================================================

  ---TWT_TX_CTRL0 (0x820c0000 + 0x04c)---

    en_twt_stop_tx_ctrl_0[0]     - (RW) Enable TWT non-acitve period TX control function.
    en_twt_stop_tx_ctrl_1[1]     - (RW) Enable TWT non-acitve period TX control function.
    en_twt_stop_tx_ctrl_2[2]     - (RW) Enable TWT non-acitve period TX control function.
    en_twt_stop_tx_ctrl_3[3]     - (RW) Enable TWT non-acitve period TX control function.
    RESERVED4[31..4]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_TWT_TX_CTRL0_en_twt_stop_tx_ctrl_3_ADDR     WF_PLE_TOP_TWT_TX_CTRL0_ADDR
#define WF_PLE_TOP_TWT_TX_CTRL0_en_twt_stop_tx_ctrl_3_MASK     0x00000008                // en_twt_stop_tx_ctrl_3[3]
#define WF_PLE_TOP_TWT_TX_CTRL0_en_twt_stop_tx_ctrl_3_SHFT     3
#define WF_PLE_TOP_TWT_TX_CTRL0_en_twt_stop_tx_ctrl_2_ADDR     WF_PLE_TOP_TWT_TX_CTRL0_ADDR
#define WF_PLE_TOP_TWT_TX_CTRL0_en_twt_stop_tx_ctrl_2_MASK     0x00000004                // en_twt_stop_tx_ctrl_2[2]
#define WF_PLE_TOP_TWT_TX_CTRL0_en_twt_stop_tx_ctrl_2_SHFT     2
#define WF_PLE_TOP_TWT_TX_CTRL0_en_twt_stop_tx_ctrl_1_ADDR     WF_PLE_TOP_TWT_TX_CTRL0_ADDR
#define WF_PLE_TOP_TWT_TX_CTRL0_en_twt_stop_tx_ctrl_1_MASK     0x00000002                // en_twt_stop_tx_ctrl_1[1]
#define WF_PLE_TOP_TWT_TX_CTRL0_en_twt_stop_tx_ctrl_1_SHFT     1
#define WF_PLE_TOP_TWT_TX_CTRL0_en_twt_stop_tx_ctrl_0_ADDR     WF_PLE_TOP_TWT_TX_CTRL0_ADDR
#define WF_PLE_TOP_TWT_TX_CTRL0_en_twt_stop_tx_ctrl_0_MASK     0x00000001                // en_twt_stop_tx_ctrl_0[0]
#define WF_PLE_TOP_TWT_TX_CTRL0_en_twt_stop_tx_ctrl_0_SHFT     0

/* =====================================================================================

  ---SPL_GEN_CTRL (0x820c0000 + 0x050)---

    EN_PLE_SPL[0]                - (RW) Enable control of PLE generate SPL report function.
    EN_SPL_EMPTY_CH_BYPASS[1]    - (RW) Bypass control of Non-Empty SPL generation when TXCMD queue non-empty.
    EN_SPL_ZERO_STA_BYPASS[2]    - (RW) Bypass control of zero station SPL report generation.
    RESERVED3[19..3]             - (RO) Reserved bits
    EN_PS_CHG_SPL_GEN[20]        - (RW) PS change SPL generation control.
    EN_PS_CHG_CHK_AC_EMPTY[21]   - (RW) Enable control of STA AC queue empty check for PS change SPL generation.
    EN_PS_CHG_CHK_TXCMD_EMPTY[22] - (RW) Enable control of TXCMD queue empty check for PS change SPL generation.
    RESERVED23[31..23]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_SPL_GEN_CTRL_EN_PS_CHG_CHK_TXCMD_EMPTY_ADDR WF_PLE_TOP_SPL_GEN_CTRL_ADDR
#define WF_PLE_TOP_SPL_GEN_CTRL_EN_PS_CHG_CHK_TXCMD_EMPTY_MASK 0x00400000                // EN_PS_CHG_CHK_TXCMD_EMPTY[22]
#define WF_PLE_TOP_SPL_GEN_CTRL_EN_PS_CHG_CHK_TXCMD_EMPTY_SHFT 22
#define WF_PLE_TOP_SPL_GEN_CTRL_EN_PS_CHG_CHK_AC_EMPTY_ADDR    WF_PLE_TOP_SPL_GEN_CTRL_ADDR
#define WF_PLE_TOP_SPL_GEN_CTRL_EN_PS_CHG_CHK_AC_EMPTY_MASK    0x00200000                // EN_PS_CHG_CHK_AC_EMPTY[21]
#define WF_PLE_TOP_SPL_GEN_CTRL_EN_PS_CHG_CHK_AC_EMPTY_SHFT    21
#define WF_PLE_TOP_SPL_GEN_CTRL_EN_PS_CHG_SPL_GEN_ADDR         WF_PLE_TOP_SPL_GEN_CTRL_ADDR
#define WF_PLE_TOP_SPL_GEN_CTRL_EN_PS_CHG_SPL_GEN_MASK         0x00100000                // EN_PS_CHG_SPL_GEN[20]
#define WF_PLE_TOP_SPL_GEN_CTRL_EN_PS_CHG_SPL_GEN_SHFT         20
#define WF_PLE_TOP_SPL_GEN_CTRL_EN_SPL_ZERO_STA_BYPASS_ADDR    WF_PLE_TOP_SPL_GEN_CTRL_ADDR
#define WF_PLE_TOP_SPL_GEN_CTRL_EN_SPL_ZERO_STA_BYPASS_MASK    0x00000004                // EN_SPL_ZERO_STA_BYPASS[2]
#define WF_PLE_TOP_SPL_GEN_CTRL_EN_SPL_ZERO_STA_BYPASS_SHFT    2
#define WF_PLE_TOP_SPL_GEN_CTRL_EN_SPL_EMPTY_CH_BYPASS_ADDR    WF_PLE_TOP_SPL_GEN_CTRL_ADDR
#define WF_PLE_TOP_SPL_GEN_CTRL_EN_SPL_EMPTY_CH_BYPASS_MASK    0x00000002                // EN_SPL_EMPTY_CH_BYPASS[1]
#define WF_PLE_TOP_SPL_GEN_CTRL_EN_SPL_EMPTY_CH_BYPASS_SHFT    1
#define WF_PLE_TOP_SPL_GEN_CTRL_EN_PLE_SPL_ADDR                WF_PLE_TOP_SPL_GEN_CTRL_ADDR
#define WF_PLE_TOP_SPL_GEN_CTRL_EN_PLE_SPL_MASK                0x00000001                // EN_PLE_SPL[0]
#define WF_PLE_TOP_SPL_GEN_CTRL_EN_PLE_SPL_SHFT                0

/* =====================================================================================

  ---EN_UMAC_L1_DCM (0x820c0000 + 0x054)---

    UMAC_DCM_KEEP_HIGH_SPEED[0]  - (RW) UMAC L1 DCM control
    RESERVED1[22..1]             - (RO) Reserved bits
    DCM_IDLE_CNT_DOWN_UNIT[23]   - (RW) UMAC L1 DCM idle count down time unit select.
    DCM_IDLE_CNT_DOWN_VALUE[31..24] - (RW) UMAC L1 DCM idle count down value.

 =====================================================================================*/
#define WF_PLE_TOP_EN_UMAC_L1_DCM_DCM_IDLE_CNT_DOWN_VALUE_ADDR WF_PLE_TOP_EN_UMAC_L1_DCM_ADDR
#define WF_PLE_TOP_EN_UMAC_L1_DCM_DCM_IDLE_CNT_DOWN_VALUE_MASK 0xFF000000                // DCM_IDLE_CNT_DOWN_VALUE[31..24]
#define WF_PLE_TOP_EN_UMAC_L1_DCM_DCM_IDLE_CNT_DOWN_VALUE_SHFT 24
#define WF_PLE_TOP_EN_UMAC_L1_DCM_DCM_IDLE_CNT_DOWN_UNIT_ADDR  WF_PLE_TOP_EN_UMAC_L1_DCM_ADDR
#define WF_PLE_TOP_EN_UMAC_L1_DCM_DCM_IDLE_CNT_DOWN_UNIT_MASK  0x00800000                // DCM_IDLE_CNT_DOWN_UNIT[23]
#define WF_PLE_TOP_EN_UMAC_L1_DCM_DCM_IDLE_CNT_DOWN_UNIT_SHFT  23
#define WF_PLE_TOP_EN_UMAC_L1_DCM_UMAC_DCM_KEEP_HIGH_SPEED_ADDR WF_PLE_TOP_EN_UMAC_L1_DCM_ADDR
#define WF_PLE_TOP_EN_UMAC_L1_DCM_UMAC_DCM_KEEP_HIGH_SPEED_MASK 0x00000001                // UMAC_DCM_KEEP_HIGH_SPEED[0]
#define WF_PLE_TOP_EN_UMAC_L1_DCM_UMAC_DCM_KEEP_HIGH_SPEED_SHFT 0

/* =====================================================================================

  ---PCIE_POWER_CTRL (0x820c0000 + 0x058)---

    DIS_UMAC_PCIE_POWER_CTRL[11..0] - (RW) MAC PCIE power control.
                                     Bit[0] : TXD in Queue & ARB TX start & not pause condition
                                     Bit[1] : PSE RX Data buffer under threshold
                                     Bit[2] : report active
                                     Bit[3] : RX NAV countdown less threshold & TXD in Queue & ARB TX start  & not pause condition
                                     Bit[4] : RX ppdu length large than threshold.
    RESERVED12[30..12]           - (RO) Reserved bits
    EN_UMAC_PCIE_POWER_CTRL_GLO[31] - (RW) MAC PCIE power global control.

 =====================================================================================*/
#define WF_PLE_TOP_PCIE_POWER_CTRL_EN_UMAC_PCIE_POWER_CTRL_GLO_ADDR WF_PLE_TOP_PCIE_POWER_CTRL_ADDR
#define WF_PLE_TOP_PCIE_POWER_CTRL_EN_UMAC_PCIE_POWER_CTRL_GLO_MASK 0x80000000                // EN_UMAC_PCIE_POWER_CTRL_GLO[31]
#define WF_PLE_TOP_PCIE_POWER_CTRL_EN_UMAC_PCIE_POWER_CTRL_GLO_SHFT 31
#define WF_PLE_TOP_PCIE_POWER_CTRL_DIS_UMAC_PCIE_POWER_CTRL_ADDR WF_PLE_TOP_PCIE_POWER_CTRL_ADDR
#define WF_PLE_TOP_PCIE_POWER_CTRL_DIS_UMAC_PCIE_POWER_CTRL_MASK 0x00000FFF                // DIS_UMAC_PCIE_POWER_CTRL[11..0]
#define WF_PLE_TOP_PCIE_POWER_CTRL_DIS_UMAC_PCIE_POWER_CTRL_SHFT 0

/* =====================================================================================

  ---TIMEOUT_CTRL (0x820c0000 + 0x05c)---

    RESERVED0[7..0]              - (RO) Reserved bits
    HOST_REPORT_TO_CTRL[15..8]   - (RW) HOST report timeout control register
    APB_WD_TO_CTRL[23..16]       - (RW) APB pready watch dog timeout control register
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_TIMEOUT_CTRL_APB_WD_TO_CTRL_ADDR            WF_PLE_TOP_TIMEOUT_CTRL_ADDR
#define WF_PLE_TOP_TIMEOUT_CTRL_APB_WD_TO_CTRL_MASK            0x00FF0000                // APB_WD_TO_CTRL[23..16]
#define WF_PLE_TOP_TIMEOUT_CTRL_APB_WD_TO_CTRL_SHFT            16
#define WF_PLE_TOP_TIMEOUT_CTRL_HOST_REPORT_TO_CTRL_ADDR       WF_PLE_TOP_TIMEOUT_CTRL_ADDR
#define WF_PLE_TOP_TIMEOUT_CTRL_HOST_REPORT_TO_CTRL_MASK       0x0000FF00                // HOST_REPORT_TO_CTRL[15..8]
#define WF_PLE_TOP_TIMEOUT_CTRL_HOST_REPORT_TO_CTRL_SHFT       8

/* =====================================================================================

  ---PLE_FUNC_CTRL_0 (0x820c0000 + 0x060)---

    MACTX_REQ_DEASSERT[0]        - (RW) Enable of DeAsser MACTX REQ.(Normal operation must be zero.)
    MACTX_ABORT_DEASSERT[1]      - (RW) Enable of DeAsser MACTX ABORT.(Normal operation must be zero.)
    MPDU_DONE_CNT_IN_NO_TX_REQ[2] - (RW) MPDU done mode for LMAC no TX request
    MPDU_DONE_CNT_IN_NO_ADD[3]   - (RW) MPDU done mode for LMAC no add
    ACK_LMAC_NO_FID_ADD[4]       - (RW) MACTX ack mode for LMAC no add any fid for TX
    RESERVED5[5]                 - (RO) Reserved bits
    DIS_STA_RLS_TO_1F[6]         - (RW) Release port setting of disable STA function
    RESERVED7[7]                 - (RO) Reserved bits
    MACTX_REQ_ASSERT[8]          - (RW) Enable of Asser MACTX REQ.(Normal operation must be zero.)
    MACTX_ABORT_ASSERT[9]        - (RW) Enable of Asser MACTX ABORT.(Normal operation must be zero.)
    RESERVED10[21..10]           - (RO) Reserved bits
    DIS_AUTORATE_TXP_REQ[22]     - (RW) Disable auto rate TXP request function
    LATER_PKT_PRE_CUT_1US[23]    - (RW) Pre cut 1us air time for later packet.
    TXP_REQ_CNTDOWN_TH[27..24]   - (RW) Threshold of air time count down for TXP request
    TXP_REQ_HSPEED_DL_NUM[29..28] - (RW) Packet number of high speed TXP request issue, by pre-cut more micro-second
    TXP_REQ_HSPEED_CUT_US[31..30] - (RW) Number of pre-cut micro-second for high speed packet

 =====================================================================================*/
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_TXP_REQ_HSPEED_CUT_US_ADDR  WF_PLE_TOP_PLE_FUNC_CTRL_0_ADDR
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_TXP_REQ_HSPEED_CUT_US_MASK  0xC0000000                // TXP_REQ_HSPEED_CUT_US[31..30]
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_TXP_REQ_HSPEED_CUT_US_SHFT  30
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_TXP_REQ_HSPEED_DL_NUM_ADDR  WF_PLE_TOP_PLE_FUNC_CTRL_0_ADDR
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_TXP_REQ_HSPEED_DL_NUM_MASK  0x30000000                // TXP_REQ_HSPEED_DL_NUM[29..28]
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_TXP_REQ_HSPEED_DL_NUM_SHFT  28
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_TXP_REQ_CNTDOWN_TH_ADDR     WF_PLE_TOP_PLE_FUNC_CTRL_0_ADDR
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_TXP_REQ_CNTDOWN_TH_MASK     0x0F000000                // TXP_REQ_CNTDOWN_TH[27..24]
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_TXP_REQ_CNTDOWN_TH_SHFT     24
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_LATER_PKT_PRE_CUT_1US_ADDR  WF_PLE_TOP_PLE_FUNC_CTRL_0_ADDR
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_LATER_PKT_PRE_CUT_1US_MASK  0x00800000                // LATER_PKT_PRE_CUT_1US[23]
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_LATER_PKT_PRE_CUT_1US_SHFT  23
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_DIS_AUTORATE_TXP_REQ_ADDR   WF_PLE_TOP_PLE_FUNC_CTRL_0_ADDR
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_DIS_AUTORATE_TXP_REQ_MASK   0x00400000                // DIS_AUTORATE_TXP_REQ[22]
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_DIS_AUTORATE_TXP_REQ_SHFT   22
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_MACTX_ABORT_ASSERT_ADDR     WF_PLE_TOP_PLE_FUNC_CTRL_0_ADDR
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_MACTX_ABORT_ASSERT_MASK     0x00000200                // MACTX_ABORT_ASSERT[9]
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_MACTX_ABORT_ASSERT_SHFT     9
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_MACTX_REQ_ASSERT_ADDR       WF_PLE_TOP_PLE_FUNC_CTRL_0_ADDR
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_MACTX_REQ_ASSERT_MASK       0x00000100                // MACTX_REQ_ASSERT[8]
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_MACTX_REQ_ASSERT_SHFT       8
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_DIS_STA_RLS_TO_1F_ADDR      WF_PLE_TOP_PLE_FUNC_CTRL_0_ADDR
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_DIS_STA_RLS_TO_1F_MASK      0x00000040                // DIS_STA_RLS_TO_1F[6]
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_DIS_STA_RLS_TO_1F_SHFT      6
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_ACK_LMAC_NO_FID_ADD_ADDR    WF_PLE_TOP_PLE_FUNC_CTRL_0_ADDR
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_ACK_LMAC_NO_FID_ADD_MASK    0x00000010                // ACK_LMAC_NO_FID_ADD[4]
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_ACK_LMAC_NO_FID_ADD_SHFT    4
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_MPDU_DONE_CNT_IN_NO_ADD_ADDR WF_PLE_TOP_PLE_FUNC_CTRL_0_ADDR
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_MPDU_DONE_CNT_IN_NO_ADD_MASK 0x00000008                // MPDU_DONE_CNT_IN_NO_ADD[3]
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_MPDU_DONE_CNT_IN_NO_ADD_SHFT 3
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_MPDU_DONE_CNT_IN_NO_TX_REQ_ADDR WF_PLE_TOP_PLE_FUNC_CTRL_0_ADDR
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_MPDU_DONE_CNT_IN_NO_TX_REQ_MASK 0x00000004                // MPDU_DONE_CNT_IN_NO_TX_REQ[2]
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_MPDU_DONE_CNT_IN_NO_TX_REQ_SHFT 2
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_MACTX_ABORT_DEASSERT_ADDR   WF_PLE_TOP_PLE_FUNC_CTRL_0_ADDR
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_MACTX_ABORT_DEASSERT_MASK   0x00000002                // MACTX_ABORT_DEASSERT[1]
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_MACTX_ABORT_DEASSERT_SHFT   1
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_MACTX_REQ_DEASSERT_ADDR     WF_PLE_TOP_PLE_FUNC_CTRL_0_ADDR
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_MACTX_REQ_DEASSERT_MASK     0x00000001                // MACTX_REQ_DEASSERT[0]
#define WF_PLE_TOP_PLE_FUNC_CTRL_0_MACTX_REQ_DEASSERT_SHFT     0

/* =====================================================================================

  ---PLE_FUNC_CTRL_1 (0x820c0000 + 0x064)---

    RESERVED0[8..0]              - (RO) Reserved bits
    IGNR_DOUBLE_RLS_REQ[9]       - (RW) Enable of ignore double release request.
    RESERVED10[21..10]           - (RO) Reserved bits
    PREDL_REQ_NORMAL_PRI[22]     - (RW) Pre-download TXP request priority control
    RESERVED23[29..23]           - (RO) Reserved bits
    DIS_CPU_MACTX_FL_HIT_AVOID[30] - (RW) Disable of CPU/MACTX FL hit avoid function.
    RESERVED31[31]               - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_PLE_FUNC_CTRL_1_DIS_CPU_MACTX_FL_HIT_AVOID_ADDR WF_PLE_TOP_PLE_FUNC_CTRL_1_ADDR
#define WF_PLE_TOP_PLE_FUNC_CTRL_1_DIS_CPU_MACTX_FL_HIT_AVOID_MASK 0x40000000                // DIS_CPU_MACTX_FL_HIT_AVOID[30]
#define WF_PLE_TOP_PLE_FUNC_CTRL_1_DIS_CPU_MACTX_FL_HIT_AVOID_SHFT 30
#define WF_PLE_TOP_PLE_FUNC_CTRL_1_PREDL_REQ_NORMAL_PRI_ADDR   WF_PLE_TOP_PLE_FUNC_CTRL_1_ADDR
#define WF_PLE_TOP_PLE_FUNC_CTRL_1_PREDL_REQ_NORMAL_PRI_MASK   0x00400000                // PREDL_REQ_NORMAL_PRI[22]
#define WF_PLE_TOP_PLE_FUNC_CTRL_1_PREDL_REQ_NORMAL_PRI_SHFT   22
#define WF_PLE_TOP_PLE_FUNC_CTRL_1_IGNR_DOUBLE_RLS_REQ_ADDR    WF_PLE_TOP_PLE_FUNC_CTRL_1_ADDR
#define WF_PLE_TOP_PLE_FUNC_CTRL_1_IGNR_DOUBLE_RLS_REQ_MASK    0x00000200                // IGNR_DOUBLE_RLS_REQ[9]
#define WF_PLE_TOP_PLE_FUNC_CTRL_1_IGNR_DOUBLE_RLS_REQ_SHFT    9

/* =====================================================================================

  ---PORT_SER_CTRL (0x820c0000 + 0x06c)---

    EN_HIF_PORT_ALLOC_BLOCKING[0] - (RW) Enable HIF/AMSDU port allocate operation blocking.
    EN_CPU_PORT_ALLOC_BLOCKING[1] - (RW) Enable CPU port allocate operation blocking.
    EN_WF_PORT_ALLOC_BLOCKING[2] - (RW) Enable LMAC port allocate operation blocking.
    RESERVED3[7..3]              - (RO) Reserved bits
    EN_HIF_PORT_D_OPR_BLOCKING[8] - (RW) Enable HIF/AMSDU/MDP/PREDL port data operation blocking.
    EN_CPU_PORT_D_OPR_BLOCKING[9] - (RW) Enable CPU port data operation blocking.
    EN_WF_PORT_D_OPR_BLOCKING[10] - (RW) Enable LMAC port data operation blocking.
    RESERVED11[15..11]           - (RO) Reserved bits
    EN_HIF_PORT_Q_OPR_BLOCKING[16] - (RW) Enable HIF/AMSDU port queue operation blocking.
    EN_CPU_PORT_Q_OPR_BLOCKING[17] - (RW) Enable CPU port queue operation blocking.
    EN_WF_PORT_Q_OPR_BLOCKING[18] - (RW) Enable LMAC port queue operation blocking.
    RESERVED19[31..19]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_PORT_SER_CTRL_EN_WF_PORT_Q_OPR_BLOCKING_ADDR WF_PLE_TOP_PORT_SER_CTRL_ADDR
#define WF_PLE_TOP_PORT_SER_CTRL_EN_WF_PORT_Q_OPR_BLOCKING_MASK 0x00040000                // EN_WF_PORT_Q_OPR_BLOCKING[18]
#define WF_PLE_TOP_PORT_SER_CTRL_EN_WF_PORT_Q_OPR_BLOCKING_SHFT 18
#define WF_PLE_TOP_PORT_SER_CTRL_EN_CPU_PORT_Q_OPR_BLOCKING_ADDR WF_PLE_TOP_PORT_SER_CTRL_ADDR
#define WF_PLE_TOP_PORT_SER_CTRL_EN_CPU_PORT_Q_OPR_BLOCKING_MASK 0x00020000                // EN_CPU_PORT_Q_OPR_BLOCKING[17]
#define WF_PLE_TOP_PORT_SER_CTRL_EN_CPU_PORT_Q_OPR_BLOCKING_SHFT 17
#define WF_PLE_TOP_PORT_SER_CTRL_EN_HIF_PORT_Q_OPR_BLOCKING_ADDR WF_PLE_TOP_PORT_SER_CTRL_ADDR
#define WF_PLE_TOP_PORT_SER_CTRL_EN_HIF_PORT_Q_OPR_BLOCKING_MASK 0x00010000                // EN_HIF_PORT_Q_OPR_BLOCKING[16]
#define WF_PLE_TOP_PORT_SER_CTRL_EN_HIF_PORT_Q_OPR_BLOCKING_SHFT 16
#define WF_PLE_TOP_PORT_SER_CTRL_EN_WF_PORT_D_OPR_BLOCKING_ADDR WF_PLE_TOP_PORT_SER_CTRL_ADDR
#define WF_PLE_TOP_PORT_SER_CTRL_EN_WF_PORT_D_OPR_BLOCKING_MASK 0x00000400                // EN_WF_PORT_D_OPR_BLOCKING[10]
#define WF_PLE_TOP_PORT_SER_CTRL_EN_WF_PORT_D_OPR_BLOCKING_SHFT 10
#define WF_PLE_TOP_PORT_SER_CTRL_EN_CPU_PORT_D_OPR_BLOCKING_ADDR WF_PLE_TOP_PORT_SER_CTRL_ADDR
#define WF_PLE_TOP_PORT_SER_CTRL_EN_CPU_PORT_D_OPR_BLOCKING_MASK 0x00000200                // EN_CPU_PORT_D_OPR_BLOCKING[9]
#define WF_PLE_TOP_PORT_SER_CTRL_EN_CPU_PORT_D_OPR_BLOCKING_SHFT 9
#define WF_PLE_TOP_PORT_SER_CTRL_EN_HIF_PORT_D_OPR_BLOCKING_ADDR WF_PLE_TOP_PORT_SER_CTRL_ADDR
#define WF_PLE_TOP_PORT_SER_CTRL_EN_HIF_PORT_D_OPR_BLOCKING_MASK 0x00000100                // EN_HIF_PORT_D_OPR_BLOCKING[8]
#define WF_PLE_TOP_PORT_SER_CTRL_EN_HIF_PORT_D_OPR_BLOCKING_SHFT 8
#define WF_PLE_TOP_PORT_SER_CTRL_EN_WF_PORT_ALLOC_BLOCKING_ADDR WF_PLE_TOP_PORT_SER_CTRL_ADDR
#define WF_PLE_TOP_PORT_SER_CTRL_EN_WF_PORT_ALLOC_BLOCKING_MASK 0x00000004                // EN_WF_PORT_ALLOC_BLOCKING[2]
#define WF_PLE_TOP_PORT_SER_CTRL_EN_WF_PORT_ALLOC_BLOCKING_SHFT 2
#define WF_PLE_TOP_PORT_SER_CTRL_EN_CPU_PORT_ALLOC_BLOCKING_ADDR WF_PLE_TOP_PORT_SER_CTRL_ADDR
#define WF_PLE_TOP_PORT_SER_CTRL_EN_CPU_PORT_ALLOC_BLOCKING_MASK 0x00000002                // EN_CPU_PORT_ALLOC_BLOCKING[1]
#define WF_PLE_TOP_PORT_SER_CTRL_EN_CPU_PORT_ALLOC_BLOCKING_SHFT 1
#define WF_PLE_TOP_PORT_SER_CTRL_EN_HIF_PORT_ALLOC_BLOCKING_ADDR WF_PLE_TOP_PORT_SER_CTRL_ADDR
#define WF_PLE_TOP_PORT_SER_CTRL_EN_HIF_PORT_ALLOC_BLOCKING_MASK 0x00000001                // EN_HIF_PORT_ALLOC_BLOCKING[0]
#define WF_PLE_TOP_PORT_SER_CTRL_EN_HIF_PORT_ALLOC_BLOCKING_SHFT 0

/* =====================================================================================

  ---MACTX_SER_CTRL (0x820c0000 + 0x070)---

    EN_MACTX_G0_BLOCKING[0]      - (RW) Enable MACTX group  0 operation blocking.
    RESERVED1[7..1]              - (RO) Reserved bits
    EN_MACTX_G1_BLOCKING[8]      - (RW) Enable MACTX group  1 operation blocking.
    RESERVED9[15..9]             - (RO) Reserved bits
    EN_MACTX_G2_BLOCKING[16]     - (RW) Enable MACTX group 2 operation blocking.
    RESERVED17[23..17]           - (RO) Reserved bits
    EN_MACTX_G3_BLOCKING[24]     - (RW) Enable MACTX group 3 operation blocking.
    RESERVED25[31..25]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_MACTX_SER_CTRL_EN_MACTX_G3_BLOCKING_ADDR    WF_PLE_TOP_MACTX_SER_CTRL_ADDR
#define WF_PLE_TOP_MACTX_SER_CTRL_EN_MACTX_G3_BLOCKING_MASK    0x01000000                // EN_MACTX_G3_BLOCKING[24]
#define WF_PLE_TOP_MACTX_SER_CTRL_EN_MACTX_G3_BLOCKING_SHFT    24
#define WF_PLE_TOP_MACTX_SER_CTRL_EN_MACTX_G2_BLOCKING_ADDR    WF_PLE_TOP_MACTX_SER_CTRL_ADDR
#define WF_PLE_TOP_MACTX_SER_CTRL_EN_MACTX_G2_BLOCKING_MASK    0x00010000                // EN_MACTX_G2_BLOCKING[16]
#define WF_PLE_TOP_MACTX_SER_CTRL_EN_MACTX_G2_BLOCKING_SHFT    16
#define WF_PLE_TOP_MACTX_SER_CTRL_EN_MACTX_G1_BLOCKING_ADDR    WF_PLE_TOP_MACTX_SER_CTRL_ADDR
#define WF_PLE_TOP_MACTX_SER_CTRL_EN_MACTX_G1_BLOCKING_MASK    0x00000100                // EN_MACTX_G1_BLOCKING[8]
#define WF_PLE_TOP_MACTX_SER_CTRL_EN_MACTX_G1_BLOCKING_SHFT    8
#define WF_PLE_TOP_MACTX_SER_CTRL_EN_MACTX_G0_BLOCKING_ADDR    WF_PLE_TOP_MACTX_SER_CTRL_ADDR
#define WF_PLE_TOP_MACTX_SER_CTRL_EN_MACTX_G0_BLOCKING_MASK    0x00000001                // EN_MACTX_G0_BLOCKING[0]
#define WF_PLE_TOP_MACTX_SER_CTRL_EN_MACTX_G0_BLOCKING_SHFT    0

/* =====================================================================================

  ---RELEASE_CTRL_4 (0x820c0000 + 0x78)---

    NOR_BN2_RLS_QID[6..0]        - (RW) Normal BN2 TX packet release DST QID
                                     Note: This setting only support BN2 FuncQ. BN2 AC Queue would follow NOR_RLS_QID setting
    RESERVED7[7]                 - (RO) Reserved bits
    NOR_BN2_RLS_PID[9..8]        - (RW) Normal BN2 TX packet release DST PID
                                     Note: This setting only support BN2 FuncQ. BN2 AC Queue would follow NOR_RLS_PID setting
    RESERVED10[15..10]           - (RO) Reserved bits
    BCN2_RLS_QID[22..16]         - (RW) Beacon 2 packet release DST QID
    RESERVED23[23]               - (RO) Reserved bits
    BCN2_RLS_PID[25..24]         - (RW) Beacon 2 packet release DST PID
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_RELEASE_CTRL_4_BCN2_RLS_PID_ADDR            WF_PLE_TOP_RELEASE_CTRL_4_ADDR
#define WF_PLE_TOP_RELEASE_CTRL_4_BCN2_RLS_PID_MASK            0x03000000                // BCN2_RLS_PID[25..24]
#define WF_PLE_TOP_RELEASE_CTRL_4_BCN2_RLS_PID_SHFT            24
#define WF_PLE_TOP_RELEASE_CTRL_4_BCN2_RLS_QID_ADDR            WF_PLE_TOP_RELEASE_CTRL_4_ADDR
#define WF_PLE_TOP_RELEASE_CTRL_4_BCN2_RLS_QID_MASK            0x007F0000                // BCN2_RLS_QID[22..16]
#define WF_PLE_TOP_RELEASE_CTRL_4_BCN2_RLS_QID_SHFT            16
#define WF_PLE_TOP_RELEASE_CTRL_4_NOR_BN2_RLS_PID_ADDR         WF_PLE_TOP_RELEASE_CTRL_4_ADDR
#define WF_PLE_TOP_RELEASE_CTRL_4_NOR_BN2_RLS_PID_MASK         0x00000300                // NOR_BN2_RLS_PID[9..8]
#define WF_PLE_TOP_RELEASE_CTRL_4_NOR_BN2_RLS_PID_SHFT         8
#define WF_PLE_TOP_RELEASE_CTRL_4_NOR_BN2_RLS_QID_ADDR         WF_PLE_TOP_RELEASE_CTRL_4_ADDR
#define WF_PLE_TOP_RELEASE_CTRL_4_NOR_BN2_RLS_QID_MASK         0x0000007F                // NOR_BN2_RLS_QID[6..0]
#define WF_PLE_TOP_RELEASE_CTRL_4_NOR_BN2_RLS_QID_SHFT         0

/* =====================================================================================

  ---RELEASE_CTRL_5 (0x820c0000 + 0x7c)---

    TXCMD2_RLS_QID[6..0]         - (RW) TXCMD 2 packet release DST QID
    RESERVED7[7]                 - (RO) Reserved bits
    TXCMD2_RLS_PID[9..8]         - (RW) TXCMD 2 packet release DST PID
    RESERVED10[31..10]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_RELEASE_CTRL_5_TXCMD2_RLS_PID_ADDR          WF_PLE_TOP_RELEASE_CTRL_5_ADDR
#define WF_PLE_TOP_RELEASE_CTRL_5_TXCMD2_RLS_PID_MASK          0x00000300                // TXCMD2_RLS_PID[9..8]
#define WF_PLE_TOP_RELEASE_CTRL_5_TXCMD2_RLS_PID_SHFT          8
#define WF_PLE_TOP_RELEASE_CTRL_5_TXCMD2_RLS_QID_ADDR          WF_PLE_TOP_RELEASE_CTRL_5_ADDR
#define WF_PLE_TOP_RELEASE_CTRL_5_TXCMD2_RLS_QID_MASK          0x0000007F                // TXCMD2_RLS_QID[6..0]
#define WF_PLE_TOP_RELEASE_CTRL_5_TXCMD2_RLS_QID_SHFT          0

/* =====================================================================================

  ---INT_N9_EN_MASK (0x820c0000 + 0x80)---

    EN_CPU_Q0_NE[0]              - (RW) Enable control of interrupt for CPU queue 0 not empty
    EN_CPU_Q1_NE[1]              - (RW) Enable control of interrupt for CPU queue 1 not empty
    EN_CPU_Q2_NE[2]              - (RW) Enable control of interrupt for CPU queue 2 not empty
    EN_CPU_Q3_NE[3]              - (RW) Enable control of interrupt for CPU queue 3 not empty
    RESERVED4[15..4]             - (RO) Reserved bits
    EN_TOGGLE_INT[16]            - (RW) Enable control of interrupt for data toggle of N9 toggle register (0xf0)
    EN_SPL_CMD_FIFO_FULL_INT[17] - (RW) Enable control of interrupt for SPL CMD FIFO full
    EN_UMAC_SYSRAM_OUTRAN_ERROR_INT[18] - (RW) Enable control of interrupt for UMAC SYSRAM out range error
    EN_PS_CHG_CMD_FIFO_FULL_INT[19] - (RW) Enable control of interrupt for PS change command FIFO full
    EN_AC_NONEMPTY_INT[20]       - (RW) Enable control of AC queue empty fail interrupt
    EN_AC_EMPTY_INT[21]          - (RW) Enable control of AC queue empty raise interrupt
    EN_AC_ENQ_LMAC_INT[22]       - (RW) Enable control of AC enqueue interrupt
    RESERVED23[23]               - (RO) Reserved bits
    EN_DBDC0_NONEMPTY_INT[24]    - (RW) Enable control of DBDC0 queue empty fail interrupt
    EN_DBDC0_EMPTY_INT[25]       - (RW) Enable control of DBDC0 queue empty raise interrupt
    EN_DBDC0_ENQ_LMAC_INT[26]    - (RW) Enable control of DBDC0 enqueue interrupt
    RESERVED27[27]               - (RO) Reserved bits
    EN_DBDC1_NONEMPTY_INT[28]    - (RW) Enable control of DBDC1 queue empty fail interrupt
    EN_DBDC1_EMPTY_INT[29]       - (RW) Enable control of DBDC1 queue empty raise interrupt
    EN_DBDC1_ENQ_LMAC_INT[30]    - (RW) Enable control of DBDC1 enqueue interrupt
    RESERVED31[31]               - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_DBDC1_ENQ_LMAC_INT_ADDR   WF_PLE_TOP_INT_N9_EN_MASK_ADDR
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_DBDC1_ENQ_LMAC_INT_MASK   0x40000000                // EN_DBDC1_ENQ_LMAC_INT[30]
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_DBDC1_ENQ_LMAC_INT_SHFT   30
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_DBDC1_EMPTY_INT_ADDR      WF_PLE_TOP_INT_N9_EN_MASK_ADDR
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_DBDC1_EMPTY_INT_MASK      0x20000000                // EN_DBDC1_EMPTY_INT[29]
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_DBDC1_EMPTY_INT_SHFT      29
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_DBDC1_NONEMPTY_INT_ADDR   WF_PLE_TOP_INT_N9_EN_MASK_ADDR
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_DBDC1_NONEMPTY_INT_MASK   0x10000000                // EN_DBDC1_NONEMPTY_INT[28]
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_DBDC1_NONEMPTY_INT_SHFT   28
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_DBDC0_ENQ_LMAC_INT_ADDR   WF_PLE_TOP_INT_N9_EN_MASK_ADDR
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_DBDC0_ENQ_LMAC_INT_MASK   0x04000000                // EN_DBDC0_ENQ_LMAC_INT[26]
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_DBDC0_ENQ_LMAC_INT_SHFT   26
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_DBDC0_EMPTY_INT_ADDR      WF_PLE_TOP_INT_N9_EN_MASK_ADDR
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_DBDC0_EMPTY_INT_MASK      0x02000000                // EN_DBDC0_EMPTY_INT[25]
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_DBDC0_EMPTY_INT_SHFT      25
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_DBDC0_NONEMPTY_INT_ADDR   WF_PLE_TOP_INT_N9_EN_MASK_ADDR
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_DBDC0_NONEMPTY_INT_MASK   0x01000000                // EN_DBDC0_NONEMPTY_INT[24]
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_DBDC0_NONEMPTY_INT_SHFT   24
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_AC_ENQ_LMAC_INT_ADDR      WF_PLE_TOP_INT_N9_EN_MASK_ADDR
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_AC_ENQ_LMAC_INT_MASK      0x00400000                // EN_AC_ENQ_LMAC_INT[22]
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_AC_ENQ_LMAC_INT_SHFT      22
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_AC_EMPTY_INT_ADDR         WF_PLE_TOP_INT_N9_EN_MASK_ADDR
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_AC_EMPTY_INT_MASK         0x00200000                // EN_AC_EMPTY_INT[21]
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_AC_EMPTY_INT_SHFT         21
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_AC_NONEMPTY_INT_ADDR      WF_PLE_TOP_INT_N9_EN_MASK_ADDR
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_AC_NONEMPTY_INT_MASK      0x00100000                // EN_AC_NONEMPTY_INT[20]
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_AC_NONEMPTY_INT_SHFT      20
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_PS_CHG_CMD_FIFO_FULL_INT_ADDR WF_PLE_TOP_INT_N9_EN_MASK_ADDR
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_PS_CHG_CMD_FIFO_FULL_INT_MASK 0x00080000                // EN_PS_CHG_CMD_FIFO_FULL_INT[19]
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_PS_CHG_CMD_FIFO_FULL_INT_SHFT 19
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_UMAC_SYSRAM_OUTRAN_ERROR_INT_ADDR WF_PLE_TOP_INT_N9_EN_MASK_ADDR
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_UMAC_SYSRAM_OUTRAN_ERROR_INT_MASK 0x00040000                // EN_UMAC_SYSRAM_OUTRAN_ERROR_INT[18]
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_UMAC_SYSRAM_OUTRAN_ERROR_INT_SHFT 18
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_SPL_CMD_FIFO_FULL_INT_ADDR WF_PLE_TOP_INT_N9_EN_MASK_ADDR
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_SPL_CMD_FIFO_FULL_INT_MASK 0x00020000                // EN_SPL_CMD_FIFO_FULL_INT[17]
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_SPL_CMD_FIFO_FULL_INT_SHFT 17
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_TOGGLE_INT_ADDR           WF_PLE_TOP_INT_N9_EN_MASK_ADDR
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_TOGGLE_INT_MASK           0x00010000                // EN_TOGGLE_INT[16]
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_TOGGLE_INT_SHFT           16
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_CPU_Q3_NE_ADDR            WF_PLE_TOP_INT_N9_EN_MASK_ADDR
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_CPU_Q3_NE_MASK            0x00000008                // EN_CPU_Q3_NE[3]
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_CPU_Q3_NE_SHFT            3
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_CPU_Q2_NE_ADDR            WF_PLE_TOP_INT_N9_EN_MASK_ADDR
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_CPU_Q2_NE_MASK            0x00000004                // EN_CPU_Q2_NE[2]
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_CPU_Q2_NE_SHFT            2
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_CPU_Q1_NE_ADDR            WF_PLE_TOP_INT_N9_EN_MASK_ADDR
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_CPU_Q1_NE_MASK            0x00000002                // EN_CPU_Q1_NE[1]
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_CPU_Q1_NE_SHFT            1
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_CPU_Q0_NE_ADDR            WF_PLE_TOP_INT_N9_EN_MASK_ADDR
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_CPU_Q0_NE_MASK            0x00000001                // EN_CPU_Q0_NE[0]
#define WF_PLE_TOP_INT_N9_EN_MASK_EN_CPU_Q0_NE_SHFT            0

/* =====================================================================================

  ---INT_N9_ERR_MASK (0x820c0000 + 0x84)---

    EN_Q_CMD_ERR_P0[0]           - (RW) Enables queue command error interrupt status of port 0
    EN_Q_CMD_ERR_P1[1]           - (RW) Enables queue command error interrupt status of port 1
    EN_Q_CMD_ERR_P2[2]           - (RW) Enables queue command error interrupt status of port 2
    EN_PAGE_UDF_P0[3]            - (RW) Enables page underflow interrupt status of port 0
    EN_PAGE_UDF_P1[4]            - (RW) Enables page underflow interrupt status of port 1
    EN_PAGE_UDF_P2[5]            - (RW) Enables page underflow interrupt status of port 2
    EN_DOUBLE_RLS_ERR[6]         - (RW) Enable double release error interrupt.
    EN_MDP_D_OPER_ERR[7]         - (RW) Enable MDP data operation error interrupt.
    EN_MDP_HANG_ERR[8]           - (RW) Enable MDP FSM hang error interrupt.
    RESERVED9[9]                 - (RO) Reserved bits
    EN_DATA_OPER_ERR_P0[10]      - (RW) Enables data operation error of port 0
    EN_DATA_OPER_ERR_P1[11]      - (RW) Enables data operation error of port 1
    EN_DATA_OPER_ERR_P2[12]      - (RW) Enables data operation error of port 2
    EN_FL_HANG_ERR[13]           - (RW) Enables frame link FSM hang error interrupt
    EN_PL_HANG_ERR[14]           - (RW) Enables page link FSM hang error interrupt
    EN_HIF_HANG_ERR[15]          - (RW) Enables HIF port FSM hang error interrupt
    EN_CPU_HANG_ERR[16]          - (RW) Enables CPU port FSM hang error interrupt
    EN_LMAC_HANG_ERR[17]         - (RW) Enables LMAC port FSM hang error interrupt
    EN_FREE_HEAD_TAIL_ERR[18]    - (RW) Enable free head/tail error interrupt.
    EN_QSTRUCT_ERR[19]           - (RW) Enable queue struct data error interrupt.
    EN_BN0_MACTX_HANG_ERR[20]    - (RW) Enable BN0 MACTX Ctrl FSM Hang error interrupt.
    EN_BN1_MACTX_HANG_ERR[21]    - (RW) Enable BN1 MACTX Ctrl FSM Hang error interrupt.
    EN_BN0_TXCMD_HANG_ERR[22]    - (RW) Enable BN0 TXCMD Ctrl FSM Hang error interrupt.
    EN_BN1_TXCMD_HANG_ERR[23]    - (RW) Enable BN1 TXCMD Ctrl FSM Hang error interrupt.
    EN_DRR_SRCH_DBDC0_ERR[24]    - (RW) Enable DRR DBDC0 sta search error interrupt.
    EN_DRR_SRCH_DBDC1_ERR[25]    - (RW) Enable DRR DBDC1 sta search error interrupt.
    EN_DRR_FL_ERR[26]            - (RW) Enable DRR forward link access error interrupt.
    EN_DRR_BL_ERR[27]            - (RW) Enable DRR backward link access error interrupt.
    EN_DRR_RL_ERR[28]            - (RW) Enable DRR relay link access error interrupt.
    EN_DRR_CHRG_STA_ERR[29]      - (RW) Enable DRR wlanid error when charge interrupt.
    EN_DRR_STA_WLANID_ERR[30]    - (RW) Enable DRR wlanid error when add/remove sta interrupt.
    EN_DRR_STA_WMMID_ERR[31]     - (RW) Enable DRR wmmid error when add/remove sta interrupt.

 =====================================================================================*/
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DRR_STA_WMMID_ERR_ADDR   WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DRR_STA_WMMID_ERR_MASK   0x80000000                // EN_DRR_STA_WMMID_ERR[31]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DRR_STA_WMMID_ERR_SHFT   31
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DRR_STA_WLANID_ERR_ADDR  WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DRR_STA_WLANID_ERR_MASK  0x40000000                // EN_DRR_STA_WLANID_ERR[30]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DRR_STA_WLANID_ERR_SHFT  30
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DRR_CHRG_STA_ERR_ADDR    WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DRR_CHRG_STA_ERR_MASK    0x20000000                // EN_DRR_CHRG_STA_ERR[29]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DRR_CHRG_STA_ERR_SHFT    29
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DRR_RL_ERR_ADDR          WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DRR_RL_ERR_MASK          0x10000000                // EN_DRR_RL_ERR[28]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DRR_RL_ERR_SHFT          28
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DRR_BL_ERR_ADDR          WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DRR_BL_ERR_MASK          0x08000000                // EN_DRR_BL_ERR[27]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DRR_BL_ERR_SHFT          27
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DRR_FL_ERR_ADDR          WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DRR_FL_ERR_MASK          0x04000000                // EN_DRR_FL_ERR[26]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DRR_FL_ERR_SHFT          26
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DRR_SRCH_DBDC1_ERR_ADDR  WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DRR_SRCH_DBDC1_ERR_MASK  0x02000000                // EN_DRR_SRCH_DBDC1_ERR[25]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DRR_SRCH_DBDC1_ERR_SHFT  25
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DRR_SRCH_DBDC0_ERR_ADDR  WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DRR_SRCH_DBDC0_ERR_MASK  0x01000000                // EN_DRR_SRCH_DBDC0_ERR[24]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DRR_SRCH_DBDC0_ERR_SHFT  24
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_BN1_TXCMD_HANG_ERR_ADDR  WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_BN1_TXCMD_HANG_ERR_MASK  0x00800000                // EN_BN1_TXCMD_HANG_ERR[23]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_BN1_TXCMD_HANG_ERR_SHFT  23
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_BN0_TXCMD_HANG_ERR_ADDR  WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_BN0_TXCMD_HANG_ERR_MASK  0x00400000                // EN_BN0_TXCMD_HANG_ERR[22]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_BN0_TXCMD_HANG_ERR_SHFT  22
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_BN1_MACTX_HANG_ERR_ADDR  WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_BN1_MACTX_HANG_ERR_MASK  0x00200000                // EN_BN1_MACTX_HANG_ERR[21]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_BN1_MACTX_HANG_ERR_SHFT  21
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_BN0_MACTX_HANG_ERR_ADDR  WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_BN0_MACTX_HANG_ERR_MASK  0x00100000                // EN_BN0_MACTX_HANG_ERR[20]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_BN0_MACTX_HANG_ERR_SHFT  20
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_QSTRUCT_ERR_ADDR         WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_QSTRUCT_ERR_MASK         0x00080000                // EN_QSTRUCT_ERR[19]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_QSTRUCT_ERR_SHFT         19
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_FREE_HEAD_TAIL_ERR_ADDR  WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_FREE_HEAD_TAIL_ERR_MASK  0x00040000                // EN_FREE_HEAD_TAIL_ERR[18]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_FREE_HEAD_TAIL_ERR_SHFT  18
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_LMAC_HANG_ERR_ADDR       WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_LMAC_HANG_ERR_MASK       0x00020000                // EN_LMAC_HANG_ERR[17]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_LMAC_HANG_ERR_SHFT       17
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_CPU_HANG_ERR_ADDR        WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_CPU_HANG_ERR_MASK        0x00010000                // EN_CPU_HANG_ERR[16]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_CPU_HANG_ERR_SHFT        16
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_HIF_HANG_ERR_ADDR        WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_HIF_HANG_ERR_MASK        0x00008000                // EN_HIF_HANG_ERR[15]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_HIF_HANG_ERR_SHFT        15
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_PL_HANG_ERR_ADDR         WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_PL_HANG_ERR_MASK         0x00004000                // EN_PL_HANG_ERR[14]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_PL_HANG_ERR_SHFT         14
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_FL_HANG_ERR_ADDR         WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_FL_HANG_ERR_MASK         0x00002000                // EN_FL_HANG_ERR[13]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_FL_HANG_ERR_SHFT         13
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DATA_OPER_ERR_P2_ADDR    WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DATA_OPER_ERR_P2_MASK    0x00001000                // EN_DATA_OPER_ERR_P2[12]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DATA_OPER_ERR_P2_SHFT    12
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DATA_OPER_ERR_P1_ADDR    WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DATA_OPER_ERR_P1_MASK    0x00000800                // EN_DATA_OPER_ERR_P1[11]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DATA_OPER_ERR_P1_SHFT    11
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DATA_OPER_ERR_P0_ADDR    WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DATA_OPER_ERR_P0_MASK    0x00000400                // EN_DATA_OPER_ERR_P0[10]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DATA_OPER_ERR_P0_SHFT    10
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_MDP_HANG_ERR_ADDR        WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_MDP_HANG_ERR_MASK        0x00000100                // EN_MDP_HANG_ERR[8]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_MDP_HANG_ERR_SHFT        8
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_MDP_D_OPER_ERR_ADDR      WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_MDP_D_OPER_ERR_MASK      0x00000080                // EN_MDP_D_OPER_ERR[7]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_MDP_D_OPER_ERR_SHFT      7
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DOUBLE_RLS_ERR_ADDR      WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DOUBLE_RLS_ERR_MASK      0x00000040                // EN_DOUBLE_RLS_ERR[6]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_DOUBLE_RLS_ERR_SHFT      6
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_PAGE_UDF_P2_ADDR         WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_PAGE_UDF_P2_MASK         0x00000020                // EN_PAGE_UDF_P2[5]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_PAGE_UDF_P2_SHFT         5
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_PAGE_UDF_P1_ADDR         WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_PAGE_UDF_P1_MASK         0x00000010                // EN_PAGE_UDF_P1[4]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_PAGE_UDF_P1_SHFT         4
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_PAGE_UDF_P0_ADDR         WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_PAGE_UDF_P0_MASK         0x00000008                // EN_PAGE_UDF_P0[3]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_PAGE_UDF_P0_SHFT         3
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_Q_CMD_ERR_P2_ADDR        WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_Q_CMD_ERR_P2_MASK        0x00000004                // EN_Q_CMD_ERR_P2[2]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_Q_CMD_ERR_P2_SHFT        2
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_Q_CMD_ERR_P1_ADDR        WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_Q_CMD_ERR_P1_MASK        0x00000002                // EN_Q_CMD_ERR_P1[1]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_Q_CMD_ERR_P1_SHFT        1
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_Q_CMD_ERR_P0_ADDR        WF_PLE_TOP_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_Q_CMD_ERR_P0_MASK        0x00000001                // EN_Q_CMD_ERR_P0[0]
#define WF_PLE_TOP_INT_N9_ERR_MASK_EN_Q_CMD_ERR_P0_SHFT        0

/* =====================================================================================

  ---INT_N9_ERR_MASK_1 (0x820c0000 + 0x88)---

    EN_BN0_MDP_TDP_HANG_ERR[0]   - (RW) Enables Band0 MDP TDP FSM hang error interrupt
    EN_MDP_RDP_HANG_ERR[1]       - (RW) Enables MDP RDP FSM hang error interrupt
    EN_MDP_TIOC_HANG_ERR[2]      - (RW) Enables MDP TIOC FSM hang error interrupt
    EN_MDP_RIOC_HANG_ERR[3]      - (RW) Enables MDP RIOC FSM hang error interrupt
    EN_PF_HANG_ERR[4]            - (RW) Enables PF FSM hang error interrupt
    EN_SEC0_HANG_ERR[5]          - (RW) Enables SEC 0 FSM hang error interrupt
    EN_SEC1_HANG_ERR[6]          - (RW) Enables SEC 1 FSM hang error interrupt
    RESERVED7[9..7]              - (RO) Reserved bits
    EN_MDP_RDP_WB_HANG_ERR[10]   - (RW) Enables MDP RDP Wait buffer FSM hang error interrupt
    EN_UWTBL_HANG_ERR[11]        - (RW) Enables UWTBL FSM hang error interrupt
    RESERVED12[15..12]           - (RO) Reserved bits
    EN_MDP_TDPIOC_HANG_ERR[16]   - (RW) Enables MDP TDPIOC FSM hang error interrupt
    EN_MDP_RDPIOC_HANG_ERR[17]   - (RW) Enables MDP RDPIOC FSM hang error interrupt
    RESERVED18[31..18]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_MDP_RDPIOC_HANG_ERR_ADDR WF_PLE_TOP_INT_N9_ERR_MASK_1_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_MDP_RDPIOC_HANG_ERR_MASK 0x00020000                // EN_MDP_RDPIOC_HANG_ERR[17]
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_MDP_RDPIOC_HANG_ERR_SHFT 17
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_MDP_TDPIOC_HANG_ERR_ADDR WF_PLE_TOP_INT_N9_ERR_MASK_1_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_MDP_TDPIOC_HANG_ERR_MASK 0x00010000                // EN_MDP_TDPIOC_HANG_ERR[16]
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_MDP_TDPIOC_HANG_ERR_SHFT 16
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_UWTBL_HANG_ERR_ADDR    WF_PLE_TOP_INT_N9_ERR_MASK_1_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_UWTBL_HANG_ERR_MASK    0x00000800                // EN_UWTBL_HANG_ERR[11]
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_UWTBL_HANG_ERR_SHFT    11
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_MDP_RDP_WB_HANG_ERR_ADDR WF_PLE_TOP_INT_N9_ERR_MASK_1_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_MDP_RDP_WB_HANG_ERR_MASK 0x00000400                // EN_MDP_RDP_WB_HANG_ERR[10]
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_MDP_RDP_WB_HANG_ERR_SHFT 10
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_SEC1_HANG_ERR_ADDR     WF_PLE_TOP_INT_N9_ERR_MASK_1_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_SEC1_HANG_ERR_MASK     0x00000040                // EN_SEC1_HANG_ERR[6]
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_SEC1_HANG_ERR_SHFT     6
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_SEC0_HANG_ERR_ADDR     WF_PLE_TOP_INT_N9_ERR_MASK_1_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_SEC0_HANG_ERR_MASK     0x00000020                // EN_SEC0_HANG_ERR[5]
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_SEC0_HANG_ERR_SHFT     5
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_PF_HANG_ERR_ADDR       WF_PLE_TOP_INT_N9_ERR_MASK_1_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_PF_HANG_ERR_MASK       0x00000010                // EN_PF_HANG_ERR[4]
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_PF_HANG_ERR_SHFT       4
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_MDP_RIOC_HANG_ERR_ADDR WF_PLE_TOP_INT_N9_ERR_MASK_1_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_MDP_RIOC_HANG_ERR_MASK 0x00000008                // EN_MDP_RIOC_HANG_ERR[3]
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_MDP_RIOC_HANG_ERR_SHFT 3
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_MDP_TIOC_HANG_ERR_ADDR WF_PLE_TOP_INT_N9_ERR_MASK_1_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_MDP_TIOC_HANG_ERR_MASK 0x00000004                // EN_MDP_TIOC_HANG_ERR[2]
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_MDP_TIOC_HANG_ERR_SHFT 2
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_MDP_RDP_HANG_ERR_ADDR  WF_PLE_TOP_INT_N9_ERR_MASK_1_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_MDP_RDP_HANG_ERR_MASK  0x00000002                // EN_MDP_RDP_HANG_ERR[1]
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_MDP_RDP_HANG_ERR_SHFT  1
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_BN0_MDP_TDP_HANG_ERR_ADDR WF_PLE_TOP_INT_N9_ERR_MASK_1_ADDR
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_BN0_MDP_TDP_HANG_ERR_MASK 0x00000001                // EN_BN0_MDP_TDP_HANG_ERR[0]
#define WF_PLE_TOP_INT_N9_ERR_MASK_1_EN_BN0_MDP_TDP_HANG_ERR_SHFT 0

/* =====================================================================================

  ---N9_BSS_PS_INT_MASK (0x820c0000 + 0x8c)---

    EN_BSSID0_NONEMPTY_INT[0]    - (RW) Enable control of BSSID0 queue empty fall
    EN_BSSID1_NONEMPTY_INT[1]    - (RW) Enable control of BSSID1 queue empty fall
    EN_BSSID2_NONEMPTY_INT[2]    - (RW) Enable control of BSSID2 queue empty fall
    EN_BSSID3_NONEMPTY_INT[3]    - (RW) Enable control of BSSID3 queue empty fall
    EN_BN1_BSSID0_NONEMPTY_INT[4] - (RW) Enable control of BN1 BSSID0 queue empty fall
    EN_BN1_BSSID1_NONEMPTY_INT[5] - (RW) Enable control of BN1 BSSID1 queue empty fall
    EN_BN1_BSSID2_NONEMPTY_INT[6] - (RW) Enable control of BN1 BSSID2 queue empty fall
    EN_BN1_BSSID3_NONEMPTY_INT[7] - (RW) Enable control of BN1 BSSID3 queue empty fall
    EN_BSSID0_EMPTY_INT[8]       - (RW) Enable control of BSSID0 queue empty raise
    EN_BSSID1_EMPTY_INT[9]       - (RW) Enable control of BSSID1 queue empty raise
    EN_BSSID2_EMPTY_INT[10]      - (RW) Enable control of BSSID2 queue empty raise
    EN_BSSID3_EMPTY_INT[11]      - (RW) Enable control of BSSID3 queue empty raise
    EN_BN1_BSSID0_EMPTY_INT[12]  - (RW) Enable control of BN1 BSSID0 queue empty raise
    EN_BN1_BSSID1_EMPTY_INT[13]  - (RW) Enable control of BN1 BSSID1 queue empty raise
    EN_BN1_BSSID2_EMPTY_INT[14]  - (RW) Enable control of BN1 BSSID2 queue empty raise
    EN_BN1_BSSID3_EMPTY_INT[15]  - (RW) Enable control of BN1 BSSID3 queue empty raise
    EN_BSSID0_ENQ_LMAC_INT[16]   - (RW) Enable control of BSSID0 enqueue interrupt
    EN_BSSID1_ENQ_LMAC_INT[17]   - (RW) Enable control of BSSID1 enqueue interrupt
    EN_BSSID2_ENQ_LMAC_INT[18]   - (RW) Enable control of BSSID2 enqueue interrupt
    EN_BSSID3_ENQ_LMAC_INT[19]   - (RW) Enable control of BSSID3 enqueue interrupt
    RESERVED20[23..20]           - (RO) Reserved bits
    EN_BN2_BSSID0_NONEMPTY_INT[24] - (RW) Enable control of BN2 BSSID0 queue empty fall
    EN_BN2_BSSID1_NONEMPTY_INT[25] - (RW) Enable control of BN2 BSSID1 queue empty fall
    EN_BN2_BSSID2_NONEMPTY_INT[26] - (RW) Enable control of BN2 BSSID2 queue empty fall
    EN_BN2_BSSID3_NONEMPTY_INT[27] - (RW) Enable control of BN2 BSSID3 queue empty fall
    EN_BN2_BSSID0_EMPTY_INT[28]  - (RW) Enable control of BN2 BSSID0 queue empty raise
    EN_BN2_BSSID1_EMPTY_INT[29]  - (RW) Enable control of BN2 BSSID1 queue empty raise
    EN_BN2_BSSID2_EMPTY_INT[30]  - (RW) Enable control of BN2 BSSID2 queue empty raise
    EN_BN2_BSSID3_EMPTY_INT[31]  - (RW) Enable control of BN2 BSSID3 queue empty raise

 =====================================================================================*/
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN2_BSSID3_EMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN2_BSSID3_EMPTY_INT_MASK 0x80000000                // EN_BN2_BSSID3_EMPTY_INT[31]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN2_BSSID3_EMPTY_INT_SHFT 31
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN2_BSSID2_EMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN2_BSSID2_EMPTY_INT_MASK 0x40000000                // EN_BN2_BSSID2_EMPTY_INT[30]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN2_BSSID2_EMPTY_INT_SHFT 30
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN2_BSSID1_EMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN2_BSSID1_EMPTY_INT_MASK 0x20000000                // EN_BN2_BSSID1_EMPTY_INT[29]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN2_BSSID1_EMPTY_INT_SHFT 29
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN2_BSSID0_EMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN2_BSSID0_EMPTY_INT_MASK 0x10000000                // EN_BN2_BSSID0_EMPTY_INT[28]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN2_BSSID0_EMPTY_INT_SHFT 28
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN2_BSSID3_NONEMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN2_BSSID3_NONEMPTY_INT_MASK 0x08000000                // EN_BN2_BSSID3_NONEMPTY_INT[27]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN2_BSSID3_NONEMPTY_INT_SHFT 27
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN2_BSSID2_NONEMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN2_BSSID2_NONEMPTY_INT_MASK 0x04000000                // EN_BN2_BSSID2_NONEMPTY_INT[26]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN2_BSSID2_NONEMPTY_INT_SHFT 26
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN2_BSSID1_NONEMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN2_BSSID1_NONEMPTY_INT_MASK 0x02000000                // EN_BN2_BSSID1_NONEMPTY_INT[25]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN2_BSSID1_NONEMPTY_INT_SHFT 25
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN2_BSSID0_NONEMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN2_BSSID0_NONEMPTY_INT_MASK 0x01000000                // EN_BN2_BSSID0_NONEMPTY_INT[24]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN2_BSSID0_NONEMPTY_INT_SHFT 24
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID3_ENQ_LMAC_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID3_ENQ_LMAC_INT_MASK 0x00080000                // EN_BSSID3_ENQ_LMAC_INT[19]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID3_ENQ_LMAC_INT_SHFT 19
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID2_ENQ_LMAC_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID2_ENQ_LMAC_INT_MASK 0x00040000                // EN_BSSID2_ENQ_LMAC_INT[18]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID2_ENQ_LMAC_INT_SHFT 18
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID1_ENQ_LMAC_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID1_ENQ_LMAC_INT_MASK 0x00020000                // EN_BSSID1_ENQ_LMAC_INT[17]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID1_ENQ_LMAC_INT_SHFT 17
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID0_ENQ_LMAC_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID0_ENQ_LMAC_INT_MASK 0x00010000                // EN_BSSID0_ENQ_LMAC_INT[16]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID0_ENQ_LMAC_INT_SHFT 16
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN1_BSSID3_EMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN1_BSSID3_EMPTY_INT_MASK 0x00008000                // EN_BN1_BSSID3_EMPTY_INT[15]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN1_BSSID3_EMPTY_INT_SHFT 15
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN1_BSSID2_EMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN1_BSSID2_EMPTY_INT_MASK 0x00004000                // EN_BN1_BSSID2_EMPTY_INT[14]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN1_BSSID2_EMPTY_INT_SHFT 14
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN1_BSSID1_EMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN1_BSSID1_EMPTY_INT_MASK 0x00002000                // EN_BN1_BSSID1_EMPTY_INT[13]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN1_BSSID1_EMPTY_INT_SHFT 13
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN1_BSSID0_EMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN1_BSSID0_EMPTY_INT_MASK 0x00001000                // EN_BN1_BSSID0_EMPTY_INT[12]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN1_BSSID0_EMPTY_INT_SHFT 12
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID3_EMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID3_EMPTY_INT_MASK 0x00000800                // EN_BSSID3_EMPTY_INT[11]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID3_EMPTY_INT_SHFT 11
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID2_EMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID2_EMPTY_INT_MASK 0x00000400                // EN_BSSID2_EMPTY_INT[10]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID2_EMPTY_INT_SHFT 10
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID1_EMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID1_EMPTY_INT_MASK 0x00000200                // EN_BSSID1_EMPTY_INT[9]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID1_EMPTY_INT_SHFT 9
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID0_EMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID0_EMPTY_INT_MASK 0x00000100                // EN_BSSID0_EMPTY_INT[8]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID0_EMPTY_INT_SHFT 8
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN1_BSSID3_NONEMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN1_BSSID3_NONEMPTY_INT_MASK 0x00000080                // EN_BN1_BSSID3_NONEMPTY_INT[7]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN1_BSSID3_NONEMPTY_INT_SHFT 7
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN1_BSSID2_NONEMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN1_BSSID2_NONEMPTY_INT_MASK 0x00000040                // EN_BN1_BSSID2_NONEMPTY_INT[6]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN1_BSSID2_NONEMPTY_INT_SHFT 6
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN1_BSSID1_NONEMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN1_BSSID1_NONEMPTY_INT_MASK 0x00000020                // EN_BN1_BSSID1_NONEMPTY_INT[5]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN1_BSSID1_NONEMPTY_INT_SHFT 5
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN1_BSSID0_NONEMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN1_BSSID0_NONEMPTY_INT_MASK 0x00000010                // EN_BN1_BSSID0_NONEMPTY_INT[4]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BN1_BSSID0_NONEMPTY_INT_SHFT 4
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID3_NONEMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID3_NONEMPTY_INT_MASK 0x00000008                // EN_BSSID3_NONEMPTY_INT[3]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID3_NONEMPTY_INT_SHFT 3
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID2_NONEMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID2_NONEMPTY_INT_MASK 0x00000004                // EN_BSSID2_NONEMPTY_INT[2]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID2_NONEMPTY_INT_SHFT 2
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID1_NONEMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID1_NONEMPTY_INT_MASK 0x00000002                // EN_BSSID1_NONEMPTY_INT[1]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID1_NONEMPTY_INT_SHFT 1
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID0_NONEMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_MASK_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID0_NONEMPTY_INT_MASK 0x00000001                // EN_BSSID0_NONEMPTY_INT[0]
#define WF_PLE_TOP_N9_BSS_PS_INT_MASK_EN_BSSID0_NONEMPTY_INT_SHFT 0

/* =====================================================================================

  ---HOST_REPORT0 (0x820c0000 + 0x90)---

    RESERVED0[0]                 - (RO) Reserved bits
    DIS_HOST_RPT[1]              - (RW) Disables host report function
    HOST_RPT_VER0_EN[2]          - (RW) Enable control for host report roll back to Version 2(MT7915 E1 used).
    HOST_RPT_TX_LATENCY[3]       - (RW) Enable host report TX latency
    WMCPU_MSDU_ID_NUM[5..4]      - (RW) Configuration of WMCPU MSDU ID usage.
    DIS_BN0_HIF_RPT_AGG[6]       - (RW) BN0 HIF Host report aggregation function
    AIR_DELAY_HOST_REPORT_EN[7]  - (RW) AirDelay Host Report Enable
    HOST_RPT_PACK_TH[15..8]      - (RW) The buffer threshold for packing host report. The buffer size less then the MSDU numbers of a MPDU, would let MSDU_ID lose.
    SRC0_RPT_QID[22..16]         - (RW) PSE Queue ID control for hoTXD.SRC=2'h0st report.
    SRC0_RPT_PID[23]             - (RW) PSE Port ID control for TXD.SRC=2'h0 report.
    WMCPU_RPT_QID[30..24]        - (RW) PSE Queue ID control for WMCPU report.
    WMCPU_RPT_PID[31]            - (RW) PSE Port ID control for WMCPU report.

 =====================================================================================*/
#define WF_PLE_TOP_HOST_REPORT0_WMCPU_RPT_PID_ADDR             WF_PLE_TOP_HOST_REPORT0_ADDR
#define WF_PLE_TOP_HOST_REPORT0_WMCPU_RPT_PID_MASK             0x80000000                // WMCPU_RPT_PID[31]
#define WF_PLE_TOP_HOST_REPORT0_WMCPU_RPT_PID_SHFT             31
#define WF_PLE_TOP_HOST_REPORT0_WMCPU_RPT_QID_ADDR             WF_PLE_TOP_HOST_REPORT0_ADDR
#define WF_PLE_TOP_HOST_REPORT0_WMCPU_RPT_QID_MASK             0x7F000000                // WMCPU_RPT_QID[30..24]
#define WF_PLE_TOP_HOST_REPORT0_WMCPU_RPT_QID_SHFT             24
#define WF_PLE_TOP_HOST_REPORT0_SRC0_RPT_PID_ADDR              WF_PLE_TOP_HOST_REPORT0_ADDR
#define WF_PLE_TOP_HOST_REPORT0_SRC0_RPT_PID_MASK              0x00800000                // SRC0_RPT_PID[23]
#define WF_PLE_TOP_HOST_REPORT0_SRC0_RPT_PID_SHFT              23
#define WF_PLE_TOP_HOST_REPORT0_SRC0_RPT_QID_ADDR              WF_PLE_TOP_HOST_REPORT0_ADDR
#define WF_PLE_TOP_HOST_REPORT0_SRC0_RPT_QID_MASK              0x007F0000                // SRC0_RPT_QID[22..16]
#define WF_PLE_TOP_HOST_REPORT0_SRC0_RPT_QID_SHFT              16
#define WF_PLE_TOP_HOST_REPORT0_HOST_RPT_PACK_TH_ADDR          WF_PLE_TOP_HOST_REPORT0_ADDR
#define WF_PLE_TOP_HOST_REPORT0_HOST_RPT_PACK_TH_MASK          0x0000FF00                // HOST_RPT_PACK_TH[15..8]
#define WF_PLE_TOP_HOST_REPORT0_HOST_RPT_PACK_TH_SHFT          8
#define WF_PLE_TOP_HOST_REPORT0_AIR_DELAY_HOST_REPORT_EN_ADDR  WF_PLE_TOP_HOST_REPORT0_ADDR
#define WF_PLE_TOP_HOST_REPORT0_AIR_DELAY_HOST_REPORT_EN_MASK  0x00000080                // AIR_DELAY_HOST_REPORT_EN[7]
#define WF_PLE_TOP_HOST_REPORT0_AIR_DELAY_HOST_REPORT_EN_SHFT  7
#define WF_PLE_TOP_HOST_REPORT0_DIS_BN0_HIF_RPT_AGG_ADDR       WF_PLE_TOP_HOST_REPORT0_ADDR
#define WF_PLE_TOP_HOST_REPORT0_DIS_BN0_HIF_RPT_AGG_MASK       0x00000040                // DIS_BN0_HIF_RPT_AGG[6]
#define WF_PLE_TOP_HOST_REPORT0_DIS_BN0_HIF_RPT_AGG_SHFT       6
#define WF_PLE_TOP_HOST_REPORT0_WMCPU_MSDU_ID_NUM_ADDR         WF_PLE_TOP_HOST_REPORT0_ADDR
#define WF_PLE_TOP_HOST_REPORT0_WMCPU_MSDU_ID_NUM_MASK         0x00000030                // WMCPU_MSDU_ID_NUM[5..4]
#define WF_PLE_TOP_HOST_REPORT0_WMCPU_MSDU_ID_NUM_SHFT         4
#define WF_PLE_TOP_HOST_REPORT0_HOST_RPT_TX_LATENCY_ADDR       WF_PLE_TOP_HOST_REPORT0_ADDR
#define WF_PLE_TOP_HOST_REPORT0_HOST_RPT_TX_LATENCY_MASK       0x00000008                // HOST_RPT_TX_LATENCY[3]
#define WF_PLE_TOP_HOST_REPORT0_HOST_RPT_TX_LATENCY_SHFT       3
#define WF_PLE_TOP_HOST_REPORT0_HOST_RPT_VER0_EN_ADDR          WF_PLE_TOP_HOST_REPORT0_ADDR
#define WF_PLE_TOP_HOST_REPORT0_HOST_RPT_VER0_EN_MASK          0x00000004                // HOST_RPT_VER0_EN[2]
#define WF_PLE_TOP_HOST_REPORT0_HOST_RPT_VER0_EN_SHFT          2
#define WF_PLE_TOP_HOST_REPORT0_DIS_HOST_RPT_ADDR              WF_PLE_TOP_HOST_REPORT0_ADDR
#define WF_PLE_TOP_HOST_REPORT0_DIS_HOST_RPT_MASK              0x00000002                // DIS_HOST_RPT[1]
#define WF_PLE_TOP_HOST_REPORT0_DIS_HOST_RPT_SHFT              1

/* =====================================================================================

  ---HOST_REPORT1 (0x820c0000 + 0x94)---

    SPL_RPT_QID[6..0]            - (RW) PSE Queue ID control for SPL report.
    SPL_RPT_PID[7]               - (RW) PSE Port ID control for SPL report.
    SRC1_RPT_QID[14..8]          - (RW) PSE Queue ID control for TXD.SRC=2'h1 host report.
    SRC1_RPT_PID[15]             - (RW) PSE Port ID control for TXD.SRC=2'h1 host report.
    HOST_RPT_PG_SIZE[19..16]     - (RW) Setting of host report used PSE page size.
    DIS_WMCPU_RPT_AGG[20]        - (RW) WMCPU Host report aggregation function
    DIS_MD_HIF_RPT_AGG[21]       - (RW) MD HIF Host report aggregation function
    DIS_BN1_HIF_RPT_AGG[22]      - (RW) BN1 HIF Host report aggregation function
    DIS_RLS4_RPT_AGG[23]         - (RW) RLS4 Host report aggregation function
    RLS4_RPT_QID[30..24]         - (RW) PSE Queue ID control for SW RLS4 host report.
    RLS4_RPT_PID[31]             - (RW) PSE Port ID control for SW RLS4 host report.

 =====================================================================================*/
#define WF_PLE_TOP_HOST_REPORT1_RLS4_RPT_PID_ADDR              WF_PLE_TOP_HOST_REPORT1_ADDR
#define WF_PLE_TOP_HOST_REPORT1_RLS4_RPT_PID_MASK              0x80000000                // RLS4_RPT_PID[31]
#define WF_PLE_TOP_HOST_REPORT1_RLS4_RPT_PID_SHFT              31
#define WF_PLE_TOP_HOST_REPORT1_RLS4_RPT_QID_ADDR              WF_PLE_TOP_HOST_REPORT1_ADDR
#define WF_PLE_TOP_HOST_REPORT1_RLS4_RPT_QID_MASK              0x7F000000                // RLS4_RPT_QID[30..24]
#define WF_PLE_TOP_HOST_REPORT1_RLS4_RPT_QID_SHFT              24
#define WF_PLE_TOP_HOST_REPORT1_DIS_RLS4_RPT_AGG_ADDR          WF_PLE_TOP_HOST_REPORT1_ADDR
#define WF_PLE_TOP_HOST_REPORT1_DIS_RLS4_RPT_AGG_MASK          0x00800000                // DIS_RLS4_RPT_AGG[23]
#define WF_PLE_TOP_HOST_REPORT1_DIS_RLS4_RPT_AGG_SHFT          23
#define WF_PLE_TOP_HOST_REPORT1_DIS_BN1_HIF_RPT_AGG_ADDR       WF_PLE_TOP_HOST_REPORT1_ADDR
#define WF_PLE_TOP_HOST_REPORT1_DIS_BN1_HIF_RPT_AGG_MASK       0x00400000                // DIS_BN1_HIF_RPT_AGG[22]
#define WF_PLE_TOP_HOST_REPORT1_DIS_BN1_HIF_RPT_AGG_SHFT       22
#define WF_PLE_TOP_HOST_REPORT1_DIS_MD_HIF_RPT_AGG_ADDR        WF_PLE_TOP_HOST_REPORT1_ADDR
#define WF_PLE_TOP_HOST_REPORT1_DIS_MD_HIF_RPT_AGG_MASK        0x00200000                // DIS_MD_HIF_RPT_AGG[21]
#define WF_PLE_TOP_HOST_REPORT1_DIS_MD_HIF_RPT_AGG_SHFT        21
#define WF_PLE_TOP_HOST_REPORT1_DIS_WMCPU_RPT_AGG_ADDR         WF_PLE_TOP_HOST_REPORT1_ADDR
#define WF_PLE_TOP_HOST_REPORT1_DIS_WMCPU_RPT_AGG_MASK         0x00100000                // DIS_WMCPU_RPT_AGG[20]
#define WF_PLE_TOP_HOST_REPORT1_DIS_WMCPU_RPT_AGG_SHFT         20
#define WF_PLE_TOP_HOST_REPORT1_HOST_RPT_PG_SIZE_ADDR          WF_PLE_TOP_HOST_REPORT1_ADDR
#define WF_PLE_TOP_HOST_REPORT1_HOST_RPT_PG_SIZE_MASK          0x000F0000                // HOST_RPT_PG_SIZE[19..16]
#define WF_PLE_TOP_HOST_REPORT1_HOST_RPT_PG_SIZE_SHFT          16
#define WF_PLE_TOP_HOST_REPORT1_SRC1_RPT_PID_ADDR              WF_PLE_TOP_HOST_REPORT1_ADDR
#define WF_PLE_TOP_HOST_REPORT1_SRC1_RPT_PID_MASK              0x00008000                // SRC1_RPT_PID[15]
#define WF_PLE_TOP_HOST_REPORT1_SRC1_RPT_PID_SHFT              15
#define WF_PLE_TOP_HOST_REPORT1_SRC1_RPT_QID_ADDR              WF_PLE_TOP_HOST_REPORT1_ADDR
#define WF_PLE_TOP_HOST_REPORT1_SRC1_RPT_QID_MASK              0x00007F00                // SRC1_RPT_QID[14..8]
#define WF_PLE_TOP_HOST_REPORT1_SRC1_RPT_QID_SHFT              8
#define WF_PLE_TOP_HOST_REPORT1_SPL_RPT_PID_ADDR               WF_PLE_TOP_HOST_REPORT1_ADDR
#define WF_PLE_TOP_HOST_REPORT1_SPL_RPT_PID_MASK               0x00000080                // SPL_RPT_PID[7]
#define WF_PLE_TOP_HOST_REPORT1_SPL_RPT_PID_SHFT               7
#define WF_PLE_TOP_HOST_REPORT1_SPL_RPT_QID_ADDR               WF_PLE_TOP_HOST_REPORT1_ADDR
#define WF_PLE_TOP_HOST_REPORT1_SPL_RPT_QID_MASK               0x0000007F                // SPL_RPT_QID[6..0]
#define WF_PLE_TOP_HOST_REPORT1_SPL_RPT_QID_SHFT               0

/* =====================================================================================

  ---HOST_REPORT2 (0x820c0000 + 0x98)---

    SRC2_RPT_QID[6..0]           - (RW) PSE Queue ID control for TXD.SRC=2'h2 Host report.
    SRC2_RPT_PID[7]              - (RW) PSE Port ID control for TXD.SRC=2'h2 Host report.
    SRC3_RPT_QID[14..8]          - (RW) PSE Queue ID control for TXD.SRC=2'h3 CPU host report.
    SRC3_RPT_PID[15]             - (RW) PSE Port ID control for TXD.SRC=2'h3 CPU host report.
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_HOST_REPORT2_SRC3_RPT_PID_ADDR              WF_PLE_TOP_HOST_REPORT2_ADDR
#define WF_PLE_TOP_HOST_REPORT2_SRC3_RPT_PID_MASK              0x00008000                // SRC3_RPT_PID[15]
#define WF_PLE_TOP_HOST_REPORT2_SRC3_RPT_PID_SHFT              15
#define WF_PLE_TOP_HOST_REPORT2_SRC3_RPT_QID_ADDR              WF_PLE_TOP_HOST_REPORT2_ADDR
#define WF_PLE_TOP_HOST_REPORT2_SRC3_RPT_QID_MASK              0x00007F00                // SRC3_RPT_QID[14..8]
#define WF_PLE_TOP_HOST_REPORT2_SRC3_RPT_QID_SHFT              8
#define WF_PLE_TOP_HOST_REPORT2_SRC2_RPT_PID_ADDR              WF_PLE_TOP_HOST_REPORT2_ADDR
#define WF_PLE_TOP_HOST_REPORT2_SRC2_RPT_PID_MASK              0x00000080                // SRC2_RPT_PID[7]
#define WF_PLE_TOP_HOST_REPORT2_SRC2_RPT_PID_SHFT              7
#define WF_PLE_TOP_HOST_REPORT2_SRC2_RPT_QID_ADDR              WF_PLE_TOP_HOST_REPORT2_ADDR
#define WF_PLE_TOP_HOST_REPORT2_SRC2_RPT_QID_MASK              0x0000007F                // SRC2_RPT_QID[6..0]
#define WF_PLE_TOP_HOST_REPORT2_SRC2_RPT_QID_SHFT              0

/* =====================================================================================

  ---RELEASE_CTRL_0 (0x820c0000 + 0x9c)---

    NOR_RLS_QID[6..0]            - (RW) Normal TX packet release DST QID
    RESERVED7[7]                 - (RO) Reserved bits
    NOR_RLS_PID[9..8]            - (RW) Normal TX packet release DST PID
    RESERVED10[15..10]           - (RO) Reserved bits
    DROP_RLS_QID[22..16]         - (RW) Drop packet release DST QID
    RESERVED23[23]               - (RO) Reserved bits
    DROP_RLS_PID[25..24]         - (RW) Drop packet release DST PID
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_RELEASE_CTRL_0_DROP_RLS_PID_ADDR            WF_PLE_TOP_RELEASE_CTRL_0_ADDR
#define WF_PLE_TOP_RELEASE_CTRL_0_DROP_RLS_PID_MASK            0x03000000                // DROP_RLS_PID[25..24]
#define WF_PLE_TOP_RELEASE_CTRL_0_DROP_RLS_PID_SHFT            24
#define WF_PLE_TOP_RELEASE_CTRL_0_DROP_RLS_QID_ADDR            WF_PLE_TOP_RELEASE_CTRL_0_ADDR
#define WF_PLE_TOP_RELEASE_CTRL_0_DROP_RLS_QID_MASK            0x007F0000                // DROP_RLS_QID[22..16]
#define WF_PLE_TOP_RELEASE_CTRL_0_DROP_RLS_QID_SHFT            16
#define WF_PLE_TOP_RELEASE_CTRL_0_NOR_RLS_PID_ADDR             WF_PLE_TOP_RELEASE_CTRL_0_ADDR
#define WF_PLE_TOP_RELEASE_CTRL_0_NOR_RLS_PID_MASK             0x00000300                // NOR_RLS_PID[9..8]
#define WF_PLE_TOP_RELEASE_CTRL_0_NOR_RLS_PID_SHFT             8
#define WF_PLE_TOP_RELEASE_CTRL_0_NOR_RLS_QID_ADDR             WF_PLE_TOP_RELEASE_CTRL_0_ADDR
#define WF_PLE_TOP_RELEASE_CTRL_0_NOR_RLS_QID_MASK             0x0000007F                // NOR_RLS_QID[6..0]
#define WF_PLE_TOP_RELEASE_CTRL_0_NOR_RLS_QID_SHFT             0

/* =====================================================================================

  ---RELEASE_CTRL_1 (0x820c0000 + 0xA0)---

    BCN0_RLS_QID[6..0]           - (RW) Beacon 0 packet release DST QID
    RESERVED7[7]                 - (RO) Reserved bits
    BCN0_RLS_PID[9..8]           - (RW) Beacon 0 packet release DST PID
    RESERVED10[15..10]           - (RO) Reserved bits
    BCN1_RLS_QID[22..16]         - (RW) Beacon 1 packet release DST QID
    RESERVED23[23]               - (RO) Reserved bits
    BCN1_RLS_PID[25..24]         - (RW) Beacon 1 packet release DST PID
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_RELEASE_CTRL_1_BCN1_RLS_PID_ADDR            WF_PLE_TOP_RELEASE_CTRL_1_ADDR
#define WF_PLE_TOP_RELEASE_CTRL_1_BCN1_RLS_PID_MASK            0x03000000                // BCN1_RLS_PID[25..24]
#define WF_PLE_TOP_RELEASE_CTRL_1_BCN1_RLS_PID_SHFT            24
#define WF_PLE_TOP_RELEASE_CTRL_1_BCN1_RLS_QID_ADDR            WF_PLE_TOP_RELEASE_CTRL_1_ADDR
#define WF_PLE_TOP_RELEASE_CTRL_1_BCN1_RLS_QID_MASK            0x007F0000                // BCN1_RLS_QID[22..16]
#define WF_PLE_TOP_RELEASE_CTRL_1_BCN1_RLS_QID_SHFT            16
#define WF_PLE_TOP_RELEASE_CTRL_1_BCN0_RLS_PID_ADDR            WF_PLE_TOP_RELEASE_CTRL_1_ADDR
#define WF_PLE_TOP_RELEASE_CTRL_1_BCN0_RLS_PID_MASK            0x00000300                // BCN0_RLS_PID[9..8]
#define WF_PLE_TOP_RELEASE_CTRL_1_BCN0_RLS_PID_SHFT            8
#define WF_PLE_TOP_RELEASE_CTRL_1_BCN0_RLS_QID_ADDR            WF_PLE_TOP_RELEASE_CTRL_1_ADDR
#define WF_PLE_TOP_RELEASE_CTRL_1_BCN0_RLS_QID_MASK            0x0000007F                // BCN0_RLS_QID[6..0]
#define WF_PLE_TOP_RELEASE_CTRL_1_BCN0_RLS_QID_SHFT            0

/* =====================================================================================

  ---RELEASE_CTRL_2 (0x820c0000 + 0xA4)---

    TXCMD0_RLS_QID[6..0]         - (RW) TXCMD 0 packet release DST QID
    RESERVED7[7]                 - (RO) Reserved bits
    TXCMD0_RLS_PID[9..8]         - (RW) TXCMD 0 packet release DST PID
    RESERVED10[15..10]           - (RO) Reserved bits
    TXCMD1_RLS_QID[22..16]       - (RW) TXCDM 1 packet release DST QID
    RESERVED23[23]               - (RO) Reserved bits
    TXCMD1_RLS_PID[25..24]       - (RW) TXCMD 1 packet release DST PID
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_RELEASE_CTRL_2_TXCMD1_RLS_PID_ADDR          WF_PLE_TOP_RELEASE_CTRL_2_ADDR
#define WF_PLE_TOP_RELEASE_CTRL_2_TXCMD1_RLS_PID_MASK          0x03000000                // TXCMD1_RLS_PID[25..24]
#define WF_PLE_TOP_RELEASE_CTRL_2_TXCMD1_RLS_PID_SHFT          24
#define WF_PLE_TOP_RELEASE_CTRL_2_TXCMD1_RLS_QID_ADDR          WF_PLE_TOP_RELEASE_CTRL_2_ADDR
#define WF_PLE_TOP_RELEASE_CTRL_2_TXCMD1_RLS_QID_MASK          0x007F0000                // TXCMD1_RLS_QID[22..16]
#define WF_PLE_TOP_RELEASE_CTRL_2_TXCMD1_RLS_QID_SHFT          16
#define WF_PLE_TOP_RELEASE_CTRL_2_TXCMD0_RLS_PID_ADDR          WF_PLE_TOP_RELEASE_CTRL_2_ADDR
#define WF_PLE_TOP_RELEASE_CTRL_2_TXCMD0_RLS_PID_MASK          0x00000300                // TXCMD0_RLS_PID[9..8]
#define WF_PLE_TOP_RELEASE_CTRL_2_TXCMD0_RLS_PID_SHFT          8
#define WF_PLE_TOP_RELEASE_CTRL_2_TXCMD0_RLS_QID_ADDR          WF_PLE_TOP_RELEASE_CTRL_2_ADDR
#define WF_PLE_TOP_RELEASE_CTRL_2_TXCMD0_RLS_QID_MASK          0x0000007F                // TXCMD0_RLS_QID[6..0]
#define WF_PLE_TOP_RELEASE_CTRL_2_TXCMD0_RLS_QID_SHFT          0

/* =====================================================================================

  ---RELEASE_CTRL_3 (0x820c0000 + 0xa8)---

    RLS_FREE_DONE_PG_SIZE[3..0]  - (RW) Page size configuration of Free done event(host report).
    RESERVED4[15..4]             - (RO) Reserved bits
    NOR_BN1_RLS_QID[22..16]      - (RW) Normal BN1 TX packet release DST QID
                                     Note: This setting only support BN1 FuncQ. BN1 AC Queue would follow NOR_RLS_QID setting
    RESERVED23[23]               - (RO) Reserved bits
    NOR_BN1_RLS_PID[25..24]      - (RW) Normal BN1 TX packet release DST PID
                                     Note: This setting only support BN1 FuncQ. BN1 AC Queue would follow NOR_RLS_PID setting
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_RELEASE_CTRL_3_NOR_BN1_RLS_PID_ADDR         WF_PLE_TOP_RELEASE_CTRL_3_ADDR
#define WF_PLE_TOP_RELEASE_CTRL_3_NOR_BN1_RLS_PID_MASK         0x03000000                // NOR_BN1_RLS_PID[25..24]
#define WF_PLE_TOP_RELEASE_CTRL_3_NOR_BN1_RLS_PID_SHFT         24
#define WF_PLE_TOP_RELEASE_CTRL_3_NOR_BN1_RLS_QID_ADDR         WF_PLE_TOP_RELEASE_CTRL_3_ADDR
#define WF_PLE_TOP_RELEASE_CTRL_3_NOR_BN1_RLS_QID_MASK         0x007F0000                // NOR_BN1_RLS_QID[22..16]
#define WF_PLE_TOP_RELEASE_CTRL_3_NOR_BN1_RLS_QID_SHFT         16
#define WF_PLE_TOP_RELEASE_CTRL_3_RLS_FREE_DONE_PG_SIZE_ADDR   WF_PLE_TOP_RELEASE_CTRL_3_ADDR
#define WF_PLE_TOP_RELEASE_CTRL_3_RLS_FREE_DONE_PG_SIZE_MASK   0x0000000F                // RLS_FREE_DONE_PG_SIZE[3..0]
#define WF_PLE_TOP_RELEASE_CTRL_3_RLS_FREE_DONE_PG_SIZE_SHFT   0

/* =====================================================================================

  ---BLK_MODE_RATE_LMT (0x820c0000 + 0xac)---

    BN0_MACTX_BLK_RATE_LMT[15..0] - (RW) TX Rate limitaion of CutThrough data block mode. The rate less then the limitation would turn on block mode.
    BN1_MACTX_BLK_RATE_LMT[31..16] - (RW) TX Rate limitaion of CutThrough data block mode. The rate less then the limitation would turn on block mode.

 =====================================================================================*/
#define WF_PLE_TOP_BLK_MODE_RATE_LMT_BN1_MACTX_BLK_RATE_LMT_ADDR WF_PLE_TOP_BLK_MODE_RATE_LMT_ADDR
#define WF_PLE_TOP_BLK_MODE_RATE_LMT_BN1_MACTX_BLK_RATE_LMT_MASK 0xFFFF0000                // BN1_MACTX_BLK_RATE_LMT[31..16]
#define WF_PLE_TOP_BLK_MODE_RATE_LMT_BN1_MACTX_BLK_RATE_LMT_SHFT 16
#define WF_PLE_TOP_BLK_MODE_RATE_LMT_BN0_MACTX_BLK_RATE_LMT_ADDR WF_PLE_TOP_BLK_MODE_RATE_LMT_ADDR
#define WF_PLE_TOP_BLK_MODE_RATE_LMT_BN0_MACTX_BLK_RATE_LMT_MASK 0x0000FFFF                // BN0_MACTX_BLK_RATE_LMT[15..0]
#define WF_PLE_TOP_BLK_MODE_RATE_LMT_BN0_MACTX_BLK_RATE_LMT_SHFT 0

/* =====================================================================================

  ---PLE_MODULE_CKG_DIS (0x820c0000 + 0xb0)---

    DIS_FL_DYN_CKG[0]            - (RW) Disable control of PLE frame link module dynamic clock gating function
    DIS_PL_DYN_CKG[1]            - (RW) Disable control of PLE page link module dynamic clock gating function
    DIS_CPU_PORT_DYN_CKG[2]      - (RW) Disable control of PLE CPU port module dynamic clock gating function
    DIS_HIF_PORT_DYN_CKG[3]      - (RW) Disable control of PLE HIF port module dynamic clock gating function
    DIS_WF_PORT_DYN_CKG[4]       - (RW) Disable control of PLE LMAC module dynamic clock gating function
    DIS_RLS_DYN_CKG[5]           - (RW) Disable control of PLE release module dynamic clock gating function
    DIS_RL_DYN_CKG[6]            - (RW) Disable control of PLE relay information module dynamic clock gating function
    DIS_MACTX_DYN_CKG[7]         - (RW) Disable control of PLE MACTX module dynamic clock gating function
    DIS_PSEPORT_DYN_CKG[8]       - (RW) Disable control of PLE PSE port module dynamic clock gating function
    DIS_CSR_DYN_CKG[9]           - (RW) Disable control of PLE CR module dynamic clock gating function
    DIS_CPU_WRAP_DYN_CKG[10]     - (RW) Disable control of PLE CPU_WRAP module dynamic clock gating function
    DIS_DBG_DYN_CKG[11]          - (RW) Disable control of PLE debug module dynamic clock gating function
    DIS_AMSDU_PORT_DYN_CKG[12]   - (RW) Disable control of PLE AMSDU port module dynamic clock gating function
    RESERVED13[15..13]           - (RO) Reserved bits
    DIS_UWTBL_DYN_CKG[16]        - (RW) Disable control of UWTBL module dynamic clock gating function
    DIS_MDP_DYN_CKG[17]          - (RW) Disable control of MDP module dynamic clock gating function
    DIS_SEC_DYN_CKG[18]          - (RW) Disable control of SEC module dynamic clock gating function
    DIS_PF_DYN_CKG[19]           - (RW) Disable control of PF module dynamic clock gating function
    DIS_MUCOP_DYN_CKG[20]        - (RW) Disable control of MUCOP module dynamic clock gating function
    RESERVED21[31..21]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_MUCOP_DYN_CKG_ADDR   WF_PLE_TOP_PLE_MODULE_CKG_DIS_ADDR
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_MUCOP_DYN_CKG_MASK   0x00100000                // DIS_MUCOP_DYN_CKG[20]
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_MUCOP_DYN_CKG_SHFT   20
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_PF_DYN_CKG_ADDR      WF_PLE_TOP_PLE_MODULE_CKG_DIS_ADDR
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_PF_DYN_CKG_MASK      0x00080000                // DIS_PF_DYN_CKG[19]
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_PF_DYN_CKG_SHFT      19
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_SEC_DYN_CKG_ADDR     WF_PLE_TOP_PLE_MODULE_CKG_DIS_ADDR
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_SEC_DYN_CKG_MASK     0x00040000                // DIS_SEC_DYN_CKG[18]
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_SEC_DYN_CKG_SHFT     18
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_MDP_DYN_CKG_ADDR     WF_PLE_TOP_PLE_MODULE_CKG_DIS_ADDR
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_MDP_DYN_CKG_MASK     0x00020000                // DIS_MDP_DYN_CKG[17]
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_MDP_DYN_CKG_SHFT     17
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_UWTBL_DYN_CKG_ADDR   WF_PLE_TOP_PLE_MODULE_CKG_DIS_ADDR
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_UWTBL_DYN_CKG_MASK   0x00010000                // DIS_UWTBL_DYN_CKG[16]
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_UWTBL_DYN_CKG_SHFT   16
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_AMSDU_PORT_DYN_CKG_ADDR WF_PLE_TOP_PLE_MODULE_CKG_DIS_ADDR
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_AMSDU_PORT_DYN_CKG_MASK 0x00001000                // DIS_AMSDU_PORT_DYN_CKG[12]
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_AMSDU_PORT_DYN_CKG_SHFT 12
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_DBG_DYN_CKG_ADDR     WF_PLE_TOP_PLE_MODULE_CKG_DIS_ADDR
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_DBG_DYN_CKG_MASK     0x00000800                // DIS_DBG_DYN_CKG[11]
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_DBG_DYN_CKG_SHFT     11
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_CPU_WRAP_DYN_CKG_ADDR WF_PLE_TOP_PLE_MODULE_CKG_DIS_ADDR
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_CPU_WRAP_DYN_CKG_MASK 0x00000400                // DIS_CPU_WRAP_DYN_CKG[10]
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_CPU_WRAP_DYN_CKG_SHFT 10
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_CSR_DYN_CKG_ADDR     WF_PLE_TOP_PLE_MODULE_CKG_DIS_ADDR
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_CSR_DYN_CKG_MASK     0x00000200                // DIS_CSR_DYN_CKG[9]
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_CSR_DYN_CKG_SHFT     9
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_PSEPORT_DYN_CKG_ADDR WF_PLE_TOP_PLE_MODULE_CKG_DIS_ADDR
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_PSEPORT_DYN_CKG_MASK 0x00000100                // DIS_PSEPORT_DYN_CKG[8]
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_PSEPORT_DYN_CKG_SHFT 8
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_MACTX_DYN_CKG_ADDR   WF_PLE_TOP_PLE_MODULE_CKG_DIS_ADDR
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_MACTX_DYN_CKG_MASK   0x00000080                // DIS_MACTX_DYN_CKG[7]
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_MACTX_DYN_CKG_SHFT   7
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_RL_DYN_CKG_ADDR      WF_PLE_TOP_PLE_MODULE_CKG_DIS_ADDR
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_RL_DYN_CKG_MASK      0x00000040                // DIS_RL_DYN_CKG[6]
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_RL_DYN_CKG_SHFT      6
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_RLS_DYN_CKG_ADDR     WF_PLE_TOP_PLE_MODULE_CKG_DIS_ADDR
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_RLS_DYN_CKG_MASK     0x00000020                // DIS_RLS_DYN_CKG[5]
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_RLS_DYN_CKG_SHFT     5
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_WF_PORT_DYN_CKG_ADDR WF_PLE_TOP_PLE_MODULE_CKG_DIS_ADDR
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_WF_PORT_DYN_CKG_MASK 0x00000010                // DIS_WF_PORT_DYN_CKG[4]
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_WF_PORT_DYN_CKG_SHFT 4
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_HIF_PORT_DYN_CKG_ADDR WF_PLE_TOP_PLE_MODULE_CKG_DIS_ADDR
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_HIF_PORT_DYN_CKG_MASK 0x00000008                // DIS_HIF_PORT_DYN_CKG[3]
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_HIF_PORT_DYN_CKG_SHFT 3
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_CPU_PORT_DYN_CKG_ADDR WF_PLE_TOP_PLE_MODULE_CKG_DIS_ADDR
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_CPU_PORT_DYN_CKG_MASK 0x00000004                // DIS_CPU_PORT_DYN_CKG[2]
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_CPU_PORT_DYN_CKG_SHFT 2
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_PL_DYN_CKG_ADDR      WF_PLE_TOP_PLE_MODULE_CKG_DIS_ADDR
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_PL_DYN_CKG_MASK      0x00000002                // DIS_PL_DYN_CKG[1]
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_PL_DYN_CKG_SHFT      1
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_FL_DYN_CKG_ADDR      WF_PLE_TOP_PLE_MODULE_CKG_DIS_ADDR
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_FL_DYN_CKG_MASK      0x00000001                // DIS_FL_DYN_CKG[0]
#define WF_PLE_TOP_PLE_MODULE_CKG_DIS_DIS_FL_DYN_CKG_SHFT      0

/* =====================================================================================

  ---PLE_DELAY_TX_CTRL (0x820c0000 + 0xb4)---

    DELAY_TX_PAGE_TH[11..0]      - (RW) Delay TX function is used to delay TXD be LMAC used. If the total pages of TXD large than page threshold, the delay TX would be released. LMAC would use TXD to TX.
    RESERVED12[15..12]           - (RO) Reserved bits
    DELAY_TX_TIMEOUT_TH[23..16]  - (RW) Delay TX function is used to delay TXD be LMAC used. IF no more enqueue event in the time out threshold, the delay TX would be released. LMAC can use TXD to TX. (unit is 32us).
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_PLE_DELAY_TX_CTRL_DELAY_TX_TIMEOUT_TH_ADDR  WF_PLE_TOP_PLE_DELAY_TX_CTRL_ADDR
#define WF_PLE_TOP_PLE_DELAY_TX_CTRL_DELAY_TX_TIMEOUT_TH_MASK  0x00FF0000                // DELAY_TX_TIMEOUT_TH[23..16]
#define WF_PLE_TOP_PLE_DELAY_TX_CTRL_DELAY_TX_TIMEOUT_TH_SHFT  16
#define WF_PLE_TOP_PLE_DELAY_TX_CTRL_DELAY_TX_PAGE_TH_ADDR     WF_PLE_TOP_PLE_DELAY_TX_CTRL_ADDR
#define WF_PLE_TOP_PLE_DELAY_TX_CTRL_DELAY_TX_PAGE_TH_MASK     0x00000FFF                // DELAY_TX_PAGE_TH[11..0]
#define WF_PLE_TOP_PLE_DELAY_TX_CTRL_DELAY_TX_PAGE_TH_SHFT     0

/* =====================================================================================

  ---PLE_STATION_REDIR_CTRL (0x820c0000 + 0xb8)---

    STA_REDIR_QID[4..0]          - (RW) Destitaion queue for Redirection function.
    RESERVED5[5]                 - (RO) Reserved bits
    STA_REDIR_PID[7..6]          - (RW) Destitaion port for Redirection function.
    STA_REDIR_PASUE_TXD[8]       - (RW) Pause TXD download for avoid race condition, when station redirection function turn off.
    RESERVED9[31..9]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_PLE_STATION_REDIR_CTRL_STA_REDIR_PASUE_TXD_ADDR WF_PLE_TOP_PLE_STATION_REDIR_CTRL_ADDR
#define WF_PLE_TOP_PLE_STATION_REDIR_CTRL_STA_REDIR_PASUE_TXD_MASK 0x00000100                // STA_REDIR_PASUE_TXD[8]
#define WF_PLE_TOP_PLE_STATION_REDIR_CTRL_STA_REDIR_PASUE_TXD_SHFT 8
#define WF_PLE_TOP_PLE_STATION_REDIR_CTRL_STA_REDIR_PID_ADDR   WF_PLE_TOP_PLE_STATION_REDIR_CTRL_ADDR
#define WF_PLE_TOP_PLE_STATION_REDIR_CTRL_STA_REDIR_PID_MASK   0x000000C0                // STA_REDIR_PID[7..6]
#define WF_PLE_TOP_PLE_STATION_REDIR_CTRL_STA_REDIR_PID_SHFT   6
#define WF_PLE_TOP_PLE_STATION_REDIR_CTRL_STA_REDIR_QID_ADDR   WF_PLE_TOP_PLE_STATION_REDIR_CTRL_ADDR
#define WF_PLE_TOP_PLE_STATION_REDIR_CTRL_STA_REDIR_QID_MASK   0x0000001F                // STA_REDIR_QID[4..0]
#define WF_PLE_TOP_PLE_STATION_REDIR_CTRL_STA_REDIR_QID_SHFT   0

/* =====================================================================================

  ---MACTX_LENGTH_LIMIT (0x820c0000 + 0xBC)---

    MACTX_LENGTH_LIMIT_BAND0[15..0] - (RW) MACTX download length limit of band0
    MACTX_LENGTH_LIMIT_BAND1[31..16] - (RW) MACTX download length limit of band1

 =====================================================================================*/
#define WF_PLE_TOP_MACTX_LENGTH_LIMIT_MACTX_LENGTH_LIMIT_BAND1_ADDR WF_PLE_TOP_MACTX_LENGTH_LIMIT_ADDR
#define WF_PLE_TOP_MACTX_LENGTH_LIMIT_MACTX_LENGTH_LIMIT_BAND1_MASK 0xFFFF0000                // MACTX_LENGTH_LIMIT_BAND1[31..16]
#define WF_PLE_TOP_MACTX_LENGTH_LIMIT_MACTX_LENGTH_LIMIT_BAND1_SHFT 16
#define WF_PLE_TOP_MACTX_LENGTH_LIMIT_MACTX_LENGTH_LIMIT_BAND0_ADDR WF_PLE_TOP_MACTX_LENGTH_LIMIT_ADDR
#define WF_PLE_TOP_MACTX_LENGTH_LIMIT_MACTX_LENGTH_LIMIT_BAND0_MASK 0x0000FFFF                // MACTX_LENGTH_LIMIT_BAND0[15..0]
#define WF_PLE_TOP_MACTX_LENGTH_LIMIT_MACTX_LENGTH_LIMIT_BAND0_SHFT 0

/* =====================================================================================

  ---TXS_BUF_PAUSE (0x820c0000 + 0xc0)---

    EN_PAUSE_AC00_QUEUE[0]       - (RW) Pause control of WMM0 AC0 queue.
    EN_PAUSE_AC01_QUEUE[1]       - (RW) Pause control of WMM0 AC1 queue.
    EN_PAUSE_AC02_QUEUE[2]       - (RW) Pause control of WMM0 AC2 queue.
    EN_PAUSE_AC03_QUEUE[3]       - (RW) Pause control of WMM0 AC3 queue.
    EN_PAUSE_AC10_QUEUE[4]       - (RW) Pause control of WMM1 AC0 queue.
    EN_PAUSE_AC11_QUEUE[5]       - (RW) Pause control of WMM1 AC1 queue.
    EN_PAUSE_AC12_QUEUE[6]       - (RW) Pause control of WMM1 AC2 queue.
    EN_PAUSE_AC13_QUEUE[7]       - (RW) Pause control of WMM1 AC3 queue.
    EN_PAUSE_AC20_QUEUE[8]       - (RW) Pause control of WMM2 AC0 queue.
    EN_PAUSE_AC21_QUEUE[9]       - (RW) Pause control of WMM2 AC1 queue.
    EN_PAUSE_AC22_QUEUE[10]      - (RW) Pause control of WMM2 AC2 queue.
    EN_PAUSE_AC23_QUEUE[11]      - (RW) Pause control of WMM2 AC3 queue.
    EN_PAUSE_AC30_QUEUE[12]      - (RW) Pause control of WMM3 AC0 queue.
    EN_PAUSE_AC31_QUEUE[13]      - (RW) Pause control of WMM3 AC1 queue.
    EN_PAUSE_AC32_QUEUE[14]      - (RW) Pause control of WMM3 AC2 queue.
    EN_PAUSE_AC33_QUEUE[15]      - (RW) Pause control of WMM3 AC3 queue.
    EN_PAUSE_ALTX_QUEUE[16]      - (RW) Pause control of ALTX queue.
    EN_PAUSE_BMC_QUEUE[17]       - (RW) Pause control of BMC queue.
    EN_PAUSE_BCN_QUEUE[18]       - (RW) Pause control of BCN queue.
    EN_PAUSE_PSMP_QUEUE[19]      - (RW) Pause control of PSMP queue.
    EN_PAUSE_NAF_QUEUE[20]       - (RW) Pause control of NAF queue.
    EN_PAUSE_NBCN_QUEUE[21]      - (RW) Pause control of NBCN queue.
    RESERVED22[30..22]           - (RO) Reserved bits
    PSE_TXS_BUF_VALID[31]        - (RO) PSE TXS buffer status.

 =====================================================================================*/
#define WF_PLE_TOP_TXS_BUF_PAUSE_PSE_TXS_BUF_VALID_ADDR        WF_PLE_TOP_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXS_BUF_PAUSE_PSE_TXS_BUF_VALID_MASK        0x80000000                // PSE_TXS_BUF_VALID[31]
#define WF_PLE_TOP_TXS_BUF_PAUSE_PSE_TXS_BUF_VALID_SHFT        31
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_NBCN_QUEUE_ADDR      WF_PLE_TOP_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_NBCN_QUEUE_MASK      0x00200000                // EN_PAUSE_NBCN_QUEUE[21]
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_NBCN_QUEUE_SHFT      21
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_NAF_QUEUE_ADDR       WF_PLE_TOP_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_NAF_QUEUE_MASK       0x00100000                // EN_PAUSE_NAF_QUEUE[20]
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_NAF_QUEUE_SHFT       20
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_PSMP_QUEUE_ADDR      WF_PLE_TOP_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_PSMP_QUEUE_MASK      0x00080000                // EN_PAUSE_PSMP_QUEUE[19]
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_PSMP_QUEUE_SHFT      19
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_BCN_QUEUE_ADDR       WF_PLE_TOP_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_BCN_QUEUE_MASK       0x00040000                // EN_PAUSE_BCN_QUEUE[18]
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_BCN_QUEUE_SHFT       18
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_BMC_QUEUE_ADDR       WF_PLE_TOP_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_BMC_QUEUE_MASK       0x00020000                // EN_PAUSE_BMC_QUEUE[17]
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_BMC_QUEUE_SHFT       17
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_ALTX_QUEUE_ADDR      WF_PLE_TOP_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_ALTX_QUEUE_MASK      0x00010000                // EN_PAUSE_ALTX_QUEUE[16]
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_ALTX_QUEUE_SHFT      16
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC33_QUEUE_ADDR      WF_PLE_TOP_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC33_QUEUE_MASK      0x00008000                // EN_PAUSE_AC33_QUEUE[15]
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC33_QUEUE_SHFT      15
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC32_QUEUE_ADDR      WF_PLE_TOP_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC32_QUEUE_MASK      0x00004000                // EN_PAUSE_AC32_QUEUE[14]
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC32_QUEUE_SHFT      14
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC31_QUEUE_ADDR      WF_PLE_TOP_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC31_QUEUE_MASK      0x00002000                // EN_PAUSE_AC31_QUEUE[13]
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC31_QUEUE_SHFT      13
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC30_QUEUE_ADDR      WF_PLE_TOP_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC30_QUEUE_MASK      0x00001000                // EN_PAUSE_AC30_QUEUE[12]
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC30_QUEUE_SHFT      12
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC23_QUEUE_ADDR      WF_PLE_TOP_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC23_QUEUE_MASK      0x00000800                // EN_PAUSE_AC23_QUEUE[11]
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC23_QUEUE_SHFT      11
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC22_QUEUE_ADDR      WF_PLE_TOP_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC22_QUEUE_MASK      0x00000400                // EN_PAUSE_AC22_QUEUE[10]
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC22_QUEUE_SHFT      10
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC21_QUEUE_ADDR      WF_PLE_TOP_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC21_QUEUE_MASK      0x00000200                // EN_PAUSE_AC21_QUEUE[9]
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC21_QUEUE_SHFT      9
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC20_QUEUE_ADDR      WF_PLE_TOP_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC20_QUEUE_MASK      0x00000100                // EN_PAUSE_AC20_QUEUE[8]
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC20_QUEUE_SHFT      8
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC13_QUEUE_ADDR      WF_PLE_TOP_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC13_QUEUE_MASK      0x00000080                // EN_PAUSE_AC13_QUEUE[7]
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC13_QUEUE_SHFT      7
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC12_QUEUE_ADDR      WF_PLE_TOP_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC12_QUEUE_MASK      0x00000040                // EN_PAUSE_AC12_QUEUE[6]
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC12_QUEUE_SHFT      6
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC11_QUEUE_ADDR      WF_PLE_TOP_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC11_QUEUE_MASK      0x00000020                // EN_PAUSE_AC11_QUEUE[5]
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC11_QUEUE_SHFT      5
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC10_QUEUE_ADDR      WF_PLE_TOP_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC10_QUEUE_MASK      0x00000010                // EN_PAUSE_AC10_QUEUE[4]
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC10_QUEUE_SHFT      4
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC03_QUEUE_ADDR      WF_PLE_TOP_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC03_QUEUE_MASK      0x00000008                // EN_PAUSE_AC03_QUEUE[3]
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC03_QUEUE_SHFT      3
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC02_QUEUE_ADDR      WF_PLE_TOP_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC02_QUEUE_MASK      0x00000004                // EN_PAUSE_AC02_QUEUE[2]
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC02_QUEUE_SHFT      2
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC01_QUEUE_ADDR      WF_PLE_TOP_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC01_QUEUE_MASK      0x00000002                // EN_PAUSE_AC01_QUEUE[1]
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC01_QUEUE_SHFT      1
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC00_QUEUE_ADDR      WF_PLE_TOP_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC00_QUEUE_MASK      0x00000001                // EN_PAUSE_AC00_QUEUE[0]
#define WF_PLE_TOP_TXS_BUF_PAUSE_EN_PAUSE_AC00_QUEUE_SHFT      0

/* =====================================================================================

  ---TXCMD_QUEUE_PAUSE (0x820c0000 + 0xc4)---

    EN_PAUSE_AC00_QUEUE[0]       - (RW) Pause control of WMM0 AC0 TXCMD queue.
    EN_PAUSE_AC01_QUEUE[1]       - (RW) Pause control of WMM0 AC1 TXCMD queue.
    EN_PAUSE_AC02_QUEUE[2]       - (RW) Pause control of WMM0 AC2 TXCMD queue.
    EN_PAUSE_AC03_QUEUE[3]       - (RW) Pause control of WMM0 AC3 TXCMD queue.
    EN_PAUSE_AC10_QUEUE[4]       - (RW) Pause control of WMM1 AC0 TXCMD queue.
    EN_PAUSE_AC11_QUEUE[5]       - (RW) Pause control of WMM1 AC1 TXCMD queue.
    EN_PAUSE_AC12_QUEUE[6]       - (RW) Pause control of WMM1 AC2 TXCMD queue.
    EN_PAUSE_AC13_QUEUE[7]       - (RW) Pause control of WMM1 AC3 TXCMD queue.
    EN_PAUSE_AC20_QUEUE[8]       - (RW) Pause control of WMM2 AC0 TXCMD queue.
    EN_PAUSE_AC21_QUEUE[9]       - (RW) Pause control of WMM2 AC1 TXCMD queue.
    EN_PAUSE_AC22_QUEUE[10]      - (RW) Pause control of WMM2 AC2 TXCMD queue.
    EN_PAUSE_AC23_QUEUE[11]      - (RW) Pause control of WMM2 AC3 TXCMD queue.
    EN_PAUSE_AC30_QUEUE[12]      - (RW) Pause control of WMM3 AC0 TXCMD queue.
    EN_PAUSE_AC31_QUEUE[13]      - (RW) Pause control of WMM3 AC1 TXCMD queue.
    EN_PAUSE_AC32_QUEUE[14]      - (RW) Pause control of WMM3 AC2 TXCMD queue.
    EN_PAUSE_AC33_QUEUE[15]      - (RW) Pause control of WMM3 AC3 TXCMD queue.
    EN_PAUSE_ALTXCMD_QUEUE[16]   - (RW) Pause control of ALTXCMD queue.
    EN_PAUSE_TF_QUEUE[17]        - (RW) Pause control of TF TXCDM queue .
    EN_PAUSE_TWT_TSF_TF_QUEUE[18] - (RW) Pause control of TWT TSF TF TXCMD queue.
    EN_PAUSE_TWT_DL_QUEUE[19]    - (RW) Pause control of TWT DL TXCMD queue.
    EN_PAUSE_TWT_UL_QUEUE[20]    - (RW) Pause control of TWT UL TXCMD queue.
    RESERVED21[31..21]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_UL_QUEUE_ADDR WF_PLE_TOP_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_UL_QUEUE_MASK 0x00100000                // EN_PAUSE_TWT_UL_QUEUE[20]
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_UL_QUEUE_SHFT 20
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_DL_QUEUE_ADDR WF_PLE_TOP_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_DL_QUEUE_MASK 0x00080000                // EN_PAUSE_TWT_DL_QUEUE[19]
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_DL_QUEUE_SHFT 19
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_TSF_TF_QUEUE_ADDR WF_PLE_TOP_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_TSF_TF_QUEUE_MASK 0x00040000                // EN_PAUSE_TWT_TSF_TF_QUEUE[18]
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_TSF_TF_QUEUE_SHFT 18
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_TF_QUEUE_ADDR    WF_PLE_TOP_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_TF_QUEUE_MASK    0x00020000                // EN_PAUSE_TF_QUEUE[17]
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_TF_QUEUE_SHFT    17
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_ALTXCMD_QUEUE_ADDR WF_PLE_TOP_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_ALTXCMD_QUEUE_MASK 0x00010000                // EN_PAUSE_ALTXCMD_QUEUE[16]
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_ALTXCMD_QUEUE_SHFT 16
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC33_QUEUE_ADDR  WF_PLE_TOP_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC33_QUEUE_MASK  0x00008000                // EN_PAUSE_AC33_QUEUE[15]
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC33_QUEUE_SHFT  15
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC32_QUEUE_ADDR  WF_PLE_TOP_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC32_QUEUE_MASK  0x00004000                // EN_PAUSE_AC32_QUEUE[14]
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC32_QUEUE_SHFT  14
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC31_QUEUE_ADDR  WF_PLE_TOP_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC31_QUEUE_MASK  0x00002000                // EN_PAUSE_AC31_QUEUE[13]
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC31_QUEUE_SHFT  13
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC30_QUEUE_ADDR  WF_PLE_TOP_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC30_QUEUE_MASK  0x00001000                // EN_PAUSE_AC30_QUEUE[12]
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC30_QUEUE_SHFT  12
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC23_QUEUE_ADDR  WF_PLE_TOP_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC23_QUEUE_MASK  0x00000800                // EN_PAUSE_AC23_QUEUE[11]
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC23_QUEUE_SHFT  11
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC22_QUEUE_ADDR  WF_PLE_TOP_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC22_QUEUE_MASK  0x00000400                // EN_PAUSE_AC22_QUEUE[10]
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC22_QUEUE_SHFT  10
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC21_QUEUE_ADDR  WF_PLE_TOP_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC21_QUEUE_MASK  0x00000200                // EN_PAUSE_AC21_QUEUE[9]
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC21_QUEUE_SHFT  9
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC20_QUEUE_ADDR  WF_PLE_TOP_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC20_QUEUE_MASK  0x00000100                // EN_PAUSE_AC20_QUEUE[8]
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC20_QUEUE_SHFT  8
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC13_QUEUE_ADDR  WF_PLE_TOP_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC13_QUEUE_MASK  0x00000080                // EN_PAUSE_AC13_QUEUE[7]
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC13_QUEUE_SHFT  7
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC12_QUEUE_ADDR  WF_PLE_TOP_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC12_QUEUE_MASK  0x00000040                // EN_PAUSE_AC12_QUEUE[6]
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC12_QUEUE_SHFT  6
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC11_QUEUE_ADDR  WF_PLE_TOP_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC11_QUEUE_MASK  0x00000020                // EN_PAUSE_AC11_QUEUE[5]
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC11_QUEUE_SHFT  5
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC10_QUEUE_ADDR  WF_PLE_TOP_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC10_QUEUE_MASK  0x00000010                // EN_PAUSE_AC10_QUEUE[4]
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC10_QUEUE_SHFT  4
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC03_QUEUE_ADDR  WF_PLE_TOP_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC03_QUEUE_MASK  0x00000008                // EN_PAUSE_AC03_QUEUE[3]
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC03_QUEUE_SHFT  3
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC02_QUEUE_ADDR  WF_PLE_TOP_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC02_QUEUE_MASK  0x00000004                // EN_PAUSE_AC02_QUEUE[2]
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC02_QUEUE_SHFT  2
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC01_QUEUE_ADDR  WF_PLE_TOP_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC01_QUEUE_MASK  0x00000002                // EN_PAUSE_AC01_QUEUE[1]
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC01_QUEUE_SHFT  1
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC00_QUEUE_ADDR  WF_PLE_TOP_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC00_QUEUE_MASK  0x00000001                // EN_PAUSE_AC00_QUEUE[0]
#define WF_PLE_TOP_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC00_QUEUE_SHFT  0

/* =====================================================================================

  ---BN1_TXCMD_QUEUE_PAUSE (0x820c0000 + 0xc8)---

    EN_PAUSE_AC00_QUEUE[0]       - (RW) Pause control of WMM0 AC0 TXCMD queue.
    EN_PAUSE_AC01_QUEUE[1]       - (RW) Pause control of WMM0 AC1 TXCMD queue.
    EN_PAUSE_AC02_QUEUE[2]       - (RW) Pause control of WMM0 AC2 TXCMD queue.
    EN_PAUSE_AC03_QUEUE[3]       - (RW) Pause control of WMM0 AC3 TXCMD queue.
    EN_PAUSE_AC10_QUEUE[4]       - (RW) Pause control of WMM1 AC0 TXCMD queue.
    EN_PAUSE_AC11_QUEUE[5]       - (RW) Pause control of WMM1 AC1 TXCMD queue.
    EN_PAUSE_AC12_QUEUE[6]       - (RW) Pause control of WMM1 AC2 TXCMD queue.
    EN_PAUSE_AC13_QUEUE[7]       - (RW) Pause control of WMM1 AC3 TXCMD queue.
    EN_PAUSE_AC20_QUEUE[8]       - (RW) Pause control of WMM2 AC0 TXCMD queue.
    EN_PAUSE_AC21_QUEUE[9]       - (RW) Pause control of WMM2 AC1 TXCMD queue.
    EN_PAUSE_AC22_QUEUE[10]      - (RW) Pause control of WMM2 AC2 TXCMD queue.
    EN_PAUSE_AC23_QUEUE[11]      - (RW) Pause control of WMM2 AC3 TXCMD queue.
    EN_PAUSE_AC30_QUEUE[12]      - (RW) Pause control of WMM3 AC0 TXCMD queue.
    EN_PAUSE_AC31_QUEUE[13]      - (RW) Pause control of WMM3 AC1 TXCMD queue.
    EN_PAUSE_AC32_QUEUE[14]      - (RW) Pause control of WMM3 AC2 TXCMD queue.
    EN_PAUSE_AC33_QUEUE[15]      - (RW) Pause control of WMM3 AC3 TXCMD queue.
    EN_PAUSE_ALTXCMD_QUEUE[16]   - (RW) Pause control of ALTXCMD queue.
    EN_PAUSE_TF_QUEUE[17]        - (RW) Pause control of TF TXCDM queue .
    EN_PAUSE_TWT_TSF_TF_QUEUE[18] - (RW) Pause control of TWT TSF TF TXCMD queue.
    EN_PAUSE_TWT_DL_QUEUE[19]    - (RW) Pause control of TWT DL TXCMD queue.
    EN_PAUSE_TWT_UL_QUEUE[20]    - (RW) Pause control of TWT UL TXCMD queue.
    RESERVED21[31..21]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_UL_QUEUE_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_UL_QUEUE_MASK 0x00100000                // EN_PAUSE_TWT_UL_QUEUE[20]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_UL_QUEUE_SHFT 20
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_DL_QUEUE_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_DL_QUEUE_MASK 0x00080000                // EN_PAUSE_TWT_DL_QUEUE[19]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_DL_QUEUE_SHFT 19
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_TSF_TF_QUEUE_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_TSF_TF_QUEUE_MASK 0x00040000                // EN_PAUSE_TWT_TSF_TF_QUEUE[18]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_TSF_TF_QUEUE_SHFT 18
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_TF_QUEUE_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_TF_QUEUE_MASK 0x00020000                // EN_PAUSE_TF_QUEUE[17]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_TF_QUEUE_SHFT 17
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_ALTXCMD_QUEUE_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_ALTXCMD_QUEUE_MASK 0x00010000                // EN_PAUSE_ALTXCMD_QUEUE[16]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_ALTXCMD_QUEUE_SHFT 16
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC33_QUEUE_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC33_QUEUE_MASK 0x00008000                // EN_PAUSE_AC33_QUEUE[15]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC33_QUEUE_SHFT 15
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC32_QUEUE_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC32_QUEUE_MASK 0x00004000                // EN_PAUSE_AC32_QUEUE[14]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC32_QUEUE_SHFT 14
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC31_QUEUE_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC31_QUEUE_MASK 0x00002000                // EN_PAUSE_AC31_QUEUE[13]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC31_QUEUE_SHFT 13
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC30_QUEUE_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC30_QUEUE_MASK 0x00001000                // EN_PAUSE_AC30_QUEUE[12]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC30_QUEUE_SHFT 12
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC23_QUEUE_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC23_QUEUE_MASK 0x00000800                // EN_PAUSE_AC23_QUEUE[11]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC23_QUEUE_SHFT 11
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC22_QUEUE_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC22_QUEUE_MASK 0x00000400                // EN_PAUSE_AC22_QUEUE[10]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC22_QUEUE_SHFT 10
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC21_QUEUE_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC21_QUEUE_MASK 0x00000200                // EN_PAUSE_AC21_QUEUE[9]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC21_QUEUE_SHFT 9
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC20_QUEUE_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC20_QUEUE_MASK 0x00000100                // EN_PAUSE_AC20_QUEUE[8]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC20_QUEUE_SHFT 8
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC13_QUEUE_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC13_QUEUE_MASK 0x00000080                // EN_PAUSE_AC13_QUEUE[7]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC13_QUEUE_SHFT 7
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC12_QUEUE_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC12_QUEUE_MASK 0x00000040                // EN_PAUSE_AC12_QUEUE[6]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC12_QUEUE_SHFT 6
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC11_QUEUE_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC11_QUEUE_MASK 0x00000020                // EN_PAUSE_AC11_QUEUE[5]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC11_QUEUE_SHFT 5
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC10_QUEUE_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC10_QUEUE_MASK 0x00000010                // EN_PAUSE_AC10_QUEUE[4]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC10_QUEUE_SHFT 4
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC03_QUEUE_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC03_QUEUE_MASK 0x00000008                // EN_PAUSE_AC03_QUEUE[3]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC03_QUEUE_SHFT 3
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC02_QUEUE_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC02_QUEUE_MASK 0x00000004                // EN_PAUSE_AC02_QUEUE[2]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC02_QUEUE_SHFT 2
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC01_QUEUE_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC01_QUEUE_MASK 0x00000002                // EN_PAUSE_AC01_QUEUE[1]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC01_QUEUE_SHFT 1
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC00_QUEUE_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC00_QUEUE_MASK 0x00000001                // EN_PAUSE_AC00_QUEUE[0]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC00_QUEUE_SHFT 0

/* =====================================================================================

  ---BN2_TXCMD_QUEUE_PAUSE (0x820c0000 + 0xcC)---

    EN_PAUSE_AC00_QUEUE[0]       - (RW) Pause control of WMM0 AC0 TXCMD queue.
    EN_PAUSE_AC01_QUEUE[1]       - (RW) Pause control of WMM0 AC1 TXCMD queue.
    EN_PAUSE_AC02_QUEUE[2]       - (RW) Pause control of WMM0 AC2 TXCMD queue.
    EN_PAUSE_AC03_QUEUE[3]       - (RW) Pause control of WMM0 AC3 TXCMD queue.
    EN_PAUSE_AC10_QUEUE[4]       - (RW) Pause control of WMM1 AC0 TXCMD queue.
    EN_PAUSE_AC11_QUEUE[5]       - (RW) Pause control of WMM1 AC1 TXCMD queue.
    EN_PAUSE_AC12_QUEUE[6]       - (RW) Pause control of WMM1 AC2 TXCMD queue.
    EN_PAUSE_AC13_QUEUE[7]       - (RW) Pause control of WMM1 AC3 TXCMD queue.
    EN_PAUSE_AC20_QUEUE[8]       - (RW) Pause control of WMM2 AC0 TXCMD queue.
    EN_PAUSE_AC21_QUEUE[9]       - (RW) Pause control of WMM2 AC1 TXCMD queue.
    EN_PAUSE_AC22_QUEUE[10]      - (RW) Pause control of WMM2 AC2 TXCMD queue.
    EN_PAUSE_AC23_QUEUE[11]      - (RW) Pause control of WMM2 AC3 TXCMD queue.
    EN_PAUSE_AC30_QUEUE[12]      - (RW) Pause control of WMM3 AC0 TXCMD queue.
    EN_PAUSE_AC31_QUEUE[13]      - (RW) Pause control of WMM3 AC1 TXCMD queue.
    EN_PAUSE_AC32_QUEUE[14]      - (RW) Pause control of WMM3 AC2 TXCMD queue.
    EN_PAUSE_AC33_QUEUE[15]      - (RW) Pause control of WMM3 AC3 TXCMD queue.
    EN_PAUSE_ALTXCMD_QUEUE[16]   - (RW) Pause control of ALTXCMD queue.
    EN_PAUSE_TF_QUEUE[17]        - (RW) Pause control of TF TXCDM queue .
    EN_PAUSE_TWT_TSF_TF_QUEUE[18] - (RW) Pause control of TWT TSF TF TXCMD queue.
    EN_PAUSE_TWT_DL_QUEUE[19]    - (RW) Pause control of TWT DL TXCMD queue.
    EN_PAUSE_TWT_UL_QUEUE[20]    - (RW) Pause control of TWT UL TXCMD queue.
    RESERVED21[31..21]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_UL_QUEUE_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_UL_QUEUE_MASK 0x00100000                // EN_PAUSE_TWT_UL_QUEUE[20]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_UL_QUEUE_SHFT 20
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_DL_QUEUE_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_DL_QUEUE_MASK 0x00080000                // EN_PAUSE_TWT_DL_QUEUE[19]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_DL_QUEUE_SHFT 19
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_TSF_TF_QUEUE_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_TSF_TF_QUEUE_MASK 0x00040000                // EN_PAUSE_TWT_TSF_TF_QUEUE[18]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_TWT_TSF_TF_QUEUE_SHFT 18
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_TF_QUEUE_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_TF_QUEUE_MASK 0x00020000                // EN_PAUSE_TF_QUEUE[17]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_TF_QUEUE_SHFT 17
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_ALTXCMD_QUEUE_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_ALTXCMD_QUEUE_MASK 0x00010000                // EN_PAUSE_ALTXCMD_QUEUE[16]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_ALTXCMD_QUEUE_SHFT 16
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC33_QUEUE_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC33_QUEUE_MASK 0x00008000                // EN_PAUSE_AC33_QUEUE[15]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC33_QUEUE_SHFT 15
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC32_QUEUE_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC32_QUEUE_MASK 0x00004000                // EN_PAUSE_AC32_QUEUE[14]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC32_QUEUE_SHFT 14
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC31_QUEUE_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC31_QUEUE_MASK 0x00002000                // EN_PAUSE_AC31_QUEUE[13]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC31_QUEUE_SHFT 13
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC30_QUEUE_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC30_QUEUE_MASK 0x00001000                // EN_PAUSE_AC30_QUEUE[12]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC30_QUEUE_SHFT 12
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC23_QUEUE_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC23_QUEUE_MASK 0x00000800                // EN_PAUSE_AC23_QUEUE[11]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC23_QUEUE_SHFT 11
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC22_QUEUE_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC22_QUEUE_MASK 0x00000400                // EN_PAUSE_AC22_QUEUE[10]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC22_QUEUE_SHFT 10
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC21_QUEUE_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC21_QUEUE_MASK 0x00000200                // EN_PAUSE_AC21_QUEUE[9]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC21_QUEUE_SHFT 9
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC20_QUEUE_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC20_QUEUE_MASK 0x00000100                // EN_PAUSE_AC20_QUEUE[8]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC20_QUEUE_SHFT 8
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC13_QUEUE_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC13_QUEUE_MASK 0x00000080                // EN_PAUSE_AC13_QUEUE[7]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC13_QUEUE_SHFT 7
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC12_QUEUE_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC12_QUEUE_MASK 0x00000040                // EN_PAUSE_AC12_QUEUE[6]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC12_QUEUE_SHFT 6
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC11_QUEUE_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC11_QUEUE_MASK 0x00000020                // EN_PAUSE_AC11_QUEUE[5]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC11_QUEUE_SHFT 5
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC10_QUEUE_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC10_QUEUE_MASK 0x00000010                // EN_PAUSE_AC10_QUEUE[4]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC10_QUEUE_SHFT 4
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC03_QUEUE_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC03_QUEUE_MASK 0x00000008                // EN_PAUSE_AC03_QUEUE[3]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC03_QUEUE_SHFT 3
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC02_QUEUE_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC02_QUEUE_MASK 0x00000004                // EN_PAUSE_AC02_QUEUE[2]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC02_QUEUE_SHFT 2
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC01_QUEUE_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC01_QUEUE_MASK 0x00000002                // EN_PAUSE_AC01_QUEUE[1]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC01_QUEUE_SHFT 1
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC00_QUEUE_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC00_QUEUE_MASK 0x00000001                // EN_PAUSE_AC00_QUEUE[0]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_PAUSE_EN_PAUSE_AC00_QUEUE_SHFT 0

/* =====================================================================================

  ---TXCMD_TXS_BUF_PAUSE (0x820c0000 + 0xd0)---

    EN_PAUSE_AC00_QUEUE[0]       - (RW) Pause control of WMM0 AC0 TXCMD queue.
    EN_PAUSE_AC01_QUEUE[1]       - (RW) Pause control of WMM0 AC1 TXCMD queue.
    EN_PAUSE_AC02_QUEUE[2]       - (RW) Pause control of WMM0 AC2 TXCMD queue.
    EN_PAUSE_AC03_QUEUE[3]       - (RW) Pause control of WMM0 AC3 TXCMD queue.
    EN_PAUSE_AC10_QUEUE[4]       - (RW) Pause control of WMM1 AC0 TXCMD queue.
    EN_PAUSE_AC11_QUEUE[5]       - (RW) Pause control of WMM1 AC1 TXCMD queue.
    EN_PAUSE_AC12_QUEUE[6]       - (RW) Pause control of WMM1 AC2 TXCMD queue.
    EN_PAUSE_AC13_QUEUE[7]       - (RW) Pause control of WMM1 AC3 TXCMD queue.
    EN_PAUSE_AC20_QUEUE[8]       - (RW) Pause control of WMM2 AC0 TXCMD queue.
    EN_PAUSE_AC21_QUEUE[9]       - (RW) Pause control of WMM2 AC1 TXCMD queue.
    EN_PAUSE_AC22_QUEUE[10]      - (RW) Pause control of WMM2 AC2 TXCMD queue.
    EN_PAUSE_AC23_QUEUE[11]      - (RW) Pause control of WMM2 AC3 TXCMD queue.
    EN_PAUSE_AC30_QUEUE[12]      - (RW) Pause control of WMM3 AC0 TXCMD queue.
    EN_PAUSE_AC31_QUEUE[13]      - (RW) Pause control of WMM3 AC1 TXCMD queue.
    EN_PAUSE_AC32_QUEUE[14]      - (RW) Pause control of WMM3 AC2 TXCMD queue.
    EN_PAUSE_AC33_QUEUE[15]      - (RW) Pause control of WMM3 AC3 TXCMD queue.
    EN_PAUSE_ALTXCMD_0_QUEUE[16] - (RW) Pause control of ALTXCMD queue.
    EN_PAUSE_TF_0_QUEUE[17]      - (RW) Pause control of TF TXCDM queue .
    EN_PAUSE_TWT_TSF_TF_0_QUEUE[18] - (RW) Pause control of TWT TSF TF TXCMD queue.
    EN_PAUSE_TWT_DL_0_QUEUE[19]  - (RW) Pause control of TWT DL TXCMD queue.
    EN_PAUSE_TWT_UL_0_QUEUE[20]  - (RW) Pause control of TWT UL TXCMD queue.
    RESERVED21[31..21]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_TWT_UL_0_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_TWT_UL_0_QUEUE_MASK 0x00100000                // EN_PAUSE_TWT_UL_0_QUEUE[20]
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_TWT_UL_0_QUEUE_SHFT 20
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_TWT_DL_0_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_TWT_DL_0_QUEUE_MASK 0x00080000                // EN_PAUSE_TWT_DL_0_QUEUE[19]
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_TWT_DL_0_QUEUE_SHFT 19
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_TWT_TSF_TF_0_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_TWT_TSF_TF_0_QUEUE_MASK 0x00040000                // EN_PAUSE_TWT_TSF_TF_0_QUEUE[18]
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_TWT_TSF_TF_0_QUEUE_SHFT 18
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_TF_0_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_TF_0_QUEUE_MASK 0x00020000                // EN_PAUSE_TF_0_QUEUE[17]
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_TF_0_QUEUE_SHFT 17
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_ALTXCMD_0_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_ALTXCMD_0_QUEUE_MASK 0x00010000                // EN_PAUSE_ALTXCMD_0_QUEUE[16]
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_ALTXCMD_0_QUEUE_SHFT 16
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC33_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC33_QUEUE_MASK 0x00008000                // EN_PAUSE_AC33_QUEUE[15]
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC33_QUEUE_SHFT 15
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC32_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC32_QUEUE_MASK 0x00004000                // EN_PAUSE_AC32_QUEUE[14]
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC32_QUEUE_SHFT 14
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC31_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC31_QUEUE_MASK 0x00002000                // EN_PAUSE_AC31_QUEUE[13]
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC31_QUEUE_SHFT 13
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC30_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC30_QUEUE_MASK 0x00001000                // EN_PAUSE_AC30_QUEUE[12]
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC30_QUEUE_SHFT 12
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC23_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC23_QUEUE_MASK 0x00000800                // EN_PAUSE_AC23_QUEUE[11]
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC23_QUEUE_SHFT 11
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC22_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC22_QUEUE_MASK 0x00000400                // EN_PAUSE_AC22_QUEUE[10]
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC22_QUEUE_SHFT 10
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC21_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC21_QUEUE_MASK 0x00000200                // EN_PAUSE_AC21_QUEUE[9]
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC21_QUEUE_SHFT 9
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC20_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC20_QUEUE_MASK 0x00000100                // EN_PAUSE_AC20_QUEUE[8]
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC20_QUEUE_SHFT 8
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC13_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC13_QUEUE_MASK 0x00000080                // EN_PAUSE_AC13_QUEUE[7]
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC13_QUEUE_SHFT 7
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC12_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC12_QUEUE_MASK 0x00000040                // EN_PAUSE_AC12_QUEUE[6]
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC12_QUEUE_SHFT 6
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC11_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC11_QUEUE_MASK 0x00000020                // EN_PAUSE_AC11_QUEUE[5]
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC11_QUEUE_SHFT 5
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC10_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC10_QUEUE_MASK 0x00000010                // EN_PAUSE_AC10_QUEUE[4]
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC10_QUEUE_SHFT 4
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC03_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC03_QUEUE_MASK 0x00000008                // EN_PAUSE_AC03_QUEUE[3]
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC03_QUEUE_SHFT 3
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC02_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC02_QUEUE_MASK 0x00000004                // EN_PAUSE_AC02_QUEUE[2]
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC02_QUEUE_SHFT 2
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC01_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC01_QUEUE_MASK 0x00000002                // EN_PAUSE_AC01_QUEUE[1]
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC01_QUEUE_SHFT 1
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC00_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC00_QUEUE_MASK 0x00000001                // EN_PAUSE_AC00_QUEUE[0]
#define WF_PLE_TOP_TXCMD_TXS_BUF_PAUSE_EN_PAUSE_AC00_QUEUE_SHFT 0

/* =====================================================================================

  ---TXCMD_TXCMD_BUF_PAUSE (0x820c0000 + 0xd4)---

    EN_PAUSE_AC00_QUEUE[0]       - (RW) Pause control of WMM0 AC0 TXCMD queue.
    EN_PAUSE_AC01_QUEUE[1]       - (RW) Pause control of WMM0 AC1 TXCMD queue.
    EN_PAUSE_AC02_QUEUE[2]       - (RW) Pause control of WMM0 AC2 TXCMD queue.
    EN_PAUSE_AC03_QUEUE[3]       - (RW) Pause control of WMM0 AC3 TXCMD queue.
    EN_PAUSE_AC10_QUEUE[4]       - (RW) Pause control of WMM1 AC0 TXCMD queue.
    EN_PAUSE_AC11_QUEUE[5]       - (RW) Pause control of WMM1 AC1 TXCMD queue.
    EN_PAUSE_AC12_QUEUE[6]       - (RW) Pause control of WMM1 AC2 TXCMD queue.
    EN_PAUSE_AC13_QUEUE[7]       - (RW) Pause control of WMM1 AC3 TXCMD queue.
    EN_PAUSE_AC20_QUEUE[8]       - (RW) Pause control of WMM2 AC0 TXCMD queue.
    EN_PAUSE_AC21_QUEUE[9]       - (RW) Pause control of WMM2 AC1 TXCMD queue.
    EN_PAUSE_AC22_QUEUE[10]      - (RW) Pause control of WMM2 AC2 TXCMD queue.
    EN_PAUSE_AC23_QUEUE[11]      - (RW) Pause control of WMM2 AC3 TXCMD queue.
    EN_PAUSE_AC30_QUEUE[12]      - (RW) Pause control of WMM3 AC0 TXCMD queue.
    EN_PAUSE_AC31_QUEUE[13]      - (RW) Pause control of WMM3 AC1 TXCMD queue.
    EN_PAUSE_AC32_QUEUE[14]      - (RW) Pause control of WMM3 AC2 TXCMD queue.
    EN_PAUSE_AC33_QUEUE[15]      - (RW) Pause control of WMM3 AC3 TXCMD queue.
    EN_PAUSE_ALTXCMD_QUEUE[16]   - (RW) Pause control of ALTXCMD queue.
    EN_PAUSE_TF_QUEUE[17]        - (RW) Pause control of TF TXCDM queue .
    EN_PAUSE_TWT_TSF_TF_QUEUE[18] - (RW) Pause control of TWT TSF TF TXCMD queue.
    EN_PAUSE_TWT_DL_QUEUE[19]    - (RW) Pause control of TWT DL TXCMD queue.
    EN_PAUSE_TWT_UL_QUEUE[20]    - (RW) Pause control of TWT UL TXCMD queue.
    RESERVED21[31..21]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_TWT_UL_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_TWT_UL_QUEUE_MASK 0x00100000                // EN_PAUSE_TWT_UL_QUEUE[20]
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_TWT_UL_QUEUE_SHFT 20
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_TWT_DL_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_TWT_DL_QUEUE_MASK 0x00080000                // EN_PAUSE_TWT_DL_QUEUE[19]
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_TWT_DL_QUEUE_SHFT 19
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_TWT_TSF_TF_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_TWT_TSF_TF_QUEUE_MASK 0x00040000                // EN_PAUSE_TWT_TSF_TF_QUEUE[18]
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_TWT_TSF_TF_QUEUE_SHFT 18
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_TF_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_TF_QUEUE_MASK 0x00020000                // EN_PAUSE_TF_QUEUE[17]
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_TF_QUEUE_SHFT 17
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_ALTXCMD_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_ALTXCMD_QUEUE_MASK 0x00010000                // EN_PAUSE_ALTXCMD_QUEUE[16]
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_ALTXCMD_QUEUE_SHFT 16
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC33_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC33_QUEUE_MASK 0x00008000                // EN_PAUSE_AC33_QUEUE[15]
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC33_QUEUE_SHFT 15
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC32_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC32_QUEUE_MASK 0x00004000                // EN_PAUSE_AC32_QUEUE[14]
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC32_QUEUE_SHFT 14
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC31_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC31_QUEUE_MASK 0x00002000                // EN_PAUSE_AC31_QUEUE[13]
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC31_QUEUE_SHFT 13
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC30_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC30_QUEUE_MASK 0x00001000                // EN_PAUSE_AC30_QUEUE[12]
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC30_QUEUE_SHFT 12
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC23_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC23_QUEUE_MASK 0x00000800                // EN_PAUSE_AC23_QUEUE[11]
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC23_QUEUE_SHFT 11
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC22_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC22_QUEUE_MASK 0x00000400                // EN_PAUSE_AC22_QUEUE[10]
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC22_QUEUE_SHFT 10
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC21_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC21_QUEUE_MASK 0x00000200                // EN_PAUSE_AC21_QUEUE[9]
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC21_QUEUE_SHFT 9
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC20_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC20_QUEUE_MASK 0x00000100                // EN_PAUSE_AC20_QUEUE[8]
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC20_QUEUE_SHFT 8
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC13_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC13_QUEUE_MASK 0x00000080                // EN_PAUSE_AC13_QUEUE[7]
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC13_QUEUE_SHFT 7
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC12_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC12_QUEUE_MASK 0x00000040                // EN_PAUSE_AC12_QUEUE[6]
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC12_QUEUE_SHFT 6
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC11_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC11_QUEUE_MASK 0x00000020                // EN_PAUSE_AC11_QUEUE[5]
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC11_QUEUE_SHFT 5
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC10_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC10_QUEUE_MASK 0x00000010                // EN_PAUSE_AC10_QUEUE[4]
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC10_QUEUE_SHFT 4
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC03_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC03_QUEUE_MASK 0x00000008                // EN_PAUSE_AC03_QUEUE[3]
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC03_QUEUE_SHFT 3
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC02_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC02_QUEUE_MASK 0x00000004                // EN_PAUSE_AC02_QUEUE[2]
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC02_QUEUE_SHFT 2
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC01_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC01_QUEUE_MASK 0x00000002                // EN_PAUSE_AC01_QUEUE[1]
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC01_QUEUE_SHFT 1
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC00_QUEUE_ADDR WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_ADDR
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC00_QUEUE_MASK 0x00000001                // EN_PAUSE_AC00_QUEUE[0]
#define WF_PLE_TOP_TXCMD_TXCMD_BUF_PAUSE_EN_PAUSE_AC00_QUEUE_SHFT 0

/* =====================================================================================

  ---FSM_IDLE_WD_CTRL (0x820c0000 + 0xd8)---

    FL_IDLE_WD_TO_TH[7..0]       - (RW) Watchdog timeout threshold for frame link FSM not returning to IDLE
    PL_IDLE_WD_TO_TH[15..8]      - (RW) Watchdog timeout threshold for page link FSM not returning to IDLE
    PORT_IDLE_WD_TO_TH[23..16]   - (RW) Watchdog timeout threshold for port oper FSM not returning to IDLE
                                     (Including HIF/CPU/LMAC port)
    MACTX_IDLE_WD_TO_TH[31..24]  - (RW) Watchdog timeout threshold for MACTX FSM not returning to IDLE

 =====================================================================================*/
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_MACTX_IDLE_WD_TO_TH_ADDR   WF_PLE_TOP_FSM_IDLE_WD_CTRL_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_MACTX_IDLE_WD_TO_TH_MASK   0xFF000000                // MACTX_IDLE_WD_TO_TH[31..24]
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_MACTX_IDLE_WD_TO_TH_SHFT   24
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_PORT_IDLE_WD_TO_TH_ADDR    WF_PLE_TOP_FSM_IDLE_WD_CTRL_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_PORT_IDLE_WD_TO_TH_MASK    0x00FF0000                // PORT_IDLE_WD_TO_TH[23..16]
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_PORT_IDLE_WD_TO_TH_SHFT    16
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_PL_IDLE_WD_TO_TH_ADDR      WF_PLE_TOP_FSM_IDLE_WD_CTRL_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_PL_IDLE_WD_TO_TH_MASK      0x0000FF00                // PL_IDLE_WD_TO_TH[15..8]
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_PL_IDLE_WD_TO_TH_SHFT      8
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_FL_IDLE_WD_TO_TH_ADDR      WF_PLE_TOP_FSM_IDLE_WD_CTRL_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_FL_IDLE_WD_TO_TH_MASK      0x000000FF                // FL_IDLE_WD_TO_TH[7..0]
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_FL_IDLE_WD_TO_TH_SHFT      0

/* =====================================================================================

  ---FSM_IDLE_WD_EN (0x820c0000 + 0xdc)---

    EN_FL_IDLE_WD_TO[0]          - (RW) Enables watchdog for frame link FSM not returning to IDLE
    EN_PL_IDLE_WD_TO[1]          - (RW) Enables watchdog for page link FSM not returning to IDLE
    EN_CPU_PORT_IDLE_WD_TO[2]    - (RW) Enables watchdog for CPU port oper FSM not returning to IDLE
    EN_HIF_PORT_IDLE_WD_TO[3]    - (RW) Enables watchdog for HIF port oper FSM not returning to IDLE
    EN_LMAC_PORT_IDLE_WD_TO[4]   - (RW) Enables watchdog for LMAC port oper FSM not returning to IDLE
    EN_AMSDU_PORT_IDLE_WD_TO[5]  - (RW) Enables watchdog for AMSDU port FSM not returning to IDLE
    EN_HW_AMSDU_IDLE_WD_TO[6]    - (RW) Enables watchdog for HW AMSDU FSM not returning to IDLE
    RESERVED7[7]                 - (RO) Reserved bits
    EN_MACTX0_IDLE_WD_TO[8]      - (RW) Enables watchdog for MACTX 0 FSM not returning to IDLE
    EN_MACTX2_IDLE_WD_TO[9]      - (RW) Enables watchdog for MACTX 1 FSM not returning to IDLE
    EN_MACTX1_IDLE_WD_TO[10]     - (RW) Enables watchdog for MACTX 2 FSM not returning to IDLE
    EN_MACTX3_IDLE_WD_TO[11]     - (RW) Enables watchdog for MACTX 3 FSM not returning to IDLE
    EN_MDP_IDLE_WD_TO[12]        - (RW) Enables watchdog for MDP port oper FSM not returning to IDLE
    EN_PREDL_ARB_IDLE_WD_TO[13]  - (RW) Enables watchdog for Predl arbitrator FSM not returning to IDLE
    EN_PREDL_TXCMD_IDLE_WD_TO[14] - (RW) Enables watchdog for Predl TXCMD parser FSM not returning to IDLE
    RESERVED15[31..15]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_PREDL_TXCMD_IDLE_WD_TO_ADDR WF_PLE_TOP_FSM_IDLE_WD_EN_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_PREDL_TXCMD_IDLE_WD_TO_MASK 0x00004000                // EN_PREDL_TXCMD_IDLE_WD_TO[14]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_PREDL_TXCMD_IDLE_WD_TO_SHFT 14
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_PREDL_ARB_IDLE_WD_TO_ADDR WF_PLE_TOP_FSM_IDLE_WD_EN_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_PREDL_ARB_IDLE_WD_TO_MASK 0x00002000                // EN_PREDL_ARB_IDLE_WD_TO[13]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_PREDL_ARB_IDLE_WD_TO_SHFT 13
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_MDP_IDLE_WD_TO_ADDR       WF_PLE_TOP_FSM_IDLE_WD_EN_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_MDP_IDLE_WD_TO_MASK       0x00001000                // EN_MDP_IDLE_WD_TO[12]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_MDP_IDLE_WD_TO_SHFT       12
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_MACTX3_IDLE_WD_TO_ADDR    WF_PLE_TOP_FSM_IDLE_WD_EN_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_MACTX3_IDLE_WD_TO_MASK    0x00000800                // EN_MACTX3_IDLE_WD_TO[11]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_MACTX3_IDLE_WD_TO_SHFT    11
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_MACTX1_IDLE_WD_TO_ADDR    WF_PLE_TOP_FSM_IDLE_WD_EN_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_MACTX1_IDLE_WD_TO_MASK    0x00000400                // EN_MACTX1_IDLE_WD_TO[10]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_MACTX1_IDLE_WD_TO_SHFT    10
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_MACTX2_IDLE_WD_TO_ADDR    WF_PLE_TOP_FSM_IDLE_WD_EN_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_MACTX2_IDLE_WD_TO_MASK    0x00000200                // EN_MACTX2_IDLE_WD_TO[9]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_MACTX2_IDLE_WD_TO_SHFT    9
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_MACTX0_IDLE_WD_TO_ADDR    WF_PLE_TOP_FSM_IDLE_WD_EN_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_MACTX0_IDLE_WD_TO_MASK    0x00000100                // EN_MACTX0_IDLE_WD_TO[8]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_MACTX0_IDLE_WD_TO_SHFT    8
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_HW_AMSDU_IDLE_WD_TO_ADDR  WF_PLE_TOP_FSM_IDLE_WD_EN_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_HW_AMSDU_IDLE_WD_TO_MASK  0x00000040                // EN_HW_AMSDU_IDLE_WD_TO[6]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_HW_AMSDU_IDLE_WD_TO_SHFT  6
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_AMSDU_PORT_IDLE_WD_TO_ADDR WF_PLE_TOP_FSM_IDLE_WD_EN_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_AMSDU_PORT_IDLE_WD_TO_MASK 0x00000020                // EN_AMSDU_PORT_IDLE_WD_TO[5]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_AMSDU_PORT_IDLE_WD_TO_SHFT 5
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_LMAC_PORT_IDLE_WD_TO_ADDR WF_PLE_TOP_FSM_IDLE_WD_EN_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_LMAC_PORT_IDLE_WD_TO_MASK 0x00000010                // EN_LMAC_PORT_IDLE_WD_TO[4]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_LMAC_PORT_IDLE_WD_TO_SHFT 4
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_HIF_PORT_IDLE_WD_TO_ADDR  WF_PLE_TOP_FSM_IDLE_WD_EN_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_HIF_PORT_IDLE_WD_TO_MASK  0x00000008                // EN_HIF_PORT_IDLE_WD_TO[3]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_HIF_PORT_IDLE_WD_TO_SHFT  3
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_CPU_PORT_IDLE_WD_TO_ADDR  WF_PLE_TOP_FSM_IDLE_WD_EN_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_CPU_PORT_IDLE_WD_TO_MASK  0x00000004                // EN_CPU_PORT_IDLE_WD_TO[2]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_CPU_PORT_IDLE_WD_TO_SHFT  2
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_PL_IDLE_WD_TO_ADDR        WF_PLE_TOP_FSM_IDLE_WD_EN_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_PL_IDLE_WD_TO_MASK        0x00000002                // EN_PL_IDLE_WD_TO[1]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_PL_IDLE_WD_TO_SHFT        1
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_FL_IDLE_WD_TO_ADDR        WF_PLE_TOP_FSM_IDLE_WD_EN_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_FL_IDLE_WD_TO_MASK        0x00000001                // EN_FL_IDLE_WD_TO[0]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_EN_FL_IDLE_WD_TO_SHFT        0

/* =====================================================================================

  ---FSM_IDLE_WD_CTRL_1 (0x820c0000 + 0xe0)---

    MDP_IDLE_WD_TO_TH[7..0]      - (RW) Watchdog timeout threshold for MDP FSM not returning to IDLE
                                     (Including MDP TDP/RDP/TIOC/RIOC)
    PF_IDLE_WD_TO_TH[15..8]      - (RW) Watchdog timeout threshold for PF FSM not returning to IDLE
    SEC_IDLE_WD_TO_TH[23..16]    - (RW) Watchdog timeout threshold for SEC FSM not returning to IDLE
                                     (Including SEC0/SEC1)
    MDP_RDP_WB_IDLE_WD_TO_TH[31..24] - (RW) Watchdog timeout threshold for MDP RDP Wait buffer allocate FSM not returning to IDLE

 =====================================================================================*/
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_1_MDP_RDP_WB_IDLE_WD_TO_TH_ADDR WF_PLE_TOP_FSM_IDLE_WD_CTRL_1_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_1_MDP_RDP_WB_IDLE_WD_TO_TH_MASK 0xFF000000                // MDP_RDP_WB_IDLE_WD_TO_TH[31..24]
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_1_MDP_RDP_WB_IDLE_WD_TO_TH_SHFT 24
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_1_SEC_IDLE_WD_TO_TH_ADDR   WF_PLE_TOP_FSM_IDLE_WD_CTRL_1_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_1_SEC_IDLE_WD_TO_TH_MASK   0x00FF0000                // SEC_IDLE_WD_TO_TH[23..16]
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_1_SEC_IDLE_WD_TO_TH_SHFT   16
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_1_PF_IDLE_WD_TO_TH_ADDR    WF_PLE_TOP_FSM_IDLE_WD_CTRL_1_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_1_PF_IDLE_WD_TO_TH_MASK    0x0000FF00                // PF_IDLE_WD_TO_TH[15..8]
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_1_PF_IDLE_WD_TO_TH_SHFT    8
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_1_MDP_IDLE_WD_TO_TH_ADDR   WF_PLE_TOP_FSM_IDLE_WD_CTRL_1_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_1_MDP_IDLE_WD_TO_TH_MASK   0x000000FF                // MDP_IDLE_WD_TO_TH[7..0]
#define WF_PLE_TOP_FSM_IDLE_WD_CTRL_1_MDP_IDLE_WD_TO_TH_SHFT   0

/* =====================================================================================

  ---FSM_IDLE_WD_EN_1 (0x820c0000 + 0xe4)---

    EN_BN0_MDP_TDP_IDLE_WD_TO[0] - (RW) Enables watchdog for Band0 MDP TDP FSM not returning to IDLE
    EN_MDP_RDP_IDLE_WD_TO[1]     - (RW) Enables watchdog for MDP RDP FSM not returning to IDLE
    EN_BN0_MDP_TIOC_IDLE_WD_TO[2] - (RW) Enables watchdog for Band0 MDP TIOC FSM not returning to IDLE
    EN_BN0_MDP_RIOC_IDLE_WD_TO[3] - (RW) Enables watchdog for Band0 MDP RIOC FSM not returning to IDLE
    EN_PF_IDLE_WD_TO[4]          - (RW) Enables watchdog for PF FSM not returning to IDLE
    EN_SEC0_IDLE_WD_TO[5]        - (RW) Enables watchdog for SEC0 FSM not returning to IDLE
    EN_SEC1_IDLE_WD_TO[6]        - (RW) Enables watchdog for SEC1 FSM not returning to IDLE
    EN_BN1_MDP_TDP_IDLE_WD_TO[7] - (RW) Enables watchdog for Band1 MDP TDP FSM not returning to IDLE
    EN_BN1_MDP_TIOC_IDLE_WD_TO[8] - (RW) Enables watchdog for Band1 MDP TIOC FSM not returning to IDLE
    EN_BN1_MDP_RIOC_IDLE_WD_TO[9] - (RW) Enables watchdog for Band1 MDP RIOC FSM not returning to IDLE
    EN_MDP_RDP_WB_IDLE_WD_TO[10] - (RW) Enables watchdog for MDP RDP Wait buffer allocate FSM not returning to IDLE
    EN_UWTBL_IDLE_WD_TO[11]      - (RW) Enables watchdog for UWTBL FSM not returning to IDLE
    RESERVED12[15..12]           - (RO) Reserved bits
    UWTBL_IDLE_WD_TO_TH[23..16]  - (RW) Watchdog timeout threshold for UWTBL FSM not returning to IDLE
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_UWTBL_IDLE_WD_TO_TH_ADDR   WF_PLE_TOP_FSM_IDLE_WD_EN_1_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_UWTBL_IDLE_WD_TO_TH_MASK   0x00FF0000                // UWTBL_IDLE_WD_TO_TH[23..16]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_UWTBL_IDLE_WD_TO_TH_SHFT   16
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_UWTBL_IDLE_WD_TO_ADDR   WF_PLE_TOP_FSM_IDLE_WD_EN_1_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_UWTBL_IDLE_WD_TO_MASK   0x00000800                // EN_UWTBL_IDLE_WD_TO[11]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_UWTBL_IDLE_WD_TO_SHFT   11
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_MDP_RDP_WB_IDLE_WD_TO_ADDR WF_PLE_TOP_FSM_IDLE_WD_EN_1_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_MDP_RDP_WB_IDLE_WD_TO_MASK 0x00000400                // EN_MDP_RDP_WB_IDLE_WD_TO[10]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_MDP_RDP_WB_IDLE_WD_TO_SHFT 10
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_BN1_MDP_RIOC_IDLE_WD_TO_ADDR WF_PLE_TOP_FSM_IDLE_WD_EN_1_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_BN1_MDP_RIOC_IDLE_WD_TO_MASK 0x00000200                // EN_BN1_MDP_RIOC_IDLE_WD_TO[9]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_BN1_MDP_RIOC_IDLE_WD_TO_SHFT 9
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_BN1_MDP_TIOC_IDLE_WD_TO_ADDR WF_PLE_TOP_FSM_IDLE_WD_EN_1_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_BN1_MDP_TIOC_IDLE_WD_TO_MASK 0x00000100                // EN_BN1_MDP_TIOC_IDLE_WD_TO[8]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_BN1_MDP_TIOC_IDLE_WD_TO_SHFT 8
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_BN1_MDP_TDP_IDLE_WD_TO_ADDR WF_PLE_TOP_FSM_IDLE_WD_EN_1_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_BN1_MDP_TDP_IDLE_WD_TO_MASK 0x00000080                // EN_BN1_MDP_TDP_IDLE_WD_TO[7]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_BN1_MDP_TDP_IDLE_WD_TO_SHFT 7
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_SEC1_IDLE_WD_TO_ADDR    WF_PLE_TOP_FSM_IDLE_WD_EN_1_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_SEC1_IDLE_WD_TO_MASK    0x00000040                // EN_SEC1_IDLE_WD_TO[6]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_SEC1_IDLE_WD_TO_SHFT    6
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_SEC0_IDLE_WD_TO_ADDR    WF_PLE_TOP_FSM_IDLE_WD_EN_1_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_SEC0_IDLE_WD_TO_MASK    0x00000020                // EN_SEC0_IDLE_WD_TO[5]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_SEC0_IDLE_WD_TO_SHFT    5
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_PF_IDLE_WD_TO_ADDR      WF_PLE_TOP_FSM_IDLE_WD_EN_1_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_PF_IDLE_WD_TO_MASK      0x00000010                // EN_PF_IDLE_WD_TO[4]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_PF_IDLE_WD_TO_SHFT      4
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_BN0_MDP_RIOC_IDLE_WD_TO_ADDR WF_PLE_TOP_FSM_IDLE_WD_EN_1_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_BN0_MDP_RIOC_IDLE_WD_TO_MASK 0x00000008                // EN_BN0_MDP_RIOC_IDLE_WD_TO[3]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_BN0_MDP_RIOC_IDLE_WD_TO_SHFT 3
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_BN0_MDP_TIOC_IDLE_WD_TO_ADDR WF_PLE_TOP_FSM_IDLE_WD_EN_1_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_BN0_MDP_TIOC_IDLE_WD_TO_MASK 0x00000004                // EN_BN0_MDP_TIOC_IDLE_WD_TO[2]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_BN0_MDP_TIOC_IDLE_WD_TO_SHFT 2
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_MDP_RDP_IDLE_WD_TO_ADDR WF_PLE_TOP_FSM_IDLE_WD_EN_1_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_MDP_RDP_IDLE_WD_TO_MASK 0x00000002                // EN_MDP_RDP_IDLE_WD_TO[1]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_MDP_RDP_IDLE_WD_TO_SHFT 1
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_BN0_MDP_TDP_IDLE_WD_TO_ADDR WF_PLE_TOP_FSM_IDLE_WD_EN_1_ADDR
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_BN0_MDP_TDP_IDLE_WD_TO_MASK 0x00000001                // EN_BN0_MDP_TDP_IDLE_WD_TO[0]
#define WF_PLE_TOP_FSM_IDLE_WD_EN_1_EN_BN0_MDP_TDP_IDLE_WD_TO_SHFT 0

/* =====================================================================================

  ---ERLY_TRM_CTRL0 (0x820c0000 + 0xe8)---

    ERLY_TRM_EN[0]               - (RW) Enable control of early terminate function
    RESERVED1[7..1]              - (RO) Reserved bits
    ERLY_TRM_MPDU_TH_0[15..8]    - (RW) MPDU number Threshold for TX Bit Rate <= 97.5Mbps
    ERLY_TRM_MPDU_TH_1[23..16]   - (RW) MPDU number Threshold for 97.5Mbps < TX Bit Rate <= 195Mbps
    ERLY_TRM_MPDU_TH_2[31..24]   - (RW) MPDU number Threshold for TX Bit Rate <= 97.5Mbps

 =====================================================================================*/
#define WF_PLE_TOP_ERLY_TRM_CTRL0_ERLY_TRM_MPDU_TH_2_ADDR      WF_PLE_TOP_ERLY_TRM_CTRL0_ADDR
#define WF_PLE_TOP_ERLY_TRM_CTRL0_ERLY_TRM_MPDU_TH_2_MASK      0xFF000000                // ERLY_TRM_MPDU_TH_2[31..24]
#define WF_PLE_TOP_ERLY_TRM_CTRL0_ERLY_TRM_MPDU_TH_2_SHFT      24
#define WF_PLE_TOP_ERLY_TRM_CTRL0_ERLY_TRM_MPDU_TH_1_ADDR      WF_PLE_TOP_ERLY_TRM_CTRL0_ADDR
#define WF_PLE_TOP_ERLY_TRM_CTRL0_ERLY_TRM_MPDU_TH_1_MASK      0x00FF0000                // ERLY_TRM_MPDU_TH_1[23..16]
#define WF_PLE_TOP_ERLY_TRM_CTRL0_ERLY_TRM_MPDU_TH_1_SHFT      16
#define WF_PLE_TOP_ERLY_TRM_CTRL0_ERLY_TRM_MPDU_TH_0_ADDR      WF_PLE_TOP_ERLY_TRM_CTRL0_ADDR
#define WF_PLE_TOP_ERLY_TRM_CTRL0_ERLY_TRM_MPDU_TH_0_MASK      0x0000FF00                // ERLY_TRM_MPDU_TH_0[15..8]
#define WF_PLE_TOP_ERLY_TRM_CTRL0_ERLY_TRM_MPDU_TH_0_SHFT      8
#define WF_PLE_TOP_ERLY_TRM_CTRL0_ERLY_TRM_EN_ADDR             WF_PLE_TOP_ERLY_TRM_CTRL0_ADDR
#define WF_PLE_TOP_ERLY_TRM_CTRL0_ERLY_TRM_EN_MASK             0x00000001                // ERLY_TRM_EN[0]
#define WF_PLE_TOP_ERLY_TRM_CTRL0_ERLY_TRM_EN_SHFT             0

/* =====================================================================================

  ---ERLY_TRM_CTRL1 (0x820c0000 + 0xec)---

    ERLY_TRM_MPDU_TH_3[7..0]     - (RW) MPDU number Threshold for 325Mbps < TX Bit Rate <= 433Mbps
    ERLY_TRM_MPDU_TH_4[15..8]    - (RW) MPDU number Threshold for 433Mbps < TX Bit Rate <= 866.7Mbps
    ERLY_TRM_MPDU_TH_5[23..16]   - (RW) MPDU number Threshold for 866.7Mbps < TX Bit Rate <= 1300Mbps
    ERLY_TRM_MPDU_TH_6[31..24]   - (RW) MPDU number Threshold for TX Bit Rate <= 97.5Mbps

 =====================================================================================*/
#define WF_PLE_TOP_ERLY_TRM_CTRL1_ERLY_TRM_MPDU_TH_6_ADDR      WF_PLE_TOP_ERLY_TRM_CTRL1_ADDR
#define WF_PLE_TOP_ERLY_TRM_CTRL1_ERLY_TRM_MPDU_TH_6_MASK      0xFF000000                // ERLY_TRM_MPDU_TH_6[31..24]
#define WF_PLE_TOP_ERLY_TRM_CTRL1_ERLY_TRM_MPDU_TH_6_SHFT      24
#define WF_PLE_TOP_ERLY_TRM_CTRL1_ERLY_TRM_MPDU_TH_5_ADDR      WF_PLE_TOP_ERLY_TRM_CTRL1_ADDR
#define WF_PLE_TOP_ERLY_TRM_CTRL1_ERLY_TRM_MPDU_TH_5_MASK      0x00FF0000                // ERLY_TRM_MPDU_TH_5[23..16]
#define WF_PLE_TOP_ERLY_TRM_CTRL1_ERLY_TRM_MPDU_TH_5_SHFT      16
#define WF_PLE_TOP_ERLY_TRM_CTRL1_ERLY_TRM_MPDU_TH_4_ADDR      WF_PLE_TOP_ERLY_TRM_CTRL1_ADDR
#define WF_PLE_TOP_ERLY_TRM_CTRL1_ERLY_TRM_MPDU_TH_4_MASK      0x0000FF00                // ERLY_TRM_MPDU_TH_4[15..8]
#define WF_PLE_TOP_ERLY_TRM_CTRL1_ERLY_TRM_MPDU_TH_4_SHFT      8
#define WF_PLE_TOP_ERLY_TRM_CTRL1_ERLY_TRM_MPDU_TH_3_ADDR      WF_PLE_TOP_ERLY_TRM_CTRL1_ADDR
#define WF_PLE_TOP_ERLY_TRM_CTRL1_ERLY_TRM_MPDU_TH_3_MASK      0x000000FF                // ERLY_TRM_MPDU_TH_3[7..0]
#define WF_PLE_TOP_ERLY_TRM_CTRL1_ERLY_TRM_MPDU_TH_3_SHFT      0

/* =====================================================================================

  ---DIS_STA_MAP0 (0x820c0000 + 0x100)---

    DIS_STA_MAP_0[7..0]          - (RW) Each bit control disable one station function.
                                     SW write one to this CR bits to let HW disable the station TX.
                                     If wlan_idx > 32, DIS_STA_MAP+0x4*i is disable station control for wlan_idx 32*i ~32*(i+1)-1
    DIS_STA_MAP_0_1[15..8]       - (RW) same as DIS_STA_MAP_0
    DIS_STA_MAP_0_2[31..16]      - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP0_DIS_STA_MAP_0_2_ADDR           WF_PLE_TOP_DIS_STA_MAP0_ADDR
#define WF_PLE_TOP_DIS_STA_MAP0_DIS_STA_MAP_0_2_MASK           0xFFFF0000                // DIS_STA_MAP_0_2[31..16]
#define WF_PLE_TOP_DIS_STA_MAP0_DIS_STA_MAP_0_2_SHFT           16
#define WF_PLE_TOP_DIS_STA_MAP0_DIS_STA_MAP_0_1_ADDR           WF_PLE_TOP_DIS_STA_MAP0_ADDR
#define WF_PLE_TOP_DIS_STA_MAP0_DIS_STA_MAP_0_1_MASK           0x0000FF00                // DIS_STA_MAP_0_1[15..8]
#define WF_PLE_TOP_DIS_STA_MAP0_DIS_STA_MAP_0_1_SHFT           8
#define WF_PLE_TOP_DIS_STA_MAP0_DIS_STA_MAP_0_ADDR             WF_PLE_TOP_DIS_STA_MAP0_ADDR
#define WF_PLE_TOP_DIS_STA_MAP0_DIS_STA_MAP_0_MASK             0x000000FF                // DIS_STA_MAP_0[7..0]
#define WF_PLE_TOP_DIS_STA_MAP0_DIS_STA_MAP_0_SHFT             0

/* =====================================================================================

  ---DIS_STA_MAP1 (0x820c0000 + 0x104)---

    DIS_STA_MAP_1[31..0]         - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP1_DIS_STA_MAP_1_ADDR             WF_PLE_TOP_DIS_STA_MAP1_ADDR
#define WF_PLE_TOP_DIS_STA_MAP1_DIS_STA_MAP_1_MASK             0xFFFFFFFF                // DIS_STA_MAP_1[31..0]
#define WF_PLE_TOP_DIS_STA_MAP1_DIS_STA_MAP_1_SHFT             0

/* =====================================================================================

  ---DIS_STA_MAP2 (0x820c0000 + 0x108)---

    DIS_STA_MAP_2[31..0]         - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP2_DIS_STA_MAP_2_ADDR             WF_PLE_TOP_DIS_STA_MAP2_ADDR
#define WF_PLE_TOP_DIS_STA_MAP2_DIS_STA_MAP_2_MASK             0xFFFFFFFF                // DIS_STA_MAP_2[31..0]
#define WF_PLE_TOP_DIS_STA_MAP2_DIS_STA_MAP_2_SHFT             0

/* =====================================================================================

  ---DIS_STA_MAP3 (0x820c0000 + 0x10c)---

    DIS_STA_MAP_3[31..0]         - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP3_DIS_STA_MAP_3_ADDR             WF_PLE_TOP_DIS_STA_MAP3_ADDR
#define WF_PLE_TOP_DIS_STA_MAP3_DIS_STA_MAP_3_MASK             0xFFFFFFFF                // DIS_STA_MAP_3[31..0]
#define WF_PLE_TOP_DIS_STA_MAP3_DIS_STA_MAP_3_SHFT             0

/* =====================================================================================

  ---DIS_STA_MAP4 (0x820c0000 + 0x110)---

    DIS_STA_MAP_4[31..0]         - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP4_DIS_STA_MAP_4_ADDR             WF_PLE_TOP_DIS_STA_MAP4_ADDR
#define WF_PLE_TOP_DIS_STA_MAP4_DIS_STA_MAP_4_MASK             0xFFFFFFFF                // DIS_STA_MAP_4[31..0]
#define WF_PLE_TOP_DIS_STA_MAP4_DIS_STA_MAP_4_SHFT             0

/* =====================================================================================

  ---DIS_STA_MAP5 (0x820c0000 + 0x114)---

    DIS_STA_MAP_5[31..0]         - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP5_DIS_STA_MAP_5_ADDR             WF_PLE_TOP_DIS_STA_MAP5_ADDR
#define WF_PLE_TOP_DIS_STA_MAP5_DIS_STA_MAP_5_MASK             0xFFFFFFFF                // DIS_STA_MAP_5[31..0]
#define WF_PLE_TOP_DIS_STA_MAP5_DIS_STA_MAP_5_SHFT             0

/* =====================================================================================

  ---DIS_STA_MAP6 (0x820c0000 + 0x118)---

    DIS_STA_MAP_6[31..0]         - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP6_DIS_STA_MAP_6_ADDR             WF_PLE_TOP_DIS_STA_MAP6_ADDR
#define WF_PLE_TOP_DIS_STA_MAP6_DIS_STA_MAP_6_MASK             0xFFFFFFFF                // DIS_STA_MAP_6[31..0]
#define WF_PLE_TOP_DIS_STA_MAP6_DIS_STA_MAP_6_SHFT             0

/* =====================================================================================

  ---DIS_STA_MAP7 (0x820c0000 + 0x11c)---

    DIS_STA_MAP_7[31..0]         - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP7_DIS_STA_MAP_7_ADDR             WF_PLE_TOP_DIS_STA_MAP7_ADDR
#define WF_PLE_TOP_DIS_STA_MAP7_DIS_STA_MAP_7_MASK             0xFFFFFFFF                // DIS_STA_MAP_7[31..0]
#define WF_PLE_TOP_DIS_STA_MAP7_DIS_STA_MAP_7_SHFT             0

/* =====================================================================================

  ---DIS_STA_MAP8 (0x820c0000 + 0x120)---

    DIS_STA_MAP_8[31..0]         - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP8_DIS_STA_MAP_8_ADDR             WF_PLE_TOP_DIS_STA_MAP8_ADDR
#define WF_PLE_TOP_DIS_STA_MAP8_DIS_STA_MAP_8_MASK             0xFFFFFFFF                // DIS_STA_MAP_8[31..0]
#define WF_PLE_TOP_DIS_STA_MAP8_DIS_STA_MAP_8_SHFT             0

/* =====================================================================================

  ---DIS_STA_MAP9 (0x820c0000 + 0x124)---

    DIS_STA_MAP_9[31..0]         - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP9_DIS_STA_MAP_9_ADDR             WF_PLE_TOP_DIS_STA_MAP9_ADDR
#define WF_PLE_TOP_DIS_STA_MAP9_DIS_STA_MAP_9_MASK             0xFFFFFFFF                // DIS_STA_MAP_9[31..0]
#define WF_PLE_TOP_DIS_STA_MAP9_DIS_STA_MAP_9_SHFT             0

/* =====================================================================================

  ---DIS_STA_MAP10 (0x820c0000 + 0x128)---

    DIS_STA_MAP_10[31..0]        - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP10_DIS_STA_MAP_10_ADDR           WF_PLE_TOP_DIS_STA_MAP10_ADDR
#define WF_PLE_TOP_DIS_STA_MAP10_DIS_STA_MAP_10_MASK           0xFFFFFFFF                // DIS_STA_MAP_10[31..0]
#define WF_PLE_TOP_DIS_STA_MAP10_DIS_STA_MAP_10_SHFT           0

/* =====================================================================================

  ---DIS_STA_MAP11 (0x820c0000 + 0x12c)---

    DIS_STA_MAP_11[31..0]        - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP11_DIS_STA_MAP_11_ADDR           WF_PLE_TOP_DIS_STA_MAP11_ADDR
#define WF_PLE_TOP_DIS_STA_MAP11_DIS_STA_MAP_11_MASK           0xFFFFFFFF                // DIS_STA_MAP_11[31..0]
#define WF_PLE_TOP_DIS_STA_MAP11_DIS_STA_MAP_11_SHFT           0

/* =====================================================================================

  ---DIS_STA_MAP12 (0x820c0000 + 0x130)---

    DIS_STA_MAP_12[31..0]        - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP12_DIS_STA_MAP_12_ADDR           WF_PLE_TOP_DIS_STA_MAP12_ADDR
#define WF_PLE_TOP_DIS_STA_MAP12_DIS_STA_MAP_12_MASK           0xFFFFFFFF                // DIS_STA_MAP_12[31..0]
#define WF_PLE_TOP_DIS_STA_MAP12_DIS_STA_MAP_12_SHFT           0

/* =====================================================================================

  ---DIS_STA_MAP13 (0x820c0000 + 0x134)---

    DIS_STA_MAP_13[31..0]        - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP13_DIS_STA_MAP_13_ADDR           WF_PLE_TOP_DIS_STA_MAP13_ADDR
#define WF_PLE_TOP_DIS_STA_MAP13_DIS_STA_MAP_13_MASK           0xFFFFFFFF                // DIS_STA_MAP_13[31..0]
#define WF_PLE_TOP_DIS_STA_MAP13_DIS_STA_MAP_13_SHFT           0

/* =====================================================================================

  ---DIS_STA_MAP14 (0x820c0000 + 0x138)---

    DIS_STA_MAP_14[31..0]        - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP14_DIS_STA_MAP_14_ADDR           WF_PLE_TOP_DIS_STA_MAP14_ADDR
#define WF_PLE_TOP_DIS_STA_MAP14_DIS_STA_MAP_14_MASK           0xFFFFFFFF                // DIS_STA_MAP_14[31..0]
#define WF_PLE_TOP_DIS_STA_MAP14_DIS_STA_MAP_14_SHFT           0

/* =====================================================================================

  ---DIS_STA_MAP15 (0x820c0000 + 0x13c)---

    DIS_STA_MAP_15[31..0]        - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP15_DIS_STA_MAP_15_ADDR           WF_PLE_TOP_DIS_STA_MAP15_ADDR
#define WF_PLE_TOP_DIS_STA_MAP15_DIS_STA_MAP_15_MASK           0xFFFFFFFF                // DIS_STA_MAP_15[31..0]
#define WF_PLE_TOP_DIS_STA_MAP15_DIS_STA_MAP_15_SHFT           0

/* =====================================================================================

  ---DIS_STA_MAP16 (0x820c0000 + 0x140)---

    DIS_STA_MAP_16[31..0]        - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP16_DIS_STA_MAP_16_ADDR           WF_PLE_TOP_DIS_STA_MAP16_ADDR
#define WF_PLE_TOP_DIS_STA_MAP16_DIS_STA_MAP_16_MASK           0xFFFFFFFF                // DIS_STA_MAP_16[31..0]
#define WF_PLE_TOP_DIS_STA_MAP16_DIS_STA_MAP_16_SHFT           0

/* =====================================================================================

  ---DIS_STA_MAP17 (0x820c0000 + 0x144)---

    DIS_STA_MAP_17[31..0]        - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP17_DIS_STA_MAP_17_ADDR           WF_PLE_TOP_DIS_STA_MAP17_ADDR
#define WF_PLE_TOP_DIS_STA_MAP17_DIS_STA_MAP_17_MASK           0xFFFFFFFF                // DIS_STA_MAP_17[31..0]
#define WF_PLE_TOP_DIS_STA_MAP17_DIS_STA_MAP_17_SHFT           0

/* =====================================================================================

  ---DIS_STA_MAP18 (0x820c0000 + 0x148)---

    DIS_STA_MAP_18[31..0]        - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP18_DIS_STA_MAP_18_ADDR           WF_PLE_TOP_DIS_STA_MAP18_ADDR
#define WF_PLE_TOP_DIS_STA_MAP18_DIS_STA_MAP_18_MASK           0xFFFFFFFF                // DIS_STA_MAP_18[31..0]
#define WF_PLE_TOP_DIS_STA_MAP18_DIS_STA_MAP_18_SHFT           0

/* =====================================================================================

  ---DIS_STA_MAP19 (0x820c0000 + 0x14c)---

    DIS_STA_MAP_19[31..0]        - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP19_DIS_STA_MAP_19_ADDR           WF_PLE_TOP_DIS_STA_MAP19_ADDR
#define WF_PLE_TOP_DIS_STA_MAP19_DIS_STA_MAP_19_MASK           0xFFFFFFFF                // DIS_STA_MAP_19[31..0]
#define WF_PLE_TOP_DIS_STA_MAP19_DIS_STA_MAP_19_SHFT           0

/* =====================================================================================

  ---DIS_STA_MAP20 (0x820c0000 + 0x150)---

    DIS_STA_MAP_20[31..0]        - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP20_DIS_STA_MAP_20_ADDR           WF_PLE_TOP_DIS_STA_MAP20_ADDR
#define WF_PLE_TOP_DIS_STA_MAP20_DIS_STA_MAP_20_MASK           0xFFFFFFFF                // DIS_STA_MAP_20[31..0]
#define WF_PLE_TOP_DIS_STA_MAP20_DIS_STA_MAP_20_SHFT           0

/* =====================================================================================

  ---DIS_STA_MAP21 (0x820c0000 + 0x154)---

    DIS_STA_MAP_21[31..0]        - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP21_DIS_STA_MAP_21_ADDR           WF_PLE_TOP_DIS_STA_MAP21_ADDR
#define WF_PLE_TOP_DIS_STA_MAP21_DIS_STA_MAP_21_MASK           0xFFFFFFFF                // DIS_STA_MAP_21[31..0]
#define WF_PLE_TOP_DIS_STA_MAP21_DIS_STA_MAP_21_SHFT           0

/* =====================================================================================

  ---DIS_STA_MAP22 (0x820c0000 + 0x158)---

    DIS_STA_MAP_22[31..0]        - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP22_DIS_STA_MAP_22_ADDR           WF_PLE_TOP_DIS_STA_MAP22_ADDR
#define WF_PLE_TOP_DIS_STA_MAP22_DIS_STA_MAP_22_MASK           0xFFFFFFFF                // DIS_STA_MAP_22[31..0]
#define WF_PLE_TOP_DIS_STA_MAP22_DIS_STA_MAP_22_SHFT           0

/* =====================================================================================

  ---DIS_STA_MAP23 (0x820c0000 + 0x15c)---

    DIS_STA_MAP_23[31..0]        - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP23_DIS_STA_MAP_23_ADDR           WF_PLE_TOP_DIS_STA_MAP23_ADDR
#define WF_PLE_TOP_DIS_STA_MAP23_DIS_STA_MAP_23_MASK           0xFFFFFFFF                // DIS_STA_MAP_23[31..0]
#define WF_PLE_TOP_DIS_STA_MAP23_DIS_STA_MAP_23_SHFT           0

/* =====================================================================================

  ---DIS_STA_MAP24 (0x820c0000 + 0x160)---

    DIS_STA_MAP_24[31..0]        - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP24_DIS_STA_MAP_24_ADDR           WF_PLE_TOP_DIS_STA_MAP24_ADDR
#define WF_PLE_TOP_DIS_STA_MAP24_DIS_STA_MAP_24_MASK           0xFFFFFFFF                // DIS_STA_MAP_24[31..0]
#define WF_PLE_TOP_DIS_STA_MAP24_DIS_STA_MAP_24_SHFT           0

/* =====================================================================================

  ---DIS_STA_MAP25 (0x820c0000 + 0x164)---

    DIS_STA_MAP_25[31..0]        - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP25_DIS_STA_MAP_25_ADDR           WF_PLE_TOP_DIS_STA_MAP25_ADDR
#define WF_PLE_TOP_DIS_STA_MAP25_DIS_STA_MAP_25_MASK           0xFFFFFFFF                // DIS_STA_MAP_25[31..0]
#define WF_PLE_TOP_DIS_STA_MAP25_DIS_STA_MAP_25_SHFT           0

/* =====================================================================================

  ---DIS_STA_MAP26 (0x820c0000 + 0x168)---

    DIS_STA_MAP_26[31..0]        - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP26_DIS_STA_MAP_26_ADDR           WF_PLE_TOP_DIS_STA_MAP26_ADDR
#define WF_PLE_TOP_DIS_STA_MAP26_DIS_STA_MAP_26_MASK           0xFFFFFFFF                // DIS_STA_MAP_26[31..0]
#define WF_PLE_TOP_DIS_STA_MAP26_DIS_STA_MAP_26_SHFT           0

/* =====================================================================================

  ---DIS_STA_MAP27 (0x820c0000 + 0x16c)---

    DIS_STA_MAP_27[31..0]        - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP27_DIS_STA_MAP_27_ADDR           WF_PLE_TOP_DIS_STA_MAP27_ADDR
#define WF_PLE_TOP_DIS_STA_MAP27_DIS_STA_MAP_27_MASK           0xFFFFFFFF                // DIS_STA_MAP_27[31..0]
#define WF_PLE_TOP_DIS_STA_MAP27_DIS_STA_MAP_27_SHFT           0

/* =====================================================================================

  ---DIS_STA_MAP28 (0x820c0000 + 0x170)---

    DIS_STA_MAP_28[31..0]        - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP28_DIS_STA_MAP_28_ADDR           WF_PLE_TOP_DIS_STA_MAP28_ADDR
#define WF_PLE_TOP_DIS_STA_MAP28_DIS_STA_MAP_28_MASK           0xFFFFFFFF                // DIS_STA_MAP_28[31..0]
#define WF_PLE_TOP_DIS_STA_MAP28_DIS_STA_MAP_28_SHFT           0

/* =====================================================================================

  ---DIS_STA_MAP29 (0x820c0000 + 0x174)---

    DIS_STA_MAP_29[31..0]        - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP29_DIS_STA_MAP_29_ADDR           WF_PLE_TOP_DIS_STA_MAP29_ADDR
#define WF_PLE_TOP_DIS_STA_MAP29_DIS_STA_MAP_29_MASK           0xFFFFFFFF                // DIS_STA_MAP_29[31..0]
#define WF_PLE_TOP_DIS_STA_MAP29_DIS_STA_MAP_29_SHFT           0

/* =====================================================================================

  ---DIS_STA_MAP30 (0x820c0000 + 0x178)---

    DIS_STA_MAP_30[31..0]        - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP30_DIS_STA_MAP_30_ADDR           WF_PLE_TOP_DIS_STA_MAP30_ADDR
#define WF_PLE_TOP_DIS_STA_MAP30_DIS_STA_MAP_30_MASK           0xFFFFFFFF                // DIS_STA_MAP_30[31..0]
#define WF_PLE_TOP_DIS_STA_MAP30_DIS_STA_MAP_30_SHFT           0

/* =====================================================================================

  ---DIS_STA_MAP31 (0x820c0000 + 0x17c)---

    DIS_STA_MAP_31[31..0]        - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP31_DIS_STA_MAP_31_ADDR           WF_PLE_TOP_DIS_STA_MAP31_ADDR
#define WF_PLE_TOP_DIS_STA_MAP31_DIS_STA_MAP_31_MASK           0xFFFFFFFF                // DIS_STA_MAP_31[31..0]
#define WF_PLE_TOP_DIS_STA_MAP31_DIS_STA_MAP_31_SHFT           0

/* =====================================================================================

  ---DIS_STA_MAP_EXT0 (0x820c0000 + 0x180)---

    DIS_STA_MAP_EXT_00[3..0]     - (RW) same as DIS_STA_MAP00
    DIS_STA_MAP_EXT_00_01[7..4]  - (RW) same as DIS_STA_MAP00
    DIS_STA_MAP_EXT_00_02[15..8] - (RW) same as DIS_STA_MAP00
    DIS_STA_MAP_EXT_00_03[31..16] - (RW) same as DIS_STA_MAP00

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP_EXT0_DIS_STA_MAP_EXT_00_03_ADDR WF_PLE_TOP_DIS_STA_MAP_EXT0_ADDR
#define WF_PLE_TOP_DIS_STA_MAP_EXT0_DIS_STA_MAP_EXT_00_03_MASK 0xFFFF0000                // DIS_STA_MAP_EXT_00_03[31..16]
#define WF_PLE_TOP_DIS_STA_MAP_EXT0_DIS_STA_MAP_EXT_00_03_SHFT 16
#define WF_PLE_TOP_DIS_STA_MAP_EXT0_DIS_STA_MAP_EXT_00_02_ADDR WF_PLE_TOP_DIS_STA_MAP_EXT0_ADDR
#define WF_PLE_TOP_DIS_STA_MAP_EXT0_DIS_STA_MAP_EXT_00_02_MASK 0x0000FF00                // DIS_STA_MAP_EXT_00_02[15..8]
#define WF_PLE_TOP_DIS_STA_MAP_EXT0_DIS_STA_MAP_EXT_00_02_SHFT 8
#define WF_PLE_TOP_DIS_STA_MAP_EXT0_DIS_STA_MAP_EXT_00_01_ADDR WF_PLE_TOP_DIS_STA_MAP_EXT0_ADDR
#define WF_PLE_TOP_DIS_STA_MAP_EXT0_DIS_STA_MAP_EXT_00_01_MASK 0x000000F0                // DIS_STA_MAP_EXT_00_01[7..4]
#define WF_PLE_TOP_DIS_STA_MAP_EXT0_DIS_STA_MAP_EXT_00_01_SHFT 4
#define WF_PLE_TOP_DIS_STA_MAP_EXT0_DIS_STA_MAP_EXT_00_ADDR    WF_PLE_TOP_DIS_STA_MAP_EXT0_ADDR
#define WF_PLE_TOP_DIS_STA_MAP_EXT0_DIS_STA_MAP_EXT_00_MASK    0x0000000F                // DIS_STA_MAP_EXT_00[3..0]
#define WF_PLE_TOP_DIS_STA_MAP_EXT0_DIS_STA_MAP_EXT_00_SHFT    0

/* =====================================================================================

  ---DIS_STA_MAP_EXT1 (0x820c0000 + 0x184)---

    DIS_STA_MAP_EXT_1[31..0]     - (RW) same as DIS_STA_MAP_0

 =====================================================================================*/
#define WF_PLE_TOP_DIS_STA_MAP_EXT1_DIS_STA_MAP_EXT_1_ADDR     WF_PLE_TOP_DIS_STA_MAP_EXT1_ADDR
#define WF_PLE_TOP_DIS_STA_MAP_EXT1_DIS_STA_MAP_EXT_1_MASK     0xFFFFFFFF                // DIS_STA_MAP_EXT_1[31..0]
#define WF_PLE_TOP_DIS_STA_MAP_EXT1_DIS_STA_MAP_EXT_1_SHFT     0

/* =====================================================================================

  ---STATION_REDIR0 (0x820c0000 + 0x200)---

    STATION_REDIR_0[7..0]        - (RW) Each bit control redirection station TX function.
                                     SW write one to this CR bits to let HW redirection the station TXD.
                                     If wlan_idx > 32, STATION_REDIR+0x4*i is station TXD redirection control for wlan_idx 32*i ~32*(i+1)-1
    STATION_REDIR_0_1[15..8]     - (RW) same as STATION_REDIR_0
    STATION_REDIR_0_2[31..16]    - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR0_STATION_REDIR_0_2_ADDR       WF_PLE_TOP_STATION_REDIR0_ADDR
#define WF_PLE_TOP_STATION_REDIR0_STATION_REDIR_0_2_MASK       0xFFFF0000                // STATION_REDIR_0_2[31..16]
#define WF_PLE_TOP_STATION_REDIR0_STATION_REDIR_0_2_SHFT       16
#define WF_PLE_TOP_STATION_REDIR0_STATION_REDIR_0_1_ADDR       WF_PLE_TOP_STATION_REDIR0_ADDR
#define WF_PLE_TOP_STATION_REDIR0_STATION_REDIR_0_1_MASK       0x0000FF00                // STATION_REDIR_0_1[15..8]
#define WF_PLE_TOP_STATION_REDIR0_STATION_REDIR_0_1_SHFT       8
#define WF_PLE_TOP_STATION_REDIR0_STATION_REDIR_0_ADDR         WF_PLE_TOP_STATION_REDIR0_ADDR
#define WF_PLE_TOP_STATION_REDIR0_STATION_REDIR_0_MASK         0x000000FF                // STATION_REDIR_0[7..0]
#define WF_PLE_TOP_STATION_REDIR0_STATION_REDIR_0_SHFT         0

/* =====================================================================================

  ---STATION_REDIR1 (0x820c0000 + 0x204)---

    STATION_REDIR_1[31..0]       - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR1_STATION_REDIR_1_ADDR         WF_PLE_TOP_STATION_REDIR1_ADDR
#define WF_PLE_TOP_STATION_REDIR1_STATION_REDIR_1_MASK         0xFFFFFFFF                // STATION_REDIR_1[31..0]
#define WF_PLE_TOP_STATION_REDIR1_STATION_REDIR_1_SHFT         0

/* =====================================================================================

  ---STATION_REDIR2 (0x820c0000 + 0x208)---

    STATION_REDIR_2[31..0]       - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR2_STATION_REDIR_2_ADDR         WF_PLE_TOP_STATION_REDIR2_ADDR
#define WF_PLE_TOP_STATION_REDIR2_STATION_REDIR_2_MASK         0xFFFFFFFF                // STATION_REDIR_2[31..0]
#define WF_PLE_TOP_STATION_REDIR2_STATION_REDIR_2_SHFT         0

/* =====================================================================================

  ---STATION_REDIR3 (0x820c0000 + 0x20c)---

    STATION_REDIR_3[31..0]       - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR3_STATION_REDIR_3_ADDR         WF_PLE_TOP_STATION_REDIR3_ADDR
#define WF_PLE_TOP_STATION_REDIR3_STATION_REDIR_3_MASK         0xFFFFFFFF                // STATION_REDIR_3[31..0]
#define WF_PLE_TOP_STATION_REDIR3_STATION_REDIR_3_SHFT         0

/* =====================================================================================

  ---STATION_REDIR4 (0x820c0000 + 0x210)---

    STATION_REDIR_4[31..0]       - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR4_STATION_REDIR_4_ADDR         WF_PLE_TOP_STATION_REDIR4_ADDR
#define WF_PLE_TOP_STATION_REDIR4_STATION_REDIR_4_MASK         0xFFFFFFFF                // STATION_REDIR_4[31..0]
#define WF_PLE_TOP_STATION_REDIR4_STATION_REDIR_4_SHFT         0

/* =====================================================================================

  ---STATION_REDIR5 (0x820c0000 + 0x214)---

    STATION_REDIR_5[31..0]       - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR5_STATION_REDIR_5_ADDR         WF_PLE_TOP_STATION_REDIR5_ADDR
#define WF_PLE_TOP_STATION_REDIR5_STATION_REDIR_5_MASK         0xFFFFFFFF                // STATION_REDIR_5[31..0]
#define WF_PLE_TOP_STATION_REDIR5_STATION_REDIR_5_SHFT         0

/* =====================================================================================

  ---STATION_REDIR6 (0x820c0000 + 0x218)---

    STATION_REDIR_6[31..0]       - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR6_STATION_REDIR_6_ADDR         WF_PLE_TOP_STATION_REDIR6_ADDR
#define WF_PLE_TOP_STATION_REDIR6_STATION_REDIR_6_MASK         0xFFFFFFFF                // STATION_REDIR_6[31..0]
#define WF_PLE_TOP_STATION_REDIR6_STATION_REDIR_6_SHFT         0

/* =====================================================================================

  ---STATION_REDIR7 (0x820c0000 + 0x21c)---

    STATION_REDIR_7[31..0]       - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR7_STATION_REDIR_7_ADDR         WF_PLE_TOP_STATION_REDIR7_ADDR
#define WF_PLE_TOP_STATION_REDIR7_STATION_REDIR_7_MASK         0xFFFFFFFF                // STATION_REDIR_7[31..0]
#define WF_PLE_TOP_STATION_REDIR7_STATION_REDIR_7_SHFT         0

/* =====================================================================================

  ---STATION_REDIR8 (0x820c0000 + 0x220)---

    STATION_REDIR_8[31..0]       - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR8_STATION_REDIR_8_ADDR         WF_PLE_TOP_STATION_REDIR8_ADDR
#define WF_PLE_TOP_STATION_REDIR8_STATION_REDIR_8_MASK         0xFFFFFFFF                // STATION_REDIR_8[31..0]
#define WF_PLE_TOP_STATION_REDIR8_STATION_REDIR_8_SHFT         0

/* =====================================================================================

  ---STATION_REDIR9 (0x820c0000 + 0x224)---

    STATION_REDIR_9[31..0]       - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR9_STATION_REDIR_9_ADDR         WF_PLE_TOP_STATION_REDIR9_ADDR
#define WF_PLE_TOP_STATION_REDIR9_STATION_REDIR_9_MASK         0xFFFFFFFF                // STATION_REDIR_9[31..0]
#define WF_PLE_TOP_STATION_REDIR9_STATION_REDIR_9_SHFT         0

/* =====================================================================================

  ---STATION_REDIR10 (0x820c0000 + 0x228)---

    STATION_REDIR_10[31..0]      - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR10_STATION_REDIR_10_ADDR       WF_PLE_TOP_STATION_REDIR10_ADDR
#define WF_PLE_TOP_STATION_REDIR10_STATION_REDIR_10_MASK       0xFFFFFFFF                // STATION_REDIR_10[31..0]
#define WF_PLE_TOP_STATION_REDIR10_STATION_REDIR_10_SHFT       0

/* =====================================================================================

  ---STATION_REDIR11 (0x820c0000 + 0x22c)---

    STATION_REDIR_11[31..0]      - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR11_STATION_REDIR_11_ADDR       WF_PLE_TOP_STATION_REDIR11_ADDR
#define WF_PLE_TOP_STATION_REDIR11_STATION_REDIR_11_MASK       0xFFFFFFFF                // STATION_REDIR_11[31..0]
#define WF_PLE_TOP_STATION_REDIR11_STATION_REDIR_11_SHFT       0

/* =====================================================================================

  ---STATION_REDIR12 (0x820c0000 + 0x230)---

    STATION_REDIR_12[31..0]      - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR12_STATION_REDIR_12_ADDR       WF_PLE_TOP_STATION_REDIR12_ADDR
#define WF_PLE_TOP_STATION_REDIR12_STATION_REDIR_12_MASK       0xFFFFFFFF                // STATION_REDIR_12[31..0]
#define WF_PLE_TOP_STATION_REDIR12_STATION_REDIR_12_SHFT       0

/* =====================================================================================

  ---STATION_REDIR13 (0x820c0000 + 0x234)---

    STATION_REDIR_13[31..0]      - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR13_STATION_REDIR_13_ADDR       WF_PLE_TOP_STATION_REDIR13_ADDR
#define WF_PLE_TOP_STATION_REDIR13_STATION_REDIR_13_MASK       0xFFFFFFFF                // STATION_REDIR_13[31..0]
#define WF_PLE_TOP_STATION_REDIR13_STATION_REDIR_13_SHFT       0

/* =====================================================================================

  ---STATION_REDIR14 (0x820c0000 + 0x238)---

    STATION_REDIR_14[31..0]      - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR14_STATION_REDIR_14_ADDR       WF_PLE_TOP_STATION_REDIR14_ADDR
#define WF_PLE_TOP_STATION_REDIR14_STATION_REDIR_14_MASK       0xFFFFFFFF                // STATION_REDIR_14[31..0]
#define WF_PLE_TOP_STATION_REDIR14_STATION_REDIR_14_SHFT       0

/* =====================================================================================

  ---STATION_REDIR15 (0x820c0000 + 0x23c)---

    STATION_REDIR_15[31..0]      - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR15_STATION_REDIR_15_ADDR       WF_PLE_TOP_STATION_REDIR15_ADDR
#define WF_PLE_TOP_STATION_REDIR15_STATION_REDIR_15_MASK       0xFFFFFFFF                // STATION_REDIR_15[31..0]
#define WF_PLE_TOP_STATION_REDIR15_STATION_REDIR_15_SHFT       0

/* =====================================================================================

  ---STATION_REDIR16 (0x820c0000 + 0x240)---

    STATION_REDIR_16[31..0]      - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR16_STATION_REDIR_16_ADDR       WF_PLE_TOP_STATION_REDIR16_ADDR
#define WF_PLE_TOP_STATION_REDIR16_STATION_REDIR_16_MASK       0xFFFFFFFF                // STATION_REDIR_16[31..0]
#define WF_PLE_TOP_STATION_REDIR16_STATION_REDIR_16_SHFT       0

/* =====================================================================================

  ---STATION_REDIR17 (0x820c0000 + 0x244)---

    STATION_REDIR_17[31..0]      - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR17_STATION_REDIR_17_ADDR       WF_PLE_TOP_STATION_REDIR17_ADDR
#define WF_PLE_TOP_STATION_REDIR17_STATION_REDIR_17_MASK       0xFFFFFFFF                // STATION_REDIR_17[31..0]
#define WF_PLE_TOP_STATION_REDIR17_STATION_REDIR_17_SHFT       0

/* =====================================================================================

  ---STATION_REDIR18 (0x820c0000 + 0x248)---

    STATION_REDIR_18[31..0]      - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR18_STATION_REDIR_18_ADDR       WF_PLE_TOP_STATION_REDIR18_ADDR
#define WF_PLE_TOP_STATION_REDIR18_STATION_REDIR_18_MASK       0xFFFFFFFF                // STATION_REDIR_18[31..0]
#define WF_PLE_TOP_STATION_REDIR18_STATION_REDIR_18_SHFT       0

/* =====================================================================================

  ---STATION_REDIR19 (0x820c0000 + 0x24c)---

    STATION_REDIR_19[31..0]      - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR19_STATION_REDIR_19_ADDR       WF_PLE_TOP_STATION_REDIR19_ADDR
#define WF_PLE_TOP_STATION_REDIR19_STATION_REDIR_19_MASK       0xFFFFFFFF                // STATION_REDIR_19[31..0]
#define WF_PLE_TOP_STATION_REDIR19_STATION_REDIR_19_SHFT       0

/* =====================================================================================

  ---STATION_REDIR20 (0x820c0000 + 0x250)---

    STATION_REDIR_20[31..0]      - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR20_STATION_REDIR_20_ADDR       WF_PLE_TOP_STATION_REDIR20_ADDR
#define WF_PLE_TOP_STATION_REDIR20_STATION_REDIR_20_MASK       0xFFFFFFFF                // STATION_REDIR_20[31..0]
#define WF_PLE_TOP_STATION_REDIR20_STATION_REDIR_20_SHFT       0

/* =====================================================================================

  ---STATION_REDIR21 (0x820c0000 + 0x254)---

    STATION_REDIR_21[31..0]      - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR21_STATION_REDIR_21_ADDR       WF_PLE_TOP_STATION_REDIR21_ADDR
#define WF_PLE_TOP_STATION_REDIR21_STATION_REDIR_21_MASK       0xFFFFFFFF                // STATION_REDIR_21[31..0]
#define WF_PLE_TOP_STATION_REDIR21_STATION_REDIR_21_SHFT       0

/* =====================================================================================

  ---STATION_REDIR22 (0x820c0000 + 0x258)---

    STATION_REDIR_22[31..0]      - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR22_STATION_REDIR_22_ADDR       WF_PLE_TOP_STATION_REDIR22_ADDR
#define WF_PLE_TOP_STATION_REDIR22_STATION_REDIR_22_MASK       0xFFFFFFFF                // STATION_REDIR_22[31..0]
#define WF_PLE_TOP_STATION_REDIR22_STATION_REDIR_22_SHFT       0

/* =====================================================================================

  ---STATION_REDIR23 (0x820c0000 + 0x25c)---

    STATION_REDIR_23[31..0]      - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR23_STATION_REDIR_23_ADDR       WF_PLE_TOP_STATION_REDIR23_ADDR
#define WF_PLE_TOP_STATION_REDIR23_STATION_REDIR_23_MASK       0xFFFFFFFF                // STATION_REDIR_23[31..0]
#define WF_PLE_TOP_STATION_REDIR23_STATION_REDIR_23_SHFT       0

/* =====================================================================================

  ---STATION_REDIR24 (0x820c0000 + 0x260)---

    STATION_REDIR_24[31..0]      - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR24_STATION_REDIR_24_ADDR       WF_PLE_TOP_STATION_REDIR24_ADDR
#define WF_PLE_TOP_STATION_REDIR24_STATION_REDIR_24_MASK       0xFFFFFFFF                // STATION_REDIR_24[31..0]
#define WF_PLE_TOP_STATION_REDIR24_STATION_REDIR_24_SHFT       0

/* =====================================================================================

  ---STATION_REDIR25 (0x820c0000 + 0x264)---

    STATION_REDIR_25[31..0]      - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR25_STATION_REDIR_25_ADDR       WF_PLE_TOP_STATION_REDIR25_ADDR
#define WF_PLE_TOP_STATION_REDIR25_STATION_REDIR_25_MASK       0xFFFFFFFF                // STATION_REDIR_25[31..0]
#define WF_PLE_TOP_STATION_REDIR25_STATION_REDIR_25_SHFT       0

/* =====================================================================================

  ---STATION_REDIR26 (0x820c0000 + 0x268)---

    STATION_REDIR_26[31..0]      - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR26_STATION_REDIR_26_ADDR       WF_PLE_TOP_STATION_REDIR26_ADDR
#define WF_PLE_TOP_STATION_REDIR26_STATION_REDIR_26_MASK       0xFFFFFFFF                // STATION_REDIR_26[31..0]
#define WF_PLE_TOP_STATION_REDIR26_STATION_REDIR_26_SHFT       0

/* =====================================================================================

  ---STATION_REDIR27 (0x820c0000 + 0x26c)---

    STATION_REDIR_27[31..0]      - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR27_STATION_REDIR_27_ADDR       WF_PLE_TOP_STATION_REDIR27_ADDR
#define WF_PLE_TOP_STATION_REDIR27_STATION_REDIR_27_MASK       0xFFFFFFFF                // STATION_REDIR_27[31..0]
#define WF_PLE_TOP_STATION_REDIR27_STATION_REDIR_27_SHFT       0

/* =====================================================================================

  ---STATION_REDIR28 (0x820c0000 + 0x270)---

    STATION_REDIR_28[31..0]      - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR28_STATION_REDIR_28_ADDR       WF_PLE_TOP_STATION_REDIR28_ADDR
#define WF_PLE_TOP_STATION_REDIR28_STATION_REDIR_28_MASK       0xFFFFFFFF                // STATION_REDIR_28[31..0]
#define WF_PLE_TOP_STATION_REDIR28_STATION_REDIR_28_SHFT       0

/* =====================================================================================

  ---STATION_REDIR29 (0x820c0000 + 0x274)---

    STATION_REDIR_29[31..0]      - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR29_STATION_REDIR_29_ADDR       WF_PLE_TOP_STATION_REDIR29_ADDR
#define WF_PLE_TOP_STATION_REDIR29_STATION_REDIR_29_MASK       0xFFFFFFFF                // STATION_REDIR_29[31..0]
#define WF_PLE_TOP_STATION_REDIR29_STATION_REDIR_29_SHFT       0

/* =====================================================================================

  ---STATION_REDIR30 (0x820c0000 + 0x278)---

    STATION_REDIR_30[31..0]      - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR30_STATION_REDIR_30_ADDR       WF_PLE_TOP_STATION_REDIR30_ADDR
#define WF_PLE_TOP_STATION_REDIR30_STATION_REDIR_30_MASK       0xFFFFFFFF                // STATION_REDIR_30[31..0]
#define WF_PLE_TOP_STATION_REDIR30_STATION_REDIR_30_SHFT       0

/* =====================================================================================

  ---STATION_REDIR31 (0x820c0000 + 0x27c)---

    STATION_REDIR_31[31..0]      - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR31_STATION_REDIR_31_ADDR       WF_PLE_TOP_STATION_REDIR31_ADDR
#define WF_PLE_TOP_STATION_REDIR31_STATION_REDIR_31_MASK       0xFFFFFFFF                // STATION_REDIR_31[31..0]
#define WF_PLE_TOP_STATION_REDIR31_STATION_REDIR_31_SHFT       0

/* =====================================================================================

  ---STATION_REDIR_EXT0 (0x820c0000 + 0x280)---

    STATION_REDIR_EXT_00[3..0]   - (RW) same as STATION_REDIR_0
    STATION_REDIR_EXT_00_01[7..4] - (RW) same as STATION_REDIR_0
    STATION_REDIR_EXT_00_02[15..8] - (RW) same as STATION_REDIR_0
    STATION_REDIR_EXT_00_03[31..16] - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR_EXT0_STATION_REDIR_EXT_00_03_ADDR WF_PLE_TOP_STATION_REDIR_EXT0_ADDR
#define WF_PLE_TOP_STATION_REDIR_EXT0_STATION_REDIR_EXT_00_03_MASK 0xFFFF0000                // STATION_REDIR_EXT_00_03[31..16]
#define WF_PLE_TOP_STATION_REDIR_EXT0_STATION_REDIR_EXT_00_03_SHFT 16
#define WF_PLE_TOP_STATION_REDIR_EXT0_STATION_REDIR_EXT_00_02_ADDR WF_PLE_TOP_STATION_REDIR_EXT0_ADDR
#define WF_PLE_TOP_STATION_REDIR_EXT0_STATION_REDIR_EXT_00_02_MASK 0x0000FF00                // STATION_REDIR_EXT_00_02[15..8]
#define WF_PLE_TOP_STATION_REDIR_EXT0_STATION_REDIR_EXT_00_02_SHFT 8
#define WF_PLE_TOP_STATION_REDIR_EXT0_STATION_REDIR_EXT_00_01_ADDR WF_PLE_TOP_STATION_REDIR_EXT0_ADDR
#define WF_PLE_TOP_STATION_REDIR_EXT0_STATION_REDIR_EXT_00_01_MASK 0x000000F0                // STATION_REDIR_EXT_00_01[7..4]
#define WF_PLE_TOP_STATION_REDIR_EXT0_STATION_REDIR_EXT_00_01_SHFT 4
#define WF_PLE_TOP_STATION_REDIR_EXT0_STATION_REDIR_EXT_00_ADDR WF_PLE_TOP_STATION_REDIR_EXT0_ADDR
#define WF_PLE_TOP_STATION_REDIR_EXT0_STATION_REDIR_EXT_00_MASK 0x0000000F                // STATION_REDIR_EXT_00[3..0]
#define WF_PLE_TOP_STATION_REDIR_EXT0_STATION_REDIR_EXT_00_SHFT 0

/* =====================================================================================

  ---STATION_REDIR_EXT1 (0x820c0000 + 0x284)---

    STATION_REDIR_EXT_1[31..0]   - (RW) same as STATION_REDIR_0

 =====================================================================================*/
#define WF_PLE_TOP_STATION_REDIR_EXT1_STATION_REDIR_EXT_1_ADDR WF_PLE_TOP_STATION_REDIR_EXT1_ADDR
#define WF_PLE_TOP_STATION_REDIR_EXT1_STATION_REDIR_EXT_1_MASK 0xFFFFFFFF                // STATION_REDIR_EXT_1[31..0]
#define WF_PLE_TOP_STATION_REDIR_EXT1_STATION_REDIR_EXT_1_SHFT 0

/* =====================================================================================

  ---INT_N9_STS (0x820c0000 + 0x300)---

    CPU_Q0_NE[0]                 - (W1C) CPU queue 0 not empty interrupt status
    CPU_Q1_NE[1]                 - (W1C) CPU queue 1 not empty interrupt status
    CPU_Q2_NE[2]                 - (W1C) CPU queue 2 not empty interrupt status
    CPU_Q3_NE[3]                 - (W1C) CPU queue 3 not empty interrupt status
    RESERVED4[12..4]             - (RO) Reserved bits
    ERROR_INT[13]                - (RO) Error condition interrupt status, define by 0x28
    ERROR_INT_1[14]              - (RO) Error condition interrupt status 1, define by 0xd8
    AMSDU_ERROR_INT[15]          - (RO) HW AMSDU Error condition interrupt status, define by 0x1028
    DATA_TOGGLE[16]              - (W1C) Interrupt status of data toggle of N9 toggle register (0xf0)
    SPL_CMD_FIFO_FULL[17]        - (W1C) Interrupt status of SPL CMD FIFO full
    UMAC_SYSRAM_OUTRAN_ERROR_INT[18] - (W1C) Interrupt status of UMAC SYSRAM out range error
    PS_CHG_CMD_FIFO_FULL[19]     - (W1C) Interrupt status of PS CHG CMD FIFO full
    AC_NONEMPTY_INT[20]          - (W1C) AC queue empty fail interrupt status
    AC_EMPTY_INT[21]             - (W1C) AC queue empty raise interrupt status
    AC_ENQ_LMAC_INT[22]          - (W1C) AC enqueue interrupt status
    RESERVED23[23]               - (RO) Reserved bits
    DBDC0_NONEMPTY_INT[24]       - (W1C) DBDC0 queue empty fail interrupt status
    DBDC0_EMPTY_INT[25]          - (W1C) DBDC0 queue empty raise interrupt status
    DBDC0_ENQ_LMAC_INT[26]       - (W1C) DBDC0 enqueue interrupt status
    RESERVED27[27]               - (RO) Reserved bits
    DBDC1_NONEMPTY_INT[28]       - (W1C) DBDC1 queue empty fail interrupt status
    DBDC1_EMPTY_INT[29]          - (W1C) DBDC1 queue empty raise interrupt status
    DBDC1_ENQ_LMAC_INT[30]       - (W1C) DBDC1 enqueue interrupt status
    RESERVED31[31]               - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_INT_N9_STS_DBDC1_ENQ_LMAC_INT_ADDR          WF_PLE_TOP_INT_N9_STS_ADDR
#define WF_PLE_TOP_INT_N9_STS_DBDC1_ENQ_LMAC_INT_MASK          0x40000000                // DBDC1_ENQ_LMAC_INT[30]
#define WF_PLE_TOP_INT_N9_STS_DBDC1_ENQ_LMAC_INT_SHFT          30
#define WF_PLE_TOP_INT_N9_STS_DBDC1_EMPTY_INT_ADDR             WF_PLE_TOP_INT_N9_STS_ADDR
#define WF_PLE_TOP_INT_N9_STS_DBDC1_EMPTY_INT_MASK             0x20000000                // DBDC1_EMPTY_INT[29]
#define WF_PLE_TOP_INT_N9_STS_DBDC1_EMPTY_INT_SHFT             29
#define WF_PLE_TOP_INT_N9_STS_DBDC1_NONEMPTY_INT_ADDR          WF_PLE_TOP_INT_N9_STS_ADDR
#define WF_PLE_TOP_INT_N9_STS_DBDC1_NONEMPTY_INT_MASK          0x10000000                // DBDC1_NONEMPTY_INT[28]
#define WF_PLE_TOP_INT_N9_STS_DBDC1_NONEMPTY_INT_SHFT          28
#define WF_PLE_TOP_INT_N9_STS_DBDC0_ENQ_LMAC_INT_ADDR          WF_PLE_TOP_INT_N9_STS_ADDR
#define WF_PLE_TOP_INT_N9_STS_DBDC0_ENQ_LMAC_INT_MASK          0x04000000                // DBDC0_ENQ_LMAC_INT[26]
#define WF_PLE_TOP_INT_N9_STS_DBDC0_ENQ_LMAC_INT_SHFT          26
#define WF_PLE_TOP_INT_N9_STS_DBDC0_EMPTY_INT_ADDR             WF_PLE_TOP_INT_N9_STS_ADDR
#define WF_PLE_TOP_INT_N9_STS_DBDC0_EMPTY_INT_MASK             0x02000000                // DBDC0_EMPTY_INT[25]
#define WF_PLE_TOP_INT_N9_STS_DBDC0_EMPTY_INT_SHFT             25
#define WF_PLE_TOP_INT_N9_STS_DBDC0_NONEMPTY_INT_ADDR          WF_PLE_TOP_INT_N9_STS_ADDR
#define WF_PLE_TOP_INT_N9_STS_DBDC0_NONEMPTY_INT_MASK          0x01000000                // DBDC0_NONEMPTY_INT[24]
#define WF_PLE_TOP_INT_N9_STS_DBDC0_NONEMPTY_INT_SHFT          24
#define WF_PLE_TOP_INT_N9_STS_AC_ENQ_LMAC_INT_ADDR             WF_PLE_TOP_INT_N9_STS_ADDR
#define WF_PLE_TOP_INT_N9_STS_AC_ENQ_LMAC_INT_MASK             0x00400000                // AC_ENQ_LMAC_INT[22]
#define WF_PLE_TOP_INT_N9_STS_AC_ENQ_LMAC_INT_SHFT             22
#define WF_PLE_TOP_INT_N9_STS_AC_EMPTY_INT_ADDR                WF_PLE_TOP_INT_N9_STS_ADDR
#define WF_PLE_TOP_INT_N9_STS_AC_EMPTY_INT_MASK                0x00200000                // AC_EMPTY_INT[21]
#define WF_PLE_TOP_INT_N9_STS_AC_EMPTY_INT_SHFT                21
#define WF_PLE_TOP_INT_N9_STS_AC_NONEMPTY_INT_ADDR             WF_PLE_TOP_INT_N9_STS_ADDR
#define WF_PLE_TOP_INT_N9_STS_AC_NONEMPTY_INT_MASK             0x00100000                // AC_NONEMPTY_INT[20]
#define WF_PLE_TOP_INT_N9_STS_AC_NONEMPTY_INT_SHFT             20
#define WF_PLE_TOP_INT_N9_STS_PS_CHG_CMD_FIFO_FULL_ADDR        WF_PLE_TOP_INT_N9_STS_ADDR
#define WF_PLE_TOP_INT_N9_STS_PS_CHG_CMD_FIFO_FULL_MASK        0x00080000                // PS_CHG_CMD_FIFO_FULL[19]
#define WF_PLE_TOP_INT_N9_STS_PS_CHG_CMD_FIFO_FULL_SHFT        19
#define WF_PLE_TOP_INT_N9_STS_UMAC_SYSRAM_OUTRAN_ERROR_INT_ADDR WF_PLE_TOP_INT_N9_STS_ADDR
#define WF_PLE_TOP_INT_N9_STS_UMAC_SYSRAM_OUTRAN_ERROR_INT_MASK 0x00040000                // UMAC_SYSRAM_OUTRAN_ERROR_INT[18]
#define WF_PLE_TOP_INT_N9_STS_UMAC_SYSRAM_OUTRAN_ERROR_INT_SHFT 18
#define WF_PLE_TOP_INT_N9_STS_SPL_CMD_FIFO_FULL_ADDR           WF_PLE_TOP_INT_N9_STS_ADDR
#define WF_PLE_TOP_INT_N9_STS_SPL_CMD_FIFO_FULL_MASK           0x00020000                // SPL_CMD_FIFO_FULL[17]
#define WF_PLE_TOP_INT_N9_STS_SPL_CMD_FIFO_FULL_SHFT           17
#define WF_PLE_TOP_INT_N9_STS_DATA_TOGGLE_ADDR                 WF_PLE_TOP_INT_N9_STS_ADDR
#define WF_PLE_TOP_INT_N9_STS_DATA_TOGGLE_MASK                 0x00010000                // DATA_TOGGLE[16]
#define WF_PLE_TOP_INT_N9_STS_DATA_TOGGLE_SHFT                 16
#define WF_PLE_TOP_INT_N9_STS_AMSDU_ERROR_INT_ADDR             WF_PLE_TOP_INT_N9_STS_ADDR
#define WF_PLE_TOP_INT_N9_STS_AMSDU_ERROR_INT_MASK             0x00008000                // AMSDU_ERROR_INT[15]
#define WF_PLE_TOP_INT_N9_STS_AMSDU_ERROR_INT_SHFT             15
#define WF_PLE_TOP_INT_N9_STS_ERROR_INT_1_ADDR                 WF_PLE_TOP_INT_N9_STS_ADDR
#define WF_PLE_TOP_INT_N9_STS_ERROR_INT_1_MASK                 0x00004000                // ERROR_INT_1[14]
#define WF_PLE_TOP_INT_N9_STS_ERROR_INT_1_SHFT                 14
#define WF_PLE_TOP_INT_N9_STS_ERROR_INT_ADDR                   WF_PLE_TOP_INT_N9_STS_ADDR
#define WF_PLE_TOP_INT_N9_STS_ERROR_INT_MASK                   0x00002000                // ERROR_INT[13]
#define WF_PLE_TOP_INT_N9_STS_ERROR_INT_SHFT                   13
#define WF_PLE_TOP_INT_N9_STS_CPU_Q3_NE_ADDR                   WF_PLE_TOP_INT_N9_STS_ADDR
#define WF_PLE_TOP_INT_N9_STS_CPU_Q3_NE_MASK                   0x00000008                // CPU_Q3_NE[3]
#define WF_PLE_TOP_INT_N9_STS_CPU_Q3_NE_SHFT                   3
#define WF_PLE_TOP_INT_N9_STS_CPU_Q2_NE_ADDR                   WF_PLE_TOP_INT_N9_STS_ADDR
#define WF_PLE_TOP_INT_N9_STS_CPU_Q2_NE_MASK                   0x00000004                // CPU_Q2_NE[2]
#define WF_PLE_TOP_INT_N9_STS_CPU_Q2_NE_SHFT                   2
#define WF_PLE_TOP_INT_N9_STS_CPU_Q1_NE_ADDR                   WF_PLE_TOP_INT_N9_STS_ADDR
#define WF_PLE_TOP_INT_N9_STS_CPU_Q1_NE_MASK                   0x00000002                // CPU_Q1_NE[1]
#define WF_PLE_TOP_INT_N9_STS_CPU_Q1_NE_SHFT                   1
#define WF_PLE_TOP_INT_N9_STS_CPU_Q0_NE_ADDR                   WF_PLE_TOP_INT_N9_STS_ADDR
#define WF_PLE_TOP_INT_N9_STS_CPU_Q0_NE_MASK                   0x00000001                // CPU_Q0_NE[0]
#define WF_PLE_TOP_INT_N9_STS_CPU_Q0_NE_SHFT                   0

/* =====================================================================================

  ---INT_N9_ERR_STS (0x820c0000 + 0x304)---

    Q_CMD_ERR_P0[0]              - (W1C) Queue command error interrupt status of port 0. Avoid unclear error flag,  please clear flag when logic reset.
    Q_CMD_ERR_P1[1]              - (W1C) Queue command error interrupt status of port 1. Avoid unclear error flag,  please clear flag when logic reset.
    Q_CMD_ERR_P2[2]              - (W1C) Queue command error interrupt status of port 2. Avoid unclear error flag,  please clear flag when logic reset.
    PAGE_UDF_P0[3]               - (W1C) Page underflow interrupt status of port 0. Avoid unclear error flag,  please clear flag when logic reset.
    PAGE_UDF_P1[4]               - (W1C) Page underflow interrupt status of port 1. Avoid unclear error flag,  please clear flag when logic reset.
    PAGE_UDF_P2[5]               - (W1C) Page underflow interrupt status of port 2. Avoid unclear error flag,  please clear flag when logic reset.
    DOUBLE_RLS_ERR[6]            - (W1C) Double release error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    MDP_D_OPER_ERR[7]            - (W1C) MDP data operation error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    MDP_HANG_ERR[8]              - (W1C) MDP FSM Hang error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    RESERVED9[9]                 - (RO) Reserved bits
    DATA_OPER_ERR_P0[10]         - (W1C) Data operation error of port 0. Avoid unclear error flag,  please clear flag when logic reset.
    DATA_OPER_ERR_P1[11]         - (W1C) Data operation error of port 1. Avoid unclear error flag,  please clear flag when logic reset.
    DATA_OPER_ERR_P2[12]         - (W1C) Data operation error of port 2. Avoid unclear error flag,  please clear flag when logic reset.
    FL_HANG_ERR[13]              - (W1C) Frame link FSM hang error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    PL_HANG_ERR[14]              - (W1C) Page link FSM hang error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    HIF_HANG_ERR[15]             - (W1C) HIF port FSM hang error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    CPU_HANG_ERR[16]             - (W1C) CPU port FSM hang error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    LMAC_HANG_ERR[17]            - (W1C) LMAC port FSM hang error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    FREE_HEAD_TAIL_ERR[18]       - (W1C) Free head/tail error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    QSTRUCT_ERR[19]              - (W1C) Queue struct data error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    BN0_MACTX_HANG_ERR[20]       - (W1C) BN0 MACTX Ctrl FSM Hang error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    BN1_MACTX_HANG_ERR[21]       - (W1C) BN1 MACTX Ctrl FSM Hang error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    BN0_TXCMD_HANG_ERR[22]       - (W1C) BN0 TXCMD Ctrl FSM Hang error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    BN1_TXCMD_HANG_ERR[23]       - (W1C) BN1 TXCMD Ctrl FSM Hang error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    DRR_SRCH_DBDC0_ERR[24]       - (W1C) DRR DBDC0 sta serach error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    DRR_SRCH_DBDC1_ERR[25]       - (W1C) DRR DBDC1 sta serach error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    DRR_FL_ERR[26]               - (W1C) DRR forward link access error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    DRR_BL_ERR[27]               - (W1C) DRR backward link access error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    DRR_RL_ERR[28]               - (W1C) DRR relay link access error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    DRR_CHRG_STA_ERR[29]         - (W1C) DRR charge wlanid error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    DRR_STA_WLANID_ERR[30]       - (W1C) DRR wlanid error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    DRR_STA_WMMID_ERR[31]        - (W1C) DRR wmmid error interrupt. Avoid unclear error flag,  please clear flag when logic reset.

 =====================================================================================*/
#define WF_PLE_TOP_INT_N9_ERR_STS_DRR_STA_WMMID_ERR_ADDR       WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_DRR_STA_WMMID_ERR_MASK       0x80000000                // DRR_STA_WMMID_ERR[31]
#define WF_PLE_TOP_INT_N9_ERR_STS_DRR_STA_WMMID_ERR_SHFT       31
#define WF_PLE_TOP_INT_N9_ERR_STS_DRR_STA_WLANID_ERR_ADDR      WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_DRR_STA_WLANID_ERR_MASK      0x40000000                // DRR_STA_WLANID_ERR[30]
#define WF_PLE_TOP_INT_N9_ERR_STS_DRR_STA_WLANID_ERR_SHFT      30
#define WF_PLE_TOP_INT_N9_ERR_STS_DRR_CHRG_STA_ERR_ADDR        WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_DRR_CHRG_STA_ERR_MASK        0x20000000                // DRR_CHRG_STA_ERR[29]
#define WF_PLE_TOP_INT_N9_ERR_STS_DRR_CHRG_STA_ERR_SHFT        29
#define WF_PLE_TOP_INT_N9_ERR_STS_DRR_RL_ERR_ADDR              WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_DRR_RL_ERR_MASK              0x10000000                // DRR_RL_ERR[28]
#define WF_PLE_TOP_INT_N9_ERR_STS_DRR_RL_ERR_SHFT              28
#define WF_PLE_TOP_INT_N9_ERR_STS_DRR_BL_ERR_ADDR              WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_DRR_BL_ERR_MASK              0x08000000                // DRR_BL_ERR[27]
#define WF_PLE_TOP_INT_N9_ERR_STS_DRR_BL_ERR_SHFT              27
#define WF_PLE_TOP_INT_N9_ERR_STS_DRR_FL_ERR_ADDR              WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_DRR_FL_ERR_MASK              0x04000000                // DRR_FL_ERR[26]
#define WF_PLE_TOP_INT_N9_ERR_STS_DRR_FL_ERR_SHFT              26
#define WF_PLE_TOP_INT_N9_ERR_STS_DRR_SRCH_DBDC1_ERR_ADDR      WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_DRR_SRCH_DBDC1_ERR_MASK      0x02000000                // DRR_SRCH_DBDC1_ERR[25]
#define WF_PLE_TOP_INT_N9_ERR_STS_DRR_SRCH_DBDC1_ERR_SHFT      25
#define WF_PLE_TOP_INT_N9_ERR_STS_DRR_SRCH_DBDC0_ERR_ADDR      WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_DRR_SRCH_DBDC0_ERR_MASK      0x01000000                // DRR_SRCH_DBDC0_ERR[24]
#define WF_PLE_TOP_INT_N9_ERR_STS_DRR_SRCH_DBDC0_ERR_SHFT      24
#define WF_PLE_TOP_INT_N9_ERR_STS_BN1_TXCMD_HANG_ERR_ADDR      WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_BN1_TXCMD_HANG_ERR_MASK      0x00800000                // BN1_TXCMD_HANG_ERR[23]
#define WF_PLE_TOP_INT_N9_ERR_STS_BN1_TXCMD_HANG_ERR_SHFT      23
#define WF_PLE_TOP_INT_N9_ERR_STS_BN0_TXCMD_HANG_ERR_ADDR      WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_BN0_TXCMD_HANG_ERR_MASK      0x00400000                // BN0_TXCMD_HANG_ERR[22]
#define WF_PLE_TOP_INT_N9_ERR_STS_BN0_TXCMD_HANG_ERR_SHFT      22
#define WF_PLE_TOP_INT_N9_ERR_STS_BN1_MACTX_HANG_ERR_ADDR      WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_BN1_MACTX_HANG_ERR_MASK      0x00200000                // BN1_MACTX_HANG_ERR[21]
#define WF_PLE_TOP_INT_N9_ERR_STS_BN1_MACTX_HANG_ERR_SHFT      21
#define WF_PLE_TOP_INT_N9_ERR_STS_BN0_MACTX_HANG_ERR_ADDR      WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_BN0_MACTX_HANG_ERR_MASK      0x00100000                // BN0_MACTX_HANG_ERR[20]
#define WF_PLE_TOP_INT_N9_ERR_STS_BN0_MACTX_HANG_ERR_SHFT      20
#define WF_PLE_TOP_INT_N9_ERR_STS_QSTRUCT_ERR_ADDR             WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_QSTRUCT_ERR_MASK             0x00080000                // QSTRUCT_ERR[19]
#define WF_PLE_TOP_INT_N9_ERR_STS_QSTRUCT_ERR_SHFT             19
#define WF_PLE_TOP_INT_N9_ERR_STS_FREE_HEAD_TAIL_ERR_ADDR      WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_FREE_HEAD_TAIL_ERR_MASK      0x00040000                // FREE_HEAD_TAIL_ERR[18]
#define WF_PLE_TOP_INT_N9_ERR_STS_FREE_HEAD_TAIL_ERR_SHFT      18
#define WF_PLE_TOP_INT_N9_ERR_STS_LMAC_HANG_ERR_ADDR           WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_LMAC_HANG_ERR_MASK           0x00020000                // LMAC_HANG_ERR[17]
#define WF_PLE_TOP_INT_N9_ERR_STS_LMAC_HANG_ERR_SHFT           17
#define WF_PLE_TOP_INT_N9_ERR_STS_CPU_HANG_ERR_ADDR            WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_CPU_HANG_ERR_MASK            0x00010000                // CPU_HANG_ERR[16]
#define WF_PLE_TOP_INT_N9_ERR_STS_CPU_HANG_ERR_SHFT            16
#define WF_PLE_TOP_INT_N9_ERR_STS_HIF_HANG_ERR_ADDR            WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_HIF_HANG_ERR_MASK            0x00008000                // HIF_HANG_ERR[15]
#define WF_PLE_TOP_INT_N9_ERR_STS_HIF_HANG_ERR_SHFT            15
#define WF_PLE_TOP_INT_N9_ERR_STS_PL_HANG_ERR_ADDR             WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_PL_HANG_ERR_MASK             0x00004000                // PL_HANG_ERR[14]
#define WF_PLE_TOP_INT_N9_ERR_STS_PL_HANG_ERR_SHFT             14
#define WF_PLE_TOP_INT_N9_ERR_STS_FL_HANG_ERR_ADDR             WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_FL_HANG_ERR_MASK             0x00002000                // FL_HANG_ERR[13]
#define WF_PLE_TOP_INT_N9_ERR_STS_FL_HANG_ERR_SHFT             13
#define WF_PLE_TOP_INT_N9_ERR_STS_DATA_OPER_ERR_P2_ADDR        WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_DATA_OPER_ERR_P2_MASK        0x00001000                // DATA_OPER_ERR_P2[12]
#define WF_PLE_TOP_INT_N9_ERR_STS_DATA_OPER_ERR_P2_SHFT        12
#define WF_PLE_TOP_INT_N9_ERR_STS_DATA_OPER_ERR_P1_ADDR        WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_DATA_OPER_ERR_P1_MASK        0x00000800                // DATA_OPER_ERR_P1[11]
#define WF_PLE_TOP_INT_N9_ERR_STS_DATA_OPER_ERR_P1_SHFT        11
#define WF_PLE_TOP_INT_N9_ERR_STS_DATA_OPER_ERR_P0_ADDR        WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_DATA_OPER_ERR_P0_MASK        0x00000400                // DATA_OPER_ERR_P0[10]
#define WF_PLE_TOP_INT_N9_ERR_STS_DATA_OPER_ERR_P0_SHFT        10
#define WF_PLE_TOP_INT_N9_ERR_STS_MDP_HANG_ERR_ADDR            WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_MDP_HANG_ERR_MASK            0x00000100                // MDP_HANG_ERR[8]
#define WF_PLE_TOP_INT_N9_ERR_STS_MDP_HANG_ERR_SHFT            8
#define WF_PLE_TOP_INT_N9_ERR_STS_MDP_D_OPER_ERR_ADDR          WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_MDP_D_OPER_ERR_MASK          0x00000080                // MDP_D_OPER_ERR[7]
#define WF_PLE_TOP_INT_N9_ERR_STS_MDP_D_OPER_ERR_SHFT          7
#define WF_PLE_TOP_INT_N9_ERR_STS_DOUBLE_RLS_ERR_ADDR          WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_DOUBLE_RLS_ERR_MASK          0x00000040                // DOUBLE_RLS_ERR[6]
#define WF_PLE_TOP_INT_N9_ERR_STS_DOUBLE_RLS_ERR_SHFT          6
#define WF_PLE_TOP_INT_N9_ERR_STS_PAGE_UDF_P2_ADDR             WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_PAGE_UDF_P2_MASK             0x00000020                // PAGE_UDF_P2[5]
#define WF_PLE_TOP_INT_N9_ERR_STS_PAGE_UDF_P2_SHFT             5
#define WF_PLE_TOP_INT_N9_ERR_STS_PAGE_UDF_P1_ADDR             WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_PAGE_UDF_P1_MASK             0x00000010                // PAGE_UDF_P1[4]
#define WF_PLE_TOP_INT_N9_ERR_STS_PAGE_UDF_P1_SHFT             4
#define WF_PLE_TOP_INT_N9_ERR_STS_PAGE_UDF_P0_ADDR             WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_PAGE_UDF_P0_MASK             0x00000008                // PAGE_UDF_P0[3]
#define WF_PLE_TOP_INT_N9_ERR_STS_PAGE_UDF_P0_SHFT             3
#define WF_PLE_TOP_INT_N9_ERR_STS_Q_CMD_ERR_P2_ADDR            WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_Q_CMD_ERR_P2_MASK            0x00000004                // Q_CMD_ERR_P2[2]
#define WF_PLE_TOP_INT_N9_ERR_STS_Q_CMD_ERR_P2_SHFT            2
#define WF_PLE_TOP_INT_N9_ERR_STS_Q_CMD_ERR_P1_ADDR            WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_Q_CMD_ERR_P1_MASK            0x00000002                // Q_CMD_ERR_P1[1]
#define WF_PLE_TOP_INT_N9_ERR_STS_Q_CMD_ERR_P1_SHFT            1
#define WF_PLE_TOP_INT_N9_ERR_STS_Q_CMD_ERR_P0_ADDR            WF_PLE_TOP_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_Q_CMD_ERR_P0_MASK            0x00000001                // Q_CMD_ERR_P0[0]
#define WF_PLE_TOP_INT_N9_ERR_STS_Q_CMD_ERR_P0_SHFT            0

/* =====================================================================================

  ---INT_N9_ERR_STS_1 (0x820c0000 + 0x308)---

    BN0_MDP_TDP_HANG_ERR[0]      - (W1C) BN0 MDP TDP FSM hang error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    MDP_RDP_HANG_ERR[1]          - (W1C) MDP RDP FSM hang error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    MDP_TIOC_HANG_ERR[2]         - (W1C) MDP TIOC FSM hang error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    MDP_RIOC_HANG_ERR[3]         - (W1C) MDP RIOC FSM hang error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    PF_HANG_ERR[4]               - (W1C) PF FSM hang error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    SEC0_HANG_ERR[5]             - (W1C) SEC 0 FSM hang error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    SEC1_HANG_ERR[6]             - (W1C) SEC 1 FSM hang error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    RESERVED7[9..7]              - (RO) Reserved bits
    MDP_RDP_WB_HANG_ERR[10]      - (W1C) MDP RDP wait buffer FSM hang error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    UWTBL_HANG_ERR[11]           - (W1C) UWTBL FSM hang error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    RESERVED12[15..12]           - (RO) Reserved bits
    MDP_TDPIOC_HANG_ERR[16]      - (W1C) MDP TDPIOC FSM hang error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    MDP_RDPIOC_HANG_ERR[17]      - (W1C) MDP RDPIOC FSM hang error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    RESERVED18[31..18]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_INT_N9_ERR_STS_1_MDP_RDPIOC_HANG_ERR_ADDR   WF_PLE_TOP_INT_N9_ERR_STS_1_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_1_MDP_RDPIOC_HANG_ERR_MASK   0x00020000                // MDP_RDPIOC_HANG_ERR[17]
#define WF_PLE_TOP_INT_N9_ERR_STS_1_MDP_RDPIOC_HANG_ERR_SHFT   17
#define WF_PLE_TOP_INT_N9_ERR_STS_1_MDP_TDPIOC_HANG_ERR_ADDR   WF_PLE_TOP_INT_N9_ERR_STS_1_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_1_MDP_TDPIOC_HANG_ERR_MASK   0x00010000                // MDP_TDPIOC_HANG_ERR[16]
#define WF_PLE_TOP_INT_N9_ERR_STS_1_MDP_TDPIOC_HANG_ERR_SHFT   16
#define WF_PLE_TOP_INT_N9_ERR_STS_1_UWTBL_HANG_ERR_ADDR        WF_PLE_TOP_INT_N9_ERR_STS_1_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_1_UWTBL_HANG_ERR_MASK        0x00000800                // UWTBL_HANG_ERR[11]
#define WF_PLE_TOP_INT_N9_ERR_STS_1_UWTBL_HANG_ERR_SHFT        11
#define WF_PLE_TOP_INT_N9_ERR_STS_1_MDP_RDP_WB_HANG_ERR_ADDR   WF_PLE_TOP_INT_N9_ERR_STS_1_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_1_MDP_RDP_WB_HANG_ERR_MASK   0x00000400                // MDP_RDP_WB_HANG_ERR[10]
#define WF_PLE_TOP_INT_N9_ERR_STS_1_MDP_RDP_WB_HANG_ERR_SHFT   10
#define WF_PLE_TOP_INT_N9_ERR_STS_1_SEC1_HANG_ERR_ADDR         WF_PLE_TOP_INT_N9_ERR_STS_1_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_1_SEC1_HANG_ERR_MASK         0x00000040                // SEC1_HANG_ERR[6]
#define WF_PLE_TOP_INT_N9_ERR_STS_1_SEC1_HANG_ERR_SHFT         6
#define WF_PLE_TOP_INT_N9_ERR_STS_1_SEC0_HANG_ERR_ADDR         WF_PLE_TOP_INT_N9_ERR_STS_1_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_1_SEC0_HANG_ERR_MASK         0x00000020                // SEC0_HANG_ERR[5]
#define WF_PLE_TOP_INT_N9_ERR_STS_1_SEC0_HANG_ERR_SHFT         5
#define WF_PLE_TOP_INT_N9_ERR_STS_1_PF_HANG_ERR_ADDR           WF_PLE_TOP_INT_N9_ERR_STS_1_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_1_PF_HANG_ERR_MASK           0x00000010                // PF_HANG_ERR[4]
#define WF_PLE_TOP_INT_N9_ERR_STS_1_PF_HANG_ERR_SHFT           4
#define WF_PLE_TOP_INT_N9_ERR_STS_1_MDP_RIOC_HANG_ERR_ADDR     WF_PLE_TOP_INT_N9_ERR_STS_1_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_1_MDP_RIOC_HANG_ERR_MASK     0x00000008                // MDP_RIOC_HANG_ERR[3]
#define WF_PLE_TOP_INT_N9_ERR_STS_1_MDP_RIOC_HANG_ERR_SHFT     3
#define WF_PLE_TOP_INT_N9_ERR_STS_1_MDP_TIOC_HANG_ERR_ADDR     WF_PLE_TOP_INT_N9_ERR_STS_1_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_1_MDP_TIOC_HANG_ERR_MASK     0x00000004                // MDP_TIOC_HANG_ERR[2]
#define WF_PLE_TOP_INT_N9_ERR_STS_1_MDP_TIOC_HANG_ERR_SHFT     2
#define WF_PLE_TOP_INT_N9_ERR_STS_1_MDP_RDP_HANG_ERR_ADDR      WF_PLE_TOP_INT_N9_ERR_STS_1_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_1_MDP_RDP_HANG_ERR_MASK      0x00000002                // MDP_RDP_HANG_ERR[1]
#define WF_PLE_TOP_INT_N9_ERR_STS_1_MDP_RDP_HANG_ERR_SHFT      1
#define WF_PLE_TOP_INT_N9_ERR_STS_1_BN0_MDP_TDP_HANG_ERR_ADDR  WF_PLE_TOP_INT_N9_ERR_STS_1_ADDR
#define WF_PLE_TOP_INT_N9_ERR_STS_1_BN0_MDP_TDP_HANG_ERR_MASK  0x00000001                // BN0_MDP_TDP_HANG_ERR[0]
#define WF_PLE_TOP_INT_N9_ERR_STS_1_BN0_MDP_TDP_HANG_ERR_SHFT  0

/* =====================================================================================

  ---N9_BSS_PS_INT_STS (0x820c0000 + 0x30c)---

    BSSID0_NONEMPTY_INT[0]       - (W1C) BSSID0 queue empty fall interrupt status
    BSSID1_NONEMPTY_INT[1]       - (W1C) BSSID1 queue empty fall interrupt status
    BSSID2_NONEMPTY_INT[2]       - (W1C) BSSID2 queue empty fall interrupt status
    BSSID3_NONEMPTY_INT[3]       - (W1C) BSSID3 queue empty fall interrupt status
    BN1_BSSID0_NONEMPTY_INT[4]   - (W1C) BN1 BSSID0 queue empty fall interrupt status
    BN1_BSSID1_NONEMPTY_INT[5]   - (W1C) BN1 BSSID1 queue empty fall interrupt status
    BN1_BSSID2_NONEMPTY_INT[6]   - (W1C) BN1 BSSID2 queue empty fall interrupt status
    BN1_BSSID3_NONEMPTY_INT[7]   - (W1C) BN1 BSSID3 queue empty fall interrupt status
    BSSID0_EMPTY_INT[8]          - (W1C) BSSID0 queue empty raise interrupt status
    BSSID1_EMPTY_INT[9]          - (W1C) BSSID1 queue empty raise interrupt status
    BSSID2_EMPTY_INT[10]         - (W1C) BSSID2 queue empty raise interrupt status
    BSSID3_EMPTY_INT[11]         - (W1C) BSSID3 queue empty raise interrupt status
    BN1_BSSID0_EMPTY_INT[12]     - (W1C) BN1 BSSID0 queue empty raise interrupt status
    BN1_BSSID1_EMPTY_INT[13]     - (W1C) BN1 BSSID1 queue empty raise interrupt status
    BN1_BSSID2_EMPTY_INT[14]     - (W1C) BN1 BSSID2 queue empty raise interrupt status
    BN1_BSSID3_EMPTY_INT[15]     - (W1C) BN1 BSSID3 queue empty raise interrupt status
    BSSID0_ENQ_LMAC_INT[16]      - (W1C) BSSID0 enqueue interrupt status
    BSSID1_ENQ_LMAC_INT[17]      - (W1C) BSSID1 enqueue interrupt status
    BSSID2_ENQ_LMAC_INT[18]      - (W1C) BSSID2 enqueue interrupt status
    BSSID3_ENQ_LMAC_INT[19]      - (W1C) BSSID3 enqueue interrupt status
    RESERVED20[23..20]           - (RO) Reserved bits
    BN2_BSSID0_NONEMPTY_INT[24]  - (W1C) BN2 BSSID0 queue empty fall interrupt status
    BN2_BSSID1_NONEMPTY_INT[25]  - (W1C) BN2 BSSID1 queue empty fall interrupt status
    BN2_BSSID2_NONEMPTY_INT[26]  - (W1C) BN2 BSSID2 queue empty fall interrupt status
    BN2_BSSID3_NONEMPTY_INT[27]  - (W1C) BN2 BSSID3 queue empty fall interrupt status
    BN2_BSSID0_EMPTY_INT[28]     - (W1C) BN2 BSSID0 queue empty raise interrupt status
    BN2_BSSID1_EMPTY_INT[29]     - (W1C) BN2 BSSID1 queue empty raise interrupt status
    BN2_BSSID2_EMPTY_INT[30]     - (W1C) BN2 BSSID2 queue empty raise interrupt status
    BN2_BSSID3_EMPTY_INT[31]     - (W1C) BN2 BSSID3 queue empty raise interrupt status

 =====================================================================================*/
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN2_BSSID3_EMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN2_BSSID3_EMPTY_INT_MASK 0x80000000                // BN2_BSSID3_EMPTY_INT[31]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN2_BSSID3_EMPTY_INT_SHFT 31
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN2_BSSID2_EMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN2_BSSID2_EMPTY_INT_MASK 0x40000000                // BN2_BSSID2_EMPTY_INT[30]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN2_BSSID2_EMPTY_INT_SHFT 30
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN2_BSSID1_EMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN2_BSSID1_EMPTY_INT_MASK 0x20000000                // BN2_BSSID1_EMPTY_INT[29]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN2_BSSID1_EMPTY_INT_SHFT 29
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN2_BSSID0_EMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN2_BSSID0_EMPTY_INT_MASK 0x10000000                // BN2_BSSID0_EMPTY_INT[28]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN2_BSSID0_EMPTY_INT_SHFT 28
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN2_BSSID3_NONEMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN2_BSSID3_NONEMPTY_INT_MASK 0x08000000                // BN2_BSSID3_NONEMPTY_INT[27]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN2_BSSID3_NONEMPTY_INT_SHFT 27
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN2_BSSID2_NONEMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN2_BSSID2_NONEMPTY_INT_MASK 0x04000000                // BN2_BSSID2_NONEMPTY_INT[26]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN2_BSSID2_NONEMPTY_INT_SHFT 26
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN2_BSSID1_NONEMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN2_BSSID1_NONEMPTY_INT_MASK 0x02000000                // BN2_BSSID1_NONEMPTY_INT[25]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN2_BSSID1_NONEMPTY_INT_SHFT 25
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN2_BSSID0_NONEMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN2_BSSID0_NONEMPTY_INT_MASK 0x01000000                // BN2_BSSID0_NONEMPTY_INT[24]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN2_BSSID0_NONEMPTY_INT_SHFT 24
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID3_ENQ_LMAC_INT_ADDR  WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID3_ENQ_LMAC_INT_MASK  0x00080000                // BSSID3_ENQ_LMAC_INT[19]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID3_ENQ_LMAC_INT_SHFT  19
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID2_ENQ_LMAC_INT_ADDR  WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID2_ENQ_LMAC_INT_MASK  0x00040000                // BSSID2_ENQ_LMAC_INT[18]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID2_ENQ_LMAC_INT_SHFT  18
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID1_ENQ_LMAC_INT_ADDR  WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID1_ENQ_LMAC_INT_MASK  0x00020000                // BSSID1_ENQ_LMAC_INT[17]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID1_ENQ_LMAC_INT_SHFT  17
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID0_ENQ_LMAC_INT_ADDR  WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID0_ENQ_LMAC_INT_MASK  0x00010000                // BSSID0_ENQ_LMAC_INT[16]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID0_ENQ_LMAC_INT_SHFT  16
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN1_BSSID3_EMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN1_BSSID3_EMPTY_INT_MASK 0x00008000                // BN1_BSSID3_EMPTY_INT[15]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN1_BSSID3_EMPTY_INT_SHFT 15
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN1_BSSID2_EMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN1_BSSID2_EMPTY_INT_MASK 0x00004000                // BN1_BSSID2_EMPTY_INT[14]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN1_BSSID2_EMPTY_INT_SHFT 14
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN1_BSSID1_EMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN1_BSSID1_EMPTY_INT_MASK 0x00002000                // BN1_BSSID1_EMPTY_INT[13]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN1_BSSID1_EMPTY_INT_SHFT 13
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN1_BSSID0_EMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN1_BSSID0_EMPTY_INT_MASK 0x00001000                // BN1_BSSID0_EMPTY_INT[12]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN1_BSSID0_EMPTY_INT_SHFT 12
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID3_EMPTY_INT_ADDR     WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID3_EMPTY_INT_MASK     0x00000800                // BSSID3_EMPTY_INT[11]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID3_EMPTY_INT_SHFT     11
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID2_EMPTY_INT_ADDR     WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID2_EMPTY_INT_MASK     0x00000400                // BSSID2_EMPTY_INT[10]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID2_EMPTY_INT_SHFT     10
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID1_EMPTY_INT_ADDR     WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID1_EMPTY_INT_MASK     0x00000200                // BSSID1_EMPTY_INT[9]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID1_EMPTY_INT_SHFT     9
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID0_EMPTY_INT_ADDR     WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID0_EMPTY_INT_MASK     0x00000100                // BSSID0_EMPTY_INT[8]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID0_EMPTY_INT_SHFT     8
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN1_BSSID3_NONEMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN1_BSSID3_NONEMPTY_INT_MASK 0x00000080                // BN1_BSSID3_NONEMPTY_INT[7]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN1_BSSID3_NONEMPTY_INT_SHFT 7
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN1_BSSID2_NONEMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN1_BSSID2_NONEMPTY_INT_MASK 0x00000040                // BN1_BSSID2_NONEMPTY_INT[6]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN1_BSSID2_NONEMPTY_INT_SHFT 6
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN1_BSSID1_NONEMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN1_BSSID1_NONEMPTY_INT_MASK 0x00000020                // BN1_BSSID1_NONEMPTY_INT[5]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN1_BSSID1_NONEMPTY_INT_SHFT 5
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN1_BSSID0_NONEMPTY_INT_ADDR WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN1_BSSID0_NONEMPTY_INT_MASK 0x00000010                // BN1_BSSID0_NONEMPTY_INT[4]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BN1_BSSID0_NONEMPTY_INT_SHFT 4
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID3_NONEMPTY_INT_ADDR  WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID3_NONEMPTY_INT_MASK  0x00000008                // BSSID3_NONEMPTY_INT[3]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID3_NONEMPTY_INT_SHFT  3
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID2_NONEMPTY_INT_ADDR  WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID2_NONEMPTY_INT_MASK  0x00000004                // BSSID2_NONEMPTY_INT[2]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID2_NONEMPTY_INT_SHFT  2
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID1_NONEMPTY_INT_ADDR  WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID1_NONEMPTY_INT_MASK  0x00000002                // BSSID1_NONEMPTY_INT[1]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID1_NONEMPTY_INT_SHFT  1
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID0_NONEMPTY_INT_ADDR  WF_PLE_TOP_N9_BSS_PS_INT_STS_ADDR
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID0_NONEMPTY_INT_MASK  0x00000001                // BSSID0_NONEMPTY_INT[0]
#define WF_PLE_TOP_N9_BSS_PS_INT_STS_BSSID0_NONEMPTY_INT_SHFT  0

/* =====================================================================================

  ---C_GET_FID_0 (0x820c0000 + 0x310)---

    GET_SRC_WLANID[11..0]        - (RW) Source WLAN ID for get frame ID.
    GET_SRC_TGID[13..12]         - (RW) Source TX Group ID for get frame ID.
    GET_SRC_PID[15..14]          - (RW) Source port ID for get frame ID.
    GET_FRAME_TYPE[19..16]       - (RW) GET_SUB_TYPE
    RESERVED20[23..20]           - (RO) Reserved bits
    GET_SRC_QID[30..24]          - (RW) Source Queue ID for get frame ID.
    EXECUTE[31]                  - (A0) Executes command

 =====================================================================================*/
#define WF_PLE_TOP_C_GET_FID_0_EXECUTE_ADDR                    WF_PLE_TOP_C_GET_FID_0_ADDR
#define WF_PLE_TOP_C_GET_FID_0_EXECUTE_MASK                    0x80000000                // EXECUTE[31]
#define WF_PLE_TOP_C_GET_FID_0_EXECUTE_SHFT                    31
#define WF_PLE_TOP_C_GET_FID_0_GET_SRC_QID_ADDR                WF_PLE_TOP_C_GET_FID_0_ADDR
#define WF_PLE_TOP_C_GET_FID_0_GET_SRC_QID_MASK                0x7F000000                // GET_SRC_QID[30..24]
#define WF_PLE_TOP_C_GET_FID_0_GET_SRC_QID_SHFT                24
#define WF_PLE_TOP_C_GET_FID_0_GET_FRAME_TYPE_ADDR             WF_PLE_TOP_C_GET_FID_0_ADDR
#define WF_PLE_TOP_C_GET_FID_0_GET_FRAME_TYPE_MASK             0x000F0000                // GET_FRAME_TYPE[19..16]
#define WF_PLE_TOP_C_GET_FID_0_GET_FRAME_TYPE_SHFT             16
#define WF_PLE_TOP_C_GET_FID_0_GET_SRC_PID_ADDR                WF_PLE_TOP_C_GET_FID_0_ADDR
#define WF_PLE_TOP_C_GET_FID_0_GET_SRC_PID_MASK                0x0000C000                // GET_SRC_PID[15..14]
#define WF_PLE_TOP_C_GET_FID_0_GET_SRC_PID_SHFT                14
#define WF_PLE_TOP_C_GET_FID_0_GET_SRC_TGID_ADDR               WF_PLE_TOP_C_GET_FID_0_ADDR
#define WF_PLE_TOP_C_GET_FID_0_GET_SRC_TGID_MASK               0x00003000                // GET_SRC_TGID[13..12]
#define WF_PLE_TOP_C_GET_FID_0_GET_SRC_TGID_SHFT               12
#define WF_PLE_TOP_C_GET_FID_0_GET_SRC_WLANID_ADDR             WF_PLE_TOP_C_GET_FID_0_ADDR
#define WF_PLE_TOP_C_GET_FID_0_GET_SRC_WLANID_MASK             0x00000FFF                // GET_SRC_WLANID[11..0]
#define WF_PLE_TOP_C_GET_FID_0_GET_SRC_WLANID_SHFT             0

/* =====================================================================================

  ---C_GET_FID_1 (0x820c0000 + 0x314)---

    GET_RETURN_FID[11..0]        - (RO) Return frame ID
    RESERVED12[14..12]           - (RO) Reserved bits
    END[15]                      - (RO) Return frame ID is end FID.
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_C_GET_FID_1_END_ADDR                        WF_PLE_TOP_C_GET_FID_1_ADDR
#define WF_PLE_TOP_C_GET_FID_1_END_MASK                        0x00008000                // END[15]
#define WF_PLE_TOP_C_GET_FID_1_END_SHFT                        15
#define WF_PLE_TOP_C_GET_FID_1_GET_RETURN_FID_ADDR             WF_PLE_TOP_C_GET_FID_1_ADDR
#define WF_PLE_TOP_C_GET_FID_1_GET_RETURN_FID_MASK             0x00000FFF                // GET_RETURN_FID[11..0]
#define WF_PLE_TOP_C_GET_FID_1_GET_RETURN_FID_SHFT             0

/* =====================================================================================

  ---TO_N9_INT (0x820c0000 + 0x318)---

    CR4_CMD[30..0]               - (RW) Command for N9
    TOGGLE[31]                   - (RW) When this bit is toggled, HW will send interrupt to N9.

 =====================================================================================*/
#define WF_PLE_TOP_TO_N9_INT_TOGGLE_ADDR                       WF_PLE_TOP_TO_N9_INT_ADDR
#define WF_PLE_TOP_TO_N9_INT_TOGGLE_MASK                       0x80000000                // TOGGLE[31]
#define WF_PLE_TOP_TO_N9_INT_TOGGLE_SHFT                       31
#define WF_PLE_TOP_TO_N9_INT_CR4_CMD_ADDR                      WF_PLE_TOP_TO_N9_INT_ADDR
#define WF_PLE_TOP_TO_N9_INT_CR4_CMD_MASK                      0x7FFFFFFF                // CR4_CMD[30..0]
#define WF_PLE_TOP_TO_N9_INT_CR4_CMD_SHFT                      0

/* =====================================================================================

  ---C_EN_QUEUE_0 (0x820c0000 + 0x320)---

    DST_WLANID[11..0]            - (RW) Destination WLANID for enqueue
    DST_TGID[13..12]             - (RW) Destination TX Group ID for enqueue
    DST_PID[15..14]              - (RW) Destination port ID for enqueue
    SUB_TYPE[19..16]             - (RW) Sub-type of enqueue command
    RESERVED20[22..20]           - (RO) Reserved bits
    DELAY_ENQ[23]                - (RW) Delay enqueue
    ENQ_DST_QID[30..24]          - (RW) Destination queue ID for enqueue
    EXECUTE[31]                  - (A0) Executes command

 =====================================================================================*/
#define WF_PLE_TOP_C_EN_QUEUE_0_EXECUTE_ADDR                   WF_PLE_TOP_C_EN_QUEUE_0_ADDR
#define WF_PLE_TOP_C_EN_QUEUE_0_EXECUTE_MASK                   0x80000000                // EXECUTE[31]
#define WF_PLE_TOP_C_EN_QUEUE_0_EXECUTE_SHFT                   31
#define WF_PLE_TOP_C_EN_QUEUE_0_ENQ_DST_QID_ADDR               WF_PLE_TOP_C_EN_QUEUE_0_ADDR
#define WF_PLE_TOP_C_EN_QUEUE_0_ENQ_DST_QID_MASK               0x7F000000                // ENQ_DST_QID[30..24]
#define WF_PLE_TOP_C_EN_QUEUE_0_ENQ_DST_QID_SHFT               24
#define WF_PLE_TOP_C_EN_QUEUE_0_DELAY_ENQ_ADDR                 WF_PLE_TOP_C_EN_QUEUE_0_ADDR
#define WF_PLE_TOP_C_EN_QUEUE_0_DELAY_ENQ_MASK                 0x00800000                // DELAY_ENQ[23]
#define WF_PLE_TOP_C_EN_QUEUE_0_DELAY_ENQ_SHFT                 23
#define WF_PLE_TOP_C_EN_QUEUE_0_SUB_TYPE_ADDR                  WF_PLE_TOP_C_EN_QUEUE_0_ADDR
#define WF_PLE_TOP_C_EN_QUEUE_0_SUB_TYPE_MASK                  0x000F0000                // SUB_TYPE[19..16]
#define WF_PLE_TOP_C_EN_QUEUE_0_SUB_TYPE_SHFT                  16
#define WF_PLE_TOP_C_EN_QUEUE_0_DST_PID_ADDR                   WF_PLE_TOP_C_EN_QUEUE_0_ADDR
#define WF_PLE_TOP_C_EN_QUEUE_0_DST_PID_MASK                   0x0000C000                // DST_PID[15..14]
#define WF_PLE_TOP_C_EN_QUEUE_0_DST_PID_SHFT                   14
#define WF_PLE_TOP_C_EN_QUEUE_0_DST_TGID_ADDR                  WF_PLE_TOP_C_EN_QUEUE_0_ADDR
#define WF_PLE_TOP_C_EN_QUEUE_0_DST_TGID_MASK                  0x00003000                // DST_TGID[13..12]
#define WF_PLE_TOP_C_EN_QUEUE_0_DST_TGID_SHFT                  12
#define WF_PLE_TOP_C_EN_QUEUE_0_DST_WLANID_ADDR                WF_PLE_TOP_C_EN_QUEUE_0_ADDR
#define WF_PLE_TOP_C_EN_QUEUE_0_DST_WLANID_MASK                0x00000FFF                // DST_WLANID[11..0]
#define WF_PLE_TOP_C_EN_QUEUE_0_DST_WLANID_SHFT                0

/* =====================================================================================

  ---C_EN_QUEUE_1 (0x820c0000 + 0x324)---

    CUR_LIST_FID_START[11..0]    - (RW) Start frame ID of enqueue operation list, enqueue FID of enqueue operation
    RESERVED12[15..12]           - (RO) Reserved bits
    CUR_LIST_FID_END[27..16]     - (RW) End frame ID of enqueue operation list
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_C_EN_QUEUE_1_CUR_LIST_FID_END_ADDR          WF_PLE_TOP_C_EN_QUEUE_1_ADDR
#define WF_PLE_TOP_C_EN_QUEUE_1_CUR_LIST_FID_END_MASK          0x0FFF0000                // CUR_LIST_FID_END[27..16]
#define WF_PLE_TOP_C_EN_QUEUE_1_CUR_LIST_FID_END_SHFT          16
#define WF_PLE_TOP_C_EN_QUEUE_1_CUR_LIST_FID_START_ADDR        WF_PLE_TOP_C_EN_QUEUE_1_ADDR
#define WF_PLE_TOP_C_EN_QUEUE_1_CUR_LIST_FID_START_MASK        0x00000FFF                // CUR_LIST_FID_START[11..0]
#define WF_PLE_TOP_C_EN_QUEUE_1_CUR_LIST_FID_START_SHFT        0

/* =====================================================================================

  ---C_EN_QUEUE_2 (0x820c0000 + 0x328)---

    TARGET_FID[11..0]            - (RW) Target reference FID for enqueue operation
    RESERVED12[31..12]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_C_EN_QUEUE_2_TARGET_FID_ADDR                WF_PLE_TOP_C_EN_QUEUE_2_ADDR
#define WF_PLE_TOP_C_EN_QUEUE_2_TARGET_FID_MASK                0x00000FFF                // TARGET_FID[11..0]
#define WF_PLE_TOP_C_EN_QUEUE_2_TARGET_FID_SHFT                0

/* =====================================================================================

  ---C_DE_QUEUE_0 (0x820c0000 + 0x330)---

    SRC_WLANID[11..0]            - (RW) Source WLAN ID for dequeue command
    SRC_TGID[13..12]             - (RW) Source TX Group ID for  dequeue command
    SRC_PID[15..14]              - (RW) Source port ID for dequeue command
    DEQ_SUB_TYPE[19..16]         - (RW) Dequeue subtype of dequeue command
    ENQ_SUB_TYPE[22..20]         - (RW) Enqueue subtype of enqueue command
                                     Only valid in Deq&Enq type.
    ENQ_VLD[23]                  - (RW) Deq&Enq command valid
    SRC_QID[30..24]              - (RW) Source queue ID for dequeue command
    EXECUTE[31]                  - (A0) Executes dequeue command

 =====================================================================================*/
#define WF_PLE_TOP_C_DE_QUEUE_0_EXECUTE_ADDR                   WF_PLE_TOP_C_DE_QUEUE_0_ADDR
#define WF_PLE_TOP_C_DE_QUEUE_0_EXECUTE_MASK                   0x80000000                // EXECUTE[31]
#define WF_PLE_TOP_C_DE_QUEUE_0_EXECUTE_SHFT                   31
#define WF_PLE_TOP_C_DE_QUEUE_0_SRC_QID_ADDR                   WF_PLE_TOP_C_DE_QUEUE_0_ADDR
#define WF_PLE_TOP_C_DE_QUEUE_0_SRC_QID_MASK                   0x7F000000                // SRC_QID[30..24]
#define WF_PLE_TOP_C_DE_QUEUE_0_SRC_QID_SHFT                   24
#define WF_PLE_TOP_C_DE_QUEUE_0_ENQ_VLD_ADDR                   WF_PLE_TOP_C_DE_QUEUE_0_ADDR
#define WF_PLE_TOP_C_DE_QUEUE_0_ENQ_VLD_MASK                   0x00800000                // ENQ_VLD[23]
#define WF_PLE_TOP_C_DE_QUEUE_0_ENQ_VLD_SHFT                   23
#define WF_PLE_TOP_C_DE_QUEUE_0_ENQ_SUB_TYPE_ADDR              WF_PLE_TOP_C_DE_QUEUE_0_ADDR
#define WF_PLE_TOP_C_DE_QUEUE_0_ENQ_SUB_TYPE_MASK              0x00700000                // ENQ_SUB_TYPE[22..20]
#define WF_PLE_TOP_C_DE_QUEUE_0_ENQ_SUB_TYPE_SHFT              20
#define WF_PLE_TOP_C_DE_QUEUE_0_DEQ_SUB_TYPE_ADDR              WF_PLE_TOP_C_DE_QUEUE_0_ADDR
#define WF_PLE_TOP_C_DE_QUEUE_0_DEQ_SUB_TYPE_MASK              0x000F0000                // DEQ_SUB_TYPE[19..16]
#define WF_PLE_TOP_C_DE_QUEUE_0_DEQ_SUB_TYPE_SHFT              16
#define WF_PLE_TOP_C_DE_QUEUE_0_SRC_PID_ADDR                   WF_PLE_TOP_C_DE_QUEUE_0_ADDR
#define WF_PLE_TOP_C_DE_QUEUE_0_SRC_PID_MASK                   0x0000C000                // SRC_PID[15..14]
#define WF_PLE_TOP_C_DE_QUEUE_0_SRC_PID_SHFT                   14
#define WF_PLE_TOP_C_DE_QUEUE_0_SRC_TGID_ADDR                  WF_PLE_TOP_C_DE_QUEUE_0_ADDR
#define WF_PLE_TOP_C_DE_QUEUE_0_SRC_TGID_MASK                  0x00003000                // SRC_TGID[13..12]
#define WF_PLE_TOP_C_DE_QUEUE_0_SRC_TGID_SHFT                  12
#define WF_PLE_TOP_C_DE_QUEUE_0_SRC_WLANID_ADDR                WF_PLE_TOP_C_DE_QUEUE_0_ADDR
#define WF_PLE_TOP_C_DE_QUEUE_0_SRC_WLANID_MASK                0x00000FFF                // SRC_WLANID[11..0]
#define WF_PLE_TOP_C_DE_QUEUE_0_SRC_WLANID_SHFT                0

/* =====================================================================================

  ---C_DE_QUEUE_1 (0x820c0000 + 0x334)---

    CUR_LIST_FID_START[11..0]    - (RW) Start frame ID of dequeue operation list, enqueue start FID of enqueue operation
                                     Only valid in Deq&Enq type.
    RESERVED12[15..12]           - (RO) Reserved bits
    CUR_LIST_FID_END[27..16]     - (RW) End framd ID of dequeue operation list, enqueue end FID of enqueue operation
                                     Only valid in Deq&Enq type.
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_C_DE_QUEUE_1_CUR_LIST_FID_END_ADDR          WF_PLE_TOP_C_DE_QUEUE_1_ADDR
#define WF_PLE_TOP_C_DE_QUEUE_1_CUR_LIST_FID_END_MASK          0x0FFF0000                // CUR_LIST_FID_END[27..16]
#define WF_PLE_TOP_C_DE_QUEUE_1_CUR_LIST_FID_END_SHFT          16
#define WF_PLE_TOP_C_DE_QUEUE_1_CUR_LIST_FID_START_ADDR        WF_PLE_TOP_C_DE_QUEUE_1_ADDR
#define WF_PLE_TOP_C_DE_QUEUE_1_CUR_LIST_FID_START_MASK        0x00000FFF                // CUR_LIST_FID_START[11..0]
#define WF_PLE_TOP_C_DE_QUEUE_1_CUR_LIST_FID_START_SHFT        0

/* =====================================================================================

  ---C_DE_QUEUE_2 (0x820c0000 + 0x338)---

    DEQ_ENQ_DST_WLANID[11..0]    - (RW) Destination WLAN ID for enqueue command
                                     Only valid in Deq&Enq type.
    DEQ_ENQ_DST_TGID[13..12]     - (RW) Destination TX Group ID for enqueue command
                                     Only valid in Deq&Enq type.
    DEQ_ENQ_DST_PID[15..14]      - (RW) Destination port ID for enqueue command
                                     OInly valid in Deq&Enq type.
    RESERVED16[23..16]           - (RO) Reserved bits
    DEQ_ENQ_DST_QID[30..24]      - (RW) Destination queue ID for enqueue command
                                     Only valid in Deq&Enq type.
    RESERVED31[31]               - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_C_DE_QUEUE_2_DEQ_ENQ_DST_QID_ADDR           WF_PLE_TOP_C_DE_QUEUE_2_ADDR
#define WF_PLE_TOP_C_DE_QUEUE_2_DEQ_ENQ_DST_QID_MASK           0x7F000000                // DEQ_ENQ_DST_QID[30..24]
#define WF_PLE_TOP_C_DE_QUEUE_2_DEQ_ENQ_DST_QID_SHFT           24
#define WF_PLE_TOP_C_DE_QUEUE_2_DEQ_ENQ_DST_PID_ADDR           WF_PLE_TOP_C_DE_QUEUE_2_ADDR
#define WF_PLE_TOP_C_DE_QUEUE_2_DEQ_ENQ_DST_PID_MASK           0x0000C000                // DEQ_ENQ_DST_PID[15..14]
#define WF_PLE_TOP_C_DE_QUEUE_2_DEQ_ENQ_DST_PID_SHFT           14
#define WF_PLE_TOP_C_DE_QUEUE_2_DEQ_ENQ_DST_TGID_ADDR          WF_PLE_TOP_C_DE_QUEUE_2_ADDR
#define WF_PLE_TOP_C_DE_QUEUE_2_DEQ_ENQ_DST_TGID_MASK          0x00003000                // DEQ_ENQ_DST_TGID[13..12]
#define WF_PLE_TOP_C_DE_QUEUE_2_DEQ_ENQ_DST_TGID_SHFT          12
#define WF_PLE_TOP_C_DE_QUEUE_2_DEQ_ENQ_DST_WLANID_ADDR        WF_PLE_TOP_C_DE_QUEUE_2_ADDR
#define WF_PLE_TOP_C_DE_QUEUE_2_DEQ_ENQ_DST_WLANID_MASK        0x00000FFF                // DEQ_ENQ_DST_WLANID[11..0]
#define WF_PLE_TOP_C_DE_QUEUE_2_DEQ_ENQ_DST_WLANID_SHFT        0

/* =====================================================================================

  ---C_DE_QUEUE_3 (0x820c0000 + 0x33c)---

    DEQ_HEAD_FID[11..0]          - (RO) Head FID got from dequeue command
    RESERVED12[14..12]           - (RO) Reserved bits
    DEQ_EMPTY[15]                - (RO) Queue empty after dequeue command is executed
    DEQ_TAIL_FID[27..16]         - (RO) Last FID got from dequeue command
    RESERVED28[29..28]           - (RO) Reserved bits
    DEQUEUE_ERROR[30]            - (RO) Dequeue operation executed status.
    BUSY[31]                     - (RO) Dequeue execute busy

 =====================================================================================*/
#define WF_PLE_TOP_C_DE_QUEUE_3_BUSY_ADDR                      WF_PLE_TOP_C_DE_QUEUE_3_ADDR
#define WF_PLE_TOP_C_DE_QUEUE_3_BUSY_MASK                      0x80000000                // BUSY[31]
#define WF_PLE_TOP_C_DE_QUEUE_3_BUSY_SHFT                      31
#define WF_PLE_TOP_C_DE_QUEUE_3_DEQUEUE_ERROR_ADDR             WF_PLE_TOP_C_DE_QUEUE_3_ADDR
#define WF_PLE_TOP_C_DE_QUEUE_3_DEQUEUE_ERROR_MASK             0x40000000                // DEQUEUE_ERROR[30]
#define WF_PLE_TOP_C_DE_QUEUE_3_DEQUEUE_ERROR_SHFT             30
#define WF_PLE_TOP_C_DE_QUEUE_3_DEQ_TAIL_FID_ADDR              WF_PLE_TOP_C_DE_QUEUE_3_ADDR
#define WF_PLE_TOP_C_DE_QUEUE_3_DEQ_TAIL_FID_MASK              0x0FFF0000                // DEQ_TAIL_FID[27..16]
#define WF_PLE_TOP_C_DE_QUEUE_3_DEQ_TAIL_FID_SHFT              16
#define WF_PLE_TOP_C_DE_QUEUE_3_DEQ_EMPTY_ADDR                 WF_PLE_TOP_C_DE_QUEUE_3_ADDR
#define WF_PLE_TOP_C_DE_QUEUE_3_DEQ_EMPTY_MASK                 0x00008000                // DEQ_EMPTY[15]
#define WF_PLE_TOP_C_DE_QUEUE_3_DEQ_EMPTY_SHFT                 15
#define WF_PLE_TOP_C_DE_QUEUE_3_DEQ_HEAD_FID_ADDR              WF_PLE_TOP_C_DE_QUEUE_3_ADDR
#define WF_PLE_TOP_C_DE_QUEUE_3_DEQ_HEAD_FID_MASK              0x00000FFF                // DEQ_HEAD_FID[11..0]
#define WF_PLE_TOP_C_DE_QUEUE_3_DEQ_HEAD_FID_SHFT              0

/* =====================================================================================

  ---C_DE_QUEUE_4 (0x820c0000 + 0x340)---

    DEQ_ENQ_REF_FID[11..0]       - (RW) Reference frame ID for enqueue command
                                     Only valid in Deq&Enq type.
    RESERVED12[31..12]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_C_DE_QUEUE_4_DEQ_ENQ_REF_FID_ADDR           WF_PLE_TOP_C_DE_QUEUE_4_ADDR
#define WF_PLE_TOP_C_DE_QUEUE_4_DEQ_ENQ_REF_FID_MASK           0x00000FFF                // DEQ_ENQ_REF_FID[11..0]
#define WF_PLE_TOP_C_DE_QUEUE_4_DEQ_ENQ_REF_FID_SHFT           0

/* =====================================================================================

  ---ALLOCATE_0 (0x820c0000 + 0x350)---

    ALLOCATE_FRAME_LENGTH[13..0] - (RW) Allocate frame length
                                     Unit: DW (4 bytes)
    RESERVED14[15..14]           - (RO) Reserved bits
    ALLOCATE_QID[20..16]         - (RW) QID used for allocate buffer
    RESERVED21[21]               - (RO) Reserved bits
    CPU_TXD_SRC[23..22]          - (RW) txd source.
                                     The value should be the same as the DW6[31:30]
    CPU_TXD_TID[27..24]          - (RW) TXD TID.
                                     The value should be the same as the DW1[24:21]
    CPU_TXD_TGID[29..28]         - (RW) TXD TGID.
                                     The value should be the same as the DW1[13:12]
    RESERVED30[30]               - (RO) Reserved bits
    EXECUTE[31]                  - (A0) Executes allocate buffer command

 =====================================================================================*/
#define WF_PLE_TOP_ALLOCATE_0_EXECUTE_ADDR                     WF_PLE_TOP_ALLOCATE_0_ADDR
#define WF_PLE_TOP_ALLOCATE_0_EXECUTE_MASK                     0x80000000                // EXECUTE[31]
#define WF_PLE_TOP_ALLOCATE_0_EXECUTE_SHFT                     31
#define WF_PLE_TOP_ALLOCATE_0_CPU_TXD_TGID_ADDR                WF_PLE_TOP_ALLOCATE_0_ADDR
#define WF_PLE_TOP_ALLOCATE_0_CPU_TXD_TGID_MASK                0x30000000                // CPU_TXD_TGID[29..28]
#define WF_PLE_TOP_ALLOCATE_0_CPU_TXD_TGID_SHFT                28
#define WF_PLE_TOP_ALLOCATE_0_CPU_TXD_TID_ADDR                 WF_PLE_TOP_ALLOCATE_0_ADDR
#define WF_PLE_TOP_ALLOCATE_0_CPU_TXD_TID_MASK                 0x0F000000                // CPU_TXD_TID[27..24]
#define WF_PLE_TOP_ALLOCATE_0_CPU_TXD_TID_SHFT                 24
#define WF_PLE_TOP_ALLOCATE_0_CPU_TXD_SRC_ADDR                 WF_PLE_TOP_ALLOCATE_0_ADDR
#define WF_PLE_TOP_ALLOCATE_0_CPU_TXD_SRC_MASK                 0x00C00000                // CPU_TXD_SRC[23..22]
#define WF_PLE_TOP_ALLOCATE_0_CPU_TXD_SRC_SHFT                 22
#define WF_PLE_TOP_ALLOCATE_0_ALLOCATE_QID_ADDR                WF_PLE_TOP_ALLOCATE_0_ADDR
#define WF_PLE_TOP_ALLOCATE_0_ALLOCATE_QID_MASK                0x001F0000                // ALLOCATE_QID[20..16]
#define WF_PLE_TOP_ALLOCATE_0_ALLOCATE_QID_SHFT                16
#define WF_PLE_TOP_ALLOCATE_0_ALLOCATE_FRAME_LENGTH_ADDR       WF_PLE_TOP_ALLOCATE_0_ADDR
#define WF_PLE_TOP_ALLOCATE_0_ALLOCATE_FRAME_LENGTH_MASK       0x00003FFF                // ALLOCATE_FRAME_LENGTH[13..0]
#define WF_PLE_TOP_ALLOCATE_0_ALLOCATE_FRAME_LENGTH_SHFT       0

/* =====================================================================================

  ---ALLOCATE_1 (0x820c0000 + 0x354)---

    ALLOCATE_FID[11..0]          - (RO) Return frame ID for allocate buffer command
    RESERVED12[30..12]           - (RO) Reserved bits
    EXECUTE[31]                  - (RO) Execute status of allocate buffer command

 =====================================================================================*/
#define WF_PLE_TOP_ALLOCATE_1_EXECUTE_ADDR                     WF_PLE_TOP_ALLOCATE_1_ADDR
#define WF_PLE_TOP_ALLOCATE_1_EXECUTE_MASK                     0x80000000                // EXECUTE[31]
#define WF_PLE_TOP_ALLOCATE_1_EXECUTE_SHFT                     31
#define WF_PLE_TOP_ALLOCATE_1_ALLOCATE_FID_ADDR                WF_PLE_TOP_ALLOCATE_1_ADDR
#define WF_PLE_TOP_ALLOCATE_1_ALLOCATE_FID_MASK                0x00000FFF                // ALLOCATE_FID[11..0]
#define WF_PLE_TOP_ALLOCATE_1_ALLOCATE_FID_SHFT                0

/* =====================================================================================

  ---ALLOCATE_2 (0x820c0000 + 0x358)---

    CPU_TXBYTE_COUNT[15..0]      - (RW) TX data byte count
                                     This value should be the same as the first two bytes of TXD in PLE.
    CPU_MSDU_ID0_bit15_8[23..16] - (RW) MSDU_ID0 Bit15-Bit8
                                     This value should be the same as the DW8[15:8] of TXD in PLE.
    CPU_PKT_FT[25..24]           - (RW) TXD's PKT_FT
                                     This value should be the same as the DW0[24:23] of TXD in PLE.
    CPU_TXD_TXCNT[30..26]        - (RW) TXD's TX_COUNT
    CPU_TXD_AGG_EN[31]           - (RW) TXD can be aggregated if
                                     QoS Data packet & Not Boardcast/Multicast packet & Not NA(no ack) & ! Sounding Frame & ! DU & !HE & !FR & !BA_DIS & !FRAG & !Null frame.

 =====================================================================================*/
#define WF_PLE_TOP_ALLOCATE_2_CPU_TXD_AGG_EN_ADDR              WF_PLE_TOP_ALLOCATE_2_ADDR
#define WF_PLE_TOP_ALLOCATE_2_CPU_TXD_AGG_EN_MASK              0x80000000                // CPU_TXD_AGG_EN[31]
#define WF_PLE_TOP_ALLOCATE_2_CPU_TXD_AGG_EN_SHFT              31
#define WF_PLE_TOP_ALLOCATE_2_CPU_TXD_TXCNT_ADDR               WF_PLE_TOP_ALLOCATE_2_ADDR
#define WF_PLE_TOP_ALLOCATE_2_CPU_TXD_TXCNT_MASK               0x7C000000                // CPU_TXD_TXCNT[30..26]
#define WF_PLE_TOP_ALLOCATE_2_CPU_TXD_TXCNT_SHFT               26
#define WF_PLE_TOP_ALLOCATE_2_CPU_PKT_FT_ADDR                  WF_PLE_TOP_ALLOCATE_2_ADDR
#define WF_PLE_TOP_ALLOCATE_2_CPU_PKT_FT_MASK                  0x03000000                // CPU_PKT_FT[25..24]
#define WF_PLE_TOP_ALLOCATE_2_CPU_PKT_FT_SHFT                  24
#define WF_PLE_TOP_ALLOCATE_2_CPU_MSDU_ID0_bit15_8_ADDR        WF_PLE_TOP_ALLOCATE_2_ADDR
#define WF_PLE_TOP_ALLOCATE_2_CPU_MSDU_ID0_bit15_8_MASK        0x00FF0000                // CPU_MSDU_ID0_bit15_8[23..16]
#define WF_PLE_TOP_ALLOCATE_2_CPU_MSDU_ID0_bit15_8_SHFT        16
#define WF_PLE_TOP_ALLOCATE_2_CPU_TXBYTE_COUNT_ADDR            WF_PLE_TOP_ALLOCATE_2_ADDR
#define WF_PLE_TOP_ALLOCATE_2_CPU_TXBYTE_COUNT_MASK            0x0000FFFF                // CPU_TXBYTE_COUNT[15..0]
#define WF_PLE_TOP_ALLOCATE_2_CPU_TXBYTE_COUNT_SHFT            0

/* =====================================================================================

  ---QUEUE_EMPTY (0x820c0000 + 0x360)---

    CPU_Q0_EMPTY[0]              - (RO) CPU queue 0 empty status
    CPU_Q1_EMPTY[1]              - (RO) CPU queue 1 empty status
    CPU_Q2_EMPTY[2]              - (RO) CPU queue 2 empty status
    CPU_Q3_EMPTY[3]              - (RO) CPU queue 3 empty status
    ALTX_0_EMPTY[4]              - (RO) ALTX queue 0 empty status
    BMC_0_EMPTY[5]               - (RO) BMC queue 0 empty status
    BCN_0_EMPTY[6]               - (RO) BCN queue 0 empty status
    PSMP_0_EMPTY[7]              - (RO) PSMP queue 0 empty status
    ALTX_1_EMPTY[8]              - (RO) ALTX queue 1 empty status
    BMC_1_EMPTY[9]               - (RO) BMC queue 1 empty status
    BCN_1_EMPTY[10]              - (RO) BCN queue 1 empty status
    PSMP_1_EMPTY[11]             - (RO) PSMP queue 1 empty status
    ALTX_2_EMPTY[12]             - (RO) ALTX queue 2 empty status
    BMC_2_EMPTY[13]              - (RO) BMC queue 2 empty status
    BCN_2_EMPTY[14]              - (RO) BCN queue 2 empty status
    PSMP_2_EMPTY[15]             - (RO) PSMP queue 2 empty status
    NAF_EMPTY[16]                - (RO) NAF queue  empty status
    NBCN_EMPTY[17]               - (RO) NBCN queue empty status
    RESERVED18[19..18]           - (RO) Reserved bits
    FIX_FID_EMPTY[20]            - (RO) FIX_FID queue empty status
    AMSDU_PNSN_EMPTY[21]         - (RO) AMSDU_PNSN queue empty status
    RESERVED22[23..22]           - (RO) Reserved bits
    ALL_AC_EMPTY[24]             - (RO) All AC queue empty status
    RESERVED25[27..25]           - (RO) Reserved bits
    RLS4_Q_EMTPY[28]             - (RO) Release 4 queue empty status
    RLS3_Q_EMTPY[29]             - (RO) Release 3 queue empty status
    RLS2_Q_EMTPY[30]             - (RO) Release 2 queue empty status
    RLS_Q_EMTPY[31]              - (RO) Release queue empty status

 =====================================================================================*/
#define WF_PLE_TOP_QUEUE_EMPTY_RLS_Q_EMTPY_ADDR                WF_PLE_TOP_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_QUEUE_EMPTY_RLS_Q_EMTPY_MASK                0x80000000                // RLS_Q_EMTPY[31]
#define WF_PLE_TOP_QUEUE_EMPTY_RLS_Q_EMTPY_SHFT                31
#define WF_PLE_TOP_QUEUE_EMPTY_RLS2_Q_EMTPY_ADDR               WF_PLE_TOP_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_QUEUE_EMPTY_RLS2_Q_EMTPY_MASK               0x40000000                // RLS2_Q_EMTPY[30]
#define WF_PLE_TOP_QUEUE_EMPTY_RLS2_Q_EMTPY_SHFT               30
#define WF_PLE_TOP_QUEUE_EMPTY_RLS3_Q_EMTPY_ADDR               WF_PLE_TOP_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_QUEUE_EMPTY_RLS3_Q_EMTPY_MASK               0x20000000                // RLS3_Q_EMTPY[29]
#define WF_PLE_TOP_QUEUE_EMPTY_RLS3_Q_EMTPY_SHFT               29
#define WF_PLE_TOP_QUEUE_EMPTY_RLS4_Q_EMTPY_ADDR               WF_PLE_TOP_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_QUEUE_EMPTY_RLS4_Q_EMTPY_MASK               0x10000000                // RLS4_Q_EMTPY[28]
#define WF_PLE_TOP_QUEUE_EMPTY_RLS4_Q_EMTPY_SHFT               28
#define WF_PLE_TOP_QUEUE_EMPTY_ALL_AC_EMPTY_ADDR               WF_PLE_TOP_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_QUEUE_EMPTY_ALL_AC_EMPTY_MASK               0x01000000                // ALL_AC_EMPTY[24]
#define WF_PLE_TOP_QUEUE_EMPTY_ALL_AC_EMPTY_SHFT               24
#define WF_PLE_TOP_QUEUE_EMPTY_AMSDU_PNSN_EMPTY_ADDR           WF_PLE_TOP_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_QUEUE_EMPTY_AMSDU_PNSN_EMPTY_MASK           0x00200000                // AMSDU_PNSN_EMPTY[21]
#define WF_PLE_TOP_QUEUE_EMPTY_AMSDU_PNSN_EMPTY_SHFT           21
#define WF_PLE_TOP_QUEUE_EMPTY_FIX_FID_EMPTY_ADDR              WF_PLE_TOP_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_QUEUE_EMPTY_FIX_FID_EMPTY_MASK              0x00100000                // FIX_FID_EMPTY[20]
#define WF_PLE_TOP_QUEUE_EMPTY_FIX_FID_EMPTY_SHFT              20
#define WF_PLE_TOP_QUEUE_EMPTY_NBCN_EMPTY_ADDR                 WF_PLE_TOP_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_QUEUE_EMPTY_NBCN_EMPTY_MASK                 0x00020000                // NBCN_EMPTY[17]
#define WF_PLE_TOP_QUEUE_EMPTY_NBCN_EMPTY_SHFT                 17
#define WF_PLE_TOP_QUEUE_EMPTY_NAF_EMPTY_ADDR                  WF_PLE_TOP_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_QUEUE_EMPTY_NAF_EMPTY_MASK                  0x00010000                // NAF_EMPTY[16]
#define WF_PLE_TOP_QUEUE_EMPTY_NAF_EMPTY_SHFT                  16
#define WF_PLE_TOP_QUEUE_EMPTY_PSMP_2_EMPTY_ADDR               WF_PLE_TOP_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_QUEUE_EMPTY_PSMP_2_EMPTY_MASK               0x00008000                // PSMP_2_EMPTY[15]
#define WF_PLE_TOP_QUEUE_EMPTY_PSMP_2_EMPTY_SHFT               15
#define WF_PLE_TOP_QUEUE_EMPTY_BCN_2_EMPTY_ADDR                WF_PLE_TOP_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_QUEUE_EMPTY_BCN_2_EMPTY_MASK                0x00004000                // BCN_2_EMPTY[14]
#define WF_PLE_TOP_QUEUE_EMPTY_BCN_2_EMPTY_SHFT                14
#define WF_PLE_TOP_QUEUE_EMPTY_BMC_2_EMPTY_ADDR                WF_PLE_TOP_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_QUEUE_EMPTY_BMC_2_EMPTY_MASK                0x00002000                // BMC_2_EMPTY[13]
#define WF_PLE_TOP_QUEUE_EMPTY_BMC_2_EMPTY_SHFT                13
#define WF_PLE_TOP_QUEUE_EMPTY_ALTX_2_EMPTY_ADDR               WF_PLE_TOP_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_QUEUE_EMPTY_ALTX_2_EMPTY_MASK               0x00001000                // ALTX_2_EMPTY[12]
#define WF_PLE_TOP_QUEUE_EMPTY_ALTX_2_EMPTY_SHFT               12
#define WF_PLE_TOP_QUEUE_EMPTY_PSMP_1_EMPTY_ADDR               WF_PLE_TOP_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_QUEUE_EMPTY_PSMP_1_EMPTY_MASK               0x00000800                // PSMP_1_EMPTY[11]
#define WF_PLE_TOP_QUEUE_EMPTY_PSMP_1_EMPTY_SHFT               11
#define WF_PLE_TOP_QUEUE_EMPTY_BCN_1_EMPTY_ADDR                WF_PLE_TOP_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_QUEUE_EMPTY_BCN_1_EMPTY_MASK                0x00000400                // BCN_1_EMPTY[10]
#define WF_PLE_TOP_QUEUE_EMPTY_BCN_1_EMPTY_SHFT                10
#define WF_PLE_TOP_QUEUE_EMPTY_BMC_1_EMPTY_ADDR                WF_PLE_TOP_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_QUEUE_EMPTY_BMC_1_EMPTY_MASK                0x00000200                // BMC_1_EMPTY[9]
#define WF_PLE_TOP_QUEUE_EMPTY_BMC_1_EMPTY_SHFT                9
#define WF_PLE_TOP_QUEUE_EMPTY_ALTX_1_EMPTY_ADDR               WF_PLE_TOP_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_QUEUE_EMPTY_ALTX_1_EMPTY_MASK               0x00000100                // ALTX_1_EMPTY[8]
#define WF_PLE_TOP_QUEUE_EMPTY_ALTX_1_EMPTY_SHFT               8
#define WF_PLE_TOP_QUEUE_EMPTY_PSMP_0_EMPTY_ADDR               WF_PLE_TOP_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_QUEUE_EMPTY_PSMP_0_EMPTY_MASK               0x00000080                // PSMP_0_EMPTY[7]
#define WF_PLE_TOP_QUEUE_EMPTY_PSMP_0_EMPTY_SHFT               7
#define WF_PLE_TOP_QUEUE_EMPTY_BCN_0_EMPTY_ADDR                WF_PLE_TOP_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_QUEUE_EMPTY_BCN_0_EMPTY_MASK                0x00000040                // BCN_0_EMPTY[6]
#define WF_PLE_TOP_QUEUE_EMPTY_BCN_0_EMPTY_SHFT                6
#define WF_PLE_TOP_QUEUE_EMPTY_BMC_0_EMPTY_ADDR                WF_PLE_TOP_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_QUEUE_EMPTY_BMC_0_EMPTY_MASK                0x00000020                // BMC_0_EMPTY[5]
#define WF_PLE_TOP_QUEUE_EMPTY_BMC_0_EMPTY_SHFT                5
#define WF_PLE_TOP_QUEUE_EMPTY_ALTX_0_EMPTY_ADDR               WF_PLE_TOP_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_QUEUE_EMPTY_ALTX_0_EMPTY_MASK               0x00000010                // ALTX_0_EMPTY[4]
#define WF_PLE_TOP_QUEUE_EMPTY_ALTX_0_EMPTY_SHFT               4
#define WF_PLE_TOP_QUEUE_EMPTY_CPU_Q3_EMPTY_ADDR               WF_PLE_TOP_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_QUEUE_EMPTY_CPU_Q3_EMPTY_MASK               0x00000008                // CPU_Q3_EMPTY[3]
#define WF_PLE_TOP_QUEUE_EMPTY_CPU_Q3_EMPTY_SHFT               3
#define WF_PLE_TOP_QUEUE_EMPTY_CPU_Q2_EMPTY_ADDR               WF_PLE_TOP_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_QUEUE_EMPTY_CPU_Q2_EMPTY_MASK               0x00000004                // CPU_Q2_EMPTY[2]
#define WF_PLE_TOP_QUEUE_EMPTY_CPU_Q2_EMPTY_SHFT               2
#define WF_PLE_TOP_QUEUE_EMPTY_CPU_Q1_EMPTY_ADDR               WF_PLE_TOP_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_QUEUE_EMPTY_CPU_Q1_EMPTY_MASK               0x00000002                // CPU_Q1_EMPTY[1]
#define WF_PLE_TOP_QUEUE_EMPTY_CPU_Q1_EMPTY_SHFT               1
#define WF_PLE_TOP_QUEUE_EMPTY_CPU_Q0_EMPTY_ADDR               WF_PLE_TOP_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_QUEUE_EMPTY_CPU_Q0_EMPTY_MASK               0x00000001                // CPU_Q0_EMPTY[0]
#define WF_PLE_TOP_QUEUE_EMPTY_CPU_Q0_EMPTY_SHFT               0

/* =====================================================================================

  ---TXD_QUEUE_EMPTY (0x820c0000 + 0x370)---

    AC00_EMPTY[0]                - (RO) WMM0 AC0 queue empty status
    AC01_EMPTY[1]                - (RO) WMM0 AC1 queue empty status
    AC02_EMPTY[2]                - (RO) WMM0 AC2 queue empty status
    AC03_EMPTY[3]                - (RO) WMM0 AC3 queue empty status
    AC10_EMPTY[4]                - (RO) WMM1 AC0 queue empty status
    AC11_EMPTY[5]                - (RO) WMM1 AC1 queue empty status
    AC12_EMPTY[6]                - (RO) WMM1 AC2 queue empty status
    AC13_EMPTY[7]                - (RO) WMM1 AC3 queue empty status
    AC20_EMPTY[8]                - (RO) WMM2 AC0 queue empty status
    AC21_EMPTY[9]                - (RO) WMM2 AC1 queue empty status
    AC22_EMPTY[10]               - (RO) WMM2 AC2 queue empty status
    AC23_EMPTY[11]               - (RO) WMM2 AC3 queue empty status
    AC30_EMPTY[12]               - (RO) WMM3 AC0 queue empty status
    AC31_EMPTY[13]               - (RO) WMM3 AC1 queue empty status
    AC32_EMPTY[14]               - (RO) WMM3 AC2 queue empty status
    AC33_EMPTY[15]               - (RO) WMM3 AC3 queue empty status
    ALTX_EMPTY[16]               - (RO) ALTX queue empty status
    BMC_EMPTY[17]                - (RO) BMC queue empty status
    BCN_EMPTY[18]                - (RO) BCN queue empty status
    PSMP_EMPTY[19]               - (RO) PSMP queue empty status
    NAF_EMPTY[20]                - (RO) NAF queue  empty status
    NBCN_EMPTY[21]               - (RO) NBCN queue empty status
    RESERVED22[31..22]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_NBCN_EMPTY_ADDR             WF_PLE_TOP_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_NBCN_EMPTY_MASK             0x00200000                // NBCN_EMPTY[21]
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_NBCN_EMPTY_SHFT             21
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_NAF_EMPTY_ADDR              WF_PLE_TOP_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_NAF_EMPTY_MASK              0x00100000                // NAF_EMPTY[20]
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_NAF_EMPTY_SHFT              20
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_PSMP_EMPTY_ADDR             WF_PLE_TOP_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_PSMP_EMPTY_MASK             0x00080000                // PSMP_EMPTY[19]
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_PSMP_EMPTY_SHFT             19
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_BCN_EMPTY_ADDR              WF_PLE_TOP_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_BCN_EMPTY_MASK              0x00040000                // BCN_EMPTY[18]
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_BCN_EMPTY_SHFT              18
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_BMC_EMPTY_ADDR              WF_PLE_TOP_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_BMC_EMPTY_MASK              0x00020000                // BMC_EMPTY[17]
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_BMC_EMPTY_SHFT              17
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_ALTX_EMPTY_ADDR             WF_PLE_TOP_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_ALTX_EMPTY_MASK             0x00010000                // ALTX_EMPTY[16]
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_ALTX_EMPTY_SHFT             16
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC33_EMPTY_ADDR             WF_PLE_TOP_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC33_EMPTY_MASK             0x00008000                // AC33_EMPTY[15]
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC33_EMPTY_SHFT             15
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC32_EMPTY_ADDR             WF_PLE_TOP_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC32_EMPTY_MASK             0x00004000                // AC32_EMPTY[14]
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC32_EMPTY_SHFT             14
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC31_EMPTY_ADDR             WF_PLE_TOP_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC31_EMPTY_MASK             0x00002000                // AC31_EMPTY[13]
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC31_EMPTY_SHFT             13
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC30_EMPTY_ADDR             WF_PLE_TOP_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC30_EMPTY_MASK             0x00001000                // AC30_EMPTY[12]
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC30_EMPTY_SHFT             12
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC23_EMPTY_ADDR             WF_PLE_TOP_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC23_EMPTY_MASK             0x00000800                // AC23_EMPTY[11]
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC23_EMPTY_SHFT             11
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC22_EMPTY_ADDR             WF_PLE_TOP_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC22_EMPTY_MASK             0x00000400                // AC22_EMPTY[10]
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC22_EMPTY_SHFT             10
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC21_EMPTY_ADDR             WF_PLE_TOP_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC21_EMPTY_MASK             0x00000200                // AC21_EMPTY[9]
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC21_EMPTY_SHFT             9
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC20_EMPTY_ADDR             WF_PLE_TOP_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC20_EMPTY_MASK             0x00000100                // AC20_EMPTY[8]
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC20_EMPTY_SHFT             8
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC13_EMPTY_ADDR             WF_PLE_TOP_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC13_EMPTY_MASK             0x00000080                // AC13_EMPTY[7]
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC13_EMPTY_SHFT             7
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC12_EMPTY_ADDR             WF_PLE_TOP_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC12_EMPTY_MASK             0x00000040                // AC12_EMPTY[6]
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC12_EMPTY_SHFT             6
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC11_EMPTY_ADDR             WF_PLE_TOP_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC11_EMPTY_MASK             0x00000020                // AC11_EMPTY[5]
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC11_EMPTY_SHFT             5
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC10_EMPTY_ADDR             WF_PLE_TOP_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC10_EMPTY_MASK             0x00000010                // AC10_EMPTY[4]
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC10_EMPTY_SHFT             4
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC03_EMPTY_ADDR             WF_PLE_TOP_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC03_EMPTY_MASK             0x00000008                // AC03_EMPTY[3]
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC03_EMPTY_SHFT             3
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC02_EMPTY_ADDR             WF_PLE_TOP_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC02_EMPTY_MASK             0x00000004                // AC02_EMPTY[2]
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC02_EMPTY_SHFT             2
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC01_EMPTY_ADDR             WF_PLE_TOP_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC01_EMPTY_MASK             0x00000002                // AC01_EMPTY[1]
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC01_EMPTY_SHFT             1
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC00_EMPTY_ADDR             WF_PLE_TOP_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC00_EMPTY_MASK             0x00000001                // AC00_EMPTY[0]
#define WF_PLE_TOP_TXD_QUEUE_EMPTY_AC00_EMPTY_SHFT             0

/* =====================================================================================

  ---NATIVE_TXD_QUEUE_EMPTY (0x820c0000 + 0x374)---

    AC00_EMPTY[0]                - (RO) WMM0 AC0 queue empty status
    AC01_EMPTY[1]                - (RO) WMM0 AC1 queue empty status
    AC02_EMPTY[2]                - (RO) WMM0 AC2 queue empty status
    AC03_EMPTY[3]                - (RO) WMM0 AC3 queue empty status
    AC10_EMPTY[4]                - (RO) WMM1 AC0 queue empty status
    AC11_EMPTY[5]                - (RO) WMM1 AC1 queue empty status
    AC12_EMPTY[6]                - (RO) WMM1 AC2 queue empty status
    AC13_EMPTY[7]                - (RO) WMM1 AC3 queue empty status
    AC20_EMPTY[8]                - (RO) WMM2 AC0 queue empty status
    AC21_EMPTY[9]                - (RO) WMM2 AC1 queue empty status
    AC22_EMPTY[10]               - (RO) WMM2 AC2 queue empty status
    AC23_EMPTY[11]               - (RO) WMM2 AC3 queue empty status
    AC30_EMPTY[12]               - (RO) WMM3 AC0 queue empty status
    AC31_EMPTY[13]               - (RO) WMM3 AC1 queue empty status
    AC32_EMPTY[14]               - (RO) WMM3 AC2 queue empty status
    AC33_EMPTY[15]               - (RO) WMM3 AC3 queue empty status
    ALTX_EMPTY[16]               - (RO) ALTX queue empty status
    BMC_EMPTY[17]                - (RO) BMC queue empty status
    BCN_EMPTY[18]                - (RO) BCN queue empty status
    PSMP_EMPTY[19]               - (RO) PSMP queue empty status
    NAF_EMPTY[20]                - (RO) NAF queue  empty status
    NBCN_EMPTY[21]               - (RO) NBCN queue empty status
    RESERVED22[31..22]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_NBCN_EMPTY_ADDR      WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_NBCN_EMPTY_MASK      0x00200000                // NBCN_EMPTY[21]
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_NBCN_EMPTY_SHFT      21
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_NAF_EMPTY_ADDR       WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_NAF_EMPTY_MASK       0x00100000                // NAF_EMPTY[20]
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_NAF_EMPTY_SHFT       20
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_PSMP_EMPTY_ADDR      WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_PSMP_EMPTY_MASK      0x00080000                // PSMP_EMPTY[19]
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_PSMP_EMPTY_SHFT      19
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_BCN_EMPTY_ADDR       WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_BCN_EMPTY_MASK       0x00040000                // BCN_EMPTY[18]
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_BCN_EMPTY_SHFT       18
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_BMC_EMPTY_ADDR       WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_BMC_EMPTY_MASK       0x00020000                // BMC_EMPTY[17]
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_BMC_EMPTY_SHFT       17
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ALTX_EMPTY_ADDR      WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ALTX_EMPTY_MASK      0x00010000                // ALTX_EMPTY[16]
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ALTX_EMPTY_SHFT      16
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC33_EMPTY_ADDR      WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC33_EMPTY_MASK      0x00008000                // AC33_EMPTY[15]
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC33_EMPTY_SHFT      15
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC32_EMPTY_ADDR      WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC32_EMPTY_MASK      0x00004000                // AC32_EMPTY[14]
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC32_EMPTY_SHFT      14
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC31_EMPTY_ADDR      WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC31_EMPTY_MASK      0x00002000                // AC31_EMPTY[13]
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC31_EMPTY_SHFT      13
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC30_EMPTY_ADDR      WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC30_EMPTY_MASK      0x00001000                // AC30_EMPTY[12]
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC30_EMPTY_SHFT      12
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC23_EMPTY_ADDR      WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC23_EMPTY_MASK      0x00000800                // AC23_EMPTY[11]
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC23_EMPTY_SHFT      11
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC22_EMPTY_ADDR      WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC22_EMPTY_MASK      0x00000400                // AC22_EMPTY[10]
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC22_EMPTY_SHFT      10
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC21_EMPTY_ADDR      WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC21_EMPTY_MASK      0x00000200                // AC21_EMPTY[9]
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC21_EMPTY_SHFT      9
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC20_EMPTY_ADDR      WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC20_EMPTY_MASK      0x00000100                // AC20_EMPTY[8]
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC20_EMPTY_SHFT      8
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC13_EMPTY_ADDR      WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC13_EMPTY_MASK      0x00000080                // AC13_EMPTY[7]
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC13_EMPTY_SHFT      7
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC12_EMPTY_ADDR      WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC12_EMPTY_MASK      0x00000040                // AC12_EMPTY[6]
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC12_EMPTY_SHFT      6
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC11_EMPTY_ADDR      WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC11_EMPTY_MASK      0x00000020                // AC11_EMPTY[5]
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC11_EMPTY_SHFT      5
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC10_EMPTY_ADDR      WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC10_EMPTY_MASK      0x00000010                // AC10_EMPTY[4]
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC10_EMPTY_SHFT      4
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC03_EMPTY_ADDR      WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC03_EMPTY_MASK      0x00000008                // AC03_EMPTY[3]
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC03_EMPTY_SHFT      3
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC02_EMPTY_ADDR      WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC02_EMPTY_MASK      0x00000004                // AC02_EMPTY[2]
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC02_EMPTY_SHFT      2
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC01_EMPTY_ADDR      WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC01_EMPTY_MASK      0x00000002                // AC01_EMPTY[1]
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC01_EMPTY_SHFT      1
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC00_EMPTY_ADDR      WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC00_EMPTY_MASK      0x00000001                // AC00_EMPTY[0]
#define WF_PLE_TOP_NATIVE_TXD_QUEUE_EMPTY_AC00_EMPTY_SHFT      0

/* =====================================================================================

  ---TXCMD_QUEUE_EMPTY (0x820c0000 + 0x378)---

    AC00_TXCMD_EMPTY[0]          - (RO) WMM0 AC0 TXCMD queue empty status
    AC01_TXCMD_EMPTY[1]          - (RO) WMM0 AC1 TXCMD queue empty status
    AC02_TXCMD_EMPTY[2]          - (RO) WMM0 AC2 TXCMD queue empty status
    AC03_TXCMD_EMPTY[3]          - (RO) WMM0 AC3 TXCMD queue empty status
    AC10_TXCMD_EMPTY[4]          - (RO) WMM1 AC0 TXCMD queue empty status
    AC11_TXCMD_EMPTY[5]          - (RO) WMM1 AC1 TXCMD queue empty status
    AC12_TXCMD_EMPTY[6]          - (RO) WMM1 AC2 TXCMD queue empty status
    AC13_TXCMD_EMPTY[7]          - (RO) WMM1 AC3 TXCMD queue empty status
    AC20_TXCMD_EMPTY[8]          - (RO) WMM2 AC0 TXCMD queue empty status
    AC21_TXCMD_EMPTY[9]          - (RO) WMM2 AC1 TXCMD queue empty status
    AC22_TXCMD_EMPTY[10]         - (RO) WMM2 AC2 TXCMD queue empty status
    AC23_TXCMD_EMPTY[11]         - (RO) WMM2 AC3 TXCMD queue empty status
    AC30_TXCMD_EMPTY[12]         - (RO) WMM3 AC0 TXCMD queue empty status
    AC31_TXCMD_EMPTY[13]         - (RO) WMM3 AC1 TXCMD queue empty status
    AC32_TXCMD_EMPTY[14]         - (RO) WMM3 AC2 TXCMD queue empty status
    AC33_TXCMD_EMPTY[15]         - (RO) WMM3 AC3 TXCMD queue empty status
    ALTXCMD_EMPTY[16]            - (RO) ALTXCMD queue empty status
    TF_EMPTY[17]                 - (RO) TF queue empty status
    TWT_TSF_TF_EMPTY[18]         - (RO) TWT TSF-TF queue empty status
    TWT_DL_EMPTY[19]             - (RO) TWT DL queue  empty status
    TWT_UL_EMPTY[20]             - (RO) TWT UL queue empty status
    RESERVED21[31..21]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_TWT_UL_EMPTY_ADDR         WF_PLE_TOP_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_TWT_UL_EMPTY_MASK         0x00100000                // TWT_UL_EMPTY[20]
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_TWT_UL_EMPTY_SHFT         20
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_TWT_DL_EMPTY_ADDR         WF_PLE_TOP_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_TWT_DL_EMPTY_MASK         0x00080000                // TWT_DL_EMPTY[19]
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_TWT_DL_EMPTY_SHFT         19
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_TWT_TSF_TF_EMPTY_ADDR     WF_PLE_TOP_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_TWT_TSF_TF_EMPTY_MASK     0x00040000                // TWT_TSF_TF_EMPTY[18]
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_TWT_TSF_TF_EMPTY_SHFT     18
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_TF_EMPTY_ADDR             WF_PLE_TOP_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_TF_EMPTY_MASK             0x00020000                // TF_EMPTY[17]
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_TF_EMPTY_SHFT             17
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_ALTXCMD_EMPTY_ADDR        WF_PLE_TOP_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_ALTXCMD_EMPTY_MASK        0x00010000                // ALTXCMD_EMPTY[16]
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_ALTXCMD_EMPTY_SHFT        16
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC33_TXCMD_EMPTY_ADDR     WF_PLE_TOP_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC33_TXCMD_EMPTY_MASK     0x00008000                // AC33_TXCMD_EMPTY[15]
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC33_TXCMD_EMPTY_SHFT     15
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC32_TXCMD_EMPTY_ADDR     WF_PLE_TOP_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC32_TXCMD_EMPTY_MASK     0x00004000                // AC32_TXCMD_EMPTY[14]
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC32_TXCMD_EMPTY_SHFT     14
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC31_TXCMD_EMPTY_ADDR     WF_PLE_TOP_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC31_TXCMD_EMPTY_MASK     0x00002000                // AC31_TXCMD_EMPTY[13]
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC31_TXCMD_EMPTY_SHFT     13
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC30_TXCMD_EMPTY_ADDR     WF_PLE_TOP_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC30_TXCMD_EMPTY_MASK     0x00001000                // AC30_TXCMD_EMPTY[12]
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC30_TXCMD_EMPTY_SHFT     12
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC23_TXCMD_EMPTY_ADDR     WF_PLE_TOP_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC23_TXCMD_EMPTY_MASK     0x00000800                // AC23_TXCMD_EMPTY[11]
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC23_TXCMD_EMPTY_SHFT     11
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC22_TXCMD_EMPTY_ADDR     WF_PLE_TOP_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC22_TXCMD_EMPTY_MASK     0x00000400                // AC22_TXCMD_EMPTY[10]
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC22_TXCMD_EMPTY_SHFT     10
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC21_TXCMD_EMPTY_ADDR     WF_PLE_TOP_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC21_TXCMD_EMPTY_MASK     0x00000200                // AC21_TXCMD_EMPTY[9]
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC21_TXCMD_EMPTY_SHFT     9
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC20_TXCMD_EMPTY_ADDR     WF_PLE_TOP_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC20_TXCMD_EMPTY_MASK     0x00000100                // AC20_TXCMD_EMPTY[8]
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC20_TXCMD_EMPTY_SHFT     8
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC13_TXCMD_EMPTY_ADDR     WF_PLE_TOP_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC13_TXCMD_EMPTY_MASK     0x00000080                // AC13_TXCMD_EMPTY[7]
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC13_TXCMD_EMPTY_SHFT     7
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC12_TXCMD_EMPTY_ADDR     WF_PLE_TOP_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC12_TXCMD_EMPTY_MASK     0x00000040                // AC12_TXCMD_EMPTY[6]
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC12_TXCMD_EMPTY_SHFT     6
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC11_TXCMD_EMPTY_ADDR     WF_PLE_TOP_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC11_TXCMD_EMPTY_MASK     0x00000020                // AC11_TXCMD_EMPTY[5]
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC11_TXCMD_EMPTY_SHFT     5
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC10_TXCMD_EMPTY_ADDR     WF_PLE_TOP_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC10_TXCMD_EMPTY_MASK     0x00000010                // AC10_TXCMD_EMPTY[4]
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC10_TXCMD_EMPTY_SHFT     4
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC03_TXCMD_EMPTY_ADDR     WF_PLE_TOP_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC03_TXCMD_EMPTY_MASK     0x00000008                // AC03_TXCMD_EMPTY[3]
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC03_TXCMD_EMPTY_SHFT     3
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC02_TXCMD_EMPTY_ADDR     WF_PLE_TOP_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC02_TXCMD_EMPTY_MASK     0x00000004                // AC02_TXCMD_EMPTY[2]
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC02_TXCMD_EMPTY_SHFT     2
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC01_TXCMD_EMPTY_ADDR     WF_PLE_TOP_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC01_TXCMD_EMPTY_MASK     0x00000002                // AC01_TXCMD_EMPTY[1]
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC01_TXCMD_EMPTY_SHFT     1
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC00_TXCMD_EMPTY_ADDR     WF_PLE_TOP_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC00_TXCMD_EMPTY_MASK     0x00000001                // AC00_TXCMD_EMPTY[0]
#define WF_PLE_TOP_TXCMD_QUEUE_EMPTY_AC00_TXCMD_EMPTY_SHFT     0

/* =====================================================================================

  ---NATIVE_TXCMD_QUEUE_EMPTY (0x820c0000 + 0x37c)---

    AC00_TXCMD_EMPTY[0]          - (RO) WMM0 AC0 TXCMD queue empty status
    AC01_TXCMD_EMPTY[1]          - (RO) WMM0 AC1 TXCMD queue empty status
    AC02_TXCMD_EMPTY[2]          - (RO) WMM0 AC2 TXCMD queue empty status
    AC03_TXCMD_EMPTY[3]          - (RO) WMM0 AC3 TXCMD queue empty status
    AC10_TXCMD_EMPTY[4]          - (RO) WMM1 AC0 TXCMD queue empty status
    AC11_TXCMD_EMPTY[5]          - (RO) WMM1 AC1 TXCMD queue empty status
    AC12_TXCMD_EMPTY[6]          - (RO) WMM1 AC2 TXCMD queue empty status
    AC13_TXCMD_EMPTY[7]          - (RO) WMM1 AC3 TXCMD queue empty status
    AC20_TXCMD_EMPTY[8]          - (RO) WMM2 AC0 TXCMD queue empty status
    AC21_TXCMD_EMPTY[9]          - (RO) WMM2 AC1 TXCMD queue empty status
    AC22_TXCMD_EMPTY[10]         - (RO) WMM2 AC2 TXCMD queue empty status
    AC23_TXCMD_EMPTY[11]         - (RO) WMM2 AC3 TXCMD queue empty status
    AC30_TXCMD_EMPTY[12]         - (RO) WMM3 AC0 TXCMD queue empty status
    AC31_TXCMD_EMPTY[13]         - (RO) WMM3 AC1 TXCMD queue empty status
    AC32_TXCMD_EMPTY[14]         - (RO) WMM3 AC2 TXCMD queue empty status
    AC33_TXCMD_EMPTY[15]         - (RO) WMM3 AC3 TXCMD queue empty status
    ALTXCMD_EMPTY[16]            - (RO) ALTXCMD queue empty status
    TF_EMPTY[17]                 - (RO) TF queue empty status
    TWT_TSF_TF_EMPTY[18]         - (RO) TWT TSF-TF queue empty status
    TWT_DL_EMPTY[19]             - (RO) TWT DL queue  empty status
    TWT_UL_EMPTY[20]             - (RO) TWT UL queue empty status
    RESERVED21[31..21]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_TWT_UL_EMPTY_ADDR  WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_TWT_UL_EMPTY_MASK  0x00100000                // TWT_UL_EMPTY[20]
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_TWT_UL_EMPTY_SHFT  20
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_TWT_DL_EMPTY_ADDR  WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_TWT_DL_EMPTY_MASK  0x00080000                // TWT_DL_EMPTY[19]
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_TWT_DL_EMPTY_SHFT  19
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_TWT_TSF_TF_EMPTY_ADDR WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_TWT_TSF_TF_EMPTY_MASK 0x00040000                // TWT_TSF_TF_EMPTY[18]
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_TWT_TSF_TF_EMPTY_SHFT 18
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_TF_EMPTY_ADDR      WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_TF_EMPTY_MASK      0x00020000                // TF_EMPTY[17]
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_TF_EMPTY_SHFT      17
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_ALTXCMD_EMPTY_ADDR WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_ALTXCMD_EMPTY_MASK 0x00010000                // ALTXCMD_EMPTY[16]
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_ALTXCMD_EMPTY_SHFT 16
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC33_TXCMD_EMPTY_ADDR WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC33_TXCMD_EMPTY_MASK 0x00008000                // AC33_TXCMD_EMPTY[15]
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC33_TXCMD_EMPTY_SHFT 15
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC32_TXCMD_EMPTY_ADDR WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC32_TXCMD_EMPTY_MASK 0x00004000                // AC32_TXCMD_EMPTY[14]
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC32_TXCMD_EMPTY_SHFT 14
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC31_TXCMD_EMPTY_ADDR WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC31_TXCMD_EMPTY_MASK 0x00002000                // AC31_TXCMD_EMPTY[13]
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC31_TXCMD_EMPTY_SHFT 13
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC30_TXCMD_EMPTY_ADDR WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC30_TXCMD_EMPTY_MASK 0x00001000                // AC30_TXCMD_EMPTY[12]
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC30_TXCMD_EMPTY_SHFT 12
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC23_TXCMD_EMPTY_ADDR WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC23_TXCMD_EMPTY_MASK 0x00000800                // AC23_TXCMD_EMPTY[11]
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC23_TXCMD_EMPTY_SHFT 11
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC22_TXCMD_EMPTY_ADDR WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC22_TXCMD_EMPTY_MASK 0x00000400                // AC22_TXCMD_EMPTY[10]
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC22_TXCMD_EMPTY_SHFT 10
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC21_TXCMD_EMPTY_ADDR WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC21_TXCMD_EMPTY_MASK 0x00000200                // AC21_TXCMD_EMPTY[9]
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC21_TXCMD_EMPTY_SHFT 9
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC20_TXCMD_EMPTY_ADDR WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC20_TXCMD_EMPTY_MASK 0x00000100                // AC20_TXCMD_EMPTY[8]
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC20_TXCMD_EMPTY_SHFT 8
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC13_TXCMD_EMPTY_ADDR WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC13_TXCMD_EMPTY_MASK 0x00000080                // AC13_TXCMD_EMPTY[7]
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC13_TXCMD_EMPTY_SHFT 7
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC12_TXCMD_EMPTY_ADDR WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC12_TXCMD_EMPTY_MASK 0x00000040                // AC12_TXCMD_EMPTY[6]
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC12_TXCMD_EMPTY_SHFT 6
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC11_TXCMD_EMPTY_ADDR WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC11_TXCMD_EMPTY_MASK 0x00000020                // AC11_TXCMD_EMPTY[5]
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC11_TXCMD_EMPTY_SHFT 5
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC10_TXCMD_EMPTY_ADDR WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC10_TXCMD_EMPTY_MASK 0x00000010                // AC10_TXCMD_EMPTY[4]
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC10_TXCMD_EMPTY_SHFT 4
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC03_TXCMD_EMPTY_ADDR WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC03_TXCMD_EMPTY_MASK 0x00000008                // AC03_TXCMD_EMPTY[3]
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC03_TXCMD_EMPTY_SHFT 3
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC02_TXCMD_EMPTY_ADDR WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC02_TXCMD_EMPTY_MASK 0x00000004                // AC02_TXCMD_EMPTY[2]
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC02_TXCMD_EMPTY_SHFT 2
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC01_TXCMD_EMPTY_ADDR WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC01_TXCMD_EMPTY_MASK 0x00000002                // AC01_TXCMD_EMPTY[1]
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC01_TXCMD_EMPTY_SHFT 1
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC00_TXCMD_EMPTY_ADDR WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC00_TXCMD_EMPTY_MASK 0x00000001                // AC00_TXCMD_EMPTY[0]
#define WF_PLE_TOP_NATIVE_TXCMD_QUEUE_EMPTY_AC00_TXCMD_EMPTY_SHFT 0

/* =====================================================================================

  ---BN1_TXD_QUEUE_EMPTY (0x820c0000 + 0x380)---

    AC00_EMPTY[0]                - (RO) WMM0 AC0 queue empty status
    AC01_EMPTY[1]                - (RO) WMM0 AC1 queue empty status
    AC02_EMPTY[2]                - (RO) WMM0 AC2 queue empty status
    AC03_EMPTY[3]                - (RO) WMM0 AC3 queue empty status
    AC10_EMPTY[4]                - (RO) WMM1 AC0 queue empty status
    AC11_EMPTY[5]                - (RO) WMM1 AC1 queue empty status
    AC12_EMPTY[6]                - (RO) WMM1 AC2 queue empty status
    AC13_EMPTY[7]                - (RO) WMM1 AC3 queue empty status
    AC20_EMPTY[8]                - (RO) WMM2 AC0 queue empty status
    AC21_EMPTY[9]                - (RO) WMM2 AC1 queue empty status
    AC22_EMPTY[10]               - (RO) WMM2 AC2 queue empty status
    AC23_EMPTY[11]               - (RO) WMM2 AC3 queue empty status
    AC30_EMPTY[12]               - (RO) WMM3 AC0 queue empty status
    AC31_EMPTY[13]               - (RO) WMM3 AC1 queue empty status
    AC32_EMPTY[14]               - (RO) WMM3 AC2 queue empty status
    AC33_EMPTY[15]               - (RO) WMM3 AC3 queue empty status
    ALTX_EMPTY[16]               - (RO) ALTX queue empty status
    BMC_EMPTY[17]                - (RO) BMC queue empty status
    BCN_EMPTY[18]                - (RO) BCN queue empty status
    PSMP_EMPTY[19]               - (RO) PSMP queue empty status
    NAF_EMPTY[20]                - (RO) NAF queue  empty status
    NBCN_EMPTY[21]               - (RO) NBCN queue empty status
    RESERVED22[31..22]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_NBCN_EMPTY_ADDR         WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_NBCN_EMPTY_MASK         0x00200000                // NBCN_EMPTY[21]
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_NBCN_EMPTY_SHFT         21
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_NAF_EMPTY_ADDR          WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_NAF_EMPTY_MASK          0x00100000                // NAF_EMPTY[20]
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_NAF_EMPTY_SHFT          20
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_PSMP_EMPTY_ADDR         WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_PSMP_EMPTY_MASK         0x00080000                // PSMP_EMPTY[19]
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_PSMP_EMPTY_SHFT         19
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_BCN_EMPTY_ADDR          WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_BCN_EMPTY_MASK          0x00040000                // BCN_EMPTY[18]
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_BCN_EMPTY_SHFT          18
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_BMC_EMPTY_ADDR          WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_BMC_EMPTY_MASK          0x00020000                // BMC_EMPTY[17]
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_BMC_EMPTY_SHFT          17
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ALTX_EMPTY_ADDR         WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ALTX_EMPTY_MASK         0x00010000                // ALTX_EMPTY[16]
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ALTX_EMPTY_SHFT         16
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC33_EMPTY_ADDR         WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC33_EMPTY_MASK         0x00008000                // AC33_EMPTY[15]
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC33_EMPTY_SHFT         15
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC32_EMPTY_ADDR         WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC32_EMPTY_MASK         0x00004000                // AC32_EMPTY[14]
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC32_EMPTY_SHFT         14
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC31_EMPTY_ADDR         WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC31_EMPTY_MASK         0x00002000                // AC31_EMPTY[13]
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC31_EMPTY_SHFT         13
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC30_EMPTY_ADDR         WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC30_EMPTY_MASK         0x00001000                // AC30_EMPTY[12]
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC30_EMPTY_SHFT         12
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC23_EMPTY_ADDR         WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC23_EMPTY_MASK         0x00000800                // AC23_EMPTY[11]
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC23_EMPTY_SHFT         11
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC22_EMPTY_ADDR         WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC22_EMPTY_MASK         0x00000400                // AC22_EMPTY[10]
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC22_EMPTY_SHFT         10
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC21_EMPTY_ADDR         WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC21_EMPTY_MASK         0x00000200                // AC21_EMPTY[9]
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC21_EMPTY_SHFT         9
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC20_EMPTY_ADDR         WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC20_EMPTY_MASK         0x00000100                // AC20_EMPTY[8]
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC20_EMPTY_SHFT         8
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC13_EMPTY_ADDR         WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC13_EMPTY_MASK         0x00000080                // AC13_EMPTY[7]
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC13_EMPTY_SHFT         7
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC12_EMPTY_ADDR         WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC12_EMPTY_MASK         0x00000040                // AC12_EMPTY[6]
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC12_EMPTY_SHFT         6
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC11_EMPTY_ADDR         WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC11_EMPTY_MASK         0x00000020                // AC11_EMPTY[5]
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC11_EMPTY_SHFT         5
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC10_EMPTY_ADDR         WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC10_EMPTY_MASK         0x00000010                // AC10_EMPTY[4]
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC10_EMPTY_SHFT         4
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC03_EMPTY_ADDR         WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC03_EMPTY_MASK         0x00000008                // AC03_EMPTY[3]
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC03_EMPTY_SHFT         3
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC02_EMPTY_ADDR         WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC02_EMPTY_MASK         0x00000004                // AC02_EMPTY[2]
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC02_EMPTY_SHFT         2
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC01_EMPTY_ADDR         WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC01_EMPTY_MASK         0x00000002                // AC01_EMPTY[1]
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC01_EMPTY_SHFT         1
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC00_EMPTY_ADDR         WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC00_EMPTY_MASK         0x00000001                // AC00_EMPTY[0]
#define WF_PLE_TOP_BN1_TXD_QUEUE_EMPTY_AC00_EMPTY_SHFT         0

/* =====================================================================================

  ---BN1_NATIVE_TXD_QUEUE_EMPTY (0x820c0000 + 0x384)---

    AC00_EMPTY[0]                - (RO) WMM0 AC0 queue empty status
    AC01_EMPTY[1]                - (RO) WMM0 AC1 queue empty status
    AC02_EMPTY[2]                - (RO) WMM0 AC2 queue empty status
    AC03_EMPTY[3]                - (RO) WMM0 AC3 queue empty status
    AC10_EMPTY[4]                - (RO) WMM1 AC0 queue empty status
    AC11_EMPTY[5]                - (RO) WMM1 AC1 queue empty status
    AC12_EMPTY[6]                - (RO) WMM1 AC2 queue empty status
    AC13_EMPTY[7]                - (RO) WMM1 AC3 queue empty status
    AC20_EMPTY[8]                - (RO) WMM2 AC0 queue empty status
    AC21_EMPTY[9]                - (RO) WMM2 AC1 queue empty status
    AC22_EMPTY[10]               - (RO) WMM2 AC2 queue empty status
    AC23_EMPTY[11]               - (RO) WMM2 AC3 queue empty status
    AC30_EMPTY[12]               - (RO) WMM3 AC0 queue empty status
    AC31_EMPTY[13]               - (RO) WMM3 AC1 queue empty status
    AC32_EMPTY[14]               - (RO) WMM3 AC2 queue empty status
    AC33_EMPTY[15]               - (RO) WMM3 AC3 queue empty status
    ALTX_EMPTY[16]               - (RO) ALTX queue empty status
    BMC_EMPTY[17]                - (RO) BMC queue empty status
    BCN_EMPTY[18]                - (RO) BCN queue empty status
    PSMP_EMPTY[19]               - (RO) PSMP queue empty status
    NAF_EMPTY[20]                - (RO) NAF queue  empty status
    NBCN_EMPTY[21]               - (RO) NBCN queue empty status
    RESERVED22[31..22]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_NBCN_EMPTY_ADDR  WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_NBCN_EMPTY_MASK  0x00200000                // NBCN_EMPTY[21]
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_NBCN_EMPTY_SHFT  21
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_NAF_EMPTY_ADDR   WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_NAF_EMPTY_MASK   0x00100000                // NAF_EMPTY[20]
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_NAF_EMPTY_SHFT   20
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_PSMP_EMPTY_ADDR  WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_PSMP_EMPTY_MASK  0x00080000                // PSMP_EMPTY[19]
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_PSMP_EMPTY_SHFT  19
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_BCN_EMPTY_ADDR   WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_BCN_EMPTY_MASK   0x00040000                // BCN_EMPTY[18]
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_BCN_EMPTY_SHFT   18
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_BMC_EMPTY_ADDR   WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_BMC_EMPTY_MASK   0x00020000                // BMC_EMPTY[17]
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_BMC_EMPTY_SHFT   17
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ALTX_EMPTY_ADDR  WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ALTX_EMPTY_MASK  0x00010000                // ALTX_EMPTY[16]
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ALTX_EMPTY_SHFT  16
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC33_EMPTY_ADDR  WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC33_EMPTY_MASK  0x00008000                // AC33_EMPTY[15]
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC33_EMPTY_SHFT  15
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC32_EMPTY_ADDR  WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC32_EMPTY_MASK  0x00004000                // AC32_EMPTY[14]
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC32_EMPTY_SHFT  14
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC31_EMPTY_ADDR  WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC31_EMPTY_MASK  0x00002000                // AC31_EMPTY[13]
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC31_EMPTY_SHFT  13
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC30_EMPTY_ADDR  WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC30_EMPTY_MASK  0x00001000                // AC30_EMPTY[12]
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC30_EMPTY_SHFT  12
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC23_EMPTY_ADDR  WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC23_EMPTY_MASK  0x00000800                // AC23_EMPTY[11]
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC23_EMPTY_SHFT  11
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC22_EMPTY_ADDR  WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC22_EMPTY_MASK  0x00000400                // AC22_EMPTY[10]
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC22_EMPTY_SHFT  10
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC21_EMPTY_ADDR  WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC21_EMPTY_MASK  0x00000200                // AC21_EMPTY[9]
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC21_EMPTY_SHFT  9
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC20_EMPTY_ADDR  WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC20_EMPTY_MASK  0x00000100                // AC20_EMPTY[8]
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC20_EMPTY_SHFT  8
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC13_EMPTY_ADDR  WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC13_EMPTY_MASK  0x00000080                // AC13_EMPTY[7]
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC13_EMPTY_SHFT  7
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC12_EMPTY_ADDR  WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC12_EMPTY_MASK  0x00000040                // AC12_EMPTY[6]
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC12_EMPTY_SHFT  6
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC11_EMPTY_ADDR  WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC11_EMPTY_MASK  0x00000020                // AC11_EMPTY[5]
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC11_EMPTY_SHFT  5
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC10_EMPTY_ADDR  WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC10_EMPTY_MASK  0x00000010                // AC10_EMPTY[4]
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC10_EMPTY_SHFT  4
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC03_EMPTY_ADDR  WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC03_EMPTY_MASK  0x00000008                // AC03_EMPTY[3]
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC03_EMPTY_SHFT  3
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC02_EMPTY_ADDR  WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC02_EMPTY_MASK  0x00000004                // AC02_EMPTY[2]
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC02_EMPTY_SHFT  2
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC01_EMPTY_ADDR  WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC01_EMPTY_MASK  0x00000002                // AC01_EMPTY[1]
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC01_EMPTY_SHFT  1
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC00_EMPTY_ADDR  WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC00_EMPTY_MASK  0x00000001                // AC00_EMPTY[0]
#define WF_PLE_TOP_BN1_NATIVE_TXD_QUEUE_EMPTY_AC00_EMPTY_SHFT  0

/* =====================================================================================

  ---BN1_TXCMD_QUEUE_EMPTY (0x820c0000 + 0x388)---

    AC00_TXCMD_EMPTY[0]          - (RO) WMM0 AC0 TXCMD queue empty status
    AC01_TXCMD_EMPTY[1]          - (RO) WMM0 AC1 TXCMD queue empty status
    AC02_TXCMD_EMPTY[2]          - (RO) WMM0 AC2 TXCMD queue empty status
    AC03_TXCMD_EMPTY[3]          - (RO) WMM0 AC3 TXCMD queue empty status
    AC10_TXCMD_EMPTY[4]          - (RO) WMM1 AC0 TXCMD queue empty status
    AC11_TXCMD_EMPTY[5]          - (RO) WMM1 AC1 TXCMD queue empty status
    AC12_TXCMD_EMPTY[6]          - (RO) WMM1 AC2 TXCMD queue empty status
    AC13_TXCMD_EMPTY[7]          - (RO) WMM1 AC3 TXCMD queue empty status
    AC20_TXCMD_EMPTY[8]          - (RO) WMM2 AC0 TXCMD queue empty status
    AC21_TXCMD_EMPTY[9]          - (RO) WMM2 AC1 TXCMD queue empty status
    AC22_TXCMD_EMPTY[10]         - (RO) WMM2 AC2 TXCMD queue empty status
    AC23_TXCMD_EMPTY[11]         - (RO) WMM2 AC3 TXCMD queue empty status
    AC30_TXCMD_EMPTY[12]         - (RO) WMM3 AC0 TXCMD queue empty status
    AC31_TXCMD_EMPTY[13]         - (RO) WMM3 AC1 TXCMD queue empty status
    AC32_TXCMD_EMPTY[14]         - (RO) WMM3 AC2 TXCMD queue empty status
    AC33_TXCMD_EMPTY[15]         - (RO) WMM3 AC3 TXCMD queue empty status
    ALTXCMD_EMPTY[16]            - (RO) ALTXCMD queue empty status
    TF_EMPTY[17]                 - (RO) TF queue empty status
    TWT_TSF_TF_EMPTY[18]         - (RO) TWT TSF-TF queue empty status
    TWT_DL_EMPTY[19]             - (RO) TWT DL queue  empty status
    TWT_UL_EMPTY[20]             - (RO) TWT UL queue empty status
    RESERVED21[31..21]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_TWT_UL_EMPTY_ADDR     WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_TWT_UL_EMPTY_MASK     0x00100000                // TWT_UL_EMPTY[20]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_TWT_UL_EMPTY_SHFT     20
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_TWT_DL_EMPTY_ADDR     WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_TWT_DL_EMPTY_MASK     0x00080000                // TWT_DL_EMPTY[19]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_TWT_DL_EMPTY_SHFT     19
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_TWT_TSF_TF_EMPTY_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_TWT_TSF_TF_EMPTY_MASK 0x00040000                // TWT_TSF_TF_EMPTY[18]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_TWT_TSF_TF_EMPTY_SHFT 18
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_TF_EMPTY_ADDR         WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_TF_EMPTY_MASK         0x00020000                // TF_EMPTY[17]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_TF_EMPTY_SHFT         17
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_ALTXCMD_EMPTY_ADDR    WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_ALTXCMD_EMPTY_MASK    0x00010000                // ALTXCMD_EMPTY[16]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_ALTXCMD_EMPTY_SHFT    16
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC33_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC33_TXCMD_EMPTY_MASK 0x00008000                // AC33_TXCMD_EMPTY[15]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC33_TXCMD_EMPTY_SHFT 15
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC32_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC32_TXCMD_EMPTY_MASK 0x00004000                // AC32_TXCMD_EMPTY[14]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC32_TXCMD_EMPTY_SHFT 14
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC31_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC31_TXCMD_EMPTY_MASK 0x00002000                // AC31_TXCMD_EMPTY[13]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC31_TXCMD_EMPTY_SHFT 13
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC30_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC30_TXCMD_EMPTY_MASK 0x00001000                // AC30_TXCMD_EMPTY[12]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC30_TXCMD_EMPTY_SHFT 12
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC23_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC23_TXCMD_EMPTY_MASK 0x00000800                // AC23_TXCMD_EMPTY[11]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC23_TXCMD_EMPTY_SHFT 11
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC22_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC22_TXCMD_EMPTY_MASK 0x00000400                // AC22_TXCMD_EMPTY[10]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC22_TXCMD_EMPTY_SHFT 10
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC21_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC21_TXCMD_EMPTY_MASK 0x00000200                // AC21_TXCMD_EMPTY[9]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC21_TXCMD_EMPTY_SHFT 9
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC20_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC20_TXCMD_EMPTY_MASK 0x00000100                // AC20_TXCMD_EMPTY[8]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC20_TXCMD_EMPTY_SHFT 8
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC13_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC13_TXCMD_EMPTY_MASK 0x00000080                // AC13_TXCMD_EMPTY[7]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC13_TXCMD_EMPTY_SHFT 7
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC12_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC12_TXCMD_EMPTY_MASK 0x00000040                // AC12_TXCMD_EMPTY[6]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC12_TXCMD_EMPTY_SHFT 6
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC11_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC11_TXCMD_EMPTY_MASK 0x00000020                // AC11_TXCMD_EMPTY[5]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC11_TXCMD_EMPTY_SHFT 5
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC10_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC10_TXCMD_EMPTY_MASK 0x00000010                // AC10_TXCMD_EMPTY[4]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC10_TXCMD_EMPTY_SHFT 4
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC03_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC03_TXCMD_EMPTY_MASK 0x00000008                // AC03_TXCMD_EMPTY[3]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC03_TXCMD_EMPTY_SHFT 3
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC02_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC02_TXCMD_EMPTY_MASK 0x00000004                // AC02_TXCMD_EMPTY[2]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC02_TXCMD_EMPTY_SHFT 2
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC01_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC01_TXCMD_EMPTY_MASK 0x00000002                // AC01_TXCMD_EMPTY[1]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC01_TXCMD_EMPTY_SHFT 1
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC00_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC00_TXCMD_EMPTY_MASK 0x00000001                // AC00_TXCMD_EMPTY[0]
#define WF_PLE_TOP_BN1_TXCMD_QUEUE_EMPTY_AC00_TXCMD_EMPTY_SHFT 0

/* =====================================================================================

  ---BN1_NATIVE_TXCMD_QUEUE_EMPTY (0x820c0000 + 0x38c)---

    AC00_TXCMD_EMPTY[0]          - (RO) WMM0 AC0 TXCMD queue empty status
    AC01_TXCMD_EMPTY[1]          - (RO) WMM0 AC1 TXCMD queue empty status
    AC02_TXCMD_EMPTY[2]          - (RO) WMM0 AC2 TXCMD queue empty status
    AC03_TXCMD_EMPTY[3]          - (RO) WMM0 AC3 TXCMD queue empty status
    AC10_TXCMD_EMPTY[4]          - (RO) WMM1 AC0 TXCMD queue empty status
    AC11_TXCMD_EMPTY[5]          - (RO) WMM1 AC1 TXCMD queue empty status
    AC12_TXCMD_EMPTY[6]          - (RO) WMM1 AC2 TXCMD queue empty status
    AC13_TXCMD_EMPTY[7]          - (RO) WMM1 AC3 TXCMD queue empty status
    AC20_TXCMD_EMPTY[8]          - (RO) WMM2 AC0 TXCMD queue empty status
    AC21_TXCMD_EMPTY[9]          - (RO) WMM2 AC1 TXCMD queue empty status
    AC22_TXCMD_EMPTY[10]         - (RO) WMM2 AC2 TXCMD queue empty status
    AC23_TXCMD_EMPTY[11]         - (RO) WMM2 AC3 TXCMD queue empty status
    AC30_TXCMD_EMPTY[12]         - (RO) WMM3 AC0 TXCMD queue empty status
    AC31_TXCMD_EMPTY[13]         - (RO) WMM3 AC1 TXCMD queue empty status
    AC32_TXCMD_EMPTY[14]         - (RO) WMM3 AC2 TXCMD queue empty status
    AC33_TXCMD_EMPTY[15]         - (RO) WMM3 AC3 TXCMD queue empty status
    ALTXCMD_EMPTY[16]            - (RO) ALTXCMD queue empty status
    TF_EMPTY[17]                 - (RO) TF queue empty status
    TWT_TSF_TF_EMPTY[18]         - (RO) TWT TSF-TF queue empty status
    TWT_DL_EMPTY[19]             - (RO) TWT DL queue  empty status
    TWT_UL_EMPTY[20]             - (RO) TWT UL queue empty status
    RESERVED21[31..21]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_TWT_UL_EMPTY_ADDR WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_TWT_UL_EMPTY_MASK 0x00100000                // TWT_UL_EMPTY[20]
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_TWT_UL_EMPTY_SHFT 20
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_TWT_DL_EMPTY_ADDR WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_TWT_DL_EMPTY_MASK 0x00080000                // TWT_DL_EMPTY[19]
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_TWT_DL_EMPTY_SHFT 19
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_TWT_TSF_TF_EMPTY_ADDR WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_TWT_TSF_TF_EMPTY_MASK 0x00040000                // TWT_TSF_TF_EMPTY[18]
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_TWT_TSF_TF_EMPTY_SHFT 18
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_TF_EMPTY_ADDR  WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_TF_EMPTY_MASK  0x00020000                // TF_EMPTY[17]
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_TF_EMPTY_SHFT  17
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_ALTXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_ALTXCMD_EMPTY_MASK 0x00010000                // ALTXCMD_EMPTY[16]
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_ALTXCMD_EMPTY_SHFT 16
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC33_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC33_TXCMD_EMPTY_MASK 0x00008000                // AC33_TXCMD_EMPTY[15]
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC33_TXCMD_EMPTY_SHFT 15
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC32_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC32_TXCMD_EMPTY_MASK 0x00004000                // AC32_TXCMD_EMPTY[14]
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC32_TXCMD_EMPTY_SHFT 14
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC31_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC31_TXCMD_EMPTY_MASK 0x00002000                // AC31_TXCMD_EMPTY[13]
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC31_TXCMD_EMPTY_SHFT 13
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC30_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC30_TXCMD_EMPTY_MASK 0x00001000                // AC30_TXCMD_EMPTY[12]
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC30_TXCMD_EMPTY_SHFT 12
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC23_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC23_TXCMD_EMPTY_MASK 0x00000800                // AC23_TXCMD_EMPTY[11]
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC23_TXCMD_EMPTY_SHFT 11
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC22_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC22_TXCMD_EMPTY_MASK 0x00000400                // AC22_TXCMD_EMPTY[10]
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC22_TXCMD_EMPTY_SHFT 10
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC21_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC21_TXCMD_EMPTY_MASK 0x00000200                // AC21_TXCMD_EMPTY[9]
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC21_TXCMD_EMPTY_SHFT 9
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC20_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC20_TXCMD_EMPTY_MASK 0x00000100                // AC20_TXCMD_EMPTY[8]
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC20_TXCMD_EMPTY_SHFT 8
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC13_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC13_TXCMD_EMPTY_MASK 0x00000080                // AC13_TXCMD_EMPTY[7]
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC13_TXCMD_EMPTY_SHFT 7
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC12_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC12_TXCMD_EMPTY_MASK 0x00000040                // AC12_TXCMD_EMPTY[6]
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC12_TXCMD_EMPTY_SHFT 6
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC11_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC11_TXCMD_EMPTY_MASK 0x00000020                // AC11_TXCMD_EMPTY[5]
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC11_TXCMD_EMPTY_SHFT 5
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC10_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC10_TXCMD_EMPTY_MASK 0x00000010                // AC10_TXCMD_EMPTY[4]
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC10_TXCMD_EMPTY_SHFT 4
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC03_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC03_TXCMD_EMPTY_MASK 0x00000008                // AC03_TXCMD_EMPTY[3]
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC03_TXCMD_EMPTY_SHFT 3
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC02_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC02_TXCMD_EMPTY_MASK 0x00000004                // AC02_TXCMD_EMPTY[2]
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC02_TXCMD_EMPTY_SHFT 2
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC01_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC01_TXCMD_EMPTY_MASK 0x00000002                // AC01_TXCMD_EMPTY[1]
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC01_TXCMD_EMPTY_SHFT 1
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC00_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC00_TXCMD_EMPTY_MASK 0x00000001                // AC00_TXCMD_EMPTY[0]
#define WF_PLE_TOP_BN1_NATIVE_TXCMD_QUEUE_EMPTY_AC00_TXCMD_EMPTY_SHFT 0

/* =====================================================================================

  ---BN2_TXD_QUEUE_EMPTY (0x820c0000 + 0x390)---

    AC00_EMPTY[0]                - (RO) WMM0 AC0 queue empty status
    AC01_EMPTY[1]                - (RO) WMM0 AC1 queue empty status
    AC02_EMPTY[2]                - (RO) WMM0 AC2 queue empty status
    AC03_EMPTY[3]                - (RO) WMM0 AC3 queue empty status
    AC10_EMPTY[4]                - (RO) WMM1 AC0 queue empty status
    AC11_EMPTY[5]                - (RO) WMM1 AC1 queue empty status
    AC12_EMPTY[6]                - (RO) WMM1 AC2 queue empty status
    AC13_EMPTY[7]                - (RO) WMM1 AC3 queue empty status
    AC20_EMPTY[8]                - (RO) WMM2 AC0 queue empty status
    AC21_EMPTY[9]                - (RO) WMM2 AC1 queue empty status
    AC22_EMPTY[10]               - (RO) WMM2 AC2 queue empty status
    AC23_EMPTY[11]               - (RO) WMM2 AC3 queue empty status
    AC30_EMPTY[12]               - (RO) WMM3 AC0 queue empty status
    AC31_EMPTY[13]               - (RO) WMM3 AC1 queue empty status
    AC32_EMPTY[14]               - (RO) WMM3 AC2 queue empty status
    AC33_EMPTY[15]               - (RO) WMM3 AC3 queue empty status
    ALTX_EMPTY[16]               - (RO) ALTX queue empty status
    BMC_EMPTY[17]                - (RO) BMC queue empty status
    BCN_EMPTY[18]                - (RO) BCN queue empty status
    PSMP_EMPTY[19]               - (RO) PSMP queue empty status
    NAF_EMPTY[20]                - (RO) NAF queue  empty status
    NBCN_EMPTY[21]               - (RO) NBCN queue empty status
    RESERVED22[31..22]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_NBCN_EMPTY_ADDR         WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_NBCN_EMPTY_MASK         0x00200000                // NBCN_EMPTY[21]
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_NBCN_EMPTY_SHFT         21
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_NAF_EMPTY_ADDR          WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_NAF_EMPTY_MASK          0x00100000                // NAF_EMPTY[20]
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_NAF_EMPTY_SHFT          20
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_PSMP_EMPTY_ADDR         WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_PSMP_EMPTY_MASK         0x00080000                // PSMP_EMPTY[19]
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_PSMP_EMPTY_SHFT         19
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_BCN_EMPTY_ADDR          WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_BCN_EMPTY_MASK          0x00040000                // BCN_EMPTY[18]
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_BCN_EMPTY_SHFT          18
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_BMC_EMPTY_ADDR          WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_BMC_EMPTY_MASK          0x00020000                // BMC_EMPTY[17]
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_BMC_EMPTY_SHFT          17
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ALTX_EMPTY_ADDR         WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ALTX_EMPTY_MASK         0x00010000                // ALTX_EMPTY[16]
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ALTX_EMPTY_SHFT         16
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC33_EMPTY_ADDR         WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC33_EMPTY_MASK         0x00008000                // AC33_EMPTY[15]
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC33_EMPTY_SHFT         15
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC32_EMPTY_ADDR         WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC32_EMPTY_MASK         0x00004000                // AC32_EMPTY[14]
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC32_EMPTY_SHFT         14
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC31_EMPTY_ADDR         WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC31_EMPTY_MASK         0x00002000                // AC31_EMPTY[13]
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC31_EMPTY_SHFT         13
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC30_EMPTY_ADDR         WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC30_EMPTY_MASK         0x00001000                // AC30_EMPTY[12]
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC30_EMPTY_SHFT         12
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC23_EMPTY_ADDR         WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC23_EMPTY_MASK         0x00000800                // AC23_EMPTY[11]
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC23_EMPTY_SHFT         11
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC22_EMPTY_ADDR         WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC22_EMPTY_MASK         0x00000400                // AC22_EMPTY[10]
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC22_EMPTY_SHFT         10
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC21_EMPTY_ADDR         WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC21_EMPTY_MASK         0x00000200                // AC21_EMPTY[9]
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC21_EMPTY_SHFT         9
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC20_EMPTY_ADDR         WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC20_EMPTY_MASK         0x00000100                // AC20_EMPTY[8]
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC20_EMPTY_SHFT         8
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC13_EMPTY_ADDR         WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC13_EMPTY_MASK         0x00000080                // AC13_EMPTY[7]
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC13_EMPTY_SHFT         7
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC12_EMPTY_ADDR         WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC12_EMPTY_MASK         0x00000040                // AC12_EMPTY[6]
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC12_EMPTY_SHFT         6
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC11_EMPTY_ADDR         WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC11_EMPTY_MASK         0x00000020                // AC11_EMPTY[5]
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC11_EMPTY_SHFT         5
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC10_EMPTY_ADDR         WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC10_EMPTY_MASK         0x00000010                // AC10_EMPTY[4]
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC10_EMPTY_SHFT         4
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC03_EMPTY_ADDR         WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC03_EMPTY_MASK         0x00000008                // AC03_EMPTY[3]
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC03_EMPTY_SHFT         3
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC02_EMPTY_ADDR         WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC02_EMPTY_MASK         0x00000004                // AC02_EMPTY[2]
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC02_EMPTY_SHFT         2
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC01_EMPTY_ADDR         WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC01_EMPTY_MASK         0x00000002                // AC01_EMPTY[1]
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC01_EMPTY_SHFT         1
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC00_EMPTY_ADDR         WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC00_EMPTY_MASK         0x00000001                // AC00_EMPTY[0]
#define WF_PLE_TOP_BN2_TXD_QUEUE_EMPTY_AC00_EMPTY_SHFT         0

/* =====================================================================================

  ---BN2_NATIVE_TXD_QUEUE_EMPTY (0x820c0000 + 0x394)---

    AC00_EMPTY[0]                - (RO) WMM0 AC0 queue empty status
    AC01_EMPTY[1]                - (RO) WMM0 AC1 queue empty status
    AC02_EMPTY[2]                - (RO) WMM0 AC2 queue empty status
    AC03_EMPTY[3]                - (RO) WMM0 AC3 queue empty status
    AC10_EMPTY[4]                - (RO) WMM1 AC0 queue empty status
    AC11_EMPTY[5]                - (RO) WMM1 AC1 queue empty status
    AC12_EMPTY[6]                - (RO) WMM1 AC2 queue empty status
    AC13_EMPTY[7]                - (RO) WMM1 AC3 queue empty status
    AC20_EMPTY[8]                - (RO) WMM2 AC0 queue empty status
    AC21_EMPTY[9]                - (RO) WMM2 AC1 queue empty status
    AC22_EMPTY[10]               - (RO) WMM2 AC2 queue empty status
    AC23_EMPTY[11]               - (RO) WMM2 AC3 queue empty status
    AC30_EMPTY[12]               - (RO) WMM3 AC0 queue empty status
    AC31_EMPTY[13]               - (RO) WMM3 AC1 queue empty status
    AC32_EMPTY[14]               - (RO) WMM3 AC2 queue empty status
    AC33_EMPTY[15]               - (RO) WMM3 AC3 queue empty status
    ALTX_EMPTY[16]               - (RO) ALTX queue empty status
    BMC_EMPTY[17]                - (RO) BMC queue empty status
    BCN_EMPTY[18]                - (RO) BCN queue empty status
    PSMP_EMPTY[19]               - (RO) PSMP queue empty status
    NAF_EMPTY[20]                - (RO) NAF queue  empty status
    NBCN_EMPTY[21]               - (RO) NBCN queue empty status
    RESERVED22[31..22]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_NBCN_EMPTY_ADDR  WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_NBCN_EMPTY_MASK  0x00200000                // NBCN_EMPTY[21]
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_NBCN_EMPTY_SHFT  21
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_NAF_EMPTY_ADDR   WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_NAF_EMPTY_MASK   0x00100000                // NAF_EMPTY[20]
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_NAF_EMPTY_SHFT   20
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_PSMP_EMPTY_ADDR  WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_PSMP_EMPTY_MASK  0x00080000                // PSMP_EMPTY[19]
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_PSMP_EMPTY_SHFT  19
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_BCN_EMPTY_ADDR   WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_BCN_EMPTY_MASK   0x00040000                // BCN_EMPTY[18]
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_BCN_EMPTY_SHFT   18
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_BMC_EMPTY_ADDR   WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_BMC_EMPTY_MASK   0x00020000                // BMC_EMPTY[17]
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_BMC_EMPTY_SHFT   17
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ALTX_EMPTY_ADDR  WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ALTX_EMPTY_MASK  0x00010000                // ALTX_EMPTY[16]
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ALTX_EMPTY_SHFT  16
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC33_EMPTY_ADDR  WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC33_EMPTY_MASK  0x00008000                // AC33_EMPTY[15]
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC33_EMPTY_SHFT  15
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC32_EMPTY_ADDR  WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC32_EMPTY_MASK  0x00004000                // AC32_EMPTY[14]
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC32_EMPTY_SHFT  14
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC31_EMPTY_ADDR  WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC31_EMPTY_MASK  0x00002000                // AC31_EMPTY[13]
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC31_EMPTY_SHFT  13
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC30_EMPTY_ADDR  WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC30_EMPTY_MASK  0x00001000                // AC30_EMPTY[12]
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC30_EMPTY_SHFT  12
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC23_EMPTY_ADDR  WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC23_EMPTY_MASK  0x00000800                // AC23_EMPTY[11]
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC23_EMPTY_SHFT  11
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC22_EMPTY_ADDR  WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC22_EMPTY_MASK  0x00000400                // AC22_EMPTY[10]
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC22_EMPTY_SHFT  10
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC21_EMPTY_ADDR  WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC21_EMPTY_MASK  0x00000200                // AC21_EMPTY[9]
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC21_EMPTY_SHFT  9
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC20_EMPTY_ADDR  WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC20_EMPTY_MASK  0x00000100                // AC20_EMPTY[8]
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC20_EMPTY_SHFT  8
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC13_EMPTY_ADDR  WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC13_EMPTY_MASK  0x00000080                // AC13_EMPTY[7]
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC13_EMPTY_SHFT  7
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC12_EMPTY_ADDR  WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC12_EMPTY_MASK  0x00000040                // AC12_EMPTY[6]
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC12_EMPTY_SHFT  6
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC11_EMPTY_ADDR  WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC11_EMPTY_MASK  0x00000020                // AC11_EMPTY[5]
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC11_EMPTY_SHFT  5
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC10_EMPTY_ADDR  WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC10_EMPTY_MASK  0x00000010                // AC10_EMPTY[4]
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC10_EMPTY_SHFT  4
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC03_EMPTY_ADDR  WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC03_EMPTY_MASK  0x00000008                // AC03_EMPTY[3]
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC03_EMPTY_SHFT  3
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC02_EMPTY_ADDR  WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC02_EMPTY_MASK  0x00000004                // AC02_EMPTY[2]
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC02_EMPTY_SHFT  2
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC01_EMPTY_ADDR  WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC01_EMPTY_MASK  0x00000002                // AC01_EMPTY[1]
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC01_EMPTY_SHFT  1
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC00_EMPTY_ADDR  WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC00_EMPTY_MASK  0x00000001                // AC00_EMPTY[0]
#define WF_PLE_TOP_BN2_NATIVE_TXD_QUEUE_EMPTY_AC00_EMPTY_SHFT  0

/* =====================================================================================

  ---BN2_TXCMD_QUEUE_EMPTY (0x820c0000 + 0x398)---

    AC00_TXCMD_EMPTY[0]          - (RO) WMM0 AC0 TXCMD queue empty status
    AC01_TXCMD_EMPTY[1]          - (RO) WMM0 AC1 TXCMD queue empty status
    AC02_TXCMD_EMPTY[2]          - (RO) WMM0 AC2 TXCMD queue empty status
    AC03_TXCMD_EMPTY[3]          - (RO) WMM0 AC3 TXCMD queue empty status
    AC10_TXCMD_EMPTY[4]          - (RO) WMM1 AC0 TXCMD queue empty status
    AC11_TXCMD_EMPTY[5]          - (RO) WMM1 AC1 TXCMD queue empty status
    AC12_TXCMD_EMPTY[6]          - (RO) WMM1 AC2 TXCMD queue empty status
    AC13_TXCMD_EMPTY[7]          - (RO) WMM1 AC3 TXCMD queue empty status
    AC20_TXCMD_EMPTY[8]          - (RO) WMM2 AC0 TXCMD queue empty status
    AC21_TXCMD_EMPTY[9]          - (RO) WMM2 AC1 TXCMD queue empty status
    AC22_TXCMD_EMPTY[10]         - (RO) WMM2 AC2 TXCMD queue empty status
    AC23_TXCMD_EMPTY[11]         - (RO) WMM2 AC3 TXCMD queue empty status
    AC30_TXCMD_EMPTY[12]         - (RO) WMM3 AC0 TXCMD queue empty status
    AC31_TXCMD_EMPTY[13]         - (RO) WMM3 AC1 TXCMD queue empty status
    AC32_TXCMD_EMPTY[14]         - (RO) WMM3 AC2 TXCMD queue empty status
    AC33_TXCMD_EMPTY[15]         - (RO) WMM3 AC3 TXCMD queue empty status
    ALTXCMD_EMPTY[16]            - (RO) ALTXCMD queue empty status
    TF_EMPTY[17]                 - (RO) TF queue empty status
    TWT_TSF_TF_EMPTY[18]         - (RO) TWT TSF-TF queue empty status
    TWT_DL_EMPTY[19]             - (RO) TWT DL queue  empty status
    TWT_UL_EMPTY[20]             - (RO) TWT UL queue empty status
    RESERVED21[31..21]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_TWT_UL_EMPTY_ADDR     WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_TWT_UL_EMPTY_MASK     0x00100000                // TWT_UL_EMPTY[20]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_TWT_UL_EMPTY_SHFT     20
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_TWT_DL_EMPTY_ADDR     WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_TWT_DL_EMPTY_MASK     0x00080000                // TWT_DL_EMPTY[19]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_TWT_DL_EMPTY_SHFT     19
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_TWT_TSF_TF_EMPTY_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_TWT_TSF_TF_EMPTY_MASK 0x00040000                // TWT_TSF_TF_EMPTY[18]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_TWT_TSF_TF_EMPTY_SHFT 18
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_TF_EMPTY_ADDR         WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_TF_EMPTY_MASK         0x00020000                // TF_EMPTY[17]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_TF_EMPTY_SHFT         17
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_ALTXCMD_EMPTY_ADDR    WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_ALTXCMD_EMPTY_MASK    0x00010000                // ALTXCMD_EMPTY[16]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_ALTXCMD_EMPTY_SHFT    16
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC33_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC33_TXCMD_EMPTY_MASK 0x00008000                // AC33_TXCMD_EMPTY[15]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC33_TXCMD_EMPTY_SHFT 15
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC32_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC32_TXCMD_EMPTY_MASK 0x00004000                // AC32_TXCMD_EMPTY[14]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC32_TXCMD_EMPTY_SHFT 14
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC31_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC31_TXCMD_EMPTY_MASK 0x00002000                // AC31_TXCMD_EMPTY[13]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC31_TXCMD_EMPTY_SHFT 13
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC30_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC30_TXCMD_EMPTY_MASK 0x00001000                // AC30_TXCMD_EMPTY[12]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC30_TXCMD_EMPTY_SHFT 12
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC23_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC23_TXCMD_EMPTY_MASK 0x00000800                // AC23_TXCMD_EMPTY[11]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC23_TXCMD_EMPTY_SHFT 11
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC22_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC22_TXCMD_EMPTY_MASK 0x00000400                // AC22_TXCMD_EMPTY[10]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC22_TXCMD_EMPTY_SHFT 10
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC21_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC21_TXCMD_EMPTY_MASK 0x00000200                // AC21_TXCMD_EMPTY[9]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC21_TXCMD_EMPTY_SHFT 9
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC20_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC20_TXCMD_EMPTY_MASK 0x00000100                // AC20_TXCMD_EMPTY[8]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC20_TXCMD_EMPTY_SHFT 8
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC13_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC13_TXCMD_EMPTY_MASK 0x00000080                // AC13_TXCMD_EMPTY[7]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC13_TXCMD_EMPTY_SHFT 7
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC12_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC12_TXCMD_EMPTY_MASK 0x00000040                // AC12_TXCMD_EMPTY[6]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC12_TXCMD_EMPTY_SHFT 6
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC11_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC11_TXCMD_EMPTY_MASK 0x00000020                // AC11_TXCMD_EMPTY[5]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC11_TXCMD_EMPTY_SHFT 5
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC10_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC10_TXCMD_EMPTY_MASK 0x00000010                // AC10_TXCMD_EMPTY[4]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC10_TXCMD_EMPTY_SHFT 4
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC03_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC03_TXCMD_EMPTY_MASK 0x00000008                // AC03_TXCMD_EMPTY[3]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC03_TXCMD_EMPTY_SHFT 3
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC02_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC02_TXCMD_EMPTY_MASK 0x00000004                // AC02_TXCMD_EMPTY[2]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC02_TXCMD_EMPTY_SHFT 2
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC01_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC01_TXCMD_EMPTY_MASK 0x00000002                // AC01_TXCMD_EMPTY[1]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC01_TXCMD_EMPTY_SHFT 1
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC00_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC00_TXCMD_EMPTY_MASK 0x00000001                // AC00_TXCMD_EMPTY[0]
#define WF_PLE_TOP_BN2_TXCMD_QUEUE_EMPTY_AC00_TXCMD_EMPTY_SHFT 0

/* =====================================================================================

  ---BN2_NATIVE_TXCMD_QUEUE_EMPTY (0x820c0000 + 0x39c)---

    AC00_TXCMD_EMPTY[0]          - (RO) WMM0 AC0 TXCMD queue empty status
    AC01_TXCMD_EMPTY[1]          - (RO) WMM0 AC1 TXCMD queue empty status
    AC02_TXCMD_EMPTY[2]          - (RO) WMM0 AC2 TXCMD queue empty status
    AC03_TXCMD_EMPTY[3]          - (RO) WMM0 AC3 TXCMD queue empty status
    AC10_TXCMD_EMPTY[4]          - (RO) WMM1 AC0 TXCMD queue empty status
    AC11_TXCMD_EMPTY[5]          - (RO) WMM1 AC1 TXCMD queue empty status
    AC12_TXCMD_EMPTY[6]          - (RO) WMM1 AC2 TXCMD queue empty status
    AC13_TXCMD_EMPTY[7]          - (RO) WMM1 AC3 TXCMD queue empty status
    AC20_TXCMD_EMPTY[8]          - (RO) WMM2 AC0 TXCMD queue empty status
    AC21_TXCMD_EMPTY[9]          - (RO) WMM2 AC1 TXCMD queue empty status
    AC22_TXCMD_EMPTY[10]         - (RO) WMM2 AC2 TXCMD queue empty status
    AC23_TXCMD_EMPTY[11]         - (RO) WMM2 AC3 TXCMD queue empty status
    AC30_TXCMD_EMPTY[12]         - (RO) WMM3 AC0 TXCMD queue empty status
    AC31_TXCMD_EMPTY[13]         - (RO) WMM3 AC1 TXCMD queue empty status
    AC32_TXCMD_EMPTY[14]         - (RO) WMM3 AC2 TXCMD queue empty status
    AC33_TXCMD_EMPTY[15]         - (RO) WMM3 AC3 TXCMD queue empty status
    ALTXCMD_EMPTY[16]            - (RO) ALTXCMD queue empty status
    TF_EMPTY[17]                 - (RO) TF queue empty status
    TWT_TSF_TF_EMPTY[18]         - (RO) TWT TSF-TF queue empty status
    TWT_DL_EMPTY[19]             - (RO) TWT DL queue  empty status
    TWT_UL_EMPTY[20]             - (RO) TWT UL queue empty status
    RESERVED21[31..21]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_TWT_UL_EMPTY_ADDR WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_TWT_UL_EMPTY_MASK 0x00100000                // TWT_UL_EMPTY[20]
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_TWT_UL_EMPTY_SHFT 20
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_TWT_DL_EMPTY_ADDR WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_TWT_DL_EMPTY_MASK 0x00080000                // TWT_DL_EMPTY[19]
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_TWT_DL_EMPTY_SHFT 19
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_TWT_TSF_TF_EMPTY_ADDR WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_TWT_TSF_TF_EMPTY_MASK 0x00040000                // TWT_TSF_TF_EMPTY[18]
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_TWT_TSF_TF_EMPTY_SHFT 18
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_TF_EMPTY_ADDR  WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_TF_EMPTY_MASK  0x00020000                // TF_EMPTY[17]
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_TF_EMPTY_SHFT  17
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_ALTXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_ALTXCMD_EMPTY_MASK 0x00010000                // ALTXCMD_EMPTY[16]
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_ALTXCMD_EMPTY_SHFT 16
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC33_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC33_TXCMD_EMPTY_MASK 0x00008000                // AC33_TXCMD_EMPTY[15]
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC33_TXCMD_EMPTY_SHFT 15
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC32_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC32_TXCMD_EMPTY_MASK 0x00004000                // AC32_TXCMD_EMPTY[14]
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC32_TXCMD_EMPTY_SHFT 14
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC31_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC31_TXCMD_EMPTY_MASK 0x00002000                // AC31_TXCMD_EMPTY[13]
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC31_TXCMD_EMPTY_SHFT 13
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC30_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC30_TXCMD_EMPTY_MASK 0x00001000                // AC30_TXCMD_EMPTY[12]
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC30_TXCMD_EMPTY_SHFT 12
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC23_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC23_TXCMD_EMPTY_MASK 0x00000800                // AC23_TXCMD_EMPTY[11]
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC23_TXCMD_EMPTY_SHFT 11
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC22_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC22_TXCMD_EMPTY_MASK 0x00000400                // AC22_TXCMD_EMPTY[10]
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC22_TXCMD_EMPTY_SHFT 10
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC21_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC21_TXCMD_EMPTY_MASK 0x00000200                // AC21_TXCMD_EMPTY[9]
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC21_TXCMD_EMPTY_SHFT 9
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC20_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC20_TXCMD_EMPTY_MASK 0x00000100                // AC20_TXCMD_EMPTY[8]
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC20_TXCMD_EMPTY_SHFT 8
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC13_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC13_TXCMD_EMPTY_MASK 0x00000080                // AC13_TXCMD_EMPTY[7]
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC13_TXCMD_EMPTY_SHFT 7
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC12_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC12_TXCMD_EMPTY_MASK 0x00000040                // AC12_TXCMD_EMPTY[6]
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC12_TXCMD_EMPTY_SHFT 6
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC11_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC11_TXCMD_EMPTY_MASK 0x00000020                // AC11_TXCMD_EMPTY[5]
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC11_TXCMD_EMPTY_SHFT 5
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC10_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC10_TXCMD_EMPTY_MASK 0x00000010                // AC10_TXCMD_EMPTY[4]
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC10_TXCMD_EMPTY_SHFT 4
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC03_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC03_TXCMD_EMPTY_MASK 0x00000008                // AC03_TXCMD_EMPTY[3]
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC03_TXCMD_EMPTY_SHFT 3
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC02_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC02_TXCMD_EMPTY_MASK 0x00000004                // AC02_TXCMD_EMPTY[2]
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC02_TXCMD_EMPTY_SHFT 2
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC01_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC01_TXCMD_EMPTY_MASK 0x00000002                // AC01_TXCMD_EMPTY[1]
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC01_TXCMD_EMPTY_SHFT 1
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC00_TXCMD_EMPTY_ADDR WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_ADDR
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC00_TXCMD_EMPTY_MASK 0x00000001                // AC00_TXCMD_EMPTY[0]
#define WF_PLE_TOP_BN2_NATIVE_TXCMD_QUEUE_EMPTY_AC00_TXCMD_EMPTY_SHFT 0

/* =====================================================================================

  ---FREEPG_CNT (0x820c0000 + 0x3a0)---

    FREEPG_CNT[11..0]            - (RO) Total page number of free
    RESERVED12[15..12]           - (RO) Reserved bits
    FFA_CNT[27..16]              - (RO) Free page numbers of free for all
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_FREEPG_CNT_FFA_CNT_ADDR                     WF_PLE_TOP_FREEPG_CNT_ADDR
#define WF_PLE_TOP_FREEPG_CNT_FFA_CNT_MASK                     0x0FFF0000                // FFA_CNT[27..16]
#define WF_PLE_TOP_FREEPG_CNT_FFA_CNT_SHFT                     16
#define WF_PLE_TOP_FREEPG_CNT_FREEPG_CNT_ADDR                  WF_PLE_TOP_FREEPG_CNT_ADDR
#define WF_PLE_TOP_FREEPG_CNT_FREEPG_CNT_MASK                  0x00000FFF                // FREEPG_CNT[11..0]
#define WF_PLE_TOP_FREEPG_CNT_FREEPG_CNT_SHFT                  0

/* =====================================================================================

  ---FREEPG_HEAD_TAIL (0x820c0000 + 0x3a4)---

    FREEPG_HEAD[11..0]           - (RO) Head page of free page list
    RESERVED12[15..12]           - (RO) Reserved bits
    FREEPG_TAIL[27..16]          - (RO) Tail page of free page list
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_FREEPG_HEAD_TAIL_FREEPG_TAIL_ADDR           WF_PLE_TOP_FREEPG_HEAD_TAIL_ADDR
#define WF_PLE_TOP_FREEPG_HEAD_TAIL_FREEPG_TAIL_MASK           0x0FFF0000                // FREEPG_TAIL[27..16]
#define WF_PLE_TOP_FREEPG_HEAD_TAIL_FREEPG_TAIL_SHFT           16
#define WF_PLE_TOP_FREEPG_HEAD_TAIL_FREEPG_HEAD_ADDR           WF_PLE_TOP_FREEPG_HEAD_TAIL_ADDR
#define WF_PLE_TOP_FREEPG_HEAD_TAIL_FREEPG_HEAD_MASK           0x00000FFF                // FREEPG_HEAD[11..0]
#define WF_PLE_TOP_FREEPG_HEAD_TAIL_FREEPG_HEAD_SHFT           0

/* =====================================================================================

  ---HIF_PG_INFO (0x820c0000 + 0x3a8)---

    HIF_RSV_CNT[11..0]           - (RO) Reserved pages of HIF group
    RESERVED12[15..12]           - (RO) Reserved bits
    HIF_SRC_CNT[27..16]          - (RO) Used pages of HIF group
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_HIF_PG_INFO_HIF_SRC_CNT_ADDR                WF_PLE_TOP_HIF_PG_INFO_ADDR
#define WF_PLE_TOP_HIF_PG_INFO_HIF_SRC_CNT_MASK                0x0FFF0000                // HIF_SRC_CNT[27..16]
#define WF_PLE_TOP_HIF_PG_INFO_HIF_SRC_CNT_SHFT                16
#define WF_PLE_TOP_HIF_PG_INFO_HIF_RSV_CNT_ADDR                WF_PLE_TOP_HIF_PG_INFO_ADDR
#define WF_PLE_TOP_HIF_PG_INFO_HIF_RSV_CNT_MASK                0x00000FFF                // HIF_RSV_CNT[11..0]
#define WF_PLE_TOP_HIF_PG_INFO_HIF_RSV_CNT_SHFT                0

/* =====================================================================================

  ---HIF_WMTXD_PG_INFO (0x820c0000 + 0x3ac)---

    HIF_WMTXD_RSV_CNT[11..0]     - (RO) Reserved pages of HIF WMCPU TXD group
    RESERVED12[15..12]           - (RO) Reserved bits
    HIF_WMTXD_SRC_CNT[27..16]    - (RO) Used pages of HIF WMCPU TXD group
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_HIF_WMTXD_PG_INFO_HIF_WMTXD_SRC_CNT_ADDR    WF_PLE_TOP_HIF_WMTXD_PG_INFO_ADDR
#define WF_PLE_TOP_HIF_WMTXD_PG_INFO_HIF_WMTXD_SRC_CNT_MASK    0x0FFF0000                // HIF_WMTXD_SRC_CNT[27..16]
#define WF_PLE_TOP_HIF_WMTXD_PG_INFO_HIF_WMTXD_SRC_CNT_SHFT    16
#define WF_PLE_TOP_HIF_WMTXD_PG_INFO_HIF_WMTXD_RSV_CNT_ADDR    WF_PLE_TOP_HIF_WMTXD_PG_INFO_ADDR
#define WF_PLE_TOP_HIF_WMTXD_PG_INFO_HIF_WMTXD_RSV_CNT_MASK    0x00000FFF                // HIF_WMTXD_RSV_CNT[11..0]
#define WF_PLE_TOP_HIF_WMTXD_PG_INFO_HIF_WMTXD_RSV_CNT_SHFT    0

/* =====================================================================================

  ---HIF_TXCMD_PG_INFO (0x820c0000 + 0x3b0)---

    HIF_TXCMD_RSV_CNT[11..0]     - (RO) Reserved pages of HIF TXCMD group
    RESERVED12[15..12]           - (RO) Reserved bits
    HIF_TXCMD_SRC_CNT[27..16]    - (RO) Used pages of HIF TXCMD group
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_HIF_TXCMD_PG_INFO_HIF_TXCMD_SRC_CNT_ADDR    WF_PLE_TOP_HIF_TXCMD_PG_INFO_ADDR
#define WF_PLE_TOP_HIF_TXCMD_PG_INFO_HIF_TXCMD_SRC_CNT_MASK    0x0FFF0000                // HIF_TXCMD_SRC_CNT[27..16]
#define WF_PLE_TOP_HIF_TXCMD_PG_INFO_HIF_TXCMD_SRC_CNT_SHFT    16
#define WF_PLE_TOP_HIF_TXCMD_PG_INFO_HIF_TXCMD_RSV_CNT_ADDR    WF_PLE_TOP_HIF_TXCMD_PG_INFO_ADDR
#define WF_PLE_TOP_HIF_TXCMD_PG_INFO_HIF_TXCMD_RSV_CNT_MASK    0x00000FFF                // HIF_TXCMD_RSV_CNT[11..0]
#define WF_PLE_TOP_HIF_TXCMD_PG_INFO_HIF_TXCMD_RSV_CNT_SHFT    0

/* =====================================================================================

  ---CPU_PG_INFO (0x820c0000 + 0x3b4)---

    CPU_RSV_CNT[11..0]           - (RO) Reserved pages of CPU group
    RESERVED12[15..12]           - (RO) Reserved bits
    CPU_SRC_CNT[27..16]          - (RO) Used pages of CPU group
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_CPU_PG_INFO_CPU_SRC_CNT_ADDR                WF_PLE_TOP_CPU_PG_INFO_ADDR
#define WF_PLE_TOP_CPU_PG_INFO_CPU_SRC_CNT_MASK                0x0FFF0000                // CPU_SRC_CNT[27..16]
#define WF_PLE_TOP_CPU_PG_INFO_CPU_SRC_CNT_SHFT                16
#define WF_PLE_TOP_CPU_PG_INFO_CPU_RSV_CNT_ADDR                WF_PLE_TOP_CPU_PG_INFO_ADDR
#define WF_PLE_TOP_CPU_PG_INFO_CPU_RSV_CNT_MASK                0x00000FFF                // CPU_RSV_CNT[11..0]
#define WF_PLE_TOP_CPU_PG_INFO_CPU_RSV_CNT_SHFT                0

/* =====================================================================================

  ---PLE_LOG_0 (0x820c0000 + 0x3b8)---

    PLE_LOG_0[31..0]             - (RW) Reserve for WIFI LP reset usage

 =====================================================================================*/
#define WF_PLE_TOP_PLE_LOG_0_PLE_LOG_0_ADDR                    WF_PLE_TOP_PLE_LOG_0_ADDR
#define WF_PLE_TOP_PLE_LOG_0_PLE_LOG_0_MASK                    0xFFFFFFFF                // PLE_LOG_0[31..0]
#define WF_PLE_TOP_PLE_LOG_0_PLE_LOG_0_SHFT                    0

/* =====================================================================================

  ---PLE_LOG_1 (0x820c0000 + 0x3bc)---

    PLE_LOG_1[31..0]             - (RW) Log message for SW

 =====================================================================================*/
#define WF_PLE_TOP_PLE_LOG_1_PLE_LOG_1_ADDR                    WF_PLE_TOP_PLE_LOG_1_ADDR
#define WF_PLE_TOP_PLE_LOG_1_PLE_LOG_1_MASK                    0xFFFFFFFF                // PLE_LOG_1[31..0]
#define WF_PLE_TOP_PLE_LOG_1_PLE_LOG_1_SHFT                    0

/* =====================================================================================

  ---PLE_LOG_2 (0x820c0000 + 0x3c0)---

    PLE_LOG_2[31..0]             - (RW) Log message for SW

 =====================================================================================*/
#define WF_PLE_TOP_PLE_LOG_2_PLE_LOG_2_ADDR                    WF_PLE_TOP_PLE_LOG_2_ADDR
#define WF_PLE_TOP_PLE_LOG_2_PLE_LOG_2_MASK                    0xFFFFFFFF                // PLE_LOG_2[31..0]
#define WF_PLE_TOP_PLE_LOG_2_PLE_LOG_2_SHFT                    0

/* =====================================================================================

  ---PLE_LOG_3 (0x820c0000 + 0x3c4)---

    PLE_LOG_3[31..0]             - (RW) Log message for SW

 =====================================================================================*/
#define WF_PLE_TOP_PLE_LOG_3_PLE_LOG_3_ADDR                    WF_PLE_TOP_PLE_LOG_3_ADDR
#define WF_PLE_TOP_PLE_LOG_3_PLE_LOG_3_MASK                    0xFFFFFFFF                // PLE_LOG_3[31..0]
#define WF_PLE_TOP_PLE_LOG_3_PLE_LOG_3_SHFT                    0

/* =====================================================================================

  ---RL_BUF_CTRL_0 (0x820c0000 + 0x3d0)---

    RELAY_BUF_ADDR[11..0]        - (RW) Read address of relay buffer
    RESERVED12[30..12]           - (RO) Reserved bits
    EXECUTE[31]                  - (A0) Executes relay buffer read command

 =====================================================================================*/
#define WF_PLE_TOP_RL_BUF_CTRL_0_EXECUTE_ADDR                  WF_PLE_TOP_RL_BUF_CTRL_0_ADDR
#define WF_PLE_TOP_RL_BUF_CTRL_0_EXECUTE_MASK                  0x80000000                // EXECUTE[31]
#define WF_PLE_TOP_RL_BUF_CTRL_0_EXECUTE_SHFT                  31
#define WF_PLE_TOP_RL_BUF_CTRL_0_RELAY_BUF_ADDR_ADDR           WF_PLE_TOP_RL_BUF_CTRL_0_ADDR
#define WF_PLE_TOP_RL_BUF_CTRL_0_RELAY_BUF_ADDR_MASK           0x00000FFF                // RELAY_BUF_ADDR[11..0]
#define WF_PLE_TOP_RL_BUF_CTRL_0_RELAY_BUF_ADDR_SHFT           0

/* =====================================================================================

  ---RL_BUF_CTRL_1 (0x820c0000 + 0x3d4)---

    PAGE_NUM[3..0]               - (RO) Relay Buffer Data : Total 68bits,
                                     [3:0] : Page number
    TAIL_PAGE[15..4]             - (RO) Relay Buffer Data : Total 68bits,
                                     [15:4] : TAIL_PAGE
    TXD_TXBYCNT[29..16]          - (RO) Relay Buffer Data : Total 68bits,
                                     [29:16] : TXD_TXBYCNT[13:0],
    PAGE_GID[31..30]             - (RO) Relay Buffer Data : Total 68bits,
                                     [31:30] : PAGE_GID,

 =====================================================================================*/
#define WF_PLE_TOP_RL_BUF_CTRL_1_PAGE_GID_ADDR                 WF_PLE_TOP_RL_BUF_CTRL_1_ADDR
#define WF_PLE_TOP_RL_BUF_CTRL_1_PAGE_GID_MASK                 0xC0000000                // PAGE_GID[31..30]
#define WF_PLE_TOP_RL_BUF_CTRL_1_PAGE_GID_SHFT                 30
#define WF_PLE_TOP_RL_BUF_CTRL_1_TXD_TXBYCNT_ADDR              WF_PLE_TOP_RL_BUF_CTRL_1_ADDR
#define WF_PLE_TOP_RL_BUF_CTRL_1_TXD_TXBYCNT_MASK              0x3FFF0000                // TXD_TXBYCNT[29..16]
#define WF_PLE_TOP_RL_BUF_CTRL_1_TXD_TXBYCNT_SHFT              16
#define WF_PLE_TOP_RL_BUF_CTRL_1_TAIL_PAGE_ADDR                WF_PLE_TOP_RL_BUF_CTRL_1_ADDR
#define WF_PLE_TOP_RL_BUF_CTRL_1_TAIL_PAGE_MASK                0x0000FFF0                // TAIL_PAGE[15..4]
#define WF_PLE_TOP_RL_BUF_CTRL_1_TAIL_PAGE_SHFT                4
#define WF_PLE_TOP_RL_BUF_CTRL_1_PAGE_NUM_ADDR                 WF_PLE_TOP_RL_BUF_CTRL_1_ADDR
#define WF_PLE_TOP_RL_BUF_CTRL_1_PAGE_NUM_MASK                 0x0000000F                // PAGE_NUM[3..0]
#define WF_PLE_TOP_RL_BUF_CTRL_1_PAGE_NUM_SHFT                 0

/* =====================================================================================

  ---RL_BUF_CTRL_2 (0x820c0000 + 0x3d8)---

    TXD_TXCNT[4..0]              - (RO) Relay Buffer Data : Total 68bits,
                                     [36:32] : TXD_TXCNT,
    TXD_TID[7..5]                - (RO) Relay Buffer Data : Total 68bits,
                                     [39:37] : TXD_TID,
    TXD_SN[19..8]                - (RO) Relay Buffer Data : Total 68bits,
                                     [51:40] : TXD_SN,
    TXD_AGG_EN[20]               - (RO) Relay Buffer Data : Total 68bits,
                                     [52] : TXD_AGG_EN, (if (TXD.TYPE = 2'h2 and TXD.SUBTYPE =  4'h8) & 
                                     !( TXD.BM | TXD.NA | TXD.BF_TYPE |TXD.DU | payload_len==0 | TXD.HE | TXD.FR | TXD.FR | TXD.FRAG) )
    TXD_SFD[21]                  - (RO) Relay Buffer Data : Total 68bits,
                                     [53] : TXD_SFD,(TXD.PKT_FT = 2'h1, or 2'h3)
    TXD_SRC[23..22]              - (RO) Relay Buffer Data : Total 68bits,
                                     [55:54] : TXD_SRC,
    TXD_QID[30..24]              - (RO) Relay Buffer Data : Total 68bits,
                                     [62:56] : TXD_QID,
    TGID_0[31]                   - (RO) Relay Buffer Data : Total 68bits,
                                     [63] : TGID[1],

 =====================================================================================*/
#define WF_PLE_TOP_RL_BUF_CTRL_2_TGID_0_ADDR                   WF_PLE_TOP_RL_BUF_CTRL_2_ADDR
#define WF_PLE_TOP_RL_BUF_CTRL_2_TGID_0_MASK                   0x80000000                // TGID_0[31]
#define WF_PLE_TOP_RL_BUF_CTRL_2_TGID_0_SHFT                   31
#define WF_PLE_TOP_RL_BUF_CTRL_2_TXD_QID_ADDR                  WF_PLE_TOP_RL_BUF_CTRL_2_ADDR
#define WF_PLE_TOP_RL_BUF_CTRL_2_TXD_QID_MASK                  0x7F000000                // TXD_QID[30..24]
#define WF_PLE_TOP_RL_BUF_CTRL_2_TXD_QID_SHFT                  24
#define WF_PLE_TOP_RL_BUF_CTRL_2_TXD_SRC_ADDR                  WF_PLE_TOP_RL_BUF_CTRL_2_ADDR
#define WF_PLE_TOP_RL_BUF_CTRL_2_TXD_SRC_MASK                  0x00C00000                // TXD_SRC[23..22]
#define WF_PLE_TOP_RL_BUF_CTRL_2_TXD_SRC_SHFT                  22
#define WF_PLE_TOP_RL_BUF_CTRL_2_TXD_SFD_ADDR                  WF_PLE_TOP_RL_BUF_CTRL_2_ADDR
#define WF_PLE_TOP_RL_BUF_CTRL_2_TXD_SFD_MASK                  0x00200000                // TXD_SFD[21]
#define WF_PLE_TOP_RL_BUF_CTRL_2_TXD_SFD_SHFT                  21
#define WF_PLE_TOP_RL_BUF_CTRL_2_TXD_AGG_EN_ADDR               WF_PLE_TOP_RL_BUF_CTRL_2_ADDR
#define WF_PLE_TOP_RL_BUF_CTRL_2_TXD_AGG_EN_MASK               0x00100000                // TXD_AGG_EN[20]
#define WF_PLE_TOP_RL_BUF_CTRL_2_TXD_AGG_EN_SHFT               20
#define WF_PLE_TOP_RL_BUF_CTRL_2_TXD_SN_ADDR                   WF_PLE_TOP_RL_BUF_CTRL_2_ADDR
#define WF_PLE_TOP_RL_BUF_CTRL_2_TXD_SN_MASK                   0x000FFF00                // TXD_SN[19..8]
#define WF_PLE_TOP_RL_BUF_CTRL_2_TXD_SN_SHFT                   8
#define WF_PLE_TOP_RL_BUF_CTRL_2_TXD_TID_ADDR                  WF_PLE_TOP_RL_BUF_CTRL_2_ADDR
#define WF_PLE_TOP_RL_BUF_CTRL_2_TXD_TID_MASK                  0x000000E0                // TXD_TID[7..5]
#define WF_PLE_TOP_RL_BUF_CTRL_2_TXD_TID_SHFT                  5
#define WF_PLE_TOP_RL_BUF_CTRL_2_TXD_TXCNT_ADDR                WF_PLE_TOP_RL_BUF_CTRL_2_ADDR
#define WF_PLE_TOP_RL_BUF_CTRL_2_TXD_TXCNT_MASK                0x0000001F                // TXD_TXCNT[4..0]
#define WF_PLE_TOP_RL_BUF_CTRL_2_TXD_TXCNT_SHFT                0

/* =====================================================================================

  ---RL_BUF_CTRL_3 (0x820c0000 + 0x3dc)---

    TGID_1[0]                    - (RO) Relay Buffer Information : 
                                     [64] : TGID[1]
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_RL_BUF_CTRL_3_TGID_1_ADDR                   WF_PLE_TOP_RL_BUF_CTRL_3_ADDR
#define WF_PLE_TOP_RL_BUF_CTRL_3_TGID_1_MASK                   0x00000001                // TGID_1[0]
#define WF_PLE_TOP_RL_BUF_CTRL_3_TGID_1_SHFT                   0

/* =====================================================================================

  ---FL_QUE_CTRL_0 (0x820c0000 + 0x3e0)---

    Q_BUF_WLANID[11..0]          - (RW) Address of queue structure buffer WLANID.
    FL_BUFFER_ADDR[23..12]       - (RW) Frame address of read previous frame/next frame
    Q_BUF_QID[30..24]            - (RW) Address of queue structure buffer QID
    EXECUTE[31]                  - (A0) Executes frame link and queue structure buffer read command

 =====================================================================================*/
#define WF_PLE_TOP_FL_QUE_CTRL_0_EXECUTE_ADDR                  WF_PLE_TOP_FL_QUE_CTRL_0_ADDR
#define WF_PLE_TOP_FL_QUE_CTRL_0_EXECUTE_MASK                  0x80000000                // EXECUTE[31]
#define WF_PLE_TOP_FL_QUE_CTRL_0_EXECUTE_SHFT                  31
#define WF_PLE_TOP_FL_QUE_CTRL_0_Q_BUF_QID_ADDR                WF_PLE_TOP_FL_QUE_CTRL_0_ADDR
#define WF_PLE_TOP_FL_QUE_CTRL_0_Q_BUF_QID_MASK                0x7F000000                // Q_BUF_QID[30..24]
#define WF_PLE_TOP_FL_QUE_CTRL_0_Q_BUF_QID_SHFT                24
#define WF_PLE_TOP_FL_QUE_CTRL_0_FL_BUFFER_ADDR_ADDR           WF_PLE_TOP_FL_QUE_CTRL_0_ADDR
#define WF_PLE_TOP_FL_QUE_CTRL_0_FL_BUFFER_ADDR_MASK           0x00FFF000                // FL_BUFFER_ADDR[23..12]
#define WF_PLE_TOP_FL_QUE_CTRL_0_FL_BUFFER_ADDR_SHFT           12
#define WF_PLE_TOP_FL_QUE_CTRL_0_Q_BUF_WLANID_ADDR             WF_PLE_TOP_FL_QUE_CTRL_0_ADDR
#define WF_PLE_TOP_FL_QUE_CTRL_0_Q_BUF_WLANID_MASK             0x00000FFF                // Q_BUF_WLANID[11..0]
#define WF_PLE_TOP_FL_QUE_CTRL_0_Q_BUF_WLANID_SHFT             0

/* =====================================================================================

  ---FL_QUE_CTRL_1 (0x820c0000 + 0x3e4)---

    NEXT_FID[11..0]              - (RO) Next frame ID of FL_BUFFER_ADDR
    RESERVED12[15..12]           - (RO) Reserved bits
    PREV_FID[27..16]             - (RO) Previous frame ID of FL_BUFFER_ADDR
    Q_BUF_PID[29..28]            - (RW) Address of queue structure buffer PID
    Q_BUF_TGID[31..30]           - (RW) Address of queue structure buffer TGID

 =====================================================================================*/
#define WF_PLE_TOP_FL_QUE_CTRL_1_Q_BUF_TGID_ADDR               WF_PLE_TOP_FL_QUE_CTRL_1_ADDR
#define WF_PLE_TOP_FL_QUE_CTRL_1_Q_BUF_TGID_MASK               0xC0000000                // Q_BUF_TGID[31..30]
#define WF_PLE_TOP_FL_QUE_CTRL_1_Q_BUF_TGID_SHFT               30
#define WF_PLE_TOP_FL_QUE_CTRL_1_Q_BUF_PID_ADDR                WF_PLE_TOP_FL_QUE_CTRL_1_ADDR
#define WF_PLE_TOP_FL_QUE_CTRL_1_Q_BUF_PID_MASK                0x30000000                // Q_BUF_PID[29..28]
#define WF_PLE_TOP_FL_QUE_CTRL_1_Q_BUF_PID_SHFT                28
#define WF_PLE_TOP_FL_QUE_CTRL_1_PREV_FID_ADDR                 WF_PLE_TOP_FL_QUE_CTRL_1_ADDR
#define WF_PLE_TOP_FL_QUE_CTRL_1_PREV_FID_MASK                 0x0FFF0000                // PREV_FID[27..16]
#define WF_PLE_TOP_FL_QUE_CTRL_1_PREV_FID_SHFT                 16
#define WF_PLE_TOP_FL_QUE_CTRL_1_NEXT_FID_ADDR                 WF_PLE_TOP_FL_QUE_CTRL_1_ADDR
#define WF_PLE_TOP_FL_QUE_CTRL_1_NEXT_FID_MASK                 0x00000FFF                // NEXT_FID[11..0]
#define WF_PLE_TOP_FL_QUE_CTRL_1_NEXT_FID_SHFT                 0

/* =====================================================================================

  ---FL_QUE_CTRL_2 (0x820c0000 + 0x3e8)---

    QUEUE_HEAD_FID[11..0]        - (RO) Head frame ID of the quest queue setting in 0x01b0[15:0]
    RESERVED12[15..12]           - (RO) Reserved bits
    QUEUE_TAIL_FID[27..16]       - (RO) Tail frame ID of the quest queue setting in 0x01b0[15:0]
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_FL_QUE_CTRL_2_QUEUE_TAIL_FID_ADDR           WF_PLE_TOP_FL_QUE_CTRL_2_ADDR
#define WF_PLE_TOP_FL_QUE_CTRL_2_QUEUE_TAIL_FID_MASK           0x0FFF0000                // QUEUE_TAIL_FID[27..16]
#define WF_PLE_TOP_FL_QUE_CTRL_2_QUEUE_TAIL_FID_SHFT           16
#define WF_PLE_TOP_FL_QUE_CTRL_2_QUEUE_HEAD_FID_ADDR           WF_PLE_TOP_FL_QUE_CTRL_2_ADDR
#define WF_PLE_TOP_FL_QUE_CTRL_2_QUEUE_HEAD_FID_MASK           0x00000FFF                // QUEUE_HEAD_FID[11..0]
#define WF_PLE_TOP_FL_QUE_CTRL_2_QUEUE_HEAD_FID_SHFT           0

/* =====================================================================================

  ---FL_QUE_CTRL_3 (0x820c0000 + 0x3ec)---

    QUEUE_PKT_NUM[11..0]         - (RO) Total packet number of the queue  setting in 0x1b0[15:0]
    RESERVED12[31..12]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_FL_QUE_CTRL_3_QUEUE_PKT_NUM_ADDR            WF_PLE_TOP_FL_QUE_CTRL_3_ADDR
#define WF_PLE_TOP_FL_QUE_CTRL_3_QUEUE_PKT_NUM_MASK            0x00000FFF                // QUEUE_PKT_NUM[11..0]
#define WF_PLE_TOP_FL_QUE_CTRL_3_QUEUE_PKT_NUM_SHFT            0

/* =====================================================================================

  ---PL_QUE_CTRL_0 (0x820c0000 + 0x3f0)---

    NEXT_PAGE[11..0]             - (RO) Next page of PL_BUFFER_ADDR
    RESERVED12[15..12]           - (RO) Reserved bits
    PL_BUFFER_ADDR[27..16]       - (RW) Page address of read next page
    RESERVED28[30..28]           - (RO) Reserved bits
    EXECUTE[31]                  - (A0) Executes page link buffer read command

 =====================================================================================*/
#define WF_PLE_TOP_PL_QUE_CTRL_0_EXECUTE_ADDR                  WF_PLE_TOP_PL_QUE_CTRL_0_ADDR
#define WF_PLE_TOP_PL_QUE_CTRL_0_EXECUTE_MASK                  0x80000000                // EXECUTE[31]
#define WF_PLE_TOP_PL_QUE_CTRL_0_EXECUTE_SHFT                  31
#define WF_PLE_TOP_PL_QUE_CTRL_0_PL_BUFFER_ADDR_ADDR           WF_PLE_TOP_PL_QUE_CTRL_0_ADDR
#define WF_PLE_TOP_PL_QUE_CTRL_0_PL_BUFFER_ADDR_MASK           0x0FFF0000                // PL_BUFFER_ADDR[27..16]
#define WF_PLE_TOP_PL_QUE_CTRL_0_PL_BUFFER_ADDR_SHFT           16
#define WF_PLE_TOP_PL_QUE_CTRL_0_NEXT_PAGE_ADDR                WF_PLE_TOP_PL_QUE_CTRL_0_ADDR
#define WF_PLE_TOP_PL_QUE_CTRL_0_NEXT_PAGE_MASK                0x00000FFF                // NEXT_PAGE[11..0]
#define WF_PLE_TOP_PL_QUE_CTRL_0_NEXT_PAGE_SHFT                0

/* =====================================================================================

  ---HIF_ENQ_PKT_NUM (0x820c0000 + 0x400)---

    HIF_ENQ_CPU_PKT_NUM[15..0]   - (RO) Packet number of HIF enqueue to CPU, just keep in 16bits.
    HIF_ENQ_LMAC_PKT_NUM[31..16] - (RO) Packet number of HIF enqueue to LMAC, just keep in 16 bits

 =====================================================================================*/
#define WF_PLE_TOP_HIF_ENQ_PKT_NUM_HIF_ENQ_LMAC_PKT_NUM_ADDR   WF_PLE_TOP_HIF_ENQ_PKT_NUM_ADDR
#define WF_PLE_TOP_HIF_ENQ_PKT_NUM_HIF_ENQ_LMAC_PKT_NUM_MASK   0xFFFF0000                // HIF_ENQ_LMAC_PKT_NUM[31..16]
#define WF_PLE_TOP_HIF_ENQ_PKT_NUM_HIF_ENQ_LMAC_PKT_NUM_SHFT   16
#define WF_PLE_TOP_HIF_ENQ_PKT_NUM_HIF_ENQ_CPU_PKT_NUM_ADDR    WF_PLE_TOP_HIF_ENQ_PKT_NUM_ADDR
#define WF_PLE_TOP_HIF_ENQ_PKT_NUM_HIF_ENQ_CPU_PKT_NUM_MASK    0x0000FFFF                // HIF_ENQ_CPU_PKT_NUM[15..0]
#define WF_PLE_TOP_HIF_ENQ_PKT_NUM_HIF_ENQ_CPU_PKT_NUM_SHFT    0

/* =====================================================================================

  ---CPU_ENQ_PKT_NUM (0x820c0000 + 0x404)---

    CPU_ENQ_LMAC_PKT_NUM[15..0]  - (RO) Packet number of CPU enqueue to LMAC, just keep in 16 bits.
    RESV[31..16]                 - (RO) Reserved

 =====================================================================================*/
#define WF_PLE_TOP_CPU_ENQ_PKT_NUM_RESV_ADDR                   WF_PLE_TOP_CPU_ENQ_PKT_NUM_ADDR
#define WF_PLE_TOP_CPU_ENQ_PKT_NUM_RESV_MASK                   0xFFFF0000                // RESV[31..16]
#define WF_PLE_TOP_CPU_ENQ_PKT_NUM_RESV_SHFT                   16
#define WF_PLE_TOP_CPU_ENQ_PKT_NUM_CPU_ENQ_LMAC_PKT_NUM_ADDR   WF_PLE_TOP_CPU_ENQ_PKT_NUM_ADDR
#define WF_PLE_TOP_CPU_ENQ_PKT_NUM_CPU_ENQ_LMAC_PKT_NUM_MASK   0x0000FFFF                // CPU_ENQ_LMAC_PKT_NUM[15..0]
#define WF_PLE_TOP_CPU_ENQ_PKT_NUM_CPU_ENQ_LMAC_PKT_NUM_SHFT   0

/* =====================================================================================

  ---RLS_MSDU_PKT_NUM (0x820c0000 + 0x408)---

    RSL_RPT_TXD_NUM[15..0]       - (RO) TXD number of host report function
    RSL_MSDUID_NUM[31..16]       - (RO) Release MSDU_ID number of host report function

 =====================================================================================*/
#define WF_PLE_TOP_RLS_MSDU_PKT_NUM_RSL_MSDUID_NUM_ADDR        WF_PLE_TOP_RLS_MSDU_PKT_NUM_ADDR
#define WF_PLE_TOP_RLS_MSDU_PKT_NUM_RSL_MSDUID_NUM_MASK        0xFFFF0000                // RSL_MSDUID_NUM[31..16]
#define WF_PLE_TOP_RLS_MSDU_PKT_NUM_RSL_MSDUID_NUM_SHFT        16
#define WF_PLE_TOP_RLS_MSDU_PKT_NUM_RSL_RPT_TXD_NUM_ADDR       WF_PLE_TOP_RLS_MSDU_PKT_NUM_ADDR
#define WF_PLE_TOP_RLS_MSDU_PKT_NUM_RSL_RPT_TXD_NUM_MASK       0x0000FFFF                // RSL_RPT_TXD_NUM[15..0]
#define WF_PLE_TOP_RLS_MSDU_PKT_NUM_RSL_RPT_TXD_NUM_SHFT       0

/* =====================================================================================

  ---HOST_REPORT_NUM (0x820c0000 + 0x40c)---

    RSL_TXD_NUM[15..0]           - (RO) All TXD number of release function, include the no host report(not CT) TXD packets.
    HOST_REPORT_NUM[31..16]      - (RO) Host report number that be the PSE packets carry release MSDU_ID information

 =====================================================================================*/
#define WF_PLE_TOP_HOST_REPORT_NUM_HOST_REPORT_NUM_ADDR        WF_PLE_TOP_HOST_REPORT_NUM_ADDR
#define WF_PLE_TOP_HOST_REPORT_NUM_HOST_REPORT_NUM_MASK        0xFFFF0000                // HOST_REPORT_NUM[31..16]
#define WF_PLE_TOP_HOST_REPORT_NUM_HOST_REPORT_NUM_SHFT        16
#define WF_PLE_TOP_HOST_REPORT_NUM_RSL_TXD_NUM_ADDR            WF_PLE_TOP_HOST_REPORT_NUM_ADDR
#define WF_PLE_TOP_HOST_REPORT_NUM_RSL_TXD_NUM_MASK            0x0000FFFF                // RSL_TXD_NUM[15..0]
#define WF_PLE_TOP_HOST_REPORT_NUM_RSL_TXD_NUM_SHFT            0

/* =====================================================================================

  ---FUNC_ACT_CNT_0 (0x820c0000 + 0x420)---

    RESERVED0[15..0]             - (RO) Reserved bits
    SPL_GEN_NUM[31..16]          - (RO) Counter of SPL report generation.

 =====================================================================================*/
#define WF_PLE_TOP_FUNC_ACT_CNT_0_SPL_GEN_NUM_ADDR             WF_PLE_TOP_FUNC_ACT_CNT_0_ADDR
#define WF_PLE_TOP_FUNC_ACT_CNT_0_SPL_GEN_NUM_MASK             0xFFFF0000                // SPL_GEN_NUM[31..16]
#define WF_PLE_TOP_FUNC_ACT_CNT_0_SPL_GEN_NUM_SHFT             16

/* =====================================================================================

  ---FUNC_ACT_CNT_1 (0x820c0000 + 0x424)---

    MACTX0_ACT_CNT[3..0]         - (RO) Counter of MACTX0 TX active.
    MACTX0_NOR_END_CNT[7..4]     - (RO) Counter of MACTX0 TX normal end.
    MACTX0_ABORT_CNT[11..8]      - (RO) Counter of MACTX0 TX abort.
    RESERVED12[15..12]           - (RO) Reserved bits
    TXCMD0_ADD_FID_CNT[19..16]   - (RO) Counter of TXCMD0 TX add FID.
    TXCMD0_NOR_END_CNT[23..20]   - (RO) Counter of TXCMD0 TX normal end.
    TXCMD0_ABORT_CNT[27..24]     - (RO) Counter of TXCMD0 TX abort.
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_FUNC_ACT_CNT_1_TXCMD0_ABORT_CNT_ADDR        WF_PLE_TOP_FUNC_ACT_CNT_1_ADDR
#define WF_PLE_TOP_FUNC_ACT_CNT_1_TXCMD0_ABORT_CNT_MASK        0x0F000000                // TXCMD0_ABORT_CNT[27..24]
#define WF_PLE_TOP_FUNC_ACT_CNT_1_TXCMD0_ABORT_CNT_SHFT        24
#define WF_PLE_TOP_FUNC_ACT_CNT_1_TXCMD0_NOR_END_CNT_ADDR      WF_PLE_TOP_FUNC_ACT_CNT_1_ADDR
#define WF_PLE_TOP_FUNC_ACT_CNT_1_TXCMD0_NOR_END_CNT_MASK      0x00F00000                // TXCMD0_NOR_END_CNT[23..20]
#define WF_PLE_TOP_FUNC_ACT_CNT_1_TXCMD0_NOR_END_CNT_SHFT      20
#define WF_PLE_TOP_FUNC_ACT_CNT_1_TXCMD0_ADD_FID_CNT_ADDR      WF_PLE_TOP_FUNC_ACT_CNT_1_ADDR
#define WF_PLE_TOP_FUNC_ACT_CNT_1_TXCMD0_ADD_FID_CNT_MASK      0x000F0000                // TXCMD0_ADD_FID_CNT[19..16]
#define WF_PLE_TOP_FUNC_ACT_CNT_1_TXCMD0_ADD_FID_CNT_SHFT      16
#define WF_PLE_TOP_FUNC_ACT_CNT_1_MACTX0_ABORT_CNT_ADDR        WF_PLE_TOP_FUNC_ACT_CNT_1_ADDR
#define WF_PLE_TOP_FUNC_ACT_CNT_1_MACTX0_ABORT_CNT_MASK        0x00000F00                // MACTX0_ABORT_CNT[11..8]
#define WF_PLE_TOP_FUNC_ACT_CNT_1_MACTX0_ABORT_CNT_SHFT        8
#define WF_PLE_TOP_FUNC_ACT_CNT_1_MACTX0_NOR_END_CNT_ADDR      WF_PLE_TOP_FUNC_ACT_CNT_1_ADDR
#define WF_PLE_TOP_FUNC_ACT_CNT_1_MACTX0_NOR_END_CNT_MASK      0x000000F0                // MACTX0_NOR_END_CNT[7..4]
#define WF_PLE_TOP_FUNC_ACT_CNT_1_MACTX0_NOR_END_CNT_SHFT      4
#define WF_PLE_TOP_FUNC_ACT_CNT_1_MACTX0_ACT_CNT_ADDR          WF_PLE_TOP_FUNC_ACT_CNT_1_ADDR
#define WF_PLE_TOP_FUNC_ACT_CNT_1_MACTX0_ACT_CNT_MASK          0x0000000F                // MACTX0_ACT_CNT[3..0]
#define WF_PLE_TOP_FUNC_ACT_CNT_1_MACTX0_ACT_CNT_SHFT          0

/* =====================================================================================

  ---SRAM_MBIST_DONE (0x820c0000 + 0x438)---

    G1_MBIST_DONE[0]             - (RO) Working status of PLE G1 SRAM MBIST circuit
    G2_MBIST_DONE[1]             - (RO) Working status of PLE G2 SRAM MBIST circuit
    RESERVED2[31..2]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_SRAM_MBIST_DONE_G2_MBIST_DONE_ADDR          WF_PLE_TOP_SRAM_MBIST_DONE_ADDR
#define WF_PLE_TOP_SRAM_MBIST_DONE_G2_MBIST_DONE_MASK          0x00000002                // G2_MBIST_DONE[1]
#define WF_PLE_TOP_SRAM_MBIST_DONE_G2_MBIST_DONE_SHFT          1
#define WF_PLE_TOP_SRAM_MBIST_DONE_G1_MBIST_DONE_ADDR          WF_PLE_TOP_SRAM_MBIST_DONE_ADDR
#define WF_PLE_TOP_SRAM_MBIST_DONE_G1_MBIST_DONE_MASK          0x00000001                // G1_MBIST_DONE[0]
#define WF_PLE_TOP_SRAM_MBIST_DONE_G1_MBIST_DONE_SHFT          0

/* =====================================================================================

  ---SRAM_MBIST_FAIL (0x820c0000 + 0x43c)---

    G1_SRAM0_MBIST_FAIL[0]       - (RO) MBIST check result of group 1 SRAM0
    G1_SRAM1_MBIST_FAIL[1]       - (RO) MBIST check result of group 1 SRAM1
    G1_SRAM2_MBIST_FAIL[2]       - (RO) MBIST check result of group 1 SRAM2
    G1_SRAM3_MBIST_FAIL[3]       - (RO) MBIST check result of group 1 SRAM3
    G2_SRAM0_MBIST_FAIL[4]       - (RO) MBIST check result of group 2 SRAM0
    G2_SRAM1_MBIST_FAIL[5]       - (RO) MBIST check result of group 2 SRAM1
    G2_SRAM2_MBIST_FAIL[6]       - (RO) MBIST check result of group 2 SRAM2
    G2_SRAM3_MBIST_FAIL[7]       - (RO) MBIST check result of group 2 SRAM3
    G2_SRAM4_MBIST_FAIL[8]       - (RO) MBIST check result of group 2 SRAM4
    G2_SRAM5_MBIST_FAIL[9]       - (RO) MBIST check result of group 2 SRAM5
    RESERVED10[31..10]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G2_SRAM5_MBIST_FAIL_ADDR    WF_PLE_TOP_SRAM_MBIST_FAIL_ADDR
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G2_SRAM5_MBIST_FAIL_MASK    0x00000200                // G2_SRAM5_MBIST_FAIL[9]
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G2_SRAM5_MBIST_FAIL_SHFT    9
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G2_SRAM4_MBIST_FAIL_ADDR    WF_PLE_TOP_SRAM_MBIST_FAIL_ADDR
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G2_SRAM4_MBIST_FAIL_MASK    0x00000100                // G2_SRAM4_MBIST_FAIL[8]
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G2_SRAM4_MBIST_FAIL_SHFT    8
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G2_SRAM3_MBIST_FAIL_ADDR    WF_PLE_TOP_SRAM_MBIST_FAIL_ADDR
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G2_SRAM3_MBIST_FAIL_MASK    0x00000080                // G2_SRAM3_MBIST_FAIL[7]
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G2_SRAM3_MBIST_FAIL_SHFT    7
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G2_SRAM2_MBIST_FAIL_ADDR    WF_PLE_TOP_SRAM_MBIST_FAIL_ADDR
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G2_SRAM2_MBIST_FAIL_MASK    0x00000040                // G2_SRAM2_MBIST_FAIL[6]
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G2_SRAM2_MBIST_FAIL_SHFT    6
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G2_SRAM1_MBIST_FAIL_ADDR    WF_PLE_TOP_SRAM_MBIST_FAIL_ADDR
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G2_SRAM1_MBIST_FAIL_MASK    0x00000020                // G2_SRAM1_MBIST_FAIL[5]
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G2_SRAM1_MBIST_FAIL_SHFT    5
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G2_SRAM0_MBIST_FAIL_ADDR    WF_PLE_TOP_SRAM_MBIST_FAIL_ADDR
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G2_SRAM0_MBIST_FAIL_MASK    0x00000010                // G2_SRAM0_MBIST_FAIL[4]
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G2_SRAM0_MBIST_FAIL_SHFT    4
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G1_SRAM3_MBIST_FAIL_ADDR    WF_PLE_TOP_SRAM_MBIST_FAIL_ADDR
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G1_SRAM3_MBIST_FAIL_MASK    0x00000008                // G1_SRAM3_MBIST_FAIL[3]
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G1_SRAM3_MBIST_FAIL_SHFT    3
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G1_SRAM2_MBIST_FAIL_ADDR    WF_PLE_TOP_SRAM_MBIST_FAIL_ADDR
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G1_SRAM2_MBIST_FAIL_MASK    0x00000004                // G1_SRAM2_MBIST_FAIL[2]
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G1_SRAM2_MBIST_FAIL_SHFT    2
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G1_SRAM1_MBIST_FAIL_ADDR    WF_PLE_TOP_SRAM_MBIST_FAIL_ADDR
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G1_SRAM1_MBIST_FAIL_MASK    0x00000002                // G1_SRAM1_MBIST_FAIL[1]
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G1_SRAM1_MBIST_FAIL_SHFT    1
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G1_SRAM0_MBIST_FAIL_ADDR    WF_PLE_TOP_SRAM_MBIST_FAIL_ADDR
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G1_SRAM0_MBIST_FAIL_MASK    0x00000001                // G1_SRAM0_MBIST_FAIL[0]
#define WF_PLE_TOP_SRAM_MBIST_FAIL_G1_SRAM0_MBIST_FAIL_SHFT    0

/* =====================================================================================

  ---SRAM_MBIST_REP_CTRL (0x820c0000 + 0x444)---

    MBIST_REPAIR_RESET_B[0]      - (RW) MBIST Repair Reset ( Low active)
    RESERVED1[14..1]             - (RO) Reserved bits
    MBIST_FUSE_SEL[15]           - (RW) MBIST Repair test used
    MBIST_FUSE_LOAD_SEL[16]      - (RW) MBIST Repair test used
    RESERVED17[23..17]           - (RO) Reserved bits
    MBIST_FUSE[31..24]           - (RW) MBIST Repair test used

 =====================================================================================*/
#define WF_PLE_TOP_SRAM_MBIST_REP_CTRL_MBIST_FUSE_ADDR         WF_PLE_TOP_SRAM_MBIST_REP_CTRL_ADDR
#define WF_PLE_TOP_SRAM_MBIST_REP_CTRL_MBIST_FUSE_MASK         0xFF000000                // MBIST_FUSE[31..24]
#define WF_PLE_TOP_SRAM_MBIST_REP_CTRL_MBIST_FUSE_SHFT         24
#define WF_PLE_TOP_SRAM_MBIST_REP_CTRL_MBIST_FUSE_LOAD_SEL_ADDR WF_PLE_TOP_SRAM_MBIST_REP_CTRL_ADDR
#define WF_PLE_TOP_SRAM_MBIST_REP_CTRL_MBIST_FUSE_LOAD_SEL_MASK 0x00010000                // MBIST_FUSE_LOAD_SEL[16]
#define WF_PLE_TOP_SRAM_MBIST_REP_CTRL_MBIST_FUSE_LOAD_SEL_SHFT 16
#define WF_PLE_TOP_SRAM_MBIST_REP_CTRL_MBIST_FUSE_SEL_ADDR     WF_PLE_TOP_SRAM_MBIST_REP_CTRL_ADDR
#define WF_PLE_TOP_SRAM_MBIST_REP_CTRL_MBIST_FUSE_SEL_MASK     0x00008000                // MBIST_FUSE_SEL[15]
#define WF_PLE_TOP_SRAM_MBIST_REP_CTRL_MBIST_FUSE_SEL_SHFT     15
#define WF_PLE_TOP_SRAM_MBIST_REP_CTRL_MBIST_REPAIR_RESET_B_ADDR WF_PLE_TOP_SRAM_MBIST_REP_CTRL_ADDR
#define WF_PLE_TOP_SRAM_MBIST_REP_CTRL_MBIST_REPAIR_RESET_B_MASK 0x00000001                // MBIST_REPAIR_RESET_B[0]
#define WF_PLE_TOP_SRAM_MBIST_REP_CTRL_MBIST_REPAIR_RESET_B_SHFT 0

/* =====================================================================================

  ---SRAM_MBIST_REP_FUSE (0x820c0000 + 0x44c)---

    MBIST_PREFUSE_LATCH[15..0]   - (RO) MBIST Repair test used
    MBIST_PREFUSE_IN[31..16]     - (RO) MBIST Repair test used

 =====================================================================================*/
#define WF_PLE_TOP_SRAM_MBIST_REP_FUSE_MBIST_PREFUSE_IN_ADDR   WF_PLE_TOP_SRAM_MBIST_REP_FUSE_ADDR
#define WF_PLE_TOP_SRAM_MBIST_REP_FUSE_MBIST_PREFUSE_IN_MASK   0xFFFF0000                // MBIST_PREFUSE_IN[31..16]
#define WF_PLE_TOP_SRAM_MBIST_REP_FUSE_MBIST_PREFUSE_IN_SHFT   16
#define WF_PLE_TOP_SRAM_MBIST_REP_FUSE_MBIST_PREFUSE_LATCH_ADDR WF_PLE_TOP_SRAM_MBIST_REP_FUSE_ADDR
#define WF_PLE_TOP_SRAM_MBIST_REP_FUSE_MBIST_PREFUSE_LATCH_MASK 0x0000FFFF                // MBIST_PREFUSE_LATCH[15..0]
#define WF_PLE_TOP_SRAM_MBIST_REP_FUSE_MBIST_PREFUSE_LATCH_SHFT 0

/* =====================================================================================

  ---WMMAC_PGCNT_0 (0x820c0000 + 0x450)---

    WMMAC_00_PGCNT[11..0]        - (RO) WMMAC 00 used page count
    RESERVED12[15..12]           - (RO) Reserved bits
    WMMAC_01_PGCNT[27..16]       - (RO) WMMAC 01 used page count
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_WMMAC_PGCNT_0_WMMAC_01_PGCNT_ADDR           WF_PLE_TOP_WMMAC_PGCNT_0_ADDR
#define WF_PLE_TOP_WMMAC_PGCNT_0_WMMAC_01_PGCNT_MASK           0x0FFF0000                // WMMAC_01_PGCNT[27..16]
#define WF_PLE_TOP_WMMAC_PGCNT_0_WMMAC_01_PGCNT_SHFT           16
#define WF_PLE_TOP_WMMAC_PGCNT_0_WMMAC_00_PGCNT_ADDR           WF_PLE_TOP_WMMAC_PGCNT_0_ADDR
#define WF_PLE_TOP_WMMAC_PGCNT_0_WMMAC_00_PGCNT_MASK           0x00000FFF                // WMMAC_00_PGCNT[11..0]
#define WF_PLE_TOP_WMMAC_PGCNT_0_WMMAC_00_PGCNT_SHFT           0

/* =====================================================================================

  ---WMMAC_PGCNT_1 (0x820c0000 + 0x454)---

    WMMAC_02_PGCNT[11..0]        - (RO) WMMAC 02 used page count
    RESERVED12[15..12]           - (RO) Reserved bits
    WMMAC_03_PGCNT[27..16]       - (RO) WMMAC 03 used page count
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_WMMAC_PGCNT_1_WMMAC_03_PGCNT_ADDR           WF_PLE_TOP_WMMAC_PGCNT_1_ADDR
#define WF_PLE_TOP_WMMAC_PGCNT_1_WMMAC_03_PGCNT_MASK           0x0FFF0000                // WMMAC_03_PGCNT[27..16]
#define WF_PLE_TOP_WMMAC_PGCNT_1_WMMAC_03_PGCNT_SHFT           16
#define WF_PLE_TOP_WMMAC_PGCNT_1_WMMAC_02_PGCNT_ADDR           WF_PLE_TOP_WMMAC_PGCNT_1_ADDR
#define WF_PLE_TOP_WMMAC_PGCNT_1_WMMAC_02_PGCNT_MASK           0x00000FFF                // WMMAC_02_PGCNT[11..0]
#define WF_PLE_TOP_WMMAC_PGCNT_1_WMMAC_02_PGCNT_SHFT           0

/* =====================================================================================

  ---WMMAC_PGCNT_2 (0x820c0000 + 0x458)---

    WMMAC_10_PGCNT[11..0]        - (RO) WMMAC 10 used page count
    RESERVED12[15..12]           - (RO) Reserved bits
    WMMAC_11_PGCNT[27..16]       - (RO) WMMAC 11 used page count
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_WMMAC_PGCNT_2_WMMAC_11_PGCNT_ADDR           WF_PLE_TOP_WMMAC_PGCNT_2_ADDR
#define WF_PLE_TOP_WMMAC_PGCNT_2_WMMAC_11_PGCNT_MASK           0x0FFF0000                // WMMAC_11_PGCNT[27..16]
#define WF_PLE_TOP_WMMAC_PGCNT_2_WMMAC_11_PGCNT_SHFT           16
#define WF_PLE_TOP_WMMAC_PGCNT_2_WMMAC_10_PGCNT_ADDR           WF_PLE_TOP_WMMAC_PGCNT_2_ADDR
#define WF_PLE_TOP_WMMAC_PGCNT_2_WMMAC_10_PGCNT_MASK           0x00000FFF                // WMMAC_10_PGCNT[11..0]
#define WF_PLE_TOP_WMMAC_PGCNT_2_WMMAC_10_PGCNT_SHFT           0

/* =====================================================================================

  ---WMMAC_PGCNT_3 (0x820c0000 + 0x45c)---

    WMMAC_12_PGCNT[11..0]        - (RO) WMMAC 12 used page count
    RESERVED12[15..12]           - (RO) Reserved bits
    WMMAC_13_PGCNT[27..16]       - (RO) WMMAC 13 used page count
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_WMMAC_PGCNT_3_WMMAC_13_PGCNT_ADDR           WF_PLE_TOP_WMMAC_PGCNT_3_ADDR
#define WF_PLE_TOP_WMMAC_PGCNT_3_WMMAC_13_PGCNT_MASK           0x0FFF0000                // WMMAC_13_PGCNT[27..16]
#define WF_PLE_TOP_WMMAC_PGCNT_3_WMMAC_13_PGCNT_SHFT           16
#define WF_PLE_TOP_WMMAC_PGCNT_3_WMMAC_12_PGCNT_ADDR           WF_PLE_TOP_WMMAC_PGCNT_3_ADDR
#define WF_PLE_TOP_WMMAC_PGCNT_3_WMMAC_12_PGCNT_MASK           0x00000FFF                // WMMAC_12_PGCNT[11..0]
#define WF_PLE_TOP_WMMAC_PGCNT_3_WMMAC_12_PGCNT_SHFT           0

/* =====================================================================================

  ---WMMAC_PGCNT_4 (0x820c0000 + 0x460)---

    WMMAC_20_PGCNT[11..0]        - (RO) WMMAC 20 used page count
    RESERVED12[15..12]           - (RO) Reserved bits
    WMMAC_21_PGCNT[27..16]       - (RO) WMMAC 21 used page count
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_WMMAC_PGCNT_4_WMMAC_21_PGCNT_ADDR           WF_PLE_TOP_WMMAC_PGCNT_4_ADDR
#define WF_PLE_TOP_WMMAC_PGCNT_4_WMMAC_21_PGCNT_MASK           0x0FFF0000                // WMMAC_21_PGCNT[27..16]
#define WF_PLE_TOP_WMMAC_PGCNT_4_WMMAC_21_PGCNT_SHFT           16
#define WF_PLE_TOP_WMMAC_PGCNT_4_WMMAC_20_PGCNT_ADDR           WF_PLE_TOP_WMMAC_PGCNT_4_ADDR
#define WF_PLE_TOP_WMMAC_PGCNT_4_WMMAC_20_PGCNT_MASK           0x00000FFF                // WMMAC_20_PGCNT[11..0]
#define WF_PLE_TOP_WMMAC_PGCNT_4_WMMAC_20_PGCNT_SHFT           0

/* =====================================================================================

  ---WMMAC_PGCNT_5 (0x820c0000 + 0x464)---

    WMMAC_22_PGCNT[11..0]        - (RO) WMMAC 22 used page count
    RESERVED12[15..12]           - (RO) Reserved bits
    WMMAC_23_PGCNT[27..16]       - (RO) WMMAC 23 used page count
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_WMMAC_PGCNT_5_WMMAC_23_PGCNT_ADDR           WF_PLE_TOP_WMMAC_PGCNT_5_ADDR
#define WF_PLE_TOP_WMMAC_PGCNT_5_WMMAC_23_PGCNT_MASK           0x0FFF0000                // WMMAC_23_PGCNT[27..16]
#define WF_PLE_TOP_WMMAC_PGCNT_5_WMMAC_23_PGCNT_SHFT           16
#define WF_PLE_TOP_WMMAC_PGCNT_5_WMMAC_22_PGCNT_ADDR           WF_PLE_TOP_WMMAC_PGCNT_5_ADDR
#define WF_PLE_TOP_WMMAC_PGCNT_5_WMMAC_22_PGCNT_MASK           0x00000FFF                // WMMAC_22_PGCNT[11..0]
#define WF_PLE_TOP_WMMAC_PGCNT_5_WMMAC_22_PGCNT_SHFT           0

/* =====================================================================================

  ---WMMAC_PGCNT_6 (0x820c0000 + 0x468)---

    WMMAC_30_PGCNT[11..0]        - (RO) WMMAC 30 used page count
    RESERVED12[15..12]           - (RO) Reserved bits
    WMMAC_31_PGCNT[27..16]       - (RO) WMMAC 31 used page count
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_WMMAC_PGCNT_6_WMMAC_31_PGCNT_ADDR           WF_PLE_TOP_WMMAC_PGCNT_6_ADDR
#define WF_PLE_TOP_WMMAC_PGCNT_6_WMMAC_31_PGCNT_MASK           0x0FFF0000                // WMMAC_31_PGCNT[27..16]
#define WF_PLE_TOP_WMMAC_PGCNT_6_WMMAC_31_PGCNT_SHFT           16
#define WF_PLE_TOP_WMMAC_PGCNT_6_WMMAC_30_PGCNT_ADDR           WF_PLE_TOP_WMMAC_PGCNT_6_ADDR
#define WF_PLE_TOP_WMMAC_PGCNT_6_WMMAC_30_PGCNT_MASK           0x00000FFF                // WMMAC_30_PGCNT[11..0]
#define WF_PLE_TOP_WMMAC_PGCNT_6_WMMAC_30_PGCNT_SHFT           0

/* =====================================================================================

  ---WMMAC_PGCNT_7 (0x820c0000 + 0x46c)---

    WMMAC_32_PGCNT[11..0]        - (RO) WMMAC 32 used page count
    RESERVED12[15..12]           - (RO) Reserved bits
    WMMAC_33_PGCNT[27..16]       - (RO) WMMAC 33 used page count
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_WMMAC_PGCNT_7_WMMAC_33_PGCNT_ADDR           WF_PLE_TOP_WMMAC_PGCNT_7_ADDR
#define WF_PLE_TOP_WMMAC_PGCNT_7_WMMAC_33_PGCNT_MASK           0x0FFF0000                // WMMAC_33_PGCNT[27..16]
#define WF_PLE_TOP_WMMAC_PGCNT_7_WMMAC_33_PGCNT_SHFT           16
#define WF_PLE_TOP_WMMAC_PGCNT_7_WMMAC_32_PGCNT_ADDR           WF_PLE_TOP_WMMAC_PGCNT_7_ADDR
#define WF_PLE_TOP_WMMAC_PGCNT_7_WMMAC_32_PGCNT_MASK           0x00000FFF                // WMMAC_32_PGCNT[11..0]
#define WF_PLE_TOP_WMMAC_PGCNT_7_WMMAC_32_PGCNT_SHFT           0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY0 (0x820c0000 + 0x600)---

    AC0_QUEUE_EMPTY_0[7..0]      - (RO) Each bit is mapped to Station AC0 queue empty.
                                     SW uses this CR to read AC0 queue empty flag of station.
                                     If wlan_idx > 32, AC0_QUEUE_EMPTY+0x4*i store empty flag for wlan_idx 32*i ~32*(i+1)-1
    AC0_QUEUE_EMPTY_0_1[15..8]   - (RO) Same as AC0_QUEUE_EMPTY_0
    AC0_QUEUE_EMPTY_0_2[31..16]  - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY0_AC0_QUEUE_EMPTY_0_2_ADDR   WF_PLE_TOP_AC0_QUEUE_EMPTY0_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY0_AC0_QUEUE_EMPTY_0_2_MASK   0xFFFF0000                // AC0_QUEUE_EMPTY_0_2[31..16]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY0_AC0_QUEUE_EMPTY_0_2_SHFT   16
#define WF_PLE_TOP_AC0_QUEUE_EMPTY0_AC0_QUEUE_EMPTY_0_1_ADDR   WF_PLE_TOP_AC0_QUEUE_EMPTY0_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY0_AC0_QUEUE_EMPTY_0_1_MASK   0x0000FF00                // AC0_QUEUE_EMPTY_0_1[15..8]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY0_AC0_QUEUE_EMPTY_0_1_SHFT   8
#define WF_PLE_TOP_AC0_QUEUE_EMPTY0_AC0_QUEUE_EMPTY_0_ADDR     WF_PLE_TOP_AC0_QUEUE_EMPTY0_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY0_AC0_QUEUE_EMPTY_0_MASK     0x000000FF                // AC0_QUEUE_EMPTY_0[7..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY0_AC0_QUEUE_EMPTY_0_SHFT     0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY1 (0x820c0000 + 0x604)---

    AC0_QUEUE_EMPTY_1[31..0]     - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY1_AC0_QUEUE_EMPTY_1_ADDR     WF_PLE_TOP_AC0_QUEUE_EMPTY1_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY1_AC0_QUEUE_EMPTY_1_MASK     0xFFFFFFFF                // AC0_QUEUE_EMPTY_1[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY1_AC0_QUEUE_EMPTY_1_SHFT     0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY2 (0x820c0000 + 0x608)---

    AC0_QUEUE_EMPTY_2[31..0]     - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY2_AC0_QUEUE_EMPTY_2_ADDR     WF_PLE_TOP_AC0_QUEUE_EMPTY2_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY2_AC0_QUEUE_EMPTY_2_MASK     0xFFFFFFFF                // AC0_QUEUE_EMPTY_2[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY2_AC0_QUEUE_EMPTY_2_SHFT     0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY3 (0x820c0000 + 0x60c)---

    AC0_QUEUE_EMPTY_3[31..0]     - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY3_AC0_QUEUE_EMPTY_3_ADDR     WF_PLE_TOP_AC0_QUEUE_EMPTY3_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY3_AC0_QUEUE_EMPTY_3_MASK     0xFFFFFFFF                // AC0_QUEUE_EMPTY_3[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY3_AC0_QUEUE_EMPTY_3_SHFT     0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY4 (0x820c0000 + 0x610)---

    AC0_QUEUE_EMPTY_4[31..0]     - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY4_AC0_QUEUE_EMPTY_4_ADDR     WF_PLE_TOP_AC0_QUEUE_EMPTY4_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY4_AC0_QUEUE_EMPTY_4_MASK     0xFFFFFFFF                // AC0_QUEUE_EMPTY_4[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY4_AC0_QUEUE_EMPTY_4_SHFT     0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY5 (0x820c0000 + 0x614)---

    AC0_QUEUE_EMPTY_5[31..0]     - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY5_AC0_QUEUE_EMPTY_5_ADDR     WF_PLE_TOP_AC0_QUEUE_EMPTY5_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY5_AC0_QUEUE_EMPTY_5_MASK     0xFFFFFFFF                // AC0_QUEUE_EMPTY_5[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY5_AC0_QUEUE_EMPTY_5_SHFT     0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY6 (0x820c0000 + 0x618)---

    AC0_QUEUE_EMPTY_6[31..0]     - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY6_AC0_QUEUE_EMPTY_6_ADDR     WF_PLE_TOP_AC0_QUEUE_EMPTY6_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY6_AC0_QUEUE_EMPTY_6_MASK     0xFFFFFFFF                // AC0_QUEUE_EMPTY_6[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY6_AC0_QUEUE_EMPTY_6_SHFT     0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY7 (0x820c0000 + 0x61c)---

    AC0_QUEUE_EMPTY_7[31..0]     - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY7_AC0_QUEUE_EMPTY_7_ADDR     WF_PLE_TOP_AC0_QUEUE_EMPTY7_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY7_AC0_QUEUE_EMPTY_7_MASK     0xFFFFFFFF                // AC0_QUEUE_EMPTY_7[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY7_AC0_QUEUE_EMPTY_7_SHFT     0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY8 (0x820c0000 + 0x620)---

    AC0_QUEUE_EMPTY_8[31..0]     - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY8_AC0_QUEUE_EMPTY_8_ADDR     WF_PLE_TOP_AC0_QUEUE_EMPTY8_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY8_AC0_QUEUE_EMPTY_8_MASK     0xFFFFFFFF                // AC0_QUEUE_EMPTY_8[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY8_AC0_QUEUE_EMPTY_8_SHFT     0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY9 (0x820c0000 + 0x624)---

    AC0_QUEUE_EMPTY_9[31..0]     - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY9_AC0_QUEUE_EMPTY_9_ADDR     WF_PLE_TOP_AC0_QUEUE_EMPTY9_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY9_AC0_QUEUE_EMPTY_9_MASK     0xFFFFFFFF                // AC0_QUEUE_EMPTY_9[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY9_AC0_QUEUE_EMPTY_9_SHFT     0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY10 (0x820c0000 + 0x628)---

    AC0_QUEUE_EMPTY_10[31..0]    - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY10_AC0_QUEUE_EMPTY_10_ADDR   WF_PLE_TOP_AC0_QUEUE_EMPTY10_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY10_AC0_QUEUE_EMPTY_10_MASK   0xFFFFFFFF                // AC0_QUEUE_EMPTY_10[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY10_AC0_QUEUE_EMPTY_10_SHFT   0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY11 (0x820c0000 + 0x62c)---

    AC0_QUEUE_EMPTY_11[31..0]    - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY11_AC0_QUEUE_EMPTY_11_ADDR   WF_PLE_TOP_AC0_QUEUE_EMPTY11_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY11_AC0_QUEUE_EMPTY_11_MASK   0xFFFFFFFF                // AC0_QUEUE_EMPTY_11[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY11_AC0_QUEUE_EMPTY_11_SHFT   0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY12 (0x820c0000 + 0x630)---

    AC0_QUEUE_EMPTY_12[31..0]    - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY12_AC0_QUEUE_EMPTY_12_ADDR   WF_PLE_TOP_AC0_QUEUE_EMPTY12_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY12_AC0_QUEUE_EMPTY_12_MASK   0xFFFFFFFF                // AC0_QUEUE_EMPTY_12[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY12_AC0_QUEUE_EMPTY_12_SHFT   0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY13 (0x820c0000 + 0x634)---

    AC0_QUEUE_EMPTY_13[31..0]    - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY13_AC0_QUEUE_EMPTY_13_ADDR   WF_PLE_TOP_AC0_QUEUE_EMPTY13_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY13_AC0_QUEUE_EMPTY_13_MASK   0xFFFFFFFF                // AC0_QUEUE_EMPTY_13[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY13_AC0_QUEUE_EMPTY_13_SHFT   0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY14 (0x820c0000 + 0x638)---

    AC0_QUEUE_EMPTY_14[31..0]    - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY14_AC0_QUEUE_EMPTY_14_ADDR   WF_PLE_TOP_AC0_QUEUE_EMPTY14_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY14_AC0_QUEUE_EMPTY_14_MASK   0xFFFFFFFF                // AC0_QUEUE_EMPTY_14[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY14_AC0_QUEUE_EMPTY_14_SHFT   0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY15 (0x820c0000 + 0x63c)---

    AC0_QUEUE_EMPTY_15[31..0]    - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY15_AC0_QUEUE_EMPTY_15_ADDR   WF_PLE_TOP_AC0_QUEUE_EMPTY15_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY15_AC0_QUEUE_EMPTY_15_MASK   0xFFFFFFFF                // AC0_QUEUE_EMPTY_15[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY15_AC0_QUEUE_EMPTY_15_SHFT   0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY16 (0x820c0000 + 0x640)---

    AC0_QUEUE_EMPTY_16[31..0]    - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY16_AC0_QUEUE_EMPTY_16_ADDR   WF_PLE_TOP_AC0_QUEUE_EMPTY16_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY16_AC0_QUEUE_EMPTY_16_MASK   0xFFFFFFFF                // AC0_QUEUE_EMPTY_16[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY16_AC0_QUEUE_EMPTY_16_SHFT   0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY17 (0x820c0000 + 0x644)---

    AC0_QUEUE_EMPTY_17[31..0]    - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY17_AC0_QUEUE_EMPTY_17_ADDR   WF_PLE_TOP_AC0_QUEUE_EMPTY17_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY17_AC0_QUEUE_EMPTY_17_MASK   0xFFFFFFFF                // AC0_QUEUE_EMPTY_17[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY17_AC0_QUEUE_EMPTY_17_SHFT   0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY18 (0x820c0000 + 0x648)---

    AC0_QUEUE_EMPTY_18[31..0]    - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY18_AC0_QUEUE_EMPTY_18_ADDR   WF_PLE_TOP_AC0_QUEUE_EMPTY18_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY18_AC0_QUEUE_EMPTY_18_MASK   0xFFFFFFFF                // AC0_QUEUE_EMPTY_18[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY18_AC0_QUEUE_EMPTY_18_SHFT   0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY19 (0x820c0000 + 0x64c)---

    AC0_QUEUE_EMPTY_19[31..0]    - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY19_AC0_QUEUE_EMPTY_19_ADDR   WF_PLE_TOP_AC0_QUEUE_EMPTY19_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY19_AC0_QUEUE_EMPTY_19_MASK   0xFFFFFFFF                // AC0_QUEUE_EMPTY_19[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY19_AC0_QUEUE_EMPTY_19_SHFT   0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY20 (0x820c0000 + 0x650)---

    AC0_QUEUE_EMPTY_20[31..0]    - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY20_AC0_QUEUE_EMPTY_20_ADDR   WF_PLE_TOP_AC0_QUEUE_EMPTY20_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY20_AC0_QUEUE_EMPTY_20_MASK   0xFFFFFFFF                // AC0_QUEUE_EMPTY_20[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY20_AC0_QUEUE_EMPTY_20_SHFT   0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY21 (0x820c0000 + 0x654)---

    AC0_QUEUE_EMPTY_21[31..0]    - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY21_AC0_QUEUE_EMPTY_21_ADDR   WF_PLE_TOP_AC0_QUEUE_EMPTY21_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY21_AC0_QUEUE_EMPTY_21_MASK   0xFFFFFFFF                // AC0_QUEUE_EMPTY_21[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY21_AC0_QUEUE_EMPTY_21_SHFT   0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY22 (0x820c0000 + 0x658)---

    AC0_QUEUE_EMPTY_22[31..0]    - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY22_AC0_QUEUE_EMPTY_22_ADDR   WF_PLE_TOP_AC0_QUEUE_EMPTY22_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY22_AC0_QUEUE_EMPTY_22_MASK   0xFFFFFFFF                // AC0_QUEUE_EMPTY_22[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY22_AC0_QUEUE_EMPTY_22_SHFT   0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY23 (0x820c0000 + 0x65c)---

    AC0_QUEUE_EMPTY_23[31..0]    - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY23_AC0_QUEUE_EMPTY_23_ADDR   WF_PLE_TOP_AC0_QUEUE_EMPTY23_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY23_AC0_QUEUE_EMPTY_23_MASK   0xFFFFFFFF                // AC0_QUEUE_EMPTY_23[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY23_AC0_QUEUE_EMPTY_23_SHFT   0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY24 (0x820c0000 + 0x660)---

    AC0_QUEUE_EMPTY_24[31..0]    - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY24_AC0_QUEUE_EMPTY_24_ADDR   WF_PLE_TOP_AC0_QUEUE_EMPTY24_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY24_AC0_QUEUE_EMPTY_24_MASK   0xFFFFFFFF                // AC0_QUEUE_EMPTY_24[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY24_AC0_QUEUE_EMPTY_24_SHFT   0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY25 (0x820c0000 + 0x664)---

    AC0_QUEUE_EMPTY_25[31..0]    - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY25_AC0_QUEUE_EMPTY_25_ADDR   WF_PLE_TOP_AC0_QUEUE_EMPTY25_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY25_AC0_QUEUE_EMPTY_25_MASK   0xFFFFFFFF                // AC0_QUEUE_EMPTY_25[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY25_AC0_QUEUE_EMPTY_25_SHFT   0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY26 (0x820c0000 + 0x668)---

    AC0_QUEUE_EMPTY_26[31..0]    - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY26_AC0_QUEUE_EMPTY_26_ADDR   WF_PLE_TOP_AC0_QUEUE_EMPTY26_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY26_AC0_QUEUE_EMPTY_26_MASK   0xFFFFFFFF                // AC0_QUEUE_EMPTY_26[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY26_AC0_QUEUE_EMPTY_26_SHFT   0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY27 (0x820c0000 + 0x66c)---

    AC0_QUEUE_EMPTY_27[31..0]    - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY27_AC0_QUEUE_EMPTY_27_ADDR   WF_PLE_TOP_AC0_QUEUE_EMPTY27_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY27_AC0_QUEUE_EMPTY_27_MASK   0xFFFFFFFF                // AC0_QUEUE_EMPTY_27[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY27_AC0_QUEUE_EMPTY_27_SHFT   0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY28 (0x820c0000 + 0x670)---

    AC0_QUEUE_EMPTY_28[31..0]    - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY28_AC0_QUEUE_EMPTY_28_ADDR   WF_PLE_TOP_AC0_QUEUE_EMPTY28_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY28_AC0_QUEUE_EMPTY_28_MASK   0xFFFFFFFF                // AC0_QUEUE_EMPTY_28[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY28_AC0_QUEUE_EMPTY_28_SHFT   0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY29 (0x820c0000 + 0x674)---

    AC0_QUEUE_EMPTY_29[31..0]    - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY29_AC0_QUEUE_EMPTY_29_ADDR   WF_PLE_TOP_AC0_QUEUE_EMPTY29_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY29_AC0_QUEUE_EMPTY_29_MASK   0xFFFFFFFF                // AC0_QUEUE_EMPTY_29[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY29_AC0_QUEUE_EMPTY_29_SHFT   0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY30 (0x820c0000 + 0x678)---

    AC0_QUEUE_EMPTY_30[31..0]    - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY30_AC0_QUEUE_EMPTY_30_ADDR   WF_PLE_TOP_AC0_QUEUE_EMPTY30_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY30_AC0_QUEUE_EMPTY_30_MASK   0xFFFFFFFF                // AC0_QUEUE_EMPTY_30[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY30_AC0_QUEUE_EMPTY_30_SHFT   0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY31 (0x820c0000 + 0x67c)---

    AC0_QUEUE_EMPTY_31[31..0]    - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY31_AC0_QUEUE_EMPTY_31_ADDR   WF_PLE_TOP_AC0_QUEUE_EMPTY31_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY31_AC0_QUEUE_EMPTY_31_MASK   0xFFFFFFFF                // AC0_QUEUE_EMPTY_31[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY31_AC0_QUEUE_EMPTY_31_SHFT   0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY_EXT0 (0x820c0000 + 0x680)---

    AC0_QUEUE_EMPTY_EXT_0[3..0]  - (RO) Same as AC0_QUEUE_EMPTY_0
    AC0_QUEUE_EMPTY_EXT_0_1[7..4] - (RO) Same as AC0_QUEUE_EMPTY_0
    AC0_QUEUE_EMPTY_EXT_0_2[15..8] - (RO) Same as AC0_QUEUE_EMPTY_0
    AC0_QUEUE_EMPTY_EXT_0_3[31..16] - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY_EXT0_AC0_QUEUE_EMPTY_EXT_0_3_ADDR WF_PLE_TOP_AC0_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY_EXT0_AC0_QUEUE_EMPTY_EXT_0_3_MASK 0xFFFF0000                // AC0_QUEUE_EMPTY_EXT_0_3[31..16]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY_EXT0_AC0_QUEUE_EMPTY_EXT_0_3_SHFT 16
#define WF_PLE_TOP_AC0_QUEUE_EMPTY_EXT0_AC0_QUEUE_EMPTY_EXT_0_2_ADDR WF_PLE_TOP_AC0_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY_EXT0_AC0_QUEUE_EMPTY_EXT_0_2_MASK 0x0000FF00                // AC0_QUEUE_EMPTY_EXT_0_2[15..8]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY_EXT0_AC0_QUEUE_EMPTY_EXT_0_2_SHFT 8
#define WF_PLE_TOP_AC0_QUEUE_EMPTY_EXT0_AC0_QUEUE_EMPTY_EXT_0_1_ADDR WF_PLE_TOP_AC0_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY_EXT0_AC0_QUEUE_EMPTY_EXT_0_1_MASK 0x000000F0                // AC0_QUEUE_EMPTY_EXT_0_1[7..4]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY_EXT0_AC0_QUEUE_EMPTY_EXT_0_1_SHFT 4
#define WF_PLE_TOP_AC0_QUEUE_EMPTY_EXT0_AC0_QUEUE_EMPTY_EXT_0_ADDR WF_PLE_TOP_AC0_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY_EXT0_AC0_QUEUE_EMPTY_EXT_0_MASK 0x0000000F                // AC0_QUEUE_EMPTY_EXT_0[3..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY_EXT0_AC0_QUEUE_EMPTY_EXT_0_SHFT 0

/* =====================================================================================

  ---AC0_QUEUE_EMPTY_EXT1 (0x820c0000 + 0x684)---

    AC0_QUEUE_EMPTY_EXT_1[31..0] - (RO) Same as AC0_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC0_QUEUE_EMPTY_EXT1_AC0_QUEUE_EMPTY_EXT_1_ADDR WF_PLE_TOP_AC0_QUEUE_EMPTY_EXT1_ADDR
#define WF_PLE_TOP_AC0_QUEUE_EMPTY_EXT1_AC0_QUEUE_EMPTY_EXT_1_MASK 0xFFFFFFFF                // AC0_QUEUE_EMPTY_EXT_1[31..0]
#define WF_PLE_TOP_AC0_QUEUE_EMPTY_EXT1_AC0_QUEUE_EMPTY_EXT_1_SHFT 0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY0 (0x820c0000 + 0x700)---

    AC1_QUEUE_EMPTY_0[7..0]      - (RO) Each bit is mapped to Station AC1 queue empty.
                                     SW uses this CR to read AC1 queue empty flag of station.
                                     If wlan_idx > 32, AC1_QUEUE_EMPTY+0x4*i store empty flag for wlan_idx 32*i ~32*(i+1)-1
    AC1_QUEUE_EMPTY_0_1[15..8]   - (RO) Same as AC1_QUEUE_EMPTY_0
    AC1_QUEUE_EMPTY_0_2[31..16]  - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY0_AC1_QUEUE_EMPTY_0_2_ADDR   WF_PLE_TOP_AC1_QUEUE_EMPTY0_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY0_AC1_QUEUE_EMPTY_0_2_MASK   0xFFFF0000                // AC1_QUEUE_EMPTY_0_2[31..16]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY0_AC1_QUEUE_EMPTY_0_2_SHFT   16
#define WF_PLE_TOP_AC1_QUEUE_EMPTY0_AC1_QUEUE_EMPTY_0_1_ADDR   WF_PLE_TOP_AC1_QUEUE_EMPTY0_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY0_AC1_QUEUE_EMPTY_0_1_MASK   0x0000FF00                // AC1_QUEUE_EMPTY_0_1[15..8]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY0_AC1_QUEUE_EMPTY_0_1_SHFT   8
#define WF_PLE_TOP_AC1_QUEUE_EMPTY0_AC1_QUEUE_EMPTY_0_ADDR     WF_PLE_TOP_AC1_QUEUE_EMPTY0_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY0_AC1_QUEUE_EMPTY_0_MASK     0x000000FF                // AC1_QUEUE_EMPTY_0[7..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY0_AC1_QUEUE_EMPTY_0_SHFT     0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY1 (0x820c0000 + 0x704)---

    AC1_QUEUE_EMPTY_1[31..0]     - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY1_AC1_QUEUE_EMPTY_1_ADDR     WF_PLE_TOP_AC1_QUEUE_EMPTY1_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY1_AC1_QUEUE_EMPTY_1_MASK     0xFFFFFFFF                // AC1_QUEUE_EMPTY_1[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY1_AC1_QUEUE_EMPTY_1_SHFT     0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY2 (0x820c0000 + 0x708)---

    AC1_QUEUE_EMPTY_2[31..0]     - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY2_AC1_QUEUE_EMPTY_2_ADDR     WF_PLE_TOP_AC1_QUEUE_EMPTY2_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY2_AC1_QUEUE_EMPTY_2_MASK     0xFFFFFFFF                // AC1_QUEUE_EMPTY_2[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY2_AC1_QUEUE_EMPTY_2_SHFT     0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY3 (0x820c0000 + 0x70c)---

    AC1_QUEUE_EMPTY_3[31..0]     - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY3_AC1_QUEUE_EMPTY_3_ADDR     WF_PLE_TOP_AC1_QUEUE_EMPTY3_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY3_AC1_QUEUE_EMPTY_3_MASK     0xFFFFFFFF                // AC1_QUEUE_EMPTY_3[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY3_AC1_QUEUE_EMPTY_3_SHFT     0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY4 (0x820c0000 + 0x710)---

    AC1_QUEUE_EMPTY_4[31..0]     - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY4_AC1_QUEUE_EMPTY_4_ADDR     WF_PLE_TOP_AC1_QUEUE_EMPTY4_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY4_AC1_QUEUE_EMPTY_4_MASK     0xFFFFFFFF                // AC1_QUEUE_EMPTY_4[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY4_AC1_QUEUE_EMPTY_4_SHFT     0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY5 (0x820c0000 + 0x714)---

    AC1_QUEUE_EMPTY_5[31..0]     - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY5_AC1_QUEUE_EMPTY_5_ADDR     WF_PLE_TOP_AC1_QUEUE_EMPTY5_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY5_AC1_QUEUE_EMPTY_5_MASK     0xFFFFFFFF                // AC1_QUEUE_EMPTY_5[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY5_AC1_QUEUE_EMPTY_5_SHFT     0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY6 (0x820c0000 + 0x718)---

    AC1_QUEUE_EMPTY_6[31..0]     - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY6_AC1_QUEUE_EMPTY_6_ADDR     WF_PLE_TOP_AC1_QUEUE_EMPTY6_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY6_AC1_QUEUE_EMPTY_6_MASK     0xFFFFFFFF                // AC1_QUEUE_EMPTY_6[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY6_AC1_QUEUE_EMPTY_6_SHFT     0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY7 (0x820c0000 + 0x71c)---

    AC1_QUEUE_EMPTY_7[31..0]     - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY7_AC1_QUEUE_EMPTY_7_ADDR     WF_PLE_TOP_AC1_QUEUE_EMPTY7_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY7_AC1_QUEUE_EMPTY_7_MASK     0xFFFFFFFF                // AC1_QUEUE_EMPTY_7[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY7_AC1_QUEUE_EMPTY_7_SHFT     0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY8 (0x820c0000 + 0x720)---

    AC1_QUEUE_EMPTY_8[31..0]     - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY8_AC1_QUEUE_EMPTY_8_ADDR     WF_PLE_TOP_AC1_QUEUE_EMPTY8_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY8_AC1_QUEUE_EMPTY_8_MASK     0xFFFFFFFF                // AC1_QUEUE_EMPTY_8[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY8_AC1_QUEUE_EMPTY_8_SHFT     0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY9 (0x820c0000 + 0x724)---

    AC1_QUEUE_EMPTY_9[31..0]     - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY9_AC1_QUEUE_EMPTY_9_ADDR     WF_PLE_TOP_AC1_QUEUE_EMPTY9_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY9_AC1_QUEUE_EMPTY_9_MASK     0xFFFFFFFF                // AC1_QUEUE_EMPTY_9[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY9_AC1_QUEUE_EMPTY_9_SHFT     0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY10 (0x820c0000 + 0x728)---

    AC1_QUEUE_EMPTY_10[31..0]    - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY10_AC1_QUEUE_EMPTY_10_ADDR   WF_PLE_TOP_AC1_QUEUE_EMPTY10_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY10_AC1_QUEUE_EMPTY_10_MASK   0xFFFFFFFF                // AC1_QUEUE_EMPTY_10[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY10_AC1_QUEUE_EMPTY_10_SHFT   0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY11 (0x820c0000 + 0x72c)---

    AC1_QUEUE_EMPTY_11[31..0]    - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY11_AC1_QUEUE_EMPTY_11_ADDR   WF_PLE_TOP_AC1_QUEUE_EMPTY11_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY11_AC1_QUEUE_EMPTY_11_MASK   0xFFFFFFFF                // AC1_QUEUE_EMPTY_11[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY11_AC1_QUEUE_EMPTY_11_SHFT   0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY12 (0x820c0000 + 0x730)---

    AC1_QUEUE_EMPTY_12[31..0]    - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY12_AC1_QUEUE_EMPTY_12_ADDR   WF_PLE_TOP_AC1_QUEUE_EMPTY12_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY12_AC1_QUEUE_EMPTY_12_MASK   0xFFFFFFFF                // AC1_QUEUE_EMPTY_12[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY12_AC1_QUEUE_EMPTY_12_SHFT   0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY13 (0x820c0000 + 0x734)---

    AC1_QUEUE_EMPTY_13[31..0]    - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY13_AC1_QUEUE_EMPTY_13_ADDR   WF_PLE_TOP_AC1_QUEUE_EMPTY13_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY13_AC1_QUEUE_EMPTY_13_MASK   0xFFFFFFFF                // AC1_QUEUE_EMPTY_13[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY13_AC1_QUEUE_EMPTY_13_SHFT   0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY14 (0x820c0000 + 0x738)---

    AC1_QUEUE_EMPTY_14[31..0]    - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY14_AC1_QUEUE_EMPTY_14_ADDR   WF_PLE_TOP_AC1_QUEUE_EMPTY14_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY14_AC1_QUEUE_EMPTY_14_MASK   0xFFFFFFFF                // AC1_QUEUE_EMPTY_14[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY14_AC1_QUEUE_EMPTY_14_SHFT   0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY15 (0x820c0000 + 0x73c)---

    AC1_QUEUE_EMPTY_15[31..0]    - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY15_AC1_QUEUE_EMPTY_15_ADDR   WF_PLE_TOP_AC1_QUEUE_EMPTY15_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY15_AC1_QUEUE_EMPTY_15_MASK   0xFFFFFFFF                // AC1_QUEUE_EMPTY_15[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY15_AC1_QUEUE_EMPTY_15_SHFT   0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY16 (0x820c0000 + 0x740)---

    AC1_QUEUE_EMPTY_16[31..0]    - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY16_AC1_QUEUE_EMPTY_16_ADDR   WF_PLE_TOP_AC1_QUEUE_EMPTY16_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY16_AC1_QUEUE_EMPTY_16_MASK   0xFFFFFFFF                // AC1_QUEUE_EMPTY_16[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY16_AC1_QUEUE_EMPTY_16_SHFT   0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY17 (0x820c0000 + 0x744)---

    AC1_QUEUE_EMPTY_17[31..0]    - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY17_AC1_QUEUE_EMPTY_17_ADDR   WF_PLE_TOP_AC1_QUEUE_EMPTY17_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY17_AC1_QUEUE_EMPTY_17_MASK   0xFFFFFFFF                // AC1_QUEUE_EMPTY_17[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY17_AC1_QUEUE_EMPTY_17_SHFT   0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY18 (0x820c0000 + 0x748)---

    AC1_QUEUE_EMPTY_18[31..0]    - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY18_AC1_QUEUE_EMPTY_18_ADDR   WF_PLE_TOP_AC1_QUEUE_EMPTY18_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY18_AC1_QUEUE_EMPTY_18_MASK   0xFFFFFFFF                // AC1_QUEUE_EMPTY_18[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY18_AC1_QUEUE_EMPTY_18_SHFT   0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY19 (0x820c0000 + 0x74c)---

    AC1_QUEUE_EMPTY_19[31..0]    - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY19_AC1_QUEUE_EMPTY_19_ADDR   WF_PLE_TOP_AC1_QUEUE_EMPTY19_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY19_AC1_QUEUE_EMPTY_19_MASK   0xFFFFFFFF                // AC1_QUEUE_EMPTY_19[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY19_AC1_QUEUE_EMPTY_19_SHFT   0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY20 (0x820c0000 + 0x750)---

    AC1_QUEUE_EMPTY_20[31..0]    - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY20_AC1_QUEUE_EMPTY_20_ADDR   WF_PLE_TOP_AC1_QUEUE_EMPTY20_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY20_AC1_QUEUE_EMPTY_20_MASK   0xFFFFFFFF                // AC1_QUEUE_EMPTY_20[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY20_AC1_QUEUE_EMPTY_20_SHFT   0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY21 (0x820c0000 + 0x754)---

    AC1_QUEUE_EMPTY_21[31..0]    - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY21_AC1_QUEUE_EMPTY_21_ADDR   WF_PLE_TOP_AC1_QUEUE_EMPTY21_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY21_AC1_QUEUE_EMPTY_21_MASK   0xFFFFFFFF                // AC1_QUEUE_EMPTY_21[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY21_AC1_QUEUE_EMPTY_21_SHFT   0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY22 (0x820c0000 + 0x758)---

    AC1_QUEUE_EMPTY_22[31..0]    - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY22_AC1_QUEUE_EMPTY_22_ADDR   WF_PLE_TOP_AC1_QUEUE_EMPTY22_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY22_AC1_QUEUE_EMPTY_22_MASK   0xFFFFFFFF                // AC1_QUEUE_EMPTY_22[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY22_AC1_QUEUE_EMPTY_22_SHFT   0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY23 (0x820c0000 + 0x75c)---

    AC1_QUEUE_EMPTY_23[31..0]    - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY23_AC1_QUEUE_EMPTY_23_ADDR   WF_PLE_TOP_AC1_QUEUE_EMPTY23_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY23_AC1_QUEUE_EMPTY_23_MASK   0xFFFFFFFF                // AC1_QUEUE_EMPTY_23[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY23_AC1_QUEUE_EMPTY_23_SHFT   0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY24 (0x820c0000 + 0x760)---

    AC1_QUEUE_EMPTY_24[31..0]    - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY24_AC1_QUEUE_EMPTY_24_ADDR   WF_PLE_TOP_AC1_QUEUE_EMPTY24_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY24_AC1_QUEUE_EMPTY_24_MASK   0xFFFFFFFF                // AC1_QUEUE_EMPTY_24[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY24_AC1_QUEUE_EMPTY_24_SHFT   0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY25 (0x820c0000 + 0x764)---

    AC1_QUEUE_EMPTY_25[31..0]    - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY25_AC1_QUEUE_EMPTY_25_ADDR   WF_PLE_TOP_AC1_QUEUE_EMPTY25_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY25_AC1_QUEUE_EMPTY_25_MASK   0xFFFFFFFF                // AC1_QUEUE_EMPTY_25[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY25_AC1_QUEUE_EMPTY_25_SHFT   0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY26 (0x820c0000 + 0x768)---

    AC1_QUEUE_EMPTY_26[31..0]    - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY26_AC1_QUEUE_EMPTY_26_ADDR   WF_PLE_TOP_AC1_QUEUE_EMPTY26_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY26_AC1_QUEUE_EMPTY_26_MASK   0xFFFFFFFF                // AC1_QUEUE_EMPTY_26[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY26_AC1_QUEUE_EMPTY_26_SHFT   0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY27 (0x820c0000 + 0x76c)---

    AC1_QUEUE_EMPTY_27[31..0]    - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY27_AC1_QUEUE_EMPTY_27_ADDR   WF_PLE_TOP_AC1_QUEUE_EMPTY27_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY27_AC1_QUEUE_EMPTY_27_MASK   0xFFFFFFFF                // AC1_QUEUE_EMPTY_27[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY27_AC1_QUEUE_EMPTY_27_SHFT   0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY28 (0x820c0000 + 0x770)---

    AC1_QUEUE_EMPTY_28[31..0]    - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY28_AC1_QUEUE_EMPTY_28_ADDR   WF_PLE_TOP_AC1_QUEUE_EMPTY28_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY28_AC1_QUEUE_EMPTY_28_MASK   0xFFFFFFFF                // AC1_QUEUE_EMPTY_28[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY28_AC1_QUEUE_EMPTY_28_SHFT   0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY29 (0x820c0000 + 0x774)---

    AC1_QUEUE_EMPTY_29[31..0]    - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY29_AC1_QUEUE_EMPTY_29_ADDR   WF_PLE_TOP_AC1_QUEUE_EMPTY29_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY29_AC1_QUEUE_EMPTY_29_MASK   0xFFFFFFFF                // AC1_QUEUE_EMPTY_29[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY29_AC1_QUEUE_EMPTY_29_SHFT   0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY30 (0x820c0000 + 0x778)---

    AC1_QUEUE_EMPTY_30[31..0]    - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY30_AC1_QUEUE_EMPTY_30_ADDR   WF_PLE_TOP_AC1_QUEUE_EMPTY30_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY30_AC1_QUEUE_EMPTY_30_MASK   0xFFFFFFFF                // AC1_QUEUE_EMPTY_30[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY30_AC1_QUEUE_EMPTY_30_SHFT   0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY31 (0x820c0000 + 0x77c)---

    AC1_QUEUE_EMPTY_31[31..0]    - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY31_AC1_QUEUE_EMPTY_31_ADDR   WF_PLE_TOP_AC1_QUEUE_EMPTY31_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY31_AC1_QUEUE_EMPTY_31_MASK   0xFFFFFFFF                // AC1_QUEUE_EMPTY_31[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY31_AC1_QUEUE_EMPTY_31_SHFT   0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY_EXT0 (0x820c0000 + 0x780)---

    AC1_QUEUE_EMPTY_EXT_0[3..0]  - (RO) Same as AC1_QUEUE_EMPTY_0
    AC1_QUEUE_EMPTY_EXT_0_1[7..4] - (RO) Same as AC1_QUEUE_EMPTY_0
    AC1_QUEUE_EMPTY_EXT_0_2[15..8] - (RO) Same as AC1_QUEUE_EMPTY_0
    AC1_QUEUE_EMPTY_EXT_0_3[31..16] - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY_EXT0_AC1_QUEUE_EMPTY_EXT_0_3_ADDR WF_PLE_TOP_AC1_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY_EXT0_AC1_QUEUE_EMPTY_EXT_0_3_MASK 0xFFFF0000                // AC1_QUEUE_EMPTY_EXT_0_3[31..16]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY_EXT0_AC1_QUEUE_EMPTY_EXT_0_3_SHFT 16
#define WF_PLE_TOP_AC1_QUEUE_EMPTY_EXT0_AC1_QUEUE_EMPTY_EXT_0_2_ADDR WF_PLE_TOP_AC1_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY_EXT0_AC1_QUEUE_EMPTY_EXT_0_2_MASK 0x0000FF00                // AC1_QUEUE_EMPTY_EXT_0_2[15..8]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY_EXT0_AC1_QUEUE_EMPTY_EXT_0_2_SHFT 8
#define WF_PLE_TOP_AC1_QUEUE_EMPTY_EXT0_AC1_QUEUE_EMPTY_EXT_0_1_ADDR WF_PLE_TOP_AC1_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY_EXT0_AC1_QUEUE_EMPTY_EXT_0_1_MASK 0x000000F0                // AC1_QUEUE_EMPTY_EXT_0_1[7..4]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY_EXT0_AC1_QUEUE_EMPTY_EXT_0_1_SHFT 4
#define WF_PLE_TOP_AC1_QUEUE_EMPTY_EXT0_AC1_QUEUE_EMPTY_EXT_0_ADDR WF_PLE_TOP_AC1_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY_EXT0_AC1_QUEUE_EMPTY_EXT_0_MASK 0x0000000F                // AC1_QUEUE_EMPTY_EXT_0[3..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY_EXT0_AC1_QUEUE_EMPTY_EXT_0_SHFT 0

/* =====================================================================================

  ---AC1_QUEUE_EMPTY_EXT1 (0x820c0000 + 0x784)---

    AC1_QUEUE_EMPTY_EXT_1[31..0] - (RO) Same as AC1_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC1_QUEUE_EMPTY_EXT1_AC1_QUEUE_EMPTY_EXT_1_ADDR WF_PLE_TOP_AC1_QUEUE_EMPTY_EXT1_ADDR
#define WF_PLE_TOP_AC1_QUEUE_EMPTY_EXT1_AC1_QUEUE_EMPTY_EXT_1_MASK 0xFFFFFFFF                // AC1_QUEUE_EMPTY_EXT_1[31..0]
#define WF_PLE_TOP_AC1_QUEUE_EMPTY_EXT1_AC1_QUEUE_EMPTY_EXT_1_SHFT 0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY0 (0x820c0000 + 0x800)---

    AC2_QUEUE_EMPTY_0[7..0]      - (RO) Each bit is mapped to Station AC2 queue empty.
                                     SW uses this CR to read AC2 queue empty flag of station.
                                     If wlan_idx > 32, AC2_QUEUE_EMPTY+0x4*i store empty flag for wlan_idx 32*i ~32*(i+1)-1
    AC2_QUEUE_EMPTY_0_1[15..8]   - (RO) Same as AC2_QUEUE_EMPTY_0
    AC2_QUEUE_EMPTY_0_2[31..16]  - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY0_AC2_QUEUE_EMPTY_0_2_ADDR   WF_PLE_TOP_AC2_QUEUE_EMPTY0_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY0_AC2_QUEUE_EMPTY_0_2_MASK   0xFFFF0000                // AC2_QUEUE_EMPTY_0_2[31..16]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY0_AC2_QUEUE_EMPTY_0_2_SHFT   16
#define WF_PLE_TOP_AC2_QUEUE_EMPTY0_AC2_QUEUE_EMPTY_0_1_ADDR   WF_PLE_TOP_AC2_QUEUE_EMPTY0_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY0_AC2_QUEUE_EMPTY_0_1_MASK   0x0000FF00                // AC2_QUEUE_EMPTY_0_1[15..8]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY0_AC2_QUEUE_EMPTY_0_1_SHFT   8
#define WF_PLE_TOP_AC2_QUEUE_EMPTY0_AC2_QUEUE_EMPTY_0_ADDR     WF_PLE_TOP_AC2_QUEUE_EMPTY0_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY0_AC2_QUEUE_EMPTY_0_MASK     0x000000FF                // AC2_QUEUE_EMPTY_0[7..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY0_AC2_QUEUE_EMPTY_0_SHFT     0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY1 (0x820c0000 + 0x804)---

    AC2_QUEUE_EMPTY_1[31..0]     - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY1_AC2_QUEUE_EMPTY_1_ADDR     WF_PLE_TOP_AC2_QUEUE_EMPTY1_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY1_AC2_QUEUE_EMPTY_1_MASK     0xFFFFFFFF                // AC2_QUEUE_EMPTY_1[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY1_AC2_QUEUE_EMPTY_1_SHFT     0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY2 (0x820c0000 + 0x808)---

    AC2_QUEUE_EMPTY_2[31..0]     - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY2_AC2_QUEUE_EMPTY_2_ADDR     WF_PLE_TOP_AC2_QUEUE_EMPTY2_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY2_AC2_QUEUE_EMPTY_2_MASK     0xFFFFFFFF                // AC2_QUEUE_EMPTY_2[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY2_AC2_QUEUE_EMPTY_2_SHFT     0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY3 (0x820c0000 + 0x80c)---

    AC2_QUEUE_EMPTY_3[31..0]     - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY3_AC2_QUEUE_EMPTY_3_ADDR     WF_PLE_TOP_AC2_QUEUE_EMPTY3_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY3_AC2_QUEUE_EMPTY_3_MASK     0xFFFFFFFF                // AC2_QUEUE_EMPTY_3[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY3_AC2_QUEUE_EMPTY_3_SHFT     0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY4 (0x820c0000 + 0x810)---

    AC2_QUEUE_EMPTY_4[31..0]     - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY4_AC2_QUEUE_EMPTY_4_ADDR     WF_PLE_TOP_AC2_QUEUE_EMPTY4_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY4_AC2_QUEUE_EMPTY_4_MASK     0xFFFFFFFF                // AC2_QUEUE_EMPTY_4[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY4_AC2_QUEUE_EMPTY_4_SHFT     0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY5 (0x820c0000 + 0x814)---

    AC2_QUEUE_EMPTY_5[31..0]     - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY5_AC2_QUEUE_EMPTY_5_ADDR     WF_PLE_TOP_AC2_QUEUE_EMPTY5_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY5_AC2_QUEUE_EMPTY_5_MASK     0xFFFFFFFF                // AC2_QUEUE_EMPTY_5[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY5_AC2_QUEUE_EMPTY_5_SHFT     0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY6 (0x820c0000 + 0x818)---

    AC2_QUEUE_EMPTY_6[31..0]     - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY6_AC2_QUEUE_EMPTY_6_ADDR     WF_PLE_TOP_AC2_QUEUE_EMPTY6_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY6_AC2_QUEUE_EMPTY_6_MASK     0xFFFFFFFF                // AC2_QUEUE_EMPTY_6[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY6_AC2_QUEUE_EMPTY_6_SHFT     0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY7 (0x820c0000 + 0x81c)---

    AC2_QUEUE_EMPTY_7[31..0]     - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY7_AC2_QUEUE_EMPTY_7_ADDR     WF_PLE_TOP_AC2_QUEUE_EMPTY7_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY7_AC2_QUEUE_EMPTY_7_MASK     0xFFFFFFFF                // AC2_QUEUE_EMPTY_7[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY7_AC2_QUEUE_EMPTY_7_SHFT     0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY8 (0x820c0000 + 0x820)---

    AC2_QUEUE_EMPTY_8[31..0]     - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY8_AC2_QUEUE_EMPTY_8_ADDR     WF_PLE_TOP_AC2_QUEUE_EMPTY8_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY8_AC2_QUEUE_EMPTY_8_MASK     0xFFFFFFFF                // AC2_QUEUE_EMPTY_8[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY8_AC2_QUEUE_EMPTY_8_SHFT     0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY9 (0x820c0000 + 0x824)---

    AC2_QUEUE_EMPTY_9[31..0]     - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY9_AC2_QUEUE_EMPTY_9_ADDR     WF_PLE_TOP_AC2_QUEUE_EMPTY9_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY9_AC2_QUEUE_EMPTY_9_MASK     0xFFFFFFFF                // AC2_QUEUE_EMPTY_9[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY9_AC2_QUEUE_EMPTY_9_SHFT     0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY10 (0x820c0000 + 0x828)---

    AC2_QUEUE_EMPTY_10[31..0]    - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY10_AC2_QUEUE_EMPTY_10_ADDR   WF_PLE_TOP_AC2_QUEUE_EMPTY10_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY10_AC2_QUEUE_EMPTY_10_MASK   0xFFFFFFFF                // AC2_QUEUE_EMPTY_10[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY10_AC2_QUEUE_EMPTY_10_SHFT   0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY11 (0x820c0000 + 0x82c)---

    AC2_QUEUE_EMPTY_11[31..0]    - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY11_AC2_QUEUE_EMPTY_11_ADDR   WF_PLE_TOP_AC2_QUEUE_EMPTY11_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY11_AC2_QUEUE_EMPTY_11_MASK   0xFFFFFFFF                // AC2_QUEUE_EMPTY_11[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY11_AC2_QUEUE_EMPTY_11_SHFT   0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY12 (0x820c0000 + 0x830)---

    AC2_QUEUE_EMPTY_12[31..0]    - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY12_AC2_QUEUE_EMPTY_12_ADDR   WF_PLE_TOP_AC2_QUEUE_EMPTY12_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY12_AC2_QUEUE_EMPTY_12_MASK   0xFFFFFFFF                // AC2_QUEUE_EMPTY_12[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY12_AC2_QUEUE_EMPTY_12_SHFT   0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY13 (0x820c0000 + 0x834)---

    AC2_QUEUE_EMPTY_13[31..0]    - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY13_AC2_QUEUE_EMPTY_13_ADDR   WF_PLE_TOP_AC2_QUEUE_EMPTY13_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY13_AC2_QUEUE_EMPTY_13_MASK   0xFFFFFFFF                // AC2_QUEUE_EMPTY_13[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY13_AC2_QUEUE_EMPTY_13_SHFT   0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY14 (0x820c0000 + 0x838)---

    AC2_QUEUE_EMPTY_14[31..0]    - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY14_AC2_QUEUE_EMPTY_14_ADDR   WF_PLE_TOP_AC2_QUEUE_EMPTY14_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY14_AC2_QUEUE_EMPTY_14_MASK   0xFFFFFFFF                // AC2_QUEUE_EMPTY_14[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY14_AC2_QUEUE_EMPTY_14_SHFT   0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY15 (0x820c0000 + 0x83c)---

    AC2_QUEUE_EMPTY_15[31..0]    - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY15_AC2_QUEUE_EMPTY_15_ADDR   WF_PLE_TOP_AC2_QUEUE_EMPTY15_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY15_AC2_QUEUE_EMPTY_15_MASK   0xFFFFFFFF                // AC2_QUEUE_EMPTY_15[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY15_AC2_QUEUE_EMPTY_15_SHFT   0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY16 (0x820c0000 + 0x840)---

    AC2_QUEUE_EMPTY_16[31..0]    - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY16_AC2_QUEUE_EMPTY_16_ADDR   WF_PLE_TOP_AC2_QUEUE_EMPTY16_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY16_AC2_QUEUE_EMPTY_16_MASK   0xFFFFFFFF                // AC2_QUEUE_EMPTY_16[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY16_AC2_QUEUE_EMPTY_16_SHFT   0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY17 (0x820c0000 + 0x844)---

    AC2_QUEUE_EMPTY_17[31..0]    - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY17_AC2_QUEUE_EMPTY_17_ADDR   WF_PLE_TOP_AC2_QUEUE_EMPTY17_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY17_AC2_QUEUE_EMPTY_17_MASK   0xFFFFFFFF                // AC2_QUEUE_EMPTY_17[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY17_AC2_QUEUE_EMPTY_17_SHFT   0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY18 (0x820c0000 + 0x848)---

    AC2_QUEUE_EMPTY_18[31..0]    - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY18_AC2_QUEUE_EMPTY_18_ADDR   WF_PLE_TOP_AC2_QUEUE_EMPTY18_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY18_AC2_QUEUE_EMPTY_18_MASK   0xFFFFFFFF                // AC2_QUEUE_EMPTY_18[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY18_AC2_QUEUE_EMPTY_18_SHFT   0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY19 (0x820c0000 + 0x84c)---

    AC2_QUEUE_EMPTY_19[31..0]    - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY19_AC2_QUEUE_EMPTY_19_ADDR   WF_PLE_TOP_AC2_QUEUE_EMPTY19_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY19_AC2_QUEUE_EMPTY_19_MASK   0xFFFFFFFF                // AC2_QUEUE_EMPTY_19[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY19_AC2_QUEUE_EMPTY_19_SHFT   0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY20 (0x820c0000 + 0x850)---

    AC2_QUEUE_EMPTY_20[31..0]    - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY20_AC2_QUEUE_EMPTY_20_ADDR   WF_PLE_TOP_AC2_QUEUE_EMPTY20_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY20_AC2_QUEUE_EMPTY_20_MASK   0xFFFFFFFF                // AC2_QUEUE_EMPTY_20[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY20_AC2_QUEUE_EMPTY_20_SHFT   0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY21 (0x820c0000 + 0x854)---

    AC2_QUEUE_EMPTY_21[31..0]    - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY21_AC2_QUEUE_EMPTY_21_ADDR   WF_PLE_TOP_AC2_QUEUE_EMPTY21_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY21_AC2_QUEUE_EMPTY_21_MASK   0xFFFFFFFF                // AC2_QUEUE_EMPTY_21[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY21_AC2_QUEUE_EMPTY_21_SHFT   0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY22 (0x820c0000 + 0x858)---

    AC2_QUEUE_EMPTY_22[31..0]    - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY22_AC2_QUEUE_EMPTY_22_ADDR   WF_PLE_TOP_AC2_QUEUE_EMPTY22_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY22_AC2_QUEUE_EMPTY_22_MASK   0xFFFFFFFF                // AC2_QUEUE_EMPTY_22[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY22_AC2_QUEUE_EMPTY_22_SHFT   0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY23 (0x820c0000 + 0x85c)---

    AC2_QUEUE_EMPTY_23[31..0]    - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY23_AC2_QUEUE_EMPTY_23_ADDR   WF_PLE_TOP_AC2_QUEUE_EMPTY23_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY23_AC2_QUEUE_EMPTY_23_MASK   0xFFFFFFFF                // AC2_QUEUE_EMPTY_23[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY23_AC2_QUEUE_EMPTY_23_SHFT   0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY24 (0x820c0000 + 0x860)---

    AC2_QUEUE_EMPTY_24[31..0]    - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY24_AC2_QUEUE_EMPTY_24_ADDR   WF_PLE_TOP_AC2_QUEUE_EMPTY24_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY24_AC2_QUEUE_EMPTY_24_MASK   0xFFFFFFFF                // AC2_QUEUE_EMPTY_24[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY24_AC2_QUEUE_EMPTY_24_SHFT   0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY25 (0x820c0000 + 0x864)---

    AC2_QUEUE_EMPTY_25[31..0]    - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY25_AC2_QUEUE_EMPTY_25_ADDR   WF_PLE_TOP_AC2_QUEUE_EMPTY25_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY25_AC2_QUEUE_EMPTY_25_MASK   0xFFFFFFFF                // AC2_QUEUE_EMPTY_25[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY25_AC2_QUEUE_EMPTY_25_SHFT   0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY26 (0x820c0000 + 0x868)---

    AC2_QUEUE_EMPTY_26[31..0]    - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY26_AC2_QUEUE_EMPTY_26_ADDR   WF_PLE_TOP_AC2_QUEUE_EMPTY26_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY26_AC2_QUEUE_EMPTY_26_MASK   0xFFFFFFFF                // AC2_QUEUE_EMPTY_26[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY26_AC2_QUEUE_EMPTY_26_SHFT   0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY27 (0x820c0000 + 0x86c)---

    AC2_QUEUE_EMPTY_27[31..0]    - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY27_AC2_QUEUE_EMPTY_27_ADDR   WF_PLE_TOP_AC2_QUEUE_EMPTY27_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY27_AC2_QUEUE_EMPTY_27_MASK   0xFFFFFFFF                // AC2_QUEUE_EMPTY_27[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY27_AC2_QUEUE_EMPTY_27_SHFT   0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY28 (0x820c0000 + 0x870)---

    AC2_QUEUE_EMPTY_28[31..0]    - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY28_AC2_QUEUE_EMPTY_28_ADDR   WF_PLE_TOP_AC2_QUEUE_EMPTY28_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY28_AC2_QUEUE_EMPTY_28_MASK   0xFFFFFFFF                // AC2_QUEUE_EMPTY_28[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY28_AC2_QUEUE_EMPTY_28_SHFT   0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY29 (0x820c0000 + 0x874)---

    AC2_QUEUE_EMPTY_29[31..0]    - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY29_AC2_QUEUE_EMPTY_29_ADDR   WF_PLE_TOP_AC2_QUEUE_EMPTY29_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY29_AC2_QUEUE_EMPTY_29_MASK   0xFFFFFFFF                // AC2_QUEUE_EMPTY_29[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY29_AC2_QUEUE_EMPTY_29_SHFT   0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY30 (0x820c0000 + 0x878)---

    AC2_QUEUE_EMPTY_30[31..0]    - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY30_AC2_QUEUE_EMPTY_30_ADDR   WF_PLE_TOP_AC2_QUEUE_EMPTY30_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY30_AC2_QUEUE_EMPTY_30_MASK   0xFFFFFFFF                // AC2_QUEUE_EMPTY_30[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY30_AC2_QUEUE_EMPTY_30_SHFT   0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY31 (0x820c0000 + 0x87c)---

    AC2_QUEUE_EMPTY_31[31..0]    - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY31_AC2_QUEUE_EMPTY_31_ADDR   WF_PLE_TOP_AC2_QUEUE_EMPTY31_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY31_AC2_QUEUE_EMPTY_31_MASK   0xFFFFFFFF                // AC2_QUEUE_EMPTY_31[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY31_AC2_QUEUE_EMPTY_31_SHFT   0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY_EXT0 (0x820c0000 + 0x880)---

    AC2_QUEUE_EMPTY_EXT_0[3..0]  - (RO) Same as AC2_QUEUE_EMPTY_0
    AC2_QUEUE_EMPTY_EXT_0_1[7..4] - (RO) Same as AC2_QUEUE_EMPTY_0
    AC2_QUEUE_EMPTY_EXT_0_2[15..8] - (RO) Same as AC2_QUEUE_EMPTY_0
    AC2_QUEUE_EMPTY_EXT_0_3[31..16] - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY_EXT0_AC2_QUEUE_EMPTY_EXT_0_3_ADDR WF_PLE_TOP_AC2_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY_EXT0_AC2_QUEUE_EMPTY_EXT_0_3_MASK 0xFFFF0000                // AC2_QUEUE_EMPTY_EXT_0_3[31..16]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY_EXT0_AC2_QUEUE_EMPTY_EXT_0_3_SHFT 16
#define WF_PLE_TOP_AC2_QUEUE_EMPTY_EXT0_AC2_QUEUE_EMPTY_EXT_0_2_ADDR WF_PLE_TOP_AC2_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY_EXT0_AC2_QUEUE_EMPTY_EXT_0_2_MASK 0x0000FF00                // AC2_QUEUE_EMPTY_EXT_0_2[15..8]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY_EXT0_AC2_QUEUE_EMPTY_EXT_0_2_SHFT 8
#define WF_PLE_TOP_AC2_QUEUE_EMPTY_EXT0_AC2_QUEUE_EMPTY_EXT_0_1_ADDR WF_PLE_TOP_AC2_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY_EXT0_AC2_QUEUE_EMPTY_EXT_0_1_MASK 0x000000F0                // AC2_QUEUE_EMPTY_EXT_0_1[7..4]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY_EXT0_AC2_QUEUE_EMPTY_EXT_0_1_SHFT 4
#define WF_PLE_TOP_AC2_QUEUE_EMPTY_EXT0_AC2_QUEUE_EMPTY_EXT_0_ADDR WF_PLE_TOP_AC2_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY_EXT0_AC2_QUEUE_EMPTY_EXT_0_MASK 0x0000000F                // AC2_QUEUE_EMPTY_EXT_0[3..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY_EXT0_AC2_QUEUE_EMPTY_EXT_0_SHFT 0

/* =====================================================================================

  ---AC2_QUEUE_EMPTY_EXT1 (0x820c0000 + 0x884)---

    AC2_QUEUE_EMPTY_EXT_1[31..0] - (RO) Same as AC2_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC2_QUEUE_EMPTY_EXT1_AC2_QUEUE_EMPTY_EXT_1_ADDR WF_PLE_TOP_AC2_QUEUE_EMPTY_EXT1_ADDR
#define WF_PLE_TOP_AC2_QUEUE_EMPTY_EXT1_AC2_QUEUE_EMPTY_EXT_1_MASK 0xFFFFFFFF                // AC2_QUEUE_EMPTY_EXT_1[31..0]
#define WF_PLE_TOP_AC2_QUEUE_EMPTY_EXT1_AC2_QUEUE_EMPTY_EXT_1_SHFT 0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY0 (0x820c0000 + 0x900)---

    AC3_QUEUE_EMPTY_0[7..0]      - (RO) Each bit is mapped to Station AC3 queue empty.
                                     SW uses this CR to read AC3 queue empty flag of station.
                                     If wlan_idx > 32, AC3_QUEUE_EMPTY+0x4*i store empty flag for wlan_idx 32*i ~32*(i+1)-1
    AC3_QUEUE_EMPTY_0_1[15..8]   - (RO) Same as AC3_QUEUE_EMPTY_0
    AC3_QUEUE_EMPTY_0_2[31..16]  - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY0_AC3_QUEUE_EMPTY_0_2_ADDR   WF_PLE_TOP_AC3_QUEUE_EMPTY0_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY0_AC3_QUEUE_EMPTY_0_2_MASK   0xFFFF0000                // AC3_QUEUE_EMPTY_0_2[31..16]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY0_AC3_QUEUE_EMPTY_0_2_SHFT   16
#define WF_PLE_TOP_AC3_QUEUE_EMPTY0_AC3_QUEUE_EMPTY_0_1_ADDR   WF_PLE_TOP_AC3_QUEUE_EMPTY0_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY0_AC3_QUEUE_EMPTY_0_1_MASK   0x0000FF00                // AC3_QUEUE_EMPTY_0_1[15..8]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY0_AC3_QUEUE_EMPTY_0_1_SHFT   8
#define WF_PLE_TOP_AC3_QUEUE_EMPTY0_AC3_QUEUE_EMPTY_0_ADDR     WF_PLE_TOP_AC3_QUEUE_EMPTY0_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY0_AC3_QUEUE_EMPTY_0_MASK     0x000000FF                // AC3_QUEUE_EMPTY_0[7..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY0_AC3_QUEUE_EMPTY_0_SHFT     0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY1 (0x820c0000 + 0x904)---

    AC3_QUEUE_EMPTY_1[31..0]     - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY1_AC3_QUEUE_EMPTY_1_ADDR     WF_PLE_TOP_AC3_QUEUE_EMPTY1_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY1_AC3_QUEUE_EMPTY_1_MASK     0xFFFFFFFF                // AC3_QUEUE_EMPTY_1[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY1_AC3_QUEUE_EMPTY_1_SHFT     0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY2 (0x820c0000 + 0x908)---

    AC3_QUEUE_EMPTY_2[31..0]     - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY2_AC3_QUEUE_EMPTY_2_ADDR     WF_PLE_TOP_AC3_QUEUE_EMPTY2_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY2_AC3_QUEUE_EMPTY_2_MASK     0xFFFFFFFF                // AC3_QUEUE_EMPTY_2[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY2_AC3_QUEUE_EMPTY_2_SHFT     0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY3 (0x820c0000 + 0x90c)---

    AC3_QUEUE_EMPTY_3[31..0]     - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY3_AC3_QUEUE_EMPTY_3_ADDR     WF_PLE_TOP_AC3_QUEUE_EMPTY3_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY3_AC3_QUEUE_EMPTY_3_MASK     0xFFFFFFFF                // AC3_QUEUE_EMPTY_3[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY3_AC3_QUEUE_EMPTY_3_SHFT     0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY4 (0x820c0000 + 0x910)---

    AC3_QUEUE_EMPTY_4[31..0]     - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY4_AC3_QUEUE_EMPTY_4_ADDR     WF_PLE_TOP_AC3_QUEUE_EMPTY4_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY4_AC3_QUEUE_EMPTY_4_MASK     0xFFFFFFFF                // AC3_QUEUE_EMPTY_4[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY4_AC3_QUEUE_EMPTY_4_SHFT     0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY5 (0x820c0000 + 0x914)---

    AC3_QUEUE_EMPTY_5[31..0]     - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY5_AC3_QUEUE_EMPTY_5_ADDR     WF_PLE_TOP_AC3_QUEUE_EMPTY5_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY5_AC3_QUEUE_EMPTY_5_MASK     0xFFFFFFFF                // AC3_QUEUE_EMPTY_5[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY5_AC3_QUEUE_EMPTY_5_SHFT     0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY6 (0x820c0000 + 0x918)---

    AC3_QUEUE_EMPTY_6[31..0]     - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY6_AC3_QUEUE_EMPTY_6_ADDR     WF_PLE_TOP_AC3_QUEUE_EMPTY6_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY6_AC3_QUEUE_EMPTY_6_MASK     0xFFFFFFFF                // AC3_QUEUE_EMPTY_6[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY6_AC3_QUEUE_EMPTY_6_SHFT     0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY7 (0x820c0000 + 0x91c)---

    AC3_QUEUE_EMPTY_7[31..0]     - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY7_AC3_QUEUE_EMPTY_7_ADDR     WF_PLE_TOP_AC3_QUEUE_EMPTY7_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY7_AC3_QUEUE_EMPTY_7_MASK     0xFFFFFFFF                // AC3_QUEUE_EMPTY_7[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY7_AC3_QUEUE_EMPTY_7_SHFT     0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY8 (0x820c0000 + 0x920)---

    AC3_QUEUE_EMPTY_8[31..0]     - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY8_AC3_QUEUE_EMPTY_8_ADDR     WF_PLE_TOP_AC3_QUEUE_EMPTY8_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY8_AC3_QUEUE_EMPTY_8_MASK     0xFFFFFFFF                // AC3_QUEUE_EMPTY_8[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY8_AC3_QUEUE_EMPTY_8_SHFT     0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY9 (0x820c0000 + 0x924)---

    AC3_QUEUE_EMPTY_9[31..0]     - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY9_AC3_QUEUE_EMPTY_9_ADDR     WF_PLE_TOP_AC3_QUEUE_EMPTY9_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY9_AC3_QUEUE_EMPTY_9_MASK     0xFFFFFFFF                // AC3_QUEUE_EMPTY_9[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY9_AC3_QUEUE_EMPTY_9_SHFT     0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY10 (0x820c0000 + 0x928)---

    AC3_QUEUE_EMPTY_10[31..0]    - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY10_AC3_QUEUE_EMPTY_10_ADDR   WF_PLE_TOP_AC3_QUEUE_EMPTY10_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY10_AC3_QUEUE_EMPTY_10_MASK   0xFFFFFFFF                // AC3_QUEUE_EMPTY_10[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY10_AC3_QUEUE_EMPTY_10_SHFT   0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY11 (0x820c0000 + 0x92c)---

    AC3_QUEUE_EMPTY_11[31..0]    - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY11_AC3_QUEUE_EMPTY_11_ADDR   WF_PLE_TOP_AC3_QUEUE_EMPTY11_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY11_AC3_QUEUE_EMPTY_11_MASK   0xFFFFFFFF                // AC3_QUEUE_EMPTY_11[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY11_AC3_QUEUE_EMPTY_11_SHFT   0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY12 (0x820c0000 + 0x930)---

    AC3_QUEUE_EMPTY_12[31..0]    - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY12_AC3_QUEUE_EMPTY_12_ADDR   WF_PLE_TOP_AC3_QUEUE_EMPTY12_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY12_AC3_QUEUE_EMPTY_12_MASK   0xFFFFFFFF                // AC3_QUEUE_EMPTY_12[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY12_AC3_QUEUE_EMPTY_12_SHFT   0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY13 (0x820c0000 + 0x934)---

    AC3_QUEUE_EMPTY_13[31..0]    - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY13_AC3_QUEUE_EMPTY_13_ADDR   WF_PLE_TOP_AC3_QUEUE_EMPTY13_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY13_AC3_QUEUE_EMPTY_13_MASK   0xFFFFFFFF                // AC3_QUEUE_EMPTY_13[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY13_AC3_QUEUE_EMPTY_13_SHFT   0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY14 (0x820c0000 + 0x938)---

    AC3_QUEUE_EMPTY_14[31..0]    - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY14_AC3_QUEUE_EMPTY_14_ADDR   WF_PLE_TOP_AC3_QUEUE_EMPTY14_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY14_AC3_QUEUE_EMPTY_14_MASK   0xFFFFFFFF                // AC3_QUEUE_EMPTY_14[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY14_AC3_QUEUE_EMPTY_14_SHFT   0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY15 (0x820c0000 + 0x93c)---

    AC3_QUEUE_EMPTY_15[31..0]    - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY15_AC3_QUEUE_EMPTY_15_ADDR   WF_PLE_TOP_AC3_QUEUE_EMPTY15_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY15_AC3_QUEUE_EMPTY_15_MASK   0xFFFFFFFF                // AC3_QUEUE_EMPTY_15[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY15_AC3_QUEUE_EMPTY_15_SHFT   0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY16 (0x820c0000 + 0x940)---

    AC3_QUEUE_EMPTY_16[31..0]    - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY16_AC3_QUEUE_EMPTY_16_ADDR   WF_PLE_TOP_AC3_QUEUE_EMPTY16_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY16_AC3_QUEUE_EMPTY_16_MASK   0xFFFFFFFF                // AC3_QUEUE_EMPTY_16[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY16_AC3_QUEUE_EMPTY_16_SHFT   0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY17 (0x820c0000 + 0x944)---

    AC3_QUEUE_EMPTY_17[31..0]    - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY17_AC3_QUEUE_EMPTY_17_ADDR   WF_PLE_TOP_AC3_QUEUE_EMPTY17_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY17_AC3_QUEUE_EMPTY_17_MASK   0xFFFFFFFF                // AC3_QUEUE_EMPTY_17[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY17_AC3_QUEUE_EMPTY_17_SHFT   0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY18 (0x820c0000 + 0x948)---

    AC3_QUEUE_EMPTY_18[31..0]    - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY18_AC3_QUEUE_EMPTY_18_ADDR   WF_PLE_TOP_AC3_QUEUE_EMPTY18_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY18_AC3_QUEUE_EMPTY_18_MASK   0xFFFFFFFF                // AC3_QUEUE_EMPTY_18[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY18_AC3_QUEUE_EMPTY_18_SHFT   0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY19 (0x820c0000 + 0x94c)---

    AC3_QUEUE_EMPTY_19[31..0]    - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY19_AC3_QUEUE_EMPTY_19_ADDR   WF_PLE_TOP_AC3_QUEUE_EMPTY19_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY19_AC3_QUEUE_EMPTY_19_MASK   0xFFFFFFFF                // AC3_QUEUE_EMPTY_19[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY19_AC3_QUEUE_EMPTY_19_SHFT   0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY20 (0x820c0000 + 0x950)---

    AC3_QUEUE_EMPTY_20[31..0]    - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY20_AC3_QUEUE_EMPTY_20_ADDR   WF_PLE_TOP_AC3_QUEUE_EMPTY20_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY20_AC3_QUEUE_EMPTY_20_MASK   0xFFFFFFFF                // AC3_QUEUE_EMPTY_20[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY20_AC3_QUEUE_EMPTY_20_SHFT   0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY21 (0x820c0000 + 0x954)---

    AC3_QUEUE_EMPTY_21[31..0]    - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY21_AC3_QUEUE_EMPTY_21_ADDR   WF_PLE_TOP_AC3_QUEUE_EMPTY21_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY21_AC3_QUEUE_EMPTY_21_MASK   0xFFFFFFFF                // AC3_QUEUE_EMPTY_21[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY21_AC3_QUEUE_EMPTY_21_SHFT   0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY22 (0x820c0000 + 0x958)---

    AC3_QUEUE_EMPTY_22[31..0]    - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY22_AC3_QUEUE_EMPTY_22_ADDR   WF_PLE_TOP_AC3_QUEUE_EMPTY22_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY22_AC3_QUEUE_EMPTY_22_MASK   0xFFFFFFFF                // AC3_QUEUE_EMPTY_22[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY22_AC3_QUEUE_EMPTY_22_SHFT   0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY23 (0x820c0000 + 0x95c)---

    AC3_QUEUE_EMPTY_23[31..0]    - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY23_AC3_QUEUE_EMPTY_23_ADDR   WF_PLE_TOP_AC3_QUEUE_EMPTY23_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY23_AC3_QUEUE_EMPTY_23_MASK   0xFFFFFFFF                // AC3_QUEUE_EMPTY_23[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY23_AC3_QUEUE_EMPTY_23_SHFT   0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY24 (0x820c0000 + 0x960)---

    AC3_QUEUE_EMPTY_24[31..0]    - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY24_AC3_QUEUE_EMPTY_24_ADDR   WF_PLE_TOP_AC3_QUEUE_EMPTY24_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY24_AC3_QUEUE_EMPTY_24_MASK   0xFFFFFFFF                // AC3_QUEUE_EMPTY_24[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY24_AC3_QUEUE_EMPTY_24_SHFT   0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY25 (0x820c0000 + 0x964)---

    AC3_QUEUE_EMPTY_25[31..0]    - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY25_AC3_QUEUE_EMPTY_25_ADDR   WF_PLE_TOP_AC3_QUEUE_EMPTY25_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY25_AC3_QUEUE_EMPTY_25_MASK   0xFFFFFFFF                // AC3_QUEUE_EMPTY_25[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY25_AC3_QUEUE_EMPTY_25_SHFT   0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY26 (0x820c0000 + 0x968)---

    AC3_QUEUE_EMPTY_26[31..0]    - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY26_AC3_QUEUE_EMPTY_26_ADDR   WF_PLE_TOP_AC3_QUEUE_EMPTY26_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY26_AC3_QUEUE_EMPTY_26_MASK   0xFFFFFFFF                // AC3_QUEUE_EMPTY_26[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY26_AC3_QUEUE_EMPTY_26_SHFT   0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY27 (0x820c0000 + 0x96c)---

    AC3_QUEUE_EMPTY_27[31..0]    - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY27_AC3_QUEUE_EMPTY_27_ADDR   WF_PLE_TOP_AC3_QUEUE_EMPTY27_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY27_AC3_QUEUE_EMPTY_27_MASK   0xFFFFFFFF                // AC3_QUEUE_EMPTY_27[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY27_AC3_QUEUE_EMPTY_27_SHFT   0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY28 (0x820c0000 + 0x970)---

    AC3_QUEUE_EMPTY_28[31..0]    - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY28_AC3_QUEUE_EMPTY_28_ADDR   WF_PLE_TOP_AC3_QUEUE_EMPTY28_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY28_AC3_QUEUE_EMPTY_28_MASK   0xFFFFFFFF                // AC3_QUEUE_EMPTY_28[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY28_AC3_QUEUE_EMPTY_28_SHFT   0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY29 (0x820c0000 + 0x974)---

    AC3_QUEUE_EMPTY_29[31..0]    - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY29_AC3_QUEUE_EMPTY_29_ADDR   WF_PLE_TOP_AC3_QUEUE_EMPTY29_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY29_AC3_QUEUE_EMPTY_29_MASK   0xFFFFFFFF                // AC3_QUEUE_EMPTY_29[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY29_AC3_QUEUE_EMPTY_29_SHFT   0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY30 (0x820c0000 + 0x978)---

    AC3_QUEUE_EMPTY_30[31..0]    - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY30_AC3_QUEUE_EMPTY_30_ADDR   WF_PLE_TOP_AC3_QUEUE_EMPTY30_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY30_AC3_QUEUE_EMPTY_30_MASK   0xFFFFFFFF                // AC3_QUEUE_EMPTY_30[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY30_AC3_QUEUE_EMPTY_30_SHFT   0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY31 (0x820c0000 + 0x97c)---

    AC3_QUEUE_EMPTY_31[31..0]    - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY31_AC3_QUEUE_EMPTY_31_ADDR   WF_PLE_TOP_AC3_QUEUE_EMPTY31_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY31_AC3_QUEUE_EMPTY_31_MASK   0xFFFFFFFF                // AC3_QUEUE_EMPTY_31[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY31_AC3_QUEUE_EMPTY_31_SHFT   0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY_EXT0 (0x820c0000 + 0x980)---

    AC3_QUEUE_EMPTY_EXT_0[3..0]  - (RO) Same as AC3_QUEUE_EMPTY_0
    AC3_QUEUE_EMPTY_EXT_0_1[7..4] - (RO) Same as AC3_QUEUE_EMPTY_0
    AC3_QUEUE_EMPTY_EXT_0_2[15..8] - (RO) Same as AC3_QUEUE_EMPTY_0
    AC3_QUEUE_EMPTY_EXT_0_3[31..16] - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY_EXT0_AC3_QUEUE_EMPTY_EXT_0_3_ADDR WF_PLE_TOP_AC3_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY_EXT0_AC3_QUEUE_EMPTY_EXT_0_3_MASK 0xFFFF0000                // AC3_QUEUE_EMPTY_EXT_0_3[31..16]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY_EXT0_AC3_QUEUE_EMPTY_EXT_0_3_SHFT 16
#define WF_PLE_TOP_AC3_QUEUE_EMPTY_EXT0_AC3_QUEUE_EMPTY_EXT_0_2_ADDR WF_PLE_TOP_AC3_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY_EXT0_AC3_QUEUE_EMPTY_EXT_0_2_MASK 0x0000FF00                // AC3_QUEUE_EMPTY_EXT_0_2[15..8]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY_EXT0_AC3_QUEUE_EMPTY_EXT_0_2_SHFT 8
#define WF_PLE_TOP_AC3_QUEUE_EMPTY_EXT0_AC3_QUEUE_EMPTY_EXT_0_1_ADDR WF_PLE_TOP_AC3_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY_EXT0_AC3_QUEUE_EMPTY_EXT_0_1_MASK 0x000000F0                // AC3_QUEUE_EMPTY_EXT_0_1[7..4]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY_EXT0_AC3_QUEUE_EMPTY_EXT_0_1_SHFT 4
#define WF_PLE_TOP_AC3_QUEUE_EMPTY_EXT0_AC3_QUEUE_EMPTY_EXT_0_ADDR WF_PLE_TOP_AC3_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY_EXT0_AC3_QUEUE_EMPTY_EXT_0_MASK 0x0000000F                // AC3_QUEUE_EMPTY_EXT_0[3..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY_EXT0_AC3_QUEUE_EMPTY_EXT_0_SHFT 0

/* =====================================================================================

  ---AC3_QUEUE_EMPTY_EXT1 (0x820c0000 + 0x984)---

    AC3_QUEUE_EMPTY_EXT_1[31..0] - (RO) Same as AC3_QUEUE_EMPTY_0

 =====================================================================================*/
#define WF_PLE_TOP_AC3_QUEUE_EMPTY_EXT1_AC3_QUEUE_EMPTY_EXT_1_ADDR WF_PLE_TOP_AC3_QUEUE_EMPTY_EXT1_ADDR
#define WF_PLE_TOP_AC3_QUEUE_EMPTY_EXT1_AC3_QUEUE_EMPTY_EXT_1_MASK 0xFFFFFFFF                // AC3_QUEUE_EMPTY_EXT_1[31..0]
#define WF_PLE_TOP_AC3_QUEUE_EMPTY_EXT1_AC3_QUEUE_EMPTY_EXT_1_SHFT 0

/* =====================================================================================

  ---PEEK_CR_00 (0x820c0000 + 0xa00)---

    PEEK_CR_00[31..0]            - (RO) HW debug flag
                                     [3:0] : ple_fl_arb_cs
                                     [6:4] : ple_fl_cs
                                     [11:8] : ple_enq_fl_cs
                                     [15:12] : ple_deq_fl_cs
                                     [18:16] : ple_acc_lst_cs
                                     [26:24] : ple_mdp_dop_pbuf_cs
                                     [29:28] : ple_mdP_dop_cache_cs

 =====================================================================================*/
#define WF_PLE_TOP_PEEK_CR_00_PEEK_CR_00_ADDR                  WF_PLE_TOP_PEEK_CR_00_ADDR
#define WF_PLE_TOP_PEEK_CR_00_PEEK_CR_00_MASK                  0xFFFFFFFF                // PEEK_CR_00[31..0]
#define WF_PLE_TOP_PEEK_CR_00_PEEK_CR_00_SHFT                  0

/* =====================================================================================

  ---PEEK_CR_01 (0x820c0000 + 0xa04)---

    PEEK_CR_01[31..0]            - (RO) HW debug flag
                                     [3:0] : ple_pl_arb_cs
                                     [5:4] : ple_pl_init_cs
                                     [8] : ple_pl_gnext_cs
                                     [14:12] : ple_pl_gbuf_cs
                                     [17:16] : ple_pl_rls_cs
                                     [22:20] : ple_rls_cs
                                     [26:24] : ple_host_rpt_cs
                                     [31]: rpt_pse_fid_vld

 =====================================================================================*/
#define WF_PLE_TOP_PEEK_CR_01_PEEK_CR_01_ADDR                  WF_PLE_TOP_PEEK_CR_01_ADDR
#define WF_PLE_TOP_PEEK_CR_01_PEEK_CR_01_MASK                  0xFFFFFFFF                // PEEK_CR_01[31..0]
#define WF_PLE_TOP_PEEK_CR_01_PEEK_CR_01_SHFT                  0

/* =====================================================================================

  ---PEEK_CR_02 (0x820c0000 + 0xa08)---

    PEEK_CR_02[31..0]            - (RO) HW debug flag
                                     [2:0] : ple_hif_dop_pbuf_cs
                                     [5:4] : ple_hif_dop_cache_cs
                                     [11:8] : ple_hif_qop_q_oper_cs
                                     [13:12] : ple_hif_qop_rl_ocp_cs
                                     [17:16] : ple_hif_qop_pl_ocp_cs
                                     [22:20] : ple_hif_qop_allocate_cs

 =====================================================================================*/
#define WF_PLE_TOP_PEEK_CR_02_PEEK_CR_02_ADDR                  WF_PLE_TOP_PEEK_CR_02_ADDR
#define WF_PLE_TOP_PEEK_CR_02_PEEK_CR_02_MASK                  0xFFFFFFFF                // PEEK_CR_02[31..0]
#define WF_PLE_TOP_PEEK_CR_02_PEEK_CR_02_SHFT                  0

/* =====================================================================================

  ---PEEK_CR_03 (0x820c0000 + 0xa0c)---

    PEEK_CR_03[31..0]            - (RO) HW debug flag
                                     [2:0] ple_cpu_dop_pbuf_cs
                                     [5:4] ple_cpu_dop_cache_cs
                                     [11:8] ple_cpu_qop_q_oper_cs
                                     [13:12] ple_cpu_qop_rl_ocp_cs
                                     [17:16] ple_cpu_qop_pl_ocp_cs
                                     [22:20] ple_cpu_qop_allocate_cs
                                     [25:24] ple_pse_q_cs
                                     [30:28] ple_pseport_fifo_rls_cs
                                     [31] ple_cpu_wrap_dis_sta_en

 =====================================================================================*/
#define WF_PLE_TOP_PEEK_CR_03_PEEK_CR_03_ADDR                  WF_PLE_TOP_PEEK_CR_03_ADDR
#define WF_PLE_TOP_PEEK_CR_03_PEEK_CR_03_MASK                  0xFFFFFFFF                // PEEK_CR_03[31..0]
#define WF_PLE_TOP_PEEK_CR_03_PEEK_CR_03_SHFT                  0

/* =====================================================================================

  ---PEEK_CR_04 (0x820c0000 + 0xa10)---

    PEEK_CR_04[31..0]            - (RO) HW debug flag
                                     [2:0] ple_wf0_dop_pbuf_cs
                                     [5:4] ple_wf0_dop_cach_cs
                                     [11:8] ple_wf_qop_q_oper_cs
                                     [13:12] ple_wf_qop_rl_ocp_cs
                                     [17:16] ple_wf_qop_pl_ocp_cs
                                     [22:20] ple_wf_qop_allocate_cs
                                     [26:24] ple_wf1_dop_pbuf_cs
                                     [29:28] ple_wf1_qop_pbuf_cs

 =====================================================================================*/
#define WF_PLE_TOP_PEEK_CR_04_PEEK_CR_04_ADDR                  WF_PLE_TOP_PEEK_CR_04_ADDR
#define WF_PLE_TOP_PEEK_CR_04_PEEK_CR_04_MASK                  0xFFFFFFFF                // PEEK_CR_04[31..0]
#define WF_PLE_TOP_PEEK_CR_04_PEEK_CR_04_SHFT                  0

/* =====================================================================================

  ---PEEK_CR_05 (0x820c0000 + 0xa14)---

    PEEK_CR_05[31..0]            - (RO) HW debug flag
                                     [3:0] bn0_predl_arb_cs
                                     [7:4] bn0_txcmd_par_cs
                                     [11:8] bn0_unused_par_cs
                                     [14:12] bn0_predl_rec_cs
                                     [19:16] bn0_predl_arb_cs
                                     [23:20] bn0_txcmd_par_cs
                                     [27:24] bn0_unused_par_cs
                                     [30:28] bn0_predl_rec_cs

 =====================================================================================*/
#define WF_PLE_TOP_PEEK_CR_05_PEEK_CR_05_ADDR                  WF_PLE_TOP_PEEK_CR_05_ADDR
#define WF_PLE_TOP_PEEK_CR_05_PEEK_CR_05_MASK                  0xFFFFFFFF                // PEEK_CR_05[31..0]
#define WF_PLE_TOP_PEEK_CR_05_PEEK_CR_05_SHFT                  0

/* =====================================================================================

  ---PEEK_CR_06 (0x820c0000 + 0xa18)---

    PEEK_CR_06[31..0]            - (RO) HW debug flag
                                     [5:0] ple_drr_q_oper_cs
                                     [11:8] ple_drr_search_sta_cs
                                     [21:16] ple_drr_shdl_cs
                                     [27:24] drr_sta_table_cs
                                     [30:28] twt_srchop_cs

 =====================================================================================*/
#define WF_PLE_TOP_PEEK_CR_06_PEEK_CR_06_ADDR                  WF_PLE_TOP_PEEK_CR_06_ADDR
#define WF_PLE_TOP_PEEK_CR_06_PEEK_CR_06_MASK                  0xFFFFFFFF                // PEEK_CR_06[31..0]
#define WF_PLE_TOP_PEEK_CR_06_PEEK_CR_06_SHFT                  0

/* =====================================================================================

  ---PEEK_CR_07 (0x820c0000 + 0xa1c)---

    PEEK_CR_07[31..0]            - (RO) HW debug flag
                                     [3:0] ple_mactx0_mactx_cs
                                     [7:4] ple_mactx0_rlstxd_cs
                                     [11:8] ple_mactx1_mactx_cs
                                     [15:12] ple_mactx1_rlstxd_cs
                                     [19:16] ple_mactx2_mactx_cs
                                     [23:20] ple_mactx2_rlstxd_cs
                                     [27:24] ple_mactx3_mactx_cs
                                     [31:28] ple_mactx3_rlstxd_cs

 =====================================================================================*/
#define WF_PLE_TOP_PEEK_CR_07_PEEK_CR_07_ADDR                  WF_PLE_TOP_PEEK_CR_07_ADDR
#define WF_PLE_TOP_PEEK_CR_07_PEEK_CR_07_MASK                  0xFFFFFFFF                // PEEK_CR_07[31..0]
#define WF_PLE_TOP_PEEK_CR_07_PEEK_CR_07_SHFT                  0

/* =====================================================================================

  ---PEEK_CR_08 (0x820c0000 + 0xa20)---

    PEEK_CR_08[31..0]            - (RO) HW debug flag
                                     [6:4] ple_mactx_txcmd0_cs
                                     [10:8] ple_mactx_txcmd1_cs
                                     [15:12] spl_cs
                                     [27:16] double_rls_fid
                                     [31] double_rls_error

 =====================================================================================*/
#define WF_PLE_TOP_PEEK_CR_08_PEEK_CR_08_ADDR                  WF_PLE_TOP_PEEK_CR_08_ADDR
#define WF_PLE_TOP_PEEK_CR_08_PEEK_CR_08_MASK                  0xFFFFFFFF                // PEEK_CR_08[31..0]
#define WF_PLE_TOP_PEEK_CR_08_PEEK_CR_08_SHFT                  0

/* =====================================================================================

  ---PEEK_CR_09 (0x820c0000 + 0xa24)---

    PEEK_CR_09[31..0]            - (RO) HW debug flag
                                     [6:0] ple_mactx_fetch_cs
                                     [11:8] ple_mactx_shdl_cs
                                     [13:12] ple_mactx_fl_rls_cs
                                     [18:16] ple_mactx_rls_pse_cs
                                     [21:19] drr_mixarb_cs
                                     [26:22] drr_srcharb_cs
                                     [29:27] drr_srchop_cs
                                     [31:30] drr_spl_oper_cs

 =====================================================================================*/
#define WF_PLE_TOP_PEEK_CR_09_PEEK_CR_09_ADDR                  WF_PLE_TOP_PEEK_CR_09_ADDR
#define WF_PLE_TOP_PEEK_CR_09_PEEK_CR_09_MASK                  0xFFFFFFFF                // PEEK_CR_09[31..0]
#define WF_PLE_TOP_PEEK_CR_09_PEEK_CR_09_SHFT                  0

/* =====================================================================================

  ---PEEK_CR_10 (0x820c0000 + 0xa28)---

    PEEK_CR_10[31..0]            - (RO) HW debug flag
                                     [2:0] bwctrl_drr_bmp_cs
                                     [11:8] bwctrl_bss_table_cs
                                     [20:16] bss_shdl_cs
                                     [29:24] ple_bss_q_oper_cs

 =====================================================================================*/
#define WF_PLE_TOP_PEEK_CR_10_PEEK_CR_10_ADDR                  WF_PLE_TOP_PEEK_CR_10_ADDR
#define WF_PLE_TOP_PEEK_CR_10_PEEK_CR_10_MASK                  0xFFFFFFFF                // PEEK_CR_10[31..0]
#define WF_PLE_TOP_PEEK_CR_10_PEEK_CR_10_SHFT                  0

/* =====================================================================================

  ---PEEK_CR_11 (0x820c0000 + 0xa2c)---

    PEEK_CR_11[31..0]            - (RO) HW debug flag
                                     wf_umac_top_dbg // umac debug flag output

 =====================================================================================*/
#define WF_PLE_TOP_PEEK_CR_11_PEEK_CR_11_ADDR                  WF_PLE_TOP_PEEK_CR_11_ADDR
#define WF_PLE_TOP_PEEK_CR_11_PEEK_CR_11_MASK                  0xFFFFFFFF                // PEEK_CR_11[31..0]
#define WF_PLE_TOP_PEEK_CR_11_PEEK_CR_11_SHFT                  0

/* =====================================================================================

  ---MACTX0_DBG0 (0x820c0000 + 0xa60)---

    MACTX0_DBG0[31..0]           - (RO) HW MACTX0 DBG0 debug flag
                                     [31] wf_ple_mactx_req_new
                                     [30] wf_ple_mactx_norm_end
                                     [29] ple_wf_mactx_ack
                                     [28] wf_ple_mactx_abort
                                     [27]  wf_ple_mactx_abort_done
                                     [26] tie 0
                                     [25] skip_rem_mpdu
                                     [24] txp_req_flow_ctrl
                                     [23] wf_ple_add_fid_req
                                     [22] wf_ple_add_fid_ack
                                     [21] mactx_txp_req
                                     [20] mactx_txp_ack
                                     [19] wf_ple_txd_fid_sreq
                                     [18] wf_ple_txd_fid_ack
                                     [17] cut_rls_psefid_req
                                     [16] cut_rls_psefid_ack
                                     [15] cut_ple_add_pld_req
                                     [14] ple_cut_add_pld_ack
                                     [13] cut_throuhg_mode
                                     [12] wf_ple_rls_drop
                                     [11] wf_ple_add_fid_drop
                                     [10] wf_ple_mpdu_done
                                     [9] mactx_txp_burst
                                     [8] mactx_txp_no_msdu
                                     [7:4] rlstxd_cs
                                     [3:0] mactx_cs

 =====================================================================================*/
#define WF_PLE_TOP_MACTX0_DBG0_MACTX0_DBG0_ADDR                WF_PLE_TOP_MACTX0_DBG0_ADDR
#define WF_PLE_TOP_MACTX0_DBG0_MACTX0_DBG0_MASK                0xFFFFFFFF                // MACTX0_DBG0[31..0]
#define WF_PLE_TOP_MACTX0_DBG0_MACTX0_DBG0_SHFT                0

/* =====================================================================================

  ---MACTX0_DBG1 (0x820c0000 + 0xa64)---

    MACTX0_DBG1[31..0]           - (RO) HW MACTX0 DBG1 debug flag
                                     [31:28] txd_agg_wcnt
                                     [27:24] txd_txp_rcnt
                                     [23:20] txd_txdma_rcnt
                                     [19:16] txd_status_rls_rcnt
                                     [15:12] pld_ct_exist_wcnt
                                     [11:8] pld_txdone_cnt
                                     [7:4] pld_rlspse_rcnt
                                     [3:0] mactx_cs

 =====================================================================================*/
#define WF_PLE_TOP_MACTX0_DBG1_MACTX0_DBG1_ADDR                WF_PLE_TOP_MACTX0_DBG1_ADDR
#define WF_PLE_TOP_MACTX0_DBG1_MACTX0_DBG1_MASK                0xFFFFFFFF                // MACTX0_DBG1[31..0]
#define WF_PLE_TOP_MACTX0_DBG1_MACTX0_DBG1_SHFT                0

/* =====================================================================================

  ---MACTX1_DBG0 (0x820c0000 + 0xa68)---

    MACTX1_DBG0[31..0]           - (RO) HW MACTX1 DBG0 debug flag
                                     [31] wf_ple_mactx_req_new
                                     [30] wf_ple_mactx_norm_end
                                     [29] ple_wf_mactx_ack
                                     [28] wf_ple_mactx_abort
                                     [27]  wf_ple_mactx_abort_done
                                     [26] tie 0
                                     [25] skip_rem_mpdu
                                     [24] txp_req_flow_ctrl
                                     [23] wf_ple_add_fid_req
                                     [22] wf_ple_add_fid_ack
                                     [21] mactx_txp_req
                                     [20] mactx_txp_ack
                                     [19] wf_ple_txd_fid_sreq
                                     [18] wf_ple_txd_fid_ack
                                     [17] cut_rls_psefid_req
                                     [16] cut_rls_psefid_ack
                                     [15] cut_ple_add_pld_req
                                     [14] ple_cut_add_pld_ack
                                     [13] cut_throuhg_mode
                                     [12] wf_ple_rls_drop
                                     [11] wf_ple_add_fid_drop
                                     [10] wf_ple_mpdu_done
                                     [9] mactx_txp_burst
                                     [8] mactx_txp_no_msdu
                                     [7:4] rlstxd_cs
                                     [3:0] mactx_cs

 =====================================================================================*/
#define WF_PLE_TOP_MACTX1_DBG0_MACTX1_DBG0_ADDR                WF_PLE_TOP_MACTX1_DBG0_ADDR
#define WF_PLE_TOP_MACTX1_DBG0_MACTX1_DBG0_MASK                0xFFFFFFFF                // MACTX1_DBG0[31..0]
#define WF_PLE_TOP_MACTX1_DBG0_MACTX1_DBG0_SHFT                0

/* =====================================================================================

  ---MACTX1_DBG1 (0x820c0000 + 0xa6C)---

    MACTX1_DBG1[31..0]           - (RO) HW MACTX1 DBG1 debug flag
                                     [31:28] txd_agg_wcnt
                                     [27:24] txd_txp_rcnt
                                     [23:20] txd_txdma_rcnt
                                     [19:16] txd_status_rls_rcnt
                                     [15:12] pld_ct_exist_wcnt
                                     [11:8] pld_txdone_cnt
                                     [7:4] pld_rlspse_rcnt
                                     [3:0] mactx_cs

 =====================================================================================*/
#define WF_PLE_TOP_MACTX1_DBG1_MACTX1_DBG1_ADDR                WF_PLE_TOP_MACTX1_DBG1_ADDR
#define WF_PLE_TOP_MACTX1_DBG1_MACTX1_DBG1_MASK                0xFFFFFFFF                // MACTX1_DBG1[31..0]
#define WF_PLE_TOP_MACTX1_DBG1_MACTX1_DBG1_SHFT                0

/* =====================================================================================

  ---AMSDU_GC (0x820c0000 + 0x1000)---

    EN_HW_AMSDU[0]               - (RW) Enable control of HW AMSDU function.
    EN_AMSDU_PASTE_COMM_SN[1]    - (RW) Enable paste common SN for non-QoS Data.
    EN_AMSDU_PNSN_QUEUE_MASK[2]  - (RW) Disable HW AMSDU process PNSN Queue
    RESERVED3[7..3]              - (RO) Reserved bits
    DIS_AMSDU_Q_EMPTY_FLUSH[8]   - (RW) Disable control of HW AMSDU queue empty trigger packet flush function.
    DIS_LMAC_TX_NO_FULL_FLUSH[9] - (RW) Disable control of LMAC TX no get full packet trigger packet flush function.
    DIS_SFD_KEEP_SAME_PAGE[10]   - (RW) Disable control of keep same page number of StoreForward packet function.
    RESERVED11[31..11]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_GC_DIS_SFD_KEEP_SAME_PAGE_ADDR        WF_PLE_TOP_AMSDU_GC_ADDR
#define WF_PLE_TOP_AMSDU_GC_DIS_SFD_KEEP_SAME_PAGE_MASK        0x00000400                // DIS_SFD_KEEP_SAME_PAGE[10]
#define WF_PLE_TOP_AMSDU_GC_DIS_SFD_KEEP_SAME_PAGE_SHFT        10
#define WF_PLE_TOP_AMSDU_GC_DIS_LMAC_TX_NO_FULL_FLUSH_ADDR     WF_PLE_TOP_AMSDU_GC_ADDR
#define WF_PLE_TOP_AMSDU_GC_DIS_LMAC_TX_NO_FULL_FLUSH_MASK     0x00000200                // DIS_LMAC_TX_NO_FULL_FLUSH[9]
#define WF_PLE_TOP_AMSDU_GC_DIS_LMAC_TX_NO_FULL_FLUSH_SHFT     9
#define WF_PLE_TOP_AMSDU_GC_DIS_AMSDU_Q_EMPTY_FLUSH_ADDR       WF_PLE_TOP_AMSDU_GC_ADDR
#define WF_PLE_TOP_AMSDU_GC_DIS_AMSDU_Q_EMPTY_FLUSH_MASK       0x00000100                // DIS_AMSDU_Q_EMPTY_FLUSH[8]
#define WF_PLE_TOP_AMSDU_GC_DIS_AMSDU_Q_EMPTY_FLUSH_SHFT       8
#define WF_PLE_TOP_AMSDU_GC_EN_AMSDU_PNSN_QUEUE_MASK_ADDR      WF_PLE_TOP_AMSDU_GC_ADDR
#define WF_PLE_TOP_AMSDU_GC_EN_AMSDU_PNSN_QUEUE_MASK_MASK      0x00000004                // EN_AMSDU_PNSN_QUEUE_MASK[2]
#define WF_PLE_TOP_AMSDU_GC_EN_AMSDU_PNSN_QUEUE_MASK_SHFT      2
#define WF_PLE_TOP_AMSDU_GC_EN_AMSDU_PASTE_COMM_SN_ADDR        WF_PLE_TOP_AMSDU_GC_ADDR
#define WF_PLE_TOP_AMSDU_GC_EN_AMSDU_PASTE_COMM_SN_MASK        0x00000002                // EN_AMSDU_PASTE_COMM_SN[1]
#define WF_PLE_TOP_AMSDU_GC_EN_AMSDU_PASTE_COMM_SN_SHFT        1
#define WF_PLE_TOP_AMSDU_GC_EN_HW_AMSDU_ADDR                   WF_PLE_TOP_AMSDU_GC_ADDR
#define WF_PLE_TOP_AMSDU_GC_EN_HW_AMSDU_MASK                   0x00000001                // EN_HW_AMSDU[0]
#define WF_PLE_TOP_AMSDU_GC_EN_HW_AMSDU_SHFT                   0

/* =====================================================================================

  ---AMSDU_TXD_COMP_MAP_0 (0x820c0000 + 0x1004)---

    TXDIN_TRIGGER_TH[11..0]      - (RW) The TXD merge trigger threshold.
    RESERVED12[15..12]           - (RO) Reserved bits
    TXD_COMPARE_NEED_MAP[31..16] - (RW) The compare bitmap for merging TXD.

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_TXD_COMP_MAP_0_TXD_COMPARE_NEED_MAP_ADDR WF_PLE_TOP_AMSDU_TXD_COMP_MAP_0_ADDR
#define WF_PLE_TOP_AMSDU_TXD_COMP_MAP_0_TXD_COMPARE_NEED_MAP_MASK 0xFFFF0000                // TXD_COMPARE_NEED_MAP[31..16]
#define WF_PLE_TOP_AMSDU_TXD_COMP_MAP_0_TXD_COMPARE_NEED_MAP_SHFT 16
#define WF_PLE_TOP_AMSDU_TXD_COMP_MAP_0_TXDIN_TRIGGER_TH_ADDR  WF_PLE_TOP_AMSDU_TXD_COMP_MAP_0_ADDR
#define WF_PLE_TOP_AMSDU_TXD_COMP_MAP_0_TXDIN_TRIGGER_TH_MASK  0x00000FFF                // TXDIN_TRIGGER_TH[11..0]
#define WF_PLE_TOP_AMSDU_TXD_COMP_MAP_0_TXDIN_TRIGGER_TH_SHFT  0

/* =====================================================================================

  ---AMSDU_TXD_COMP_MAP_1 (0x820c0000 + 0x1008)---

    TXD_COMPARE_NEED_MAP[31..0]  - (RW) The compare bitmap for merging TXD.

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_TXD_COMP_MAP_1_TXD_COMPARE_NEED_MAP_ADDR WF_PLE_TOP_AMSDU_TXD_COMP_MAP_1_ADDR
#define WF_PLE_TOP_AMSDU_TXD_COMP_MAP_1_TXD_COMPARE_NEED_MAP_MASK 0xFFFFFFFF                // TXD_COMPARE_NEED_MAP[31..0]
#define WF_PLE_TOP_AMSDU_TXD_COMP_MAP_1_TXD_COMPARE_NEED_MAP_SHFT 0

/* =====================================================================================

  ---AMSDU_INT_N9_ERR_MASK (0x820c0000 + 0x100c)---

    EN_AMSDU_Q_CMD_ERR[0]        - (RW) Enables queue command error interrupt status of port AMSDU
    RESERVED1[3..1]              - (RO) Reserved bits
    EN_AMSDU_PAGE_UDF[4]         - (RW) Enables page underflow interrupt status of port AMSDU
    RESERVED5[11..5]             - (RO) Reserved bits
    EN_AMSDU_DATA_OPER_ERR[12]   - (RW) Enables data operation error of port AMSDU
    RESERVED13[15..13]           - (RO) Reserved bits
    EN_AMSDU_PORT_HANG_ERR[16]   - (RW) Enables AMSDU port FSM hang error interrupt
    EN_AMSDU_CTRL_HANG_ERR[17]   - (RW) Enables AMSDU CTRL FSM hang error interrupt
    RESERVED18[31..18]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_MASK_EN_AMSDU_CTRL_HANG_ERR_ADDR WF_PLE_TOP_AMSDU_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_MASK_EN_AMSDU_CTRL_HANG_ERR_MASK 0x00020000                // EN_AMSDU_CTRL_HANG_ERR[17]
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_MASK_EN_AMSDU_CTRL_HANG_ERR_SHFT 17
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_MASK_EN_AMSDU_PORT_HANG_ERR_ADDR WF_PLE_TOP_AMSDU_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_MASK_EN_AMSDU_PORT_HANG_ERR_MASK 0x00010000                // EN_AMSDU_PORT_HANG_ERR[16]
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_MASK_EN_AMSDU_PORT_HANG_ERR_SHFT 16
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_MASK_EN_AMSDU_DATA_OPER_ERR_ADDR WF_PLE_TOP_AMSDU_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_MASK_EN_AMSDU_DATA_OPER_ERR_MASK 0x00001000                // EN_AMSDU_DATA_OPER_ERR[12]
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_MASK_EN_AMSDU_DATA_OPER_ERR_SHFT 12
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_MASK_EN_AMSDU_PAGE_UDF_ADDR WF_PLE_TOP_AMSDU_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_MASK_EN_AMSDU_PAGE_UDF_MASK 0x00000010                // EN_AMSDU_PAGE_UDF[4]
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_MASK_EN_AMSDU_PAGE_UDF_SHFT 4
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_MASK_EN_AMSDU_Q_CMD_ERR_ADDR WF_PLE_TOP_AMSDU_INT_N9_ERR_MASK_ADDR
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_MASK_EN_AMSDU_Q_CMD_ERR_MASK 0x00000001                // EN_AMSDU_Q_CMD_ERR[0]
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_MASK_EN_AMSDU_Q_CMD_ERR_SHFT 0

/* =====================================================================================

  ---AMSDU_INT_N9_ERR_STS (0x820c0000 + 0x1010)---

    AMSDU_Q_CMD_ERR[0]           - (W1C) Queue command error interrupt status of port AMSDU. Avoid unclear error flag,  please clear flag when logic reset.
    RESERVED1[3..1]              - (RO) Reserved bits
    AMSDU_PAGE_UDF[4]            - (W1C) Page underflow interrupt status of port AMSDU. Avoid unclear error flag,  please clear flag when logic reset.
    RESERVED5[11..5]             - (RO) Reserved bits
    AMSDU_DATA_OPER_ERR[12]      - (W1C) Data operation error of port AMSDU. Avoid unclear error flag,  please clear flag when logic reset.
    RESERVED13[15..13]           - (RO) Reserved bits
    AMSDU_PORT_HANG_ERR[16]      - (W1C) AMSDU port FSM hang error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    AMSDU_CTRL_HANG_ERR[17]      - (W1C) AMSDU FSM hang error interrupt. Avoid unclear error flag,  please clear flag when logic reset.
    RESERVED18[31..18]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_STS_AMSDU_CTRL_HANG_ERR_ADDR WF_PLE_TOP_AMSDU_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_STS_AMSDU_CTRL_HANG_ERR_MASK 0x00020000                // AMSDU_CTRL_HANG_ERR[17]
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_STS_AMSDU_CTRL_HANG_ERR_SHFT 17
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_STS_AMSDU_PORT_HANG_ERR_ADDR WF_PLE_TOP_AMSDU_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_STS_AMSDU_PORT_HANG_ERR_MASK 0x00010000                // AMSDU_PORT_HANG_ERR[16]
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_STS_AMSDU_PORT_HANG_ERR_SHFT 16
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_STS_AMSDU_DATA_OPER_ERR_ADDR WF_PLE_TOP_AMSDU_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_STS_AMSDU_DATA_OPER_ERR_MASK 0x00001000                // AMSDU_DATA_OPER_ERR[12]
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_STS_AMSDU_DATA_OPER_ERR_SHFT 12
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_STS_AMSDU_PAGE_UDF_ADDR    WF_PLE_TOP_AMSDU_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_STS_AMSDU_PAGE_UDF_MASK    0x00000010                // AMSDU_PAGE_UDF[4]
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_STS_AMSDU_PAGE_UDF_SHFT    4
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_STS_AMSDU_Q_CMD_ERR_ADDR   WF_PLE_TOP_AMSDU_INT_N9_ERR_STS_ADDR
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_STS_AMSDU_Q_CMD_ERR_MASK   0x00000001                // AMSDU_Q_CMD_ERR[0]
#define WF_PLE_TOP_AMSDU_INT_N9_ERR_STS_AMSDU_Q_CMD_ERR_SHFT   0

/* =====================================================================================

  ---AMSDU_PEEK_CR_00 (0x820c0000 + 0x10d0)---

    AMSDU_DOP_CS[3..0]           - (RO) AMSDU Data operation current state.
    RESERVED4[7..4]              - (RO) Reserved bits
    AMSDU_CS[12..8]              - (RO) AMSDU Merge Engine current state.
    RESERVED13[15..13]           - (RO) Reserved bits
    AMSDU_Q_EMPTY_CS[17..16]     - (RO) AMSDU Queue Empty Search Engine current state.
    RESERVED18[23..18]           - (RO) Reserved bits
    AMSDU_ARB_CS[26..24]         - (RO) AMSDU Request Arbitration Current state.
    RESERVED27[31..27]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_PEEK_CR_00_AMSDU_ARB_CS_ADDR          WF_PLE_TOP_AMSDU_PEEK_CR_00_ADDR
#define WF_PLE_TOP_AMSDU_PEEK_CR_00_AMSDU_ARB_CS_MASK          0x07000000                // AMSDU_ARB_CS[26..24]
#define WF_PLE_TOP_AMSDU_PEEK_CR_00_AMSDU_ARB_CS_SHFT          24
#define WF_PLE_TOP_AMSDU_PEEK_CR_00_AMSDU_Q_EMPTY_CS_ADDR      WF_PLE_TOP_AMSDU_PEEK_CR_00_ADDR
#define WF_PLE_TOP_AMSDU_PEEK_CR_00_AMSDU_Q_EMPTY_CS_MASK      0x00030000                // AMSDU_Q_EMPTY_CS[17..16]
#define WF_PLE_TOP_AMSDU_PEEK_CR_00_AMSDU_Q_EMPTY_CS_SHFT      16
#define WF_PLE_TOP_AMSDU_PEEK_CR_00_AMSDU_CS_ADDR              WF_PLE_TOP_AMSDU_PEEK_CR_00_ADDR
#define WF_PLE_TOP_AMSDU_PEEK_CR_00_AMSDU_CS_MASK              0x00001F00                // AMSDU_CS[12..8]
#define WF_PLE_TOP_AMSDU_PEEK_CR_00_AMSDU_CS_SHFT              8
#define WF_PLE_TOP_AMSDU_PEEK_CR_00_AMSDU_DOP_CS_ADDR          WF_PLE_TOP_AMSDU_PEEK_CR_00_ADDR
#define WF_PLE_TOP_AMSDU_PEEK_CR_00_AMSDU_DOP_CS_MASK          0x0000000F                // AMSDU_DOP_CS[3..0]
#define WF_PLE_TOP_AMSDU_PEEK_CR_00_AMSDU_DOP_CS_SHFT          0

/* =====================================================================================

  ---AMSDU_PEEK_CR_01 (0x820c0000 + 0x10d4)---

    AMSDU_DOP_PBUF_CS[2..0]      - (RO) PLE AMSDU port - Data operation PBUF current state.
    RESERVED3[3]                 - (RO) Reserved bits
    AMSDU_DOP_CACHE_CS[5..4]     - (RO) PLE AMSDU port - Data operation CACHE current state.
    RESERVED6[7..6]              - (RO) Reserved bits
    AMSDU_QOP_Q_OPER_CS[11..8]   - (RO) PLE AMSDU port - Queue operation current state.
    AMSDU_QOP_RL_OCP_CS[13..12]  - (RO) PLE AMSDU port - Queue operation RL current state.
    RESERVED14[15..14]           - (RO) Reserved bits
    AMSDU_QOP_PL_OCP_CS[17..16]  - (RO) PLE AMSDU port - Queue operation PL current state.
    RESERVED18[19..18]           - (RO) Reserved bits
    AMSDU_QOP_ALLOCATE_CS[22..20] - (RO) PLE AMSDU port - Queue operation allocate current state.
    RESERVED23[31..23]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_PEEK_CR_01_AMSDU_QOP_ALLOCATE_CS_ADDR WF_PLE_TOP_AMSDU_PEEK_CR_01_ADDR
#define WF_PLE_TOP_AMSDU_PEEK_CR_01_AMSDU_QOP_ALLOCATE_CS_MASK 0x00700000                // AMSDU_QOP_ALLOCATE_CS[22..20]
#define WF_PLE_TOP_AMSDU_PEEK_CR_01_AMSDU_QOP_ALLOCATE_CS_SHFT 20
#define WF_PLE_TOP_AMSDU_PEEK_CR_01_AMSDU_QOP_PL_OCP_CS_ADDR   WF_PLE_TOP_AMSDU_PEEK_CR_01_ADDR
#define WF_PLE_TOP_AMSDU_PEEK_CR_01_AMSDU_QOP_PL_OCP_CS_MASK   0x00030000                // AMSDU_QOP_PL_OCP_CS[17..16]
#define WF_PLE_TOP_AMSDU_PEEK_CR_01_AMSDU_QOP_PL_OCP_CS_SHFT   16
#define WF_PLE_TOP_AMSDU_PEEK_CR_01_AMSDU_QOP_RL_OCP_CS_ADDR   WF_PLE_TOP_AMSDU_PEEK_CR_01_ADDR
#define WF_PLE_TOP_AMSDU_PEEK_CR_01_AMSDU_QOP_RL_OCP_CS_MASK   0x00003000                // AMSDU_QOP_RL_OCP_CS[13..12]
#define WF_PLE_TOP_AMSDU_PEEK_CR_01_AMSDU_QOP_RL_OCP_CS_SHFT   12
#define WF_PLE_TOP_AMSDU_PEEK_CR_01_AMSDU_QOP_Q_OPER_CS_ADDR   WF_PLE_TOP_AMSDU_PEEK_CR_01_ADDR
#define WF_PLE_TOP_AMSDU_PEEK_CR_01_AMSDU_QOP_Q_OPER_CS_MASK   0x00000F00                // AMSDU_QOP_Q_OPER_CS[11..8]
#define WF_PLE_TOP_AMSDU_PEEK_CR_01_AMSDU_QOP_Q_OPER_CS_SHFT   8
#define WF_PLE_TOP_AMSDU_PEEK_CR_01_AMSDU_DOP_CACHE_CS_ADDR    WF_PLE_TOP_AMSDU_PEEK_CR_01_ADDR
#define WF_PLE_TOP_AMSDU_PEEK_CR_01_AMSDU_DOP_CACHE_CS_MASK    0x00000030                // AMSDU_DOP_CACHE_CS[5..4]
#define WF_PLE_TOP_AMSDU_PEEK_CR_01_AMSDU_DOP_CACHE_CS_SHFT    4
#define WF_PLE_TOP_AMSDU_PEEK_CR_01_AMSDU_DOP_PBUF_CS_ADDR     WF_PLE_TOP_AMSDU_PEEK_CR_01_ADDR
#define WF_PLE_TOP_AMSDU_PEEK_CR_01_AMSDU_DOP_PBUF_CS_MASK     0x00000007                // AMSDU_DOP_PBUF_CS[2..0]
#define WF_PLE_TOP_AMSDU_PEEK_CR_01_AMSDU_DOP_PBUF_CS_SHFT     0

/* =====================================================================================

  ---AMSDU_PACK_1_MSDU_CNT (0x820c0000 + 0x10e0)---

    pack_1_msdu_cnt[15..0]       - (RC) AMSDU pack count of  1 MSDU in TXD.
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_PACK_1_MSDU_CNT_pack_1_msdu_cnt_ADDR  WF_PLE_TOP_AMSDU_PACK_1_MSDU_CNT_ADDR
#define WF_PLE_TOP_AMSDU_PACK_1_MSDU_CNT_pack_1_msdu_cnt_MASK  0x0000FFFF                // pack_1_msdu_cnt[15..0]
#define WF_PLE_TOP_AMSDU_PACK_1_MSDU_CNT_pack_1_msdu_cnt_SHFT  0

/* =====================================================================================

  ---AMSDU_PACK_2_MSDU_CNT (0x820c0000 + 0x10e4)---

    pack_2_msdu_cnt[15..0]       - (RC) AMSDU pack count of  2 MSDU in TXD.
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_PACK_2_MSDU_CNT_pack_2_msdu_cnt_ADDR  WF_PLE_TOP_AMSDU_PACK_2_MSDU_CNT_ADDR
#define WF_PLE_TOP_AMSDU_PACK_2_MSDU_CNT_pack_2_msdu_cnt_MASK  0x0000FFFF                // pack_2_msdu_cnt[15..0]
#define WF_PLE_TOP_AMSDU_PACK_2_MSDU_CNT_pack_2_msdu_cnt_SHFT  0

/* =====================================================================================

  ---AMSDU_PACK_3_MSDU_CNT (0x820c0000 + 0x10e8)---

    pack_3_msdu_cnt[15..0]       - (RC) AMSDU pack count of  3 MSDU in TXD.
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_PACK_3_MSDU_CNT_pack_3_msdu_cnt_ADDR  WF_PLE_TOP_AMSDU_PACK_3_MSDU_CNT_ADDR
#define WF_PLE_TOP_AMSDU_PACK_3_MSDU_CNT_pack_3_msdu_cnt_MASK  0x0000FFFF                // pack_3_msdu_cnt[15..0]
#define WF_PLE_TOP_AMSDU_PACK_3_MSDU_CNT_pack_3_msdu_cnt_SHFT  0

/* =====================================================================================

  ---AMSDU_PACK_4_MSDU_CNT (0x820c0000 + 0x10ec)---

    pack_4_msdu_cnt[15..0]       - (RC) AMSDU pack count of  4 MSDU in TXD.
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_PACK_4_MSDU_CNT_pack_4_msdu_cnt_ADDR  WF_PLE_TOP_AMSDU_PACK_4_MSDU_CNT_ADDR
#define WF_PLE_TOP_AMSDU_PACK_4_MSDU_CNT_pack_4_msdu_cnt_MASK  0x0000FFFF                // pack_4_msdu_cnt[15..0]
#define WF_PLE_TOP_AMSDU_PACK_4_MSDU_CNT_pack_4_msdu_cnt_SHFT  0

/* =====================================================================================

  ---AMSDU_PACK_5_MSDU_CNT (0x820c0000 + 0x10f0)---

    pack_5_msdu_cnt[15..0]       - (RC) AMSDU pack count of  5 MSDU in TXD.
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_PACK_5_MSDU_CNT_pack_5_msdu_cnt_ADDR  WF_PLE_TOP_AMSDU_PACK_5_MSDU_CNT_ADDR
#define WF_PLE_TOP_AMSDU_PACK_5_MSDU_CNT_pack_5_msdu_cnt_MASK  0x0000FFFF                // pack_5_msdu_cnt[15..0]
#define WF_PLE_TOP_AMSDU_PACK_5_MSDU_CNT_pack_5_msdu_cnt_SHFT  0

/* =====================================================================================

  ---AMSDU_PACK_6_MSDU_CNT (0x820c0000 + 0x10f4)---

    pack_6_msdu_cnt[15..0]       - (RC) AMSDU pack count of  4 MSDU in TXD.
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_PACK_6_MSDU_CNT_pack_6_msdu_cnt_ADDR  WF_PLE_TOP_AMSDU_PACK_6_MSDU_CNT_ADDR
#define WF_PLE_TOP_AMSDU_PACK_6_MSDU_CNT_pack_6_msdu_cnt_MASK  0x0000FFFF                // pack_6_msdu_cnt[15..0]
#define WF_PLE_TOP_AMSDU_PACK_6_MSDU_CNT_pack_6_msdu_cnt_SHFT  0

/* =====================================================================================

  ---AMSDU_PACK_7_MSDU_CNT (0x820c0000 + 0x10f8)---

    pack_7_msdu_cnt[15..0]       - (RC) AMSDU pack count of  7 MSDU in TXD.
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_PACK_7_MSDU_CNT_pack_7_msdu_cnt_ADDR  WF_PLE_TOP_AMSDU_PACK_7_MSDU_CNT_ADDR
#define WF_PLE_TOP_AMSDU_PACK_7_MSDU_CNT_pack_7_msdu_cnt_MASK  0x0000FFFF                // pack_7_msdu_cnt[15..0]
#define WF_PLE_TOP_AMSDU_PACK_7_MSDU_CNT_pack_7_msdu_cnt_SHFT  0

/* =====================================================================================

  ---AMSDU_PACK_8_MSDU_CNT (0x820c0000 + 0x10fc)---

    pack_8_msdu_cnt[15..0]       - (RC) AMSDU pack count of  8 MSDU in TXD.
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_PACK_8_MSDU_CNT_pack_8_msdu_cnt_ADDR  WF_PLE_TOP_AMSDU_PACK_8_MSDU_CNT_ADDR
#define WF_PLE_TOP_AMSDU_PACK_8_MSDU_CNT_pack_8_msdu_cnt_MASK  0x0000FFFF                // pack_8_msdu_cnt[15..0]
#define WF_PLE_TOP_AMSDU_PACK_8_MSDU_CNT_pack_8_msdu_cnt_SHFT  0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY0 (0x820c0000 + 0x1100)---

    AMSDU_QUEUE_EMPTY_FLAG_7_0[7..0] - (RO) AC0 queue empty flag for station31~station0 in HW AMSDU engine.
                                     SW uses this CR to read AC0 queue empty flag of station in HW AMSDU engine.
                                     If wlan_idx > 32, AMSDU_AC0_QUEUE_EMPTY+0x4*i store empty flag for wlan_idx 32*i ~32*(i+1)-1
    AMSDU_QUEUE_EMPTY_FLAG_15_8[15..8] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0
    AMSDU_QUEUE_EMPTY_FLAG_31_16[31..16] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_31_16_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY0_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_31_16_MASK 0xFFFF0000                // AMSDU_QUEUE_EMPTY_FLAG_31_16[31..16]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_31_16_SHFT 16
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_15_8_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY0_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_15_8_MASK 0x0000FF00                // AMSDU_QUEUE_EMPTY_FLAG_15_8[15..8]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_15_8_SHFT 8
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_7_0_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY0_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_7_0_MASK 0x000000FF                // AMSDU_QUEUE_EMPTY_FLAG_7_0[7..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_7_0_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY1 (0x820c0000 + 0x1104)---

    AMSDU_QUEUE_EMPTY_FLAG_63_32[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY1_AMSDU_QUEUE_EMPTY_FLAG_63_32_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY1_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY1_AMSDU_QUEUE_EMPTY_FLAG_63_32_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_63_32[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY1_AMSDU_QUEUE_EMPTY_FLAG_63_32_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY2 (0x820c0000 + 0x1108)---

    AMSDU_QUEUE_EMPTY_FLAG_95_64[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY2_AMSDU_QUEUE_EMPTY_FLAG_95_64_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY2_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY2_AMSDU_QUEUE_EMPTY_FLAG_95_64_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_95_64[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY2_AMSDU_QUEUE_EMPTY_FLAG_95_64_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY3 (0x820c0000 + 0x110c)---

    AMSDU_QUEUE_EMPTY_FLAG_127_96[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY3_AMSDU_QUEUE_EMPTY_FLAG_127_96_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY3_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY3_AMSDU_QUEUE_EMPTY_FLAG_127_96_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_127_96[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY3_AMSDU_QUEUE_EMPTY_FLAG_127_96_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY4 (0x820c0000 + 0x1110)---

    AMSDU_QUEUE_EMPTY_FLAG_135_128[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY4_AMSDU_QUEUE_EMPTY_FLAG_135_128_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY4_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY4_AMSDU_QUEUE_EMPTY_FLAG_135_128_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_135_128[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY4_AMSDU_QUEUE_EMPTY_FLAG_135_128_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY5 (0x820c0000 + 0x1114)---

    AMSDU_QUEUE_EMPTY_FLAG_191_160[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY5_AMSDU_QUEUE_EMPTY_FLAG_191_160_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY5_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY5_AMSDU_QUEUE_EMPTY_FLAG_191_160_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_191_160[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY5_AMSDU_QUEUE_EMPTY_FLAG_191_160_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY6 (0x820c0000 + 0x1118)---

    AMSDU_QUEUE_EMPTY_FLAG_223_192[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY6_AMSDU_QUEUE_EMPTY_FLAG_223_192_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY6_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY6_AMSDU_QUEUE_EMPTY_FLAG_223_192_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_223_192[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY6_AMSDU_QUEUE_EMPTY_FLAG_223_192_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY7 (0x820c0000 + 0x111c)---

    AMSDU_QUEUE_EMPTY_FLAG_255_224[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY7_AMSDU_QUEUE_EMPTY_FLAG_255_224_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY7_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY7_AMSDU_QUEUE_EMPTY_FLAG_255_224_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_255_224[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY7_AMSDU_QUEUE_EMPTY_FLAG_255_224_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY8 (0x820c0000 + 0x1120)---

    AMSDU_QUEUE_EMPTY_FLAG_263_256[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY8_AMSDU_QUEUE_EMPTY_FLAG_263_256_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY8_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY8_AMSDU_QUEUE_EMPTY_FLAG_263_256_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_263_256[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY8_AMSDU_QUEUE_EMPTY_FLAG_263_256_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY9 (0x820c0000 + 0x1124)---

    AMSDU_QUEUE_EMPTY_FLAG_319_288[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY9_AMSDU_QUEUE_EMPTY_FLAG_319_288_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY9_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY9_AMSDU_QUEUE_EMPTY_FLAG_319_288_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_319_288[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY9_AMSDU_QUEUE_EMPTY_FLAG_319_288_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY10 (0x820c0000 + 0x1128)---

    AMSDU_QUEUE_EMPTY_FLAG_351_320[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY10_AMSDU_QUEUE_EMPTY_FLAG_351_320_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY10_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY10_AMSDU_QUEUE_EMPTY_FLAG_351_320_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_351_320[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY10_AMSDU_QUEUE_EMPTY_FLAG_351_320_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY11 (0x820c0000 + 0x112c)---

    AMSDU_QUEUE_EMPTY_FLAG_383_352[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY11_AMSDU_QUEUE_EMPTY_FLAG_383_352_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY11_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY11_AMSDU_QUEUE_EMPTY_FLAG_383_352_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_383_352[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY11_AMSDU_QUEUE_EMPTY_FLAG_383_352_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY12 (0x820c0000 + 0x1130)---

    AMSDU_QUEUE_EMPTY_FLAG_415_384[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY12_AMSDU_QUEUE_EMPTY_FLAG_415_384_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY12_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY12_AMSDU_QUEUE_EMPTY_FLAG_415_384_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_415_384[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY12_AMSDU_QUEUE_EMPTY_FLAG_415_384_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY13 (0x820c0000 + 0x1134)---

    AMSDU_QUEUE_EMPTY_FLAG_447_416[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY13_AMSDU_QUEUE_EMPTY_FLAG_447_416_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY13_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY13_AMSDU_QUEUE_EMPTY_FLAG_447_416_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_447_416[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY13_AMSDU_QUEUE_EMPTY_FLAG_447_416_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY14 (0x820c0000 + 0x1138)---

    AMSDU_QUEUE_EMPTY_FLAG_479_448[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY14_AMSDU_QUEUE_EMPTY_FLAG_479_448_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY14_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY14_AMSDU_QUEUE_EMPTY_FLAG_479_448_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_479_448[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY14_AMSDU_QUEUE_EMPTY_FLAG_479_448_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY15 (0x820c0000 + 0x113c)---

    AMSDU_QUEUE_EMPTY_FLAG_511_480[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY15_AMSDU_QUEUE_EMPTY_FLAG_511_480_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY15_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY15_AMSDU_QUEUE_EMPTY_FLAG_511_480_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_511_480[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY15_AMSDU_QUEUE_EMPTY_FLAG_511_480_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY16 (0x820c0000 + 0x1140)---

    AMSDU_QUEUE_EMPTY_FLAG_543_512[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY16_AMSDU_QUEUE_EMPTY_FLAG_543_512_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY16_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY16_AMSDU_QUEUE_EMPTY_FLAG_543_512_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_543_512[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY16_AMSDU_QUEUE_EMPTY_FLAG_543_512_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY17 (0x820c0000 + 0x1144)---

    AMSDU_QUEUE_EMPTY_FLAG_575_544[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY17_AMSDU_QUEUE_EMPTY_FLAG_575_544_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY17_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY17_AMSDU_QUEUE_EMPTY_FLAG_575_544_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_575_544[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY17_AMSDU_QUEUE_EMPTY_FLAG_575_544_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY18 (0x820c0000 + 0x1148)---

    AMSDU_QUEUE_EMPTY_FLAG_607_576[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY18_AMSDU_QUEUE_EMPTY_FLAG_607_576_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY18_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY18_AMSDU_QUEUE_EMPTY_FLAG_607_576_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_607_576[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY18_AMSDU_QUEUE_EMPTY_FLAG_607_576_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY19 (0x820c0000 + 0x114c)---

    AMSDU_QUEUE_EMPTY_FLAG_639_608[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY19_AMSDU_QUEUE_EMPTY_FLAG_639_608_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY19_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY19_AMSDU_QUEUE_EMPTY_FLAG_639_608_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_639_608[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY19_AMSDU_QUEUE_EMPTY_FLAG_639_608_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY20 (0x820c0000 + 0x1150)---

    AMSDU_QUEUE_EMPTY_FLAG_671_640[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY20_AMSDU_QUEUE_EMPTY_FLAG_671_640_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY20_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY20_AMSDU_QUEUE_EMPTY_FLAG_671_640_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_671_640[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY20_AMSDU_QUEUE_EMPTY_FLAG_671_640_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY21 (0x820c0000 + 0x1154)---

    AMSDU_QUEUE_EMPTY_FLAG_703_672[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY21_AMSDU_QUEUE_EMPTY_FLAG_703_672_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY21_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY21_AMSDU_QUEUE_EMPTY_FLAG_703_672_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_703_672[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY21_AMSDU_QUEUE_EMPTY_FLAG_703_672_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY22 (0x820c0000 + 0x1158)---

    AMSDU_QUEUE_EMPTY_FLAG_735_704[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY22_AMSDU_QUEUE_EMPTY_FLAG_735_704_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY22_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY22_AMSDU_QUEUE_EMPTY_FLAG_735_704_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_735_704[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY22_AMSDU_QUEUE_EMPTY_FLAG_735_704_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY23 (0x820c0000 + 0x115c)---

    AMSDU_QUEUE_EMPTY_FLAG_767_736[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY23_AMSDU_QUEUE_EMPTY_FLAG_767_736_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY23_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY23_AMSDU_QUEUE_EMPTY_FLAG_767_736_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_767_736[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY23_AMSDU_QUEUE_EMPTY_FLAG_767_736_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY24 (0x820c0000 + 0x1160)---

    AMSDU_QUEUE_EMPTY_FLAG_799_768[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY24_AMSDU_QUEUE_EMPTY_FLAG_799_768_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY24_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY24_AMSDU_QUEUE_EMPTY_FLAG_799_768_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_799_768[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY24_AMSDU_QUEUE_EMPTY_FLAG_799_768_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY25 (0x820c0000 + 0x1164)---

    AMSDU_QUEUE_EMPTY_FLAG_831_800[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY25_AMSDU_QUEUE_EMPTY_FLAG_831_800_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY25_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY25_AMSDU_QUEUE_EMPTY_FLAG_831_800_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_831_800[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY25_AMSDU_QUEUE_EMPTY_FLAG_831_800_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY26 (0x820c0000 + 0x1168)---

    AMSDU_QUEUE_EMPTY_FLAG_863_832[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY26_AMSDU_QUEUE_EMPTY_FLAG_863_832_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY26_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY26_AMSDU_QUEUE_EMPTY_FLAG_863_832_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_863_832[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY26_AMSDU_QUEUE_EMPTY_FLAG_863_832_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY27 (0x820c0000 + 0x116c)---

    AMSDU_QUEUE_EMPTY_FLAG_895_864[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY27_AMSDU_QUEUE_EMPTY_FLAG_895_864_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY27_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY27_AMSDU_QUEUE_EMPTY_FLAG_895_864_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_895_864[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY27_AMSDU_QUEUE_EMPTY_FLAG_895_864_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY28 (0x820c0000 + 0x1170)---

    AMSDU_QUEUE_EMPTY_FLAG_927_896[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY28_AMSDU_QUEUE_EMPTY_FLAG_927_896_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY28_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY28_AMSDU_QUEUE_EMPTY_FLAG_927_896_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_927_896[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY28_AMSDU_QUEUE_EMPTY_FLAG_927_896_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY29 (0x820c0000 + 0x1174)---

    AMSDU_QUEUE_EMPTY_FLAG_959_928[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY29_AMSDU_QUEUE_EMPTY_FLAG_959_928_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY29_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY29_AMSDU_QUEUE_EMPTY_FLAG_959_928_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_959_928[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY29_AMSDU_QUEUE_EMPTY_FLAG_959_928_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY30 (0x820c0000 + 0x1178)---

    AMSDU_QUEUE_EMPTY_FLAG_991_960[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY30_AMSDU_QUEUE_EMPTY_FLAG_991_960_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY30_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY30_AMSDU_QUEUE_EMPTY_FLAG_991_960_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_991_960[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY30_AMSDU_QUEUE_EMPTY_FLAG_991_960_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY31 (0x820c0000 + 0x117c)---

    AMSDU_QUEUE_EMPTY_FLAG_1023_992[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY31_AMSDU_QUEUE_EMPTY_FLAG_1023_992_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY31_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY31_AMSDU_QUEUE_EMPTY_FLAG_1023_992_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_1023_992[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY31_AMSDU_QUEUE_EMPTY_FLAG_1023_992_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY_EXT0 (0x820c0000 + 0x1180)---

    AMSDU_QUEUE_EMPTY_FLAG_EXT_0[3..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0
    AMSDU_QUEUE_EMPTY_FLAG_EXT_0_1[7..4] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0
    AMSDU_QUEUE_EMPTY_FLAG_EXT_0_2[15..8] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0
    AMSDU_QUEUE_EMPTY_FLAG_EXT_0_3[31..16] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_3_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_3_MASK 0xFFFF0000                // AMSDU_QUEUE_EMPTY_FLAG_EXT_0_3[31..16]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_3_SHFT 16
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_2_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_2_MASK 0x0000FF00                // AMSDU_QUEUE_EMPTY_FLAG_EXT_0_2[15..8]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_2_SHFT 8
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_1_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_1_MASK 0x000000F0                // AMSDU_QUEUE_EMPTY_FLAG_EXT_0_1[7..4]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_1_SHFT 4
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_MASK 0x0000000F                // AMSDU_QUEUE_EMPTY_FLAG_EXT_0[3..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_SHFT 0

/* =====================================================================================

  ---AMSDU_AC0_QUEUE_EMPTY_EXT1 (0x820c0000 + 0x1184)---

    AMSDU_QUEUE_EMPTY_FLAG_EXT_1[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY_EXT1_AMSDU_QUEUE_EMPTY_FLAG_EXT_1_ADDR WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY_EXT1_ADDR
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY_EXT1_AMSDU_QUEUE_EMPTY_FLAG_EXT_1_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_EXT_1[31..0]
#define WF_PLE_TOP_AMSDU_AC0_QUEUE_EMPTY_EXT1_AMSDU_QUEUE_EMPTY_FLAG_EXT_1_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY0 (0x820c0000 + 0x1200)---

    AMSDU_QUEUE_EMPTY_FLAG_7_0[7..0] - (RO) AC1 queue empty flag for station31~station0 in HW AMSDU engine.
                                     SW uses this CR to read AC1 queue empty flag of station in HW AMSDU engine.
                                     If wlan_idx > 32, AMSDU_AC1_QUEUE_EMPTY+0x4*i store empty flag for wlan_idx 32*i ~32*(i+1)-1
    AMSDU_QUEUE_EMPTY_FLAG_15_8[15..8] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0
    AMSDU_QUEUE_EMPTY_FLAG_31_16[31..16] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_31_16_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY0_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_31_16_MASK 0xFFFF0000                // AMSDU_QUEUE_EMPTY_FLAG_31_16[31..16]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_31_16_SHFT 16
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_15_8_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY0_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_15_8_MASK 0x0000FF00                // AMSDU_QUEUE_EMPTY_FLAG_15_8[15..8]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_15_8_SHFT 8
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_7_0_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY0_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_7_0_MASK 0x000000FF                // AMSDU_QUEUE_EMPTY_FLAG_7_0[7..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_7_0_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY1 (0x820c0000 + 0x1204)---

    AMSDU_QUEUE_EMPTY_FLAG_63_32[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY1_AMSDU_QUEUE_EMPTY_FLAG_63_32_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY1_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY1_AMSDU_QUEUE_EMPTY_FLAG_63_32_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_63_32[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY1_AMSDU_QUEUE_EMPTY_FLAG_63_32_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY2 (0x820c0000 + 0x1208)---

    AMSDU_QUEUE_EMPTY_FLAG_95_64[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY2_AMSDU_QUEUE_EMPTY_FLAG_95_64_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY2_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY2_AMSDU_QUEUE_EMPTY_FLAG_95_64_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_95_64[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY2_AMSDU_QUEUE_EMPTY_FLAG_95_64_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY3 (0x820c0000 + 0x120c)---

    AMSDU_QUEUE_EMPTY_FLAG_127_96[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY3_AMSDU_QUEUE_EMPTY_FLAG_127_96_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY3_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY3_AMSDU_QUEUE_EMPTY_FLAG_127_96_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_127_96[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY3_AMSDU_QUEUE_EMPTY_FLAG_127_96_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY4 (0x820c0000 + 0x1210)---

    AMSDU_QUEUE_EMPTY_FLAG_135_128[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY4_AMSDU_QUEUE_EMPTY_FLAG_135_128_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY4_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY4_AMSDU_QUEUE_EMPTY_FLAG_135_128_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_135_128[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY4_AMSDU_QUEUE_EMPTY_FLAG_135_128_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY5 (0x820c0000 + 0x1214)---

    AMSDU_QUEUE_EMPTY_FLAG_191_160[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY5_AMSDU_QUEUE_EMPTY_FLAG_191_160_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY5_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY5_AMSDU_QUEUE_EMPTY_FLAG_191_160_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_191_160[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY5_AMSDU_QUEUE_EMPTY_FLAG_191_160_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY6 (0x820c0000 + 0x1218)---

    AMSDU_QUEUE_EMPTY_FLAG_223_192[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY6_AMSDU_QUEUE_EMPTY_FLAG_223_192_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY6_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY6_AMSDU_QUEUE_EMPTY_FLAG_223_192_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_223_192[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY6_AMSDU_QUEUE_EMPTY_FLAG_223_192_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY7 (0x820c0000 + 0x121c)---

    AMSDU_QUEUE_EMPTY_FLAG_255_224[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY7_AMSDU_QUEUE_EMPTY_FLAG_255_224_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY7_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY7_AMSDU_QUEUE_EMPTY_FLAG_255_224_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_255_224[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY7_AMSDU_QUEUE_EMPTY_FLAG_255_224_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY8 (0x820c0000 + 0x1220)---

    AMSDU_QUEUE_EMPTY_FLAG_263_256[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY8_AMSDU_QUEUE_EMPTY_FLAG_263_256_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY8_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY8_AMSDU_QUEUE_EMPTY_FLAG_263_256_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_263_256[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY8_AMSDU_QUEUE_EMPTY_FLAG_263_256_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY9 (0x820c0000 + 0x1224)---

    AMSDU_QUEUE_EMPTY_FLAG_319_288[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY9_AMSDU_QUEUE_EMPTY_FLAG_319_288_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY9_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY9_AMSDU_QUEUE_EMPTY_FLAG_319_288_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_319_288[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY9_AMSDU_QUEUE_EMPTY_FLAG_319_288_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY10 (0x820c0000 + 0x1228)---

    AMSDU_QUEUE_EMPTY_FLAG_351_320[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY10_AMSDU_QUEUE_EMPTY_FLAG_351_320_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY10_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY10_AMSDU_QUEUE_EMPTY_FLAG_351_320_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_351_320[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY10_AMSDU_QUEUE_EMPTY_FLAG_351_320_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY11 (0x820c0000 + 0x122c)---

    AMSDU_QUEUE_EMPTY_FLAG_383_352[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY11_AMSDU_QUEUE_EMPTY_FLAG_383_352_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY11_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY11_AMSDU_QUEUE_EMPTY_FLAG_383_352_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_383_352[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY11_AMSDU_QUEUE_EMPTY_FLAG_383_352_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY12 (0x820c0000 + 0x1230)---

    AMSDU_QUEUE_EMPTY_FLAG_415_384[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY12_AMSDU_QUEUE_EMPTY_FLAG_415_384_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY12_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY12_AMSDU_QUEUE_EMPTY_FLAG_415_384_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_415_384[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY12_AMSDU_QUEUE_EMPTY_FLAG_415_384_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY13 (0x820c0000 + 0x1234)---

    AMSDU_QUEUE_EMPTY_FLAG_447_416[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY13_AMSDU_QUEUE_EMPTY_FLAG_447_416_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY13_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY13_AMSDU_QUEUE_EMPTY_FLAG_447_416_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_447_416[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY13_AMSDU_QUEUE_EMPTY_FLAG_447_416_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY14 (0x820c0000 + 0x1238)---

    AMSDU_QUEUE_EMPTY_FLAG_479_448[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY14_AMSDU_QUEUE_EMPTY_FLAG_479_448_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY14_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY14_AMSDU_QUEUE_EMPTY_FLAG_479_448_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_479_448[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY14_AMSDU_QUEUE_EMPTY_FLAG_479_448_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY15 (0x820c0000 + 0x123c)---

    AMSDU_QUEUE_EMPTY_FLAG_511_480[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY15_AMSDU_QUEUE_EMPTY_FLAG_511_480_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY15_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY15_AMSDU_QUEUE_EMPTY_FLAG_511_480_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_511_480[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY15_AMSDU_QUEUE_EMPTY_FLAG_511_480_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY16 (0x820c0000 + 0x1240)---

    AMSDU_QUEUE_EMPTY_FLAG_543_512[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY16_AMSDU_QUEUE_EMPTY_FLAG_543_512_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY16_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY16_AMSDU_QUEUE_EMPTY_FLAG_543_512_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_543_512[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY16_AMSDU_QUEUE_EMPTY_FLAG_543_512_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY17 (0x820c0000 + 0x1244)---

    AMSDU_QUEUE_EMPTY_FLAG_575_544[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY17_AMSDU_QUEUE_EMPTY_FLAG_575_544_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY17_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY17_AMSDU_QUEUE_EMPTY_FLAG_575_544_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_575_544[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY17_AMSDU_QUEUE_EMPTY_FLAG_575_544_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY18 (0x820c0000 + 0x1248)---

    AMSDU_QUEUE_EMPTY_FLAG_607_576[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY18_AMSDU_QUEUE_EMPTY_FLAG_607_576_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY18_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY18_AMSDU_QUEUE_EMPTY_FLAG_607_576_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_607_576[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY18_AMSDU_QUEUE_EMPTY_FLAG_607_576_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY19 (0x820c0000 + 0x124c)---

    AMSDU_QUEUE_EMPTY_FLAG_639_608[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY19_AMSDU_QUEUE_EMPTY_FLAG_639_608_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY19_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY19_AMSDU_QUEUE_EMPTY_FLAG_639_608_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_639_608[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY19_AMSDU_QUEUE_EMPTY_FLAG_639_608_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY20 (0x820c0000 + 0x1250)---

    AMSDU_QUEUE_EMPTY_FLAG_671_640[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY20_AMSDU_QUEUE_EMPTY_FLAG_671_640_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY20_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY20_AMSDU_QUEUE_EMPTY_FLAG_671_640_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_671_640[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY20_AMSDU_QUEUE_EMPTY_FLAG_671_640_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY21 (0x820c0000 + 0x1254)---

    AMSDU_QUEUE_EMPTY_FLAG_703_672[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY21_AMSDU_QUEUE_EMPTY_FLAG_703_672_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY21_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY21_AMSDU_QUEUE_EMPTY_FLAG_703_672_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_703_672[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY21_AMSDU_QUEUE_EMPTY_FLAG_703_672_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY22 (0x820c0000 + 0x1258)---

    AMSDU_QUEUE_EMPTY_FLAG_735_704[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY22_AMSDU_QUEUE_EMPTY_FLAG_735_704_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY22_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY22_AMSDU_QUEUE_EMPTY_FLAG_735_704_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_735_704[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY22_AMSDU_QUEUE_EMPTY_FLAG_735_704_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY23 (0x820c0000 + 0x125c)---

    AMSDU_QUEUE_EMPTY_FLAG_767_736[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY23_AMSDU_QUEUE_EMPTY_FLAG_767_736_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY23_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY23_AMSDU_QUEUE_EMPTY_FLAG_767_736_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_767_736[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY23_AMSDU_QUEUE_EMPTY_FLAG_767_736_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY24 (0x820c0000 + 0x1260)---

    AMSDU_QUEUE_EMPTY_FLAG_799_768[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY24_AMSDU_QUEUE_EMPTY_FLAG_799_768_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY24_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY24_AMSDU_QUEUE_EMPTY_FLAG_799_768_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_799_768[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY24_AMSDU_QUEUE_EMPTY_FLAG_799_768_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY25 (0x820c0000 + 0x1264)---

    AMSDU_QUEUE_EMPTY_FLAG_831_800[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY25_AMSDU_QUEUE_EMPTY_FLAG_831_800_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY25_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY25_AMSDU_QUEUE_EMPTY_FLAG_831_800_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_831_800[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY25_AMSDU_QUEUE_EMPTY_FLAG_831_800_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY26 (0x820c0000 + 0x1268)---

    AMSDU_QUEUE_EMPTY_FLAG_863_832[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY26_AMSDU_QUEUE_EMPTY_FLAG_863_832_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY26_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY26_AMSDU_QUEUE_EMPTY_FLAG_863_832_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_863_832[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY26_AMSDU_QUEUE_EMPTY_FLAG_863_832_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY27 (0x820c0000 + 0x126c)---

    AMSDU_QUEUE_EMPTY_FLAG_895_864[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY27_AMSDU_QUEUE_EMPTY_FLAG_895_864_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY27_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY27_AMSDU_QUEUE_EMPTY_FLAG_895_864_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_895_864[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY27_AMSDU_QUEUE_EMPTY_FLAG_895_864_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY28 (0x820c0000 + 0x1270)---

    AMSDU_QUEUE_EMPTY_FLAG_927_896[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY28_AMSDU_QUEUE_EMPTY_FLAG_927_896_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY28_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY28_AMSDU_QUEUE_EMPTY_FLAG_927_896_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_927_896[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY28_AMSDU_QUEUE_EMPTY_FLAG_927_896_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY29 (0x820c0000 + 0x1274)---

    AMSDU_QUEUE_EMPTY_FLAG_959_928[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY29_AMSDU_QUEUE_EMPTY_FLAG_959_928_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY29_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY29_AMSDU_QUEUE_EMPTY_FLAG_959_928_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_959_928[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY29_AMSDU_QUEUE_EMPTY_FLAG_959_928_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY30 (0x820c0000 + 0x1278)---

    AMSDU_QUEUE_EMPTY_FLAG_991_960[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY30_AMSDU_QUEUE_EMPTY_FLAG_991_960_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY30_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY30_AMSDU_QUEUE_EMPTY_FLAG_991_960_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_991_960[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY30_AMSDU_QUEUE_EMPTY_FLAG_991_960_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY31 (0x820c0000 + 0x127c)---

    AMSDU_QUEUE_EMPTY_FLAG_1023_992[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY31_AMSDU_QUEUE_EMPTY_FLAG_1023_992_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY31_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY31_AMSDU_QUEUE_EMPTY_FLAG_1023_992_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_1023_992[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY31_AMSDU_QUEUE_EMPTY_FLAG_1023_992_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY_EXT0 (0x820c0000 + 0x1280)---

    AMSDU_QUEUE_EMPTY_FLAG_EXT_0[3..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0
    AMSDU_QUEUE_EMPTY_FLAG_EXT_0_1[7..4] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0
    AMSDU_QUEUE_EMPTY_FLAG_EXT_0_2[15..8] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0
    AMSDU_QUEUE_EMPTY_FLAG_EXT_0_3[31..16] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_3_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_3_MASK 0xFFFF0000                // AMSDU_QUEUE_EMPTY_FLAG_EXT_0_3[31..16]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_3_SHFT 16
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_2_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_2_MASK 0x0000FF00                // AMSDU_QUEUE_EMPTY_FLAG_EXT_0_2[15..8]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_2_SHFT 8
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_1_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_1_MASK 0x000000F0                // AMSDU_QUEUE_EMPTY_FLAG_EXT_0_1[7..4]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_1_SHFT 4
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_MASK 0x0000000F                // AMSDU_QUEUE_EMPTY_FLAG_EXT_0[3..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_SHFT 0

/* =====================================================================================

  ---AMSDU_AC1_QUEUE_EMPTY_EXT1 (0x820c0000 + 0x1284)---

    AMSDU_QUEUE_EMPTY_FLAG_EXT_1[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY_EXT1_AMSDU_QUEUE_EMPTY_FLAG_EXT_1_ADDR WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY_EXT1_ADDR
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY_EXT1_AMSDU_QUEUE_EMPTY_FLAG_EXT_1_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_EXT_1[31..0]
#define WF_PLE_TOP_AMSDU_AC1_QUEUE_EMPTY_EXT1_AMSDU_QUEUE_EMPTY_FLAG_EXT_1_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY0 (0x820c0000 + 0x1300)---

    AMSDU_QUEUE_EMPTY_FLAG_7_0[7..0] - (RO) AC2 queue empty flag for station31~station0 in HW AMSDU engine.
                                     SW uses this CR to read AC2 queue empty flag of station in HW AMSDU engine.
                                     If wlan_idx > 32, AMSDU_AC2_QUEUE_EMPTY+0x4*i store empty flag for wlan_idx 32*i ~32*(i+1)-1
    AMSDU_QUEUE_EMPTY_FLAG_15_8[15..8] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0
    AMSDU_QUEUE_EMPTY_FLAG_31_16[31..16] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_31_16_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY0_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_31_16_MASK 0xFFFF0000                // AMSDU_QUEUE_EMPTY_FLAG_31_16[31..16]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_31_16_SHFT 16
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_15_8_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY0_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_15_8_MASK 0x0000FF00                // AMSDU_QUEUE_EMPTY_FLAG_15_8[15..8]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_15_8_SHFT 8
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_7_0_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY0_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_7_0_MASK 0x000000FF                // AMSDU_QUEUE_EMPTY_FLAG_7_0[7..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_7_0_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY1 (0x820c0000 + 0x1304)---

    AMSDU_QUEUE_EMPTY_FLAG_63_32[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY1_AMSDU_QUEUE_EMPTY_FLAG_63_32_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY1_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY1_AMSDU_QUEUE_EMPTY_FLAG_63_32_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_63_32[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY1_AMSDU_QUEUE_EMPTY_FLAG_63_32_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY2 (0x820c0000 + 0x1308)---

    AMSDU_QUEUE_EMPTY_FLAG_95_64[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY2_AMSDU_QUEUE_EMPTY_FLAG_95_64_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY2_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY2_AMSDU_QUEUE_EMPTY_FLAG_95_64_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_95_64[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY2_AMSDU_QUEUE_EMPTY_FLAG_95_64_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY3 (0x820c0000 + 0x130c)---

    AMSDU_QUEUE_EMPTY_FLAG_127_96[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY3_AMSDU_QUEUE_EMPTY_FLAG_127_96_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY3_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY3_AMSDU_QUEUE_EMPTY_FLAG_127_96_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_127_96[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY3_AMSDU_QUEUE_EMPTY_FLAG_127_96_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY4 (0x820c0000 + 0x1310)---

    AMSDU_QUEUE_EMPTY_FLAG_135_128[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY4_AMSDU_QUEUE_EMPTY_FLAG_135_128_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY4_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY4_AMSDU_QUEUE_EMPTY_FLAG_135_128_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_135_128[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY4_AMSDU_QUEUE_EMPTY_FLAG_135_128_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY5 (0x820c0000 + 0x1314)---

    AMSDU_QUEUE_EMPTY_FLAG_191_160[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY5_AMSDU_QUEUE_EMPTY_FLAG_191_160_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY5_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY5_AMSDU_QUEUE_EMPTY_FLAG_191_160_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_191_160[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY5_AMSDU_QUEUE_EMPTY_FLAG_191_160_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY6 (0x820c0000 + 0x1318)---

    AMSDU_QUEUE_EMPTY_FLAG_223_192[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY6_AMSDU_QUEUE_EMPTY_FLAG_223_192_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY6_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY6_AMSDU_QUEUE_EMPTY_FLAG_223_192_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_223_192[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY6_AMSDU_QUEUE_EMPTY_FLAG_223_192_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY7 (0x820c0000 + 0x131c)---

    AMSDU_QUEUE_EMPTY_FLAG_255_224[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY7_AMSDU_QUEUE_EMPTY_FLAG_255_224_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY7_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY7_AMSDU_QUEUE_EMPTY_FLAG_255_224_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_255_224[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY7_AMSDU_QUEUE_EMPTY_FLAG_255_224_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY8 (0x820c0000 + 0x1320)---

    AMSDU_QUEUE_EMPTY_FLAG_263_256[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY8_AMSDU_QUEUE_EMPTY_FLAG_263_256_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY8_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY8_AMSDU_QUEUE_EMPTY_FLAG_263_256_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_263_256[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY8_AMSDU_QUEUE_EMPTY_FLAG_263_256_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY9 (0x820c0000 + 0x1324)---

    AMSDU_QUEUE_EMPTY_FLAG_319_288[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY9_AMSDU_QUEUE_EMPTY_FLAG_319_288_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY9_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY9_AMSDU_QUEUE_EMPTY_FLAG_319_288_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_319_288[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY9_AMSDU_QUEUE_EMPTY_FLAG_319_288_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY10 (0x820c0000 + 0x1328)---

    AMSDU_QUEUE_EMPTY_FLAG_351_320[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY10_AMSDU_QUEUE_EMPTY_FLAG_351_320_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY10_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY10_AMSDU_QUEUE_EMPTY_FLAG_351_320_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_351_320[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY10_AMSDU_QUEUE_EMPTY_FLAG_351_320_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY11 (0x820c0000 + 0x132c)---

    AMSDU_QUEUE_EMPTY_FLAG_383_352[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY11_AMSDU_QUEUE_EMPTY_FLAG_383_352_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY11_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY11_AMSDU_QUEUE_EMPTY_FLAG_383_352_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_383_352[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY11_AMSDU_QUEUE_EMPTY_FLAG_383_352_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY12 (0x820c0000 + 0x1330)---

    AMSDU_QUEUE_EMPTY_FLAG_415_384[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY12_AMSDU_QUEUE_EMPTY_FLAG_415_384_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY12_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY12_AMSDU_QUEUE_EMPTY_FLAG_415_384_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_415_384[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY12_AMSDU_QUEUE_EMPTY_FLAG_415_384_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY13 (0x820c0000 + 0x1334)---

    AMSDU_QUEUE_EMPTY_FLAG_447_416[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY13_AMSDU_QUEUE_EMPTY_FLAG_447_416_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY13_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY13_AMSDU_QUEUE_EMPTY_FLAG_447_416_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_447_416[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY13_AMSDU_QUEUE_EMPTY_FLAG_447_416_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY14 (0x820c0000 + 0x1338)---

    AMSDU_QUEUE_EMPTY_FLAG_479_448[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY14_AMSDU_QUEUE_EMPTY_FLAG_479_448_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY14_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY14_AMSDU_QUEUE_EMPTY_FLAG_479_448_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_479_448[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY14_AMSDU_QUEUE_EMPTY_FLAG_479_448_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY15 (0x820c0000 + 0x133c)---

    AMSDU_QUEUE_EMPTY_FLAG_511_480[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY15_AMSDU_QUEUE_EMPTY_FLAG_511_480_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY15_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY15_AMSDU_QUEUE_EMPTY_FLAG_511_480_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_511_480[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY15_AMSDU_QUEUE_EMPTY_FLAG_511_480_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY16 (0x820c0000 + 0x1340)---

    AMSDU_QUEUE_EMPTY_FLAG_543_512[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY16_AMSDU_QUEUE_EMPTY_FLAG_543_512_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY16_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY16_AMSDU_QUEUE_EMPTY_FLAG_543_512_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_543_512[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY16_AMSDU_QUEUE_EMPTY_FLAG_543_512_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY17 (0x820c0000 + 0x1344)---

    AMSDU_QUEUE_EMPTY_FLAG_575_544[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY17_AMSDU_QUEUE_EMPTY_FLAG_575_544_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY17_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY17_AMSDU_QUEUE_EMPTY_FLAG_575_544_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_575_544[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY17_AMSDU_QUEUE_EMPTY_FLAG_575_544_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY18 (0x820c0000 + 0x1348)---

    AMSDU_QUEUE_EMPTY_FLAG_607_576[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY18_AMSDU_QUEUE_EMPTY_FLAG_607_576_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY18_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY18_AMSDU_QUEUE_EMPTY_FLAG_607_576_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_607_576[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY18_AMSDU_QUEUE_EMPTY_FLAG_607_576_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY19 (0x820c0000 + 0x134c)---

    AMSDU_QUEUE_EMPTY_FLAG_639_608[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY19_AMSDU_QUEUE_EMPTY_FLAG_639_608_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY19_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY19_AMSDU_QUEUE_EMPTY_FLAG_639_608_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_639_608[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY19_AMSDU_QUEUE_EMPTY_FLAG_639_608_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY20 (0x820c0000 + 0x1350)---

    AMSDU_QUEUE_EMPTY_FLAG_671_640[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY20_AMSDU_QUEUE_EMPTY_FLAG_671_640_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY20_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY20_AMSDU_QUEUE_EMPTY_FLAG_671_640_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_671_640[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY20_AMSDU_QUEUE_EMPTY_FLAG_671_640_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY21 (0x820c0000 + 0x1354)---

    AMSDU_QUEUE_EMPTY_FLAG_703_672[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY21_AMSDU_QUEUE_EMPTY_FLAG_703_672_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY21_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY21_AMSDU_QUEUE_EMPTY_FLAG_703_672_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_703_672[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY21_AMSDU_QUEUE_EMPTY_FLAG_703_672_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY22 (0x820c0000 + 0x1358)---

    AMSDU_QUEUE_EMPTY_FLAG_735_704[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY22_AMSDU_QUEUE_EMPTY_FLAG_735_704_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY22_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY22_AMSDU_QUEUE_EMPTY_FLAG_735_704_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_735_704[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY22_AMSDU_QUEUE_EMPTY_FLAG_735_704_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY23 (0x820c0000 + 0x135c)---

    AMSDU_QUEUE_EMPTY_FLAG_767_736[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY23_AMSDU_QUEUE_EMPTY_FLAG_767_736_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY23_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY23_AMSDU_QUEUE_EMPTY_FLAG_767_736_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_767_736[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY23_AMSDU_QUEUE_EMPTY_FLAG_767_736_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY24 (0x820c0000 + 0x1360)---

    AMSDU_QUEUE_EMPTY_FLAG_799_768[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY24_AMSDU_QUEUE_EMPTY_FLAG_799_768_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY24_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY24_AMSDU_QUEUE_EMPTY_FLAG_799_768_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_799_768[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY24_AMSDU_QUEUE_EMPTY_FLAG_799_768_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY25 (0x820c0000 + 0x1364)---

    AMSDU_QUEUE_EMPTY_FLAG_831_800[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY25_AMSDU_QUEUE_EMPTY_FLAG_831_800_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY25_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY25_AMSDU_QUEUE_EMPTY_FLAG_831_800_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_831_800[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY25_AMSDU_QUEUE_EMPTY_FLAG_831_800_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY26 (0x820c0000 + 0x1368)---

    AMSDU_QUEUE_EMPTY_FLAG_863_832[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY26_AMSDU_QUEUE_EMPTY_FLAG_863_832_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY26_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY26_AMSDU_QUEUE_EMPTY_FLAG_863_832_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_863_832[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY26_AMSDU_QUEUE_EMPTY_FLAG_863_832_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY27 (0x820c0000 + 0x136c)---

    AMSDU_QUEUE_EMPTY_FLAG_895_864[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY27_AMSDU_QUEUE_EMPTY_FLAG_895_864_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY27_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY27_AMSDU_QUEUE_EMPTY_FLAG_895_864_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_895_864[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY27_AMSDU_QUEUE_EMPTY_FLAG_895_864_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY28 (0x820c0000 + 0x1370)---

    AMSDU_QUEUE_EMPTY_FLAG_927_896[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY28_AMSDU_QUEUE_EMPTY_FLAG_927_896_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY28_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY28_AMSDU_QUEUE_EMPTY_FLAG_927_896_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_927_896[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY28_AMSDU_QUEUE_EMPTY_FLAG_927_896_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY29 (0x820c0000 + 0x1374)---

    AMSDU_QUEUE_EMPTY_FLAG_959_928[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY29_AMSDU_QUEUE_EMPTY_FLAG_959_928_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY29_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY29_AMSDU_QUEUE_EMPTY_FLAG_959_928_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_959_928[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY29_AMSDU_QUEUE_EMPTY_FLAG_959_928_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY30 (0x820c0000 + 0x1378)---

    AMSDU_QUEUE_EMPTY_FLAG_991_960[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY30_AMSDU_QUEUE_EMPTY_FLAG_991_960_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY30_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY30_AMSDU_QUEUE_EMPTY_FLAG_991_960_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_991_960[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY30_AMSDU_QUEUE_EMPTY_FLAG_991_960_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY31 (0x820c0000 + 0x137c)---

    AMSDU_QUEUE_EMPTY_FLAG_1023_992[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY31_AMSDU_QUEUE_EMPTY_FLAG_1023_992_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY31_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY31_AMSDU_QUEUE_EMPTY_FLAG_1023_992_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_1023_992[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY31_AMSDU_QUEUE_EMPTY_FLAG_1023_992_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY_EXT0 (0x820c0000 + 0x1380)---

    AMSDU_QUEUE_EMPTY_FLAG_EXT_0[3..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0
    AMSDU_QUEUE_EMPTY_FLAG_EXT_0_1[7..4] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0
    AMSDU_QUEUE_EMPTY_FLAG_EXT_0_2[15..8] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0
    AMSDU_QUEUE_EMPTY_FLAG_EXT_0_3[31..16] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_3_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_3_MASK 0xFFFF0000                // AMSDU_QUEUE_EMPTY_FLAG_EXT_0_3[31..16]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_3_SHFT 16
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_2_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_2_MASK 0x0000FF00                // AMSDU_QUEUE_EMPTY_FLAG_EXT_0_2[15..8]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_2_SHFT 8
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_1_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_1_MASK 0x000000F0                // AMSDU_QUEUE_EMPTY_FLAG_EXT_0_1[7..4]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_1_SHFT 4
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_MASK 0x0000000F                // AMSDU_QUEUE_EMPTY_FLAG_EXT_0[3..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_SHFT 0

/* =====================================================================================

  ---AMSDU_AC2_QUEUE_EMPTY_EXT1 (0x820c0000 + 0x1384)---

    AMSDU_QUEUE_EMPTY_FLAG_EXT_1[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY_EXT1_AMSDU_QUEUE_EMPTY_FLAG_EXT_1_ADDR WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY_EXT1_ADDR
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY_EXT1_AMSDU_QUEUE_EMPTY_FLAG_EXT_1_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_EXT_1[31..0]
#define WF_PLE_TOP_AMSDU_AC2_QUEUE_EMPTY_EXT1_AMSDU_QUEUE_EMPTY_FLAG_EXT_1_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY0 (0x820c0000 + 0x1400)---

    AMSDU_QUEUE_EMPTY_FLAG_7_0[7..0] - (RO) AC3 queue empty flag for station31~station0 in HW AMSDU engine.
                                     SW uses this CR to read AC3 queue empty flag of station in HW AMSDU engine.
                                     If wlan_idx > 32, AMSDU_AC3_QUEUE_EMPTY+0x4*i store empty flag for wlan_idx 32*i ~32*(i+1)-1
    AMSDU_QUEUE_EMPTY_FLAG_15_8[15..8] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0
    AMSDU_QUEUE_EMPTY_FLAG_31_16[31..16] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_31_16_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY0_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_31_16_MASK 0xFFFF0000                // AMSDU_QUEUE_EMPTY_FLAG_31_16[31..16]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_31_16_SHFT 16
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_15_8_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY0_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_15_8_MASK 0x0000FF00                // AMSDU_QUEUE_EMPTY_FLAG_15_8[15..8]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_15_8_SHFT 8
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_7_0_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY0_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_7_0_MASK 0x000000FF                // AMSDU_QUEUE_EMPTY_FLAG_7_0[7..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY0_AMSDU_QUEUE_EMPTY_FLAG_7_0_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY1 (0x820c0000 + 0x1404)---

    AMSDU_QUEUE_EMPTY_FLAG_63_32[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY1_AMSDU_QUEUE_EMPTY_FLAG_63_32_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY1_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY1_AMSDU_QUEUE_EMPTY_FLAG_63_32_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_63_32[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY1_AMSDU_QUEUE_EMPTY_FLAG_63_32_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY2 (0x820c0000 + 0x1408)---

    AMSDU_QUEUE_EMPTY_FLAG_95_64[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY2_AMSDU_QUEUE_EMPTY_FLAG_95_64_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY2_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY2_AMSDU_QUEUE_EMPTY_FLAG_95_64_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_95_64[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY2_AMSDU_QUEUE_EMPTY_FLAG_95_64_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY3 (0x820c0000 + 0x140c)---

    AMSDU_QUEUE_EMPTY_FLAG_127_96[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY3_AMSDU_QUEUE_EMPTY_FLAG_127_96_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY3_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY3_AMSDU_QUEUE_EMPTY_FLAG_127_96_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_127_96[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY3_AMSDU_QUEUE_EMPTY_FLAG_127_96_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY4 (0x820c0000 + 0x1410)---

    AMSDU_QUEUE_EMPTY_FLAG_135_128[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY4_AMSDU_QUEUE_EMPTY_FLAG_135_128_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY4_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY4_AMSDU_QUEUE_EMPTY_FLAG_135_128_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_135_128[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY4_AMSDU_QUEUE_EMPTY_FLAG_135_128_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY5 (0x820c0000 + 0x1414)---

    AMSDU_QUEUE_EMPTY_FLAG_191_160[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY5_AMSDU_QUEUE_EMPTY_FLAG_191_160_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY5_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY5_AMSDU_QUEUE_EMPTY_FLAG_191_160_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_191_160[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY5_AMSDU_QUEUE_EMPTY_FLAG_191_160_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY6 (0x820c0000 + 0x1418)---

    AMSDU_QUEUE_EMPTY_FLAG_223_192[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY6_AMSDU_QUEUE_EMPTY_FLAG_223_192_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY6_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY6_AMSDU_QUEUE_EMPTY_FLAG_223_192_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_223_192[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY6_AMSDU_QUEUE_EMPTY_FLAG_223_192_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY7 (0x820c0000 + 0x141c)---

    AMSDU_QUEUE_EMPTY_FLAG_255_224[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY7_AMSDU_QUEUE_EMPTY_FLAG_255_224_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY7_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY7_AMSDU_QUEUE_EMPTY_FLAG_255_224_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_255_224[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY7_AMSDU_QUEUE_EMPTY_FLAG_255_224_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY8 (0x820c0000 + 0x1420)---

    AMSDU_QUEUE_EMPTY_FLAG_263_256[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY8_AMSDU_QUEUE_EMPTY_FLAG_263_256_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY8_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY8_AMSDU_QUEUE_EMPTY_FLAG_263_256_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_263_256[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY8_AMSDU_QUEUE_EMPTY_FLAG_263_256_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY9 (0x820c0000 + 0x1424)---

    AMSDU_QUEUE_EMPTY_FLAG_319_288[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY9_AMSDU_QUEUE_EMPTY_FLAG_319_288_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY9_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY9_AMSDU_QUEUE_EMPTY_FLAG_319_288_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_319_288[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY9_AMSDU_QUEUE_EMPTY_FLAG_319_288_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY10 (0x820c0000 + 0x1428)---

    AMSDU_QUEUE_EMPTY_FLAG_351_320[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY10_AMSDU_QUEUE_EMPTY_FLAG_351_320_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY10_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY10_AMSDU_QUEUE_EMPTY_FLAG_351_320_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_351_320[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY10_AMSDU_QUEUE_EMPTY_FLAG_351_320_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY11 (0x820c0000 + 0x142c)---

    AMSDU_QUEUE_EMPTY_FLAG_383_352[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY11_AMSDU_QUEUE_EMPTY_FLAG_383_352_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY11_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY11_AMSDU_QUEUE_EMPTY_FLAG_383_352_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_383_352[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY11_AMSDU_QUEUE_EMPTY_FLAG_383_352_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY12 (0x820c0000 + 0x1430)---

    AMSDU_QUEUE_EMPTY_FLAG_415_384[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY12_AMSDU_QUEUE_EMPTY_FLAG_415_384_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY12_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY12_AMSDU_QUEUE_EMPTY_FLAG_415_384_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_415_384[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY12_AMSDU_QUEUE_EMPTY_FLAG_415_384_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY13 (0x820c0000 + 0x1434)---

    AMSDU_QUEUE_EMPTY_FLAG_447_416[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY13_AMSDU_QUEUE_EMPTY_FLAG_447_416_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY13_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY13_AMSDU_QUEUE_EMPTY_FLAG_447_416_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_447_416[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY13_AMSDU_QUEUE_EMPTY_FLAG_447_416_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY14 (0x820c0000 + 0x1438)---

    AMSDU_QUEUE_EMPTY_FLAG_479_448[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY14_AMSDU_QUEUE_EMPTY_FLAG_479_448_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY14_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY14_AMSDU_QUEUE_EMPTY_FLAG_479_448_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_479_448[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY14_AMSDU_QUEUE_EMPTY_FLAG_479_448_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY15 (0x820c0000 + 0x143c)---

    AMSDU_QUEUE_EMPTY_FLAG_511_480[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY15_AMSDU_QUEUE_EMPTY_FLAG_511_480_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY15_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY15_AMSDU_QUEUE_EMPTY_FLAG_511_480_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_511_480[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY15_AMSDU_QUEUE_EMPTY_FLAG_511_480_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY16 (0x820c0000 + 0x1440)---

    AMSDU_QUEUE_EMPTY_FLAG_543_512[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY16_AMSDU_QUEUE_EMPTY_FLAG_543_512_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY16_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY16_AMSDU_QUEUE_EMPTY_FLAG_543_512_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_543_512[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY16_AMSDU_QUEUE_EMPTY_FLAG_543_512_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY17 (0x820c0000 + 0x1444)---

    AMSDU_QUEUE_EMPTY_FLAG_575_544[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY17_AMSDU_QUEUE_EMPTY_FLAG_575_544_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY17_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY17_AMSDU_QUEUE_EMPTY_FLAG_575_544_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_575_544[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY17_AMSDU_QUEUE_EMPTY_FLAG_575_544_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY18 (0x820c0000 + 0x1448)---

    AMSDU_QUEUE_EMPTY_FLAG_607_576[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY18_AMSDU_QUEUE_EMPTY_FLAG_607_576_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY18_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY18_AMSDU_QUEUE_EMPTY_FLAG_607_576_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_607_576[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY18_AMSDU_QUEUE_EMPTY_FLAG_607_576_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY19 (0x820c0000 + 0x144c)---

    AMSDU_QUEUE_EMPTY_FLAG_639_608[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY19_AMSDU_QUEUE_EMPTY_FLAG_639_608_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY19_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY19_AMSDU_QUEUE_EMPTY_FLAG_639_608_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_639_608[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY19_AMSDU_QUEUE_EMPTY_FLAG_639_608_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY20 (0x820c0000 + 0x1450)---

    AMSDU_QUEUE_EMPTY_FLAG_671_640[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY20_AMSDU_QUEUE_EMPTY_FLAG_671_640_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY20_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY20_AMSDU_QUEUE_EMPTY_FLAG_671_640_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_671_640[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY20_AMSDU_QUEUE_EMPTY_FLAG_671_640_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY21 (0x820c0000 + 0x1454)---

    AMSDU_QUEUE_EMPTY_FLAG_703_672[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY21_AMSDU_QUEUE_EMPTY_FLAG_703_672_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY21_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY21_AMSDU_QUEUE_EMPTY_FLAG_703_672_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_703_672[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY21_AMSDU_QUEUE_EMPTY_FLAG_703_672_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY22 (0x820c0000 + 0x1458)---

    AMSDU_QUEUE_EMPTY_FLAG_735_704[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY22_AMSDU_QUEUE_EMPTY_FLAG_735_704_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY22_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY22_AMSDU_QUEUE_EMPTY_FLAG_735_704_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_735_704[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY22_AMSDU_QUEUE_EMPTY_FLAG_735_704_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY23 (0x820c0000 + 0x145c)---

    AMSDU_QUEUE_EMPTY_FLAG_767_736[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY23_AMSDU_QUEUE_EMPTY_FLAG_767_736_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY23_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY23_AMSDU_QUEUE_EMPTY_FLAG_767_736_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_767_736[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY23_AMSDU_QUEUE_EMPTY_FLAG_767_736_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY24 (0x820c0000 + 0x1460)---

    AMSDU_QUEUE_EMPTY_FLAG_799_768[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY24_AMSDU_QUEUE_EMPTY_FLAG_799_768_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY24_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY24_AMSDU_QUEUE_EMPTY_FLAG_799_768_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_799_768[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY24_AMSDU_QUEUE_EMPTY_FLAG_799_768_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY25 (0x820c0000 + 0x1464)---

    AMSDU_QUEUE_EMPTY_FLAG_831_800[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY25_AMSDU_QUEUE_EMPTY_FLAG_831_800_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY25_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY25_AMSDU_QUEUE_EMPTY_FLAG_831_800_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_831_800[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY25_AMSDU_QUEUE_EMPTY_FLAG_831_800_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY26 (0x820c0000 + 0x1468)---

    AMSDU_QUEUE_EMPTY_FLAG_863_832[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY26_AMSDU_QUEUE_EMPTY_FLAG_863_832_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY26_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY26_AMSDU_QUEUE_EMPTY_FLAG_863_832_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_863_832[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY26_AMSDU_QUEUE_EMPTY_FLAG_863_832_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY27 (0x820c0000 + 0x146c)---

    AMSDU_QUEUE_EMPTY_FLAG_895_864[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY27_AMSDU_QUEUE_EMPTY_FLAG_895_864_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY27_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY27_AMSDU_QUEUE_EMPTY_FLAG_895_864_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_895_864[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY27_AMSDU_QUEUE_EMPTY_FLAG_895_864_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY28 (0x820c0000 + 0x1470)---

    AMSDU_QUEUE_EMPTY_FLAG_927_896[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY28_AMSDU_QUEUE_EMPTY_FLAG_927_896_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY28_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY28_AMSDU_QUEUE_EMPTY_FLAG_927_896_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_927_896[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY28_AMSDU_QUEUE_EMPTY_FLAG_927_896_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY29 (0x820c0000 + 0x1474)---

    AMSDU_QUEUE_EMPTY_FLAG_959_928[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY29_AMSDU_QUEUE_EMPTY_FLAG_959_928_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY29_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY29_AMSDU_QUEUE_EMPTY_FLAG_959_928_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_959_928[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY29_AMSDU_QUEUE_EMPTY_FLAG_959_928_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY30 (0x820c0000 + 0x1478)---

    AMSDU_QUEUE_EMPTY_FLAG_991_960[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY30_AMSDU_QUEUE_EMPTY_FLAG_991_960_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY30_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY30_AMSDU_QUEUE_EMPTY_FLAG_991_960_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_991_960[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY30_AMSDU_QUEUE_EMPTY_FLAG_991_960_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY31 (0x820c0000 + 0x147c)---

    AMSDU_QUEUE_EMPTY_FLAG_1023_992[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY31_AMSDU_QUEUE_EMPTY_FLAG_1023_992_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY31_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY31_AMSDU_QUEUE_EMPTY_FLAG_1023_992_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_1023_992[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY31_AMSDU_QUEUE_EMPTY_FLAG_1023_992_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY_EXT0 (0x820c0000 + 0x1480)---

    AMSDU_QUEUE_EMPTY_FLAG_EXT_0[3..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0
    AMSDU_QUEUE_EMPTY_FLAG_EXT_0_1[7..4] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0
    AMSDU_QUEUE_EMPTY_FLAG_EXT_0_2[15..8] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0
    AMSDU_QUEUE_EMPTY_FLAG_EXT_0_3[31..16] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_3_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_3_MASK 0xFFFF0000                // AMSDU_QUEUE_EMPTY_FLAG_EXT_0_3[31..16]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_3_SHFT 16
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_2_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_2_MASK 0x0000FF00                // AMSDU_QUEUE_EMPTY_FLAG_EXT_0_2[15..8]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_2_SHFT 8
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_1_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_1_MASK 0x000000F0                // AMSDU_QUEUE_EMPTY_FLAG_EXT_0_1[7..4]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_1_SHFT 4
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY_EXT0_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_MASK 0x0000000F                // AMSDU_QUEUE_EMPTY_FLAG_EXT_0[3..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY_EXT0_AMSDU_QUEUE_EMPTY_FLAG_EXT_0_SHFT 0

/* =====================================================================================

  ---AMSDU_AC3_QUEUE_EMPTY_EXT1 (0x820c0000 + 0x1484)---

    AMSDU_QUEUE_EMPTY_FLAG_EXT_1[31..0] - (RO) Same as AMSDU_QUEUE_EMPTY_FLAG_7_0

 =====================================================================================*/
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY_EXT1_AMSDU_QUEUE_EMPTY_FLAG_EXT_1_ADDR WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY_EXT1_ADDR
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY_EXT1_AMSDU_QUEUE_EMPTY_FLAG_EXT_1_MASK 0xFFFFFFFF                // AMSDU_QUEUE_EMPTY_FLAG_EXT_1[31..0]
#define WF_PLE_TOP_AMSDU_AC3_QUEUE_EMPTY_EXT1_AMSDU_QUEUE_EMPTY_FLAG_EXT_1_SHFT 0

#ifdef __cplusplus
}
#endif

#endif // __WF_PLE_TOP_REGS_H__
