/* SPDX-License-Identifier: BSD-2-Clause */
/*
 * Copyright (c) 2021 MediaTek Inc.
 */

//[File]            : wf_top_cfg_on.h
//[Revision time]   : Fri Jul 16 22:05:51 2021
//[Description]     : This file is auto generated by CODA
//[Copyright]       : Copyright (C) 2021 Mediatek Incorportion. All rights reserved.

#ifndef __WF_TOP_CFG_ON_REGS_H__
#define __WF_TOP_CFG_ON_REGS_H__

#include "hal_common.h"

#ifdef __cplusplus
extern "C" {
#endif


//****************************************************************************
//
//                     WF_TOP_CFG_ON CR Definitions                     
//
//****************************************************************************

#define WF_TOP_CFG_ON_BASE                                     0x81021000

#define WF_TOP_CFG_ON_SLP_CTL_ADDR                             (WF_TOP_CFG_ON_BASE + 0x0) // 1000
#define WF_TOP_CFG_ON_OSC_CTL_ADDR                             (WF_TOP_CFG_ON_BASE + 0x100) // 1100
#define WF_TOP_CFG_ON_OSC_MASK_ADDR                            (WF_TOP_CFG_ON_BASE + 0x104) // 1104
#define WF_TOP_CFG_ON_WPLL_MASK_ADDR                           (WF_TOP_CFG_ON_BASE + 0x10C) // 110C
#define WF_TOP_CFG_ON_OSC_MASK_1_ADDR                          (WF_TOP_CFG_ON_BASE + 0x110) // 1110
#define WF_TOP_CFG_ON_IRQ_CTL_ADDR                             (WF_TOP_CFG_ON_BASE + 0x200) // 1200
#define WF_TOP_CFG_ON_CMDBT_CTL_ADDR                           (WF_TOP_CFG_ON_BASE + 0x400) // 1400
#define WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR                         (WF_TOP_CFG_ON_BASE + 0x408) // 1408
#define WF_TOP_CFG_ON_CMDBT_STATUS_ADDR                        (WF_TOP_CFG_ON_BASE + 0x460) // 1460
#define WF_TOP_CFG_ON_MONFLG_CTL_ADDR                          (WF_TOP_CFG_ON_BASE + 0x500) // 1500
#define WF_TOP_CFG_ON_MONFLG_SEL_0_ADDR                        (WF_TOP_CFG_ON_BASE + 0x504) // 1504
#define WF_TOP_CFG_ON_OFF_MONFLG_CTL_ADDR                      (WF_TOP_CFG_ON_BASE + 0x508) // 1508
#define WF_TOP_CFG_ON_OFF_MONFLG_SEL_0_ADDR                    (WF_TOP_CFG_ON_BASE + 0x50C) // 150C
#define WF_TOP_CFG_ON_MONFLG_STATUS_ADDR                       (WF_TOP_CFG_ON_BASE + 0x5f0) // 15F0
#define WF_TOP_CFG_ON_MISC_ADDR                                (WF_TOP_CFG_ON_BASE + 0x600) // 1600
#define WF_TOP_CFG_ON_ROMCODE_INDEX_ADDR                       (WF_TOP_CFG_ON_BASE + 0x604) // 1604
#define WF_TOP_CFG_ON_HOST_CTL_ADDR                            (WF_TOP_CFG_ON_BASE + 0x608) // 1608
#define WF_TOP_CFG_ON_DBG_SEL_ADDR                             (WF_TOP_CFG_ON_BASE + 0x610) // 1610
#define WF_TOP_CFG_ON_DBG_STATUS_ADDR                          (WF_TOP_CFG_ON_BASE + 0x614) // 1614
#define WF_TOP_CFG_ON_STRAP_STATUS_ADDR                        (WF_TOP_CFG_ON_BASE + 0x618) // 1618
#define WF_TOP_CFG_ON_CLK_STATUS_ADDR                          (WF_TOP_CFG_ON_BASE + 0x61C) // 161C
#define WF_TOP_CFG_ON_EFUSE_ADDR                               (WF_TOP_CFG_ON_BASE + 0x620) // 1620
#define WF_TOP_CFG_ON_BUS_PREADY_STATUS_ADDR                   (WF_TOP_CFG_ON_BASE + 0x670) // 1670
#define WF_TOP_CFG_ON_RESERVED_0_ADDR                          (WF_TOP_CFG_ON_BASE + 0x700) // 1700
#define WF_TOP_CFG_ON_RESERVED_1_ADDR                          (WF_TOP_CFG_ON_BASE + 0x704) // 1704
#define WF_TOP_CFG_ON_RESERVED_2_ADDR                          (WF_TOP_CFG_ON_BASE + 0x708) // 1708
#define WF_TOP_CFG_ON_RESERVED_3_ADDR                          (WF_TOP_CFG_ON_BASE + 0x70C) // 170C
#define WF_TOP_CFG_ON_FLAG_0_1ST_POWER_ON_FLAG_ADDR            (WF_TOP_CFG_ON_BASE + 0x780) // 1780
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_ADDR              (WF_TOP_CFG_ON_BASE + 0x800) // 1800
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_ADDR                 (WF_TOP_CFG_ON_BASE + 0x804) // 1804
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_ADDR                  (WF_TOP_CFG_ON_BASE + 0x808) // 1808
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_ADDR                 (WF_TOP_CFG_ON_BASE + 0x80C) // 180C
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_ADDR                  (WF_TOP_CFG_ON_BASE + 0x810) // 1810
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_ADDR                   (WF_TOP_CFG_ON_BASE + 0x814) // 1814
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_USE_PLL_ADDR      (WF_TOP_CFG_ON_BASE + 0x850) // 1850
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_USE_PLL_ADDR         (WF_TOP_CFG_ON_BASE + 0x854) // 1854
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_USE_PLL_ADDR          (WF_TOP_CFG_ON_BASE + 0x858) // 1858
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_USE_PLL_ADDR         (WF_TOP_CFG_ON_BASE + 0x85C) // 185C
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_USE_PLL_ADDR          (WF_TOP_CFG_ON_BASE + 0x860) // 1860
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_USE_PLL_ADDR           (WF_TOP_CFG_ON_BASE + 0x864) // 1864
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_DEBUG_SEL_ADDR             (WF_TOP_CFG_ON_BASE + 0x900) // 1900
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_DEBUG_FLAG_ADDR            (WF_TOP_CFG_ON_BASE + 0x904) // 1904
#define WF_TOP_CFG_ON_FPGA_RESERVE_ADDR                        (WF_TOP_CFG_ON_BASE + 0xFFC) // 1FFC




/* =====================================================================================

  ---SLP_CTL (0x81021000 + 0x0)---

    NON_1ST_TIME_PWR_ON_CHK_EN[0] - (RW) non-1st time power on indicator enable (MCU needs a indicator for S/W restore after MCU does S/W backup)
                                     1'h0: Disable non-1st time power on indicator when using "Legacy Sleep" mode (no TOP power-down, thus MCU does not need to do S/W backup and restore)
                                     1'h1: Enable non-1st time power on indicator when using "Deep Sleep" mode (TOP power-down)
    NON_1ST_TIME_PWR_ON[1]       - (RO) non-1st time power on indicator (infrom MCU needs to do S/W restore)
                                     set to 1 by "H/W" when (MCU dose "standby" instruction & NON_1ST_TIME_PWR_ON_CHK_EN=1)
                                     clear to 0 by "S/W writing this bit to 1" when MCU finish restore routine
                                     1'h0 : 1st time power on (only valid before clear this bit)
                                     1'h1 : non-1st time power on
                                     
                                     write 1'h0: no function
                                     write 1'h1: clear this bit to 0
                                     read 1'h1: non-1st time power on
                                     read 1'h0: 1st time power on (only valid before clear this bit)
                                     
                                     MCU should perform S/W backup procedure before do "standby" instruction if (NON_1ST_TIME_PWR_ON_CHK_EN=1)
                                     MCU should perform S/W restore procedure after reset if (NON_1ST_TIME_PWR_ON_CHK_EN=1 & NON_1ST_TIME_PWR_ON=1)
    RESERVED2[7..2]              - (RO) Reserved bits
    FORCE_MCU_STOP[8]            - (RW) for FT mode to gen dsleep-leakage pattern usage
                                     force sleep controller to ignore "mcu_stop" from MCU core, thus allow to enter dsleep under FT mode
                                     1'h0: not force
                                     1'h1: force
    VCORE_RDY_RST_B_SEL[9]       - (RW)  xxx 
    RESERVED10[23..10]           - (RO) Reserved bits
    TOP_PWR_STAT[27..24]         - (RO) sleep controller FSM state
                                     4'b0001 : RESET state
                                     4'b0010 : STANDBY state
                                     4'b0100 : IDLE state
                                     4'b1000 : DSLEEP state
    RESERVED28[29..28]           - (RO) Reserved bits
    HW_CONTROL[30]               - (RO) This bit is valid only when HW_CONTROL_EN=1
                                     1'h0 : TOP behavior is controller by S/W
                                     1'h1 : TOP behavior is controlled by H/W
                                     
                                     write 1'h0: let TOP behavior (clock, reset, power, ...) is controlled by S/W
                                     write 1'h1: let TOP behavior (clock, reset, power, ...) is controlled by H/W (this bit is set to 1'h1 when MCU wants to make TOP to enter sleep)
                                     read 1'h0: TOP behavior is controller by S/W
                                     read 1'h1: TOP behavior is controlled by H/W
    HW_CONTROL_EN[31]            - (RW) hardware control TOP power state
                                     1'h0: not enable
                                     1'h1: enable hardware control (this bit is set to 1'h1 when MCU wants to make TOP to enter sleep)

 =====================================================================================*/
#define WF_TOP_CFG_ON_SLP_CTL_HW_CONTROL_EN_ADDR               WF_TOP_CFG_ON_SLP_CTL_ADDR
#define WF_TOP_CFG_ON_SLP_CTL_HW_CONTROL_EN_MASK               0x80000000                // HW_CONTROL_EN[31]
#define WF_TOP_CFG_ON_SLP_CTL_HW_CONTROL_EN_SHFT               31
#define WF_TOP_CFG_ON_SLP_CTL_HW_CONTROL_ADDR                  WF_TOP_CFG_ON_SLP_CTL_ADDR
#define WF_TOP_CFG_ON_SLP_CTL_HW_CONTROL_MASK                  0x40000000                // HW_CONTROL[30]
#define WF_TOP_CFG_ON_SLP_CTL_HW_CONTROL_SHFT                  30
#define WF_TOP_CFG_ON_SLP_CTL_TOP_PWR_STAT_ADDR                WF_TOP_CFG_ON_SLP_CTL_ADDR
#define WF_TOP_CFG_ON_SLP_CTL_TOP_PWR_STAT_MASK                0x0F000000                // TOP_PWR_STAT[27..24]
#define WF_TOP_CFG_ON_SLP_CTL_TOP_PWR_STAT_SHFT                24
#define WF_TOP_CFG_ON_SLP_CTL_VCORE_RDY_RST_B_SEL_ADDR         WF_TOP_CFG_ON_SLP_CTL_ADDR
#define WF_TOP_CFG_ON_SLP_CTL_VCORE_RDY_RST_B_SEL_MASK         0x00000200                // VCORE_RDY_RST_B_SEL[9]
#define WF_TOP_CFG_ON_SLP_CTL_VCORE_RDY_RST_B_SEL_SHFT         9
#define WF_TOP_CFG_ON_SLP_CTL_FORCE_MCU_STOP_ADDR              WF_TOP_CFG_ON_SLP_CTL_ADDR
#define WF_TOP_CFG_ON_SLP_CTL_FORCE_MCU_STOP_MASK              0x00000100                // FORCE_MCU_STOP[8]
#define WF_TOP_CFG_ON_SLP_CTL_FORCE_MCU_STOP_SHFT              8
#define WF_TOP_CFG_ON_SLP_CTL_NON_1ST_TIME_PWR_ON_ADDR         WF_TOP_CFG_ON_SLP_CTL_ADDR
#define WF_TOP_CFG_ON_SLP_CTL_NON_1ST_TIME_PWR_ON_MASK         0x00000002                // NON_1ST_TIME_PWR_ON[1]
#define WF_TOP_CFG_ON_SLP_CTL_NON_1ST_TIME_PWR_ON_SHFT         1
#define WF_TOP_CFG_ON_SLP_CTL_NON_1ST_TIME_PWR_ON_CHK_EN_ADDR  WF_TOP_CFG_ON_SLP_CTL_ADDR
#define WF_TOP_CFG_ON_SLP_CTL_NON_1ST_TIME_PWR_ON_CHK_EN_MASK  0x00000001                // NON_1ST_TIME_PWR_ON_CHK_EN[0]
#define WF_TOP_CFG_ON_SLP_CTL_NON_1ST_TIME_PWR_ON_CHK_EN_SHFT  0

/* =====================================================================================

  ---OSC_CTL (0x81021000 + 0x100)---

    OSC_EN_ALL_CLR_CNT[5..0]     - (RW) mask short osc enble counter
                                     6'h0: masking 1T "osc enable=0"
                                     6'h1: masking 2T "osc enable=0"
                                     . . .
                                     6'h63: masking 64 "osc enable=0"
    RESERVED6[6]                 - (RO) Reserved bits
    OSC_EN_ALL_SEL[7]            - (RW) OSC enable source selection
                                     1'h0: use qualified "osc enable" (mask "short osc enable=0")
                                     1'h1: use original  "osc enable"
    RESERVED8[29..8]             - (RO) Reserved bits
    WF_VCORE_ON[30]              - (RW)  xxx 
    XO_NO_OFF[31]                - (RW) it's a option that not turn-off OSC during "Deep Sleep" mode
                                     1'h0: not force OSC turn-on, OSC turn-on/-off is controlled by normal sleep/wakeup H/W procedure
                                     1'h1: force OSC turn-on

 =====================================================================================*/
#define WF_TOP_CFG_ON_OSC_CTL_XO_NO_OFF_ADDR                   WF_TOP_CFG_ON_OSC_CTL_ADDR
#define WF_TOP_CFG_ON_OSC_CTL_XO_NO_OFF_MASK                   0x80000000                // XO_NO_OFF[31]
#define WF_TOP_CFG_ON_OSC_CTL_XO_NO_OFF_SHFT                   31
#define WF_TOP_CFG_ON_OSC_CTL_WF_VCORE_ON_ADDR                 WF_TOP_CFG_ON_OSC_CTL_ADDR
#define WF_TOP_CFG_ON_OSC_CTL_WF_VCORE_ON_MASK                 0x40000000                // WF_VCORE_ON[30]
#define WF_TOP_CFG_ON_OSC_CTL_WF_VCORE_ON_SHFT                 30
#define WF_TOP_CFG_ON_OSC_CTL_OSC_EN_ALL_SEL_ADDR              WF_TOP_CFG_ON_OSC_CTL_ADDR
#define WF_TOP_CFG_ON_OSC_CTL_OSC_EN_ALL_SEL_MASK              0x00000080                // OSC_EN_ALL_SEL[7]
#define WF_TOP_CFG_ON_OSC_CTL_OSC_EN_ALL_SEL_SHFT              7
#define WF_TOP_CFG_ON_OSC_CTL_OSC_EN_ALL_CLR_CNT_ADDR          WF_TOP_CFG_ON_OSC_CTL_ADDR
#define WF_TOP_CFG_ON_OSC_CTL_OSC_EN_ALL_CLR_CNT_MASK          0x0000003F                // OSC_EN_ALL_CLR_CNT[5..0]
#define WF_TOP_CFG_ON_OSC_CTL_OSC_EN_ALL_CLR_CNT_SHFT          0

/* =====================================================================================

  ---OSC_MASK (0x81021000 + 0x104)---

    OSC_EN_MASK[15..0]           - (RW) mask OSC enable request
                                     [15]: set 1'b1 to mask "BN2 WF OSC EN"
                                     [14]: set 1'b1 to mask "BN2 WF DMA RX BUSY OSC EN"
                                     [13]: set 1'b1 to mask "WF_SDIO_WRAP_BUSY"
                                     [12]: set 1'b1 to mask "MCU_AXIDMA_OSC_EN"
                                     [11]: set 1'b1 to mask "AP2WF OSC EN" (from conn_infra's ap2wf_osc_en, chip top -> conn_infra -> here)
                                     [10]: set 1'b1 to mask "INT HIF OSC EN" (from wfdma_top's int_hif_osc_en)
                                     [9]: set 1'b1 to mask "EXT HIF OSC EN" (from wfdma_top's ext_hif_osc_en)
                                     [8]: set 1'b1 to mask "MCU OSC EN" (from MCU's )mcu_osc_en
                                     [7]: set 1'b1 to mask "PLE OSC EN" (from wf_umac_top's ple_lp_idle_all)
                                     [6]: set 1'b1 to mask "PSE OSC EN" (from wf_umac_top's pse_lp_idle_all)
                                     [5]: set 1'b1 to mask "BN1 WF OSC EN" (from wfsys_on's bn1_wf_osc_en)
                                     [4]: set 1'b1 to mask "BN0 WF OSC EN" (from wfsys_on's bn0_wf_osc_en)
                                     [3]: set 1'b1 to mask "PLE RX OSC EN" (from wf_umac_top's ple_lp_idle_rx)
                                     [2]: set 1'b1 to mask "PSE RX OSC EN" (from wf_umac_top's pse_lp_idle_rx)
                                     [1]: set 1'b1 to mask "BN1 WF DMA RX BUSY OSC EN" (from bn1_wf_lmac_top's bn1_wf_dma_rx_busy)
                                     [0]: set 1'b1 to mask "BN0 WF DMA RX BUSY OSC EN" (from bn0_wf_lmac_top's bn0_wf_dma_rx_busy)
    BN0_WF_DMA_RX_BUSY[16]       - (RO) indicator: "BN0 WF DMA RX BUSY OSC EN" (from bn0_wf_lmac_top's bn0_wf_dma_rx_busy)
    BN1_WF_DMA_RX_BUSY[17]       - (RO) indicator: "BN1 WF DMA RX BUSY OSC EN" (from bn0_wf_lmac_top's bn1_wf_dma_rx_busy)
    PSE_OSC_EN_RX[18]            - (RO) indicator: "PSE RX OSC EN" (from wf_umac_top's pse_lp_idle_rx)
    PLE_OSC_EN_RX[19]            - (RO) indicator: "PLE RX OSC EN" (from wf_umac_top's ple_lp_idle_rx)
    BN0_WF_OSC_EN[20]            - (RO) indicator: "BN0 WF OSC EN" (from wfsys_on's bn0_wf_osc_en)
    BN1_WF_OSC_EN[21]            - (RO) indicator: "BN1 WF OSC EN" (from wfsys_on's bn1_wf_osc_en)
    PSE_OSC_EN[22]               - (RO) indicator: "PSE OSC EN" (from wf_umac_top's pse_lp_idle_all)
    PLE_OSC_EN[23]               - (RO) indicator: "PLE OSC EN" (from wf_umac_top's ple_lp_idle_all)
    MCU_OSC_EN[24]               - (RO) indicator: "MCU OSC EN" (from MCU's mcu_osc_en)
    EXT_HIF_OSC_EN[25]           - (RO) indicator: "EXT HIF OSC EN" (from wfdma_top's ext_hif_osc_en)
    INT_HIF_OSC_EN[26]           - (RO) indicator: "INT HIF OSC EN" (from wfdma_top's int_hif_osc_en)
    AP2CONN_WFSYS_OSC_EN[27]     - (RO) indicator: "AP2WF OSC EN" (from conn_infra's ap2wf_osc_en, chip top -> conn_infra -> here)
    RESERVED28[28]               - (RO) Reserved bits
    MCU_AXIDMA_OSC_EN[29]        - (RO) indicator: "MCU_AXIDMA_OSC_EN"
    RESERVED30[30]               - (RO) Reserved bits
    OSC_EN_ALL[31]               - (RO) indicator : OR all OSC enables

 =====================================================================================*/
#define WF_TOP_CFG_ON_OSC_MASK_OSC_EN_ALL_ADDR                 WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_OSC_EN_ALL_MASK                 0x80000000                // OSC_EN_ALL[31]
#define WF_TOP_CFG_ON_OSC_MASK_OSC_EN_ALL_SHFT                 31
#define WF_TOP_CFG_ON_OSC_MASK_MCU_AXIDMA_OSC_EN_ADDR          WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_MCU_AXIDMA_OSC_EN_MASK          0x20000000                // MCU_AXIDMA_OSC_EN[29]
#define WF_TOP_CFG_ON_OSC_MASK_MCU_AXIDMA_OSC_EN_SHFT          29
#define WF_TOP_CFG_ON_OSC_MASK_AP2CONN_WFSYS_OSC_EN_ADDR       WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_AP2CONN_WFSYS_OSC_EN_MASK       0x08000000                // AP2CONN_WFSYS_OSC_EN[27]
#define WF_TOP_CFG_ON_OSC_MASK_AP2CONN_WFSYS_OSC_EN_SHFT       27
#define WF_TOP_CFG_ON_OSC_MASK_INT_HIF_OSC_EN_ADDR             WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_INT_HIF_OSC_EN_MASK             0x04000000                // INT_HIF_OSC_EN[26]
#define WF_TOP_CFG_ON_OSC_MASK_INT_HIF_OSC_EN_SHFT             26
#define WF_TOP_CFG_ON_OSC_MASK_EXT_HIF_OSC_EN_ADDR             WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_EXT_HIF_OSC_EN_MASK             0x02000000                // EXT_HIF_OSC_EN[25]
#define WF_TOP_CFG_ON_OSC_MASK_EXT_HIF_OSC_EN_SHFT             25
#define WF_TOP_CFG_ON_OSC_MASK_MCU_OSC_EN_ADDR                 WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_MCU_OSC_EN_MASK                 0x01000000                // MCU_OSC_EN[24]
#define WF_TOP_CFG_ON_OSC_MASK_MCU_OSC_EN_SHFT                 24
#define WF_TOP_CFG_ON_OSC_MASK_PLE_OSC_EN_ADDR                 WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_PLE_OSC_EN_MASK                 0x00800000                // PLE_OSC_EN[23]
#define WF_TOP_CFG_ON_OSC_MASK_PLE_OSC_EN_SHFT                 23
#define WF_TOP_CFG_ON_OSC_MASK_PSE_OSC_EN_ADDR                 WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_PSE_OSC_EN_MASK                 0x00400000                // PSE_OSC_EN[22]
#define WF_TOP_CFG_ON_OSC_MASK_PSE_OSC_EN_SHFT                 22
#define WF_TOP_CFG_ON_OSC_MASK_BN1_WF_OSC_EN_ADDR              WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_BN1_WF_OSC_EN_MASK              0x00200000                // BN1_WF_OSC_EN[21]
#define WF_TOP_CFG_ON_OSC_MASK_BN1_WF_OSC_EN_SHFT              21
#define WF_TOP_CFG_ON_OSC_MASK_BN0_WF_OSC_EN_ADDR              WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_BN0_WF_OSC_EN_MASK              0x00100000                // BN0_WF_OSC_EN[20]
#define WF_TOP_CFG_ON_OSC_MASK_BN0_WF_OSC_EN_SHFT              20
#define WF_TOP_CFG_ON_OSC_MASK_PLE_OSC_EN_RX_ADDR              WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_PLE_OSC_EN_RX_MASK              0x00080000                // PLE_OSC_EN_RX[19]
#define WF_TOP_CFG_ON_OSC_MASK_PLE_OSC_EN_RX_SHFT              19
#define WF_TOP_CFG_ON_OSC_MASK_PSE_OSC_EN_RX_ADDR              WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_PSE_OSC_EN_RX_MASK              0x00040000                // PSE_OSC_EN_RX[18]
#define WF_TOP_CFG_ON_OSC_MASK_PSE_OSC_EN_RX_SHFT              18
#define WF_TOP_CFG_ON_OSC_MASK_BN1_WF_DMA_RX_BUSY_ADDR         WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_BN1_WF_DMA_RX_BUSY_MASK         0x00020000                // BN1_WF_DMA_RX_BUSY[17]
#define WF_TOP_CFG_ON_OSC_MASK_BN1_WF_DMA_RX_BUSY_SHFT         17
#define WF_TOP_CFG_ON_OSC_MASK_BN0_WF_DMA_RX_BUSY_ADDR         WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_BN0_WF_DMA_RX_BUSY_MASK         0x00010000                // BN0_WF_DMA_RX_BUSY[16]
#define WF_TOP_CFG_ON_OSC_MASK_BN0_WF_DMA_RX_BUSY_SHFT         16
#define WF_TOP_CFG_ON_OSC_MASK_OSC_EN_MASK_ADDR                WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_OSC_EN_MASK_MASK                0x0000FFFF                // OSC_EN_MASK[15..0]
#define WF_TOP_CFG_ON_OSC_MASK_OSC_EN_MASK_SHFT                0

/* =====================================================================================

  ---WPLL_MASK (0x81021000 + 0x10C)---

    CR_BN1_WF_WPLL_ON_MASK[0]    - (RW) set 1'b1 to mask "BN1_WF_WPLL_ON"
    CR_BN0_WF_WPLL_ON_MASK[1]    - (RW) set 1'b1 to mask "BN0_WF_WPLL_ON"
    CR_WFSYS_WBG_EN_PLL_MASK[2]  - (RW) set 1'b1 to mask "WFSYS_WBG_EN_PLL"
    CR_BN2_WF_WPLL_ON_MASK[3]    - (RW) set 1'b1 to mask "BN2_WF_WPLL_ON"
    CR_LIT_WF_WPLL_ON_MASK[4]    - (RW) set 1'b1 to mask "LIT_WF_WPLL_ON"
    RESERVED5[31..5]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WPLL_MASK_CR_LIT_WF_WPLL_ON_MASK_ADDR    WF_TOP_CFG_ON_WPLL_MASK_ADDR
#define WF_TOP_CFG_ON_WPLL_MASK_CR_LIT_WF_WPLL_ON_MASK_MASK    0x00000010                // CR_LIT_WF_WPLL_ON_MASK[4]
#define WF_TOP_CFG_ON_WPLL_MASK_CR_LIT_WF_WPLL_ON_MASK_SHFT    4
#define WF_TOP_CFG_ON_WPLL_MASK_CR_BN2_WF_WPLL_ON_MASK_ADDR    WF_TOP_CFG_ON_WPLL_MASK_ADDR
#define WF_TOP_CFG_ON_WPLL_MASK_CR_BN2_WF_WPLL_ON_MASK_MASK    0x00000008                // CR_BN2_WF_WPLL_ON_MASK[3]
#define WF_TOP_CFG_ON_WPLL_MASK_CR_BN2_WF_WPLL_ON_MASK_SHFT    3
#define WF_TOP_CFG_ON_WPLL_MASK_CR_WFSYS_WBG_EN_PLL_MASK_ADDR  WF_TOP_CFG_ON_WPLL_MASK_ADDR
#define WF_TOP_CFG_ON_WPLL_MASK_CR_WFSYS_WBG_EN_PLL_MASK_MASK  0x00000004                // CR_WFSYS_WBG_EN_PLL_MASK[2]
#define WF_TOP_CFG_ON_WPLL_MASK_CR_WFSYS_WBG_EN_PLL_MASK_SHFT  2
#define WF_TOP_CFG_ON_WPLL_MASK_CR_BN0_WF_WPLL_ON_MASK_ADDR    WF_TOP_CFG_ON_WPLL_MASK_ADDR
#define WF_TOP_CFG_ON_WPLL_MASK_CR_BN0_WF_WPLL_ON_MASK_MASK    0x00000002                // CR_BN0_WF_WPLL_ON_MASK[1]
#define WF_TOP_CFG_ON_WPLL_MASK_CR_BN0_WF_WPLL_ON_MASK_SHFT    1
#define WF_TOP_CFG_ON_WPLL_MASK_CR_BN1_WF_WPLL_ON_MASK_ADDR    WF_TOP_CFG_ON_WPLL_MASK_ADDR
#define WF_TOP_CFG_ON_WPLL_MASK_CR_BN1_WF_WPLL_ON_MASK_MASK    0x00000001                // CR_BN1_WF_WPLL_ON_MASK[0]
#define WF_TOP_CFG_ON_WPLL_MASK_CR_BN1_WF_WPLL_ON_MASK_SHFT    0

/* =====================================================================================

  ---OSC_MASK_1 (0x81021000 + 0x110)---

    OSC_EN_MASK_1[15..0]         - (RW) mask OSC enable request
                                     [15:2]: reserved
                                     [1]: set 1'b1 to mask "LIT WF OSC EN" 
                                     [0]: set 1'b1 to mask "LIT WF DMA RX BUSY OSC EN"
    BN2_WF_DMA_RX_BUSY[16]       - (RO) indicator: "BN2 WF DMA RX BUSY OSC EN"
    LIT_WF_DMA_RX_BUSY[17]       - (RO) indicator: "LIT WF DMA RX BUSY OSC EN"
    RESERVED18[19..18]           - (RO) Reserved bits
    BN2_WF_OSC_EN[20]            - (RO) indicator: "BN2 WF OSC EN"
    LIT_WF_OSC_EN[21]            - (RO) indicator: "LIT WF OSC EN" (from wfsys_on's bn1_wf_osc_en)
    RESERVED22[31..22]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_OSC_MASK_1_LIT_WF_OSC_EN_ADDR            WF_TOP_CFG_ON_OSC_MASK_1_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_1_LIT_WF_OSC_EN_MASK            0x00200000                // LIT_WF_OSC_EN[21]
#define WF_TOP_CFG_ON_OSC_MASK_1_LIT_WF_OSC_EN_SHFT            21
#define WF_TOP_CFG_ON_OSC_MASK_1_BN2_WF_OSC_EN_ADDR            WF_TOP_CFG_ON_OSC_MASK_1_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_1_BN2_WF_OSC_EN_MASK            0x00100000                // BN2_WF_OSC_EN[20]
#define WF_TOP_CFG_ON_OSC_MASK_1_BN2_WF_OSC_EN_SHFT            20
#define WF_TOP_CFG_ON_OSC_MASK_1_LIT_WF_DMA_RX_BUSY_ADDR       WF_TOP_CFG_ON_OSC_MASK_1_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_1_LIT_WF_DMA_RX_BUSY_MASK       0x00020000                // LIT_WF_DMA_RX_BUSY[17]
#define WF_TOP_CFG_ON_OSC_MASK_1_LIT_WF_DMA_RX_BUSY_SHFT       17
#define WF_TOP_CFG_ON_OSC_MASK_1_BN2_WF_DMA_RX_BUSY_ADDR       WF_TOP_CFG_ON_OSC_MASK_1_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_1_BN2_WF_DMA_RX_BUSY_MASK       0x00010000                // BN2_WF_DMA_RX_BUSY[16]
#define WF_TOP_CFG_ON_OSC_MASK_1_BN2_WF_DMA_RX_BUSY_SHFT       16
#define WF_TOP_CFG_ON_OSC_MASK_1_OSC_EN_MASK_1_ADDR            WF_TOP_CFG_ON_OSC_MASK_1_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_1_OSC_EN_MASK_1_MASK            0x0000FFFF                // OSC_EN_MASK_1[15..0]
#define WF_TOP_CFG_ON_OSC_MASK_1_OSC_EN_MASK_1_SHFT            0

/* =====================================================================================

  ---IRQ_CTL (0x81021000 + 0x200)---

    RESERVED0[0]                 - (RO) Reserved bits
    CMDBT_PLL_IRQ_EN[2..1]       - (RW) enable of cmdbt_pll_irq_b
                                     [0]:For WF Backup/Restore action START
                                     [1]:For WF Backup/Restore action END
                                     1'h0 : Disable the interrupt function
                                     1'h1 : Enable the interrupt function
    RESERVED3[31..3]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_IRQ_CTL_CMDBT_PLL_IRQ_EN_ADDR            WF_TOP_CFG_ON_IRQ_CTL_ADDR
#define WF_TOP_CFG_ON_IRQ_CTL_CMDBT_PLL_IRQ_EN_MASK            0x00000006                // CMDBT_PLL_IRQ_EN[2..1]
#define WF_TOP_CFG_ON_IRQ_CTL_CMDBT_PLL_IRQ_EN_SHFT            1

/* =====================================================================================

  ---CMDBT_CTL (0x81021000 + 0x400)---

    TOP_SLEEP_IND_END[4..0]      - (RW) sleep indicator end region of top_cmdbt_op
                                     3'h0: BN0 WiFi restore (bn0_wlanon to on)
                                     3'h2: BN0 WiFi restore (bn0_sleep to wlanon)
                                     3'h5: UMAC restore
                                     3'h7: TOP restore
                                     4'h8: BN1 WiFi restore (bn1_wlanon to on)
                                     4'ha: BN1 WiFi restore (bn1_sleep to wlanon)
                                     Others: not allowed to set
    TOP_SLEEP_IND_START[9..5]    - (RW) sleep indicator start region of top_cmdbt_op
                                     4'h1: BN0 WiFi backup (bn0_wlanon to sleep)
                                     4'h3: BN0 WiFi backup (bn0_initial to sleep)
                                     4'h4: UMAC backup
                                     4'h6: TOP backup
                                     4'h9: BN1 WiFi backup (bn1_wlanon to sleep)
                                     4'hb: BN1 WiFi backup (bn1_initial to sleep)
                                     Others: not allowed to set
    RESERVED10[23..10]           - (RO) Reserved bits
    TOPUMAC_RS_ING_EN[24]        - (RW) guarantee TOP restore and UMAC restore back-to-back enable
                                     1'b0: disable
                                     1'b1: enable
    RESERVED25[31..25]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_CMDBT_CTL_TOPUMAC_RS_ING_EN_ADDR         WF_TOP_CFG_ON_CMDBT_CTL_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_TOPUMAC_RS_ING_EN_MASK         0x01000000                // TOPUMAC_RS_ING_EN[24]
#define WF_TOP_CFG_ON_CMDBT_CTL_TOPUMAC_RS_ING_EN_SHFT         24
#define WF_TOP_CFG_ON_CMDBT_CTL_TOP_SLEEP_IND_START_ADDR       WF_TOP_CFG_ON_CMDBT_CTL_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_TOP_SLEEP_IND_START_MASK       0x000003E0                // TOP_SLEEP_IND_START[9..5]
#define WF_TOP_CFG_ON_CMDBT_CTL_TOP_SLEEP_IND_START_SHFT       5
#define WF_TOP_CFG_ON_CMDBT_CTL_TOP_SLEEP_IND_END_ADDR         WF_TOP_CFG_ON_CMDBT_CTL_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_TOP_SLEEP_IND_END_MASK         0x0000001F                // TOP_SLEEP_IND_END[4..0]
#define WF_TOP_CFG_ON_CMDBT_CTL_TOP_SLEEP_IND_END_SHFT         0

/* =====================================================================================

  ---CMDBT_CTL_1 (0x81021000 + 0x408)---

    CR_EN_WF_UMAC_PWR_ON_SRC_0[0] - (RW) For DTIM v3.0, wake up wfsys off mtcmos control
    CR_EN_WF_UMAC_PWR_ON_SRC_1[1] - (RW) For DTIM v3.0, wake up wfsys off mtcmos control
    CR_EN_WF_UMAC_PWR_ON_SRC_2[2] - (RW) For DTIM v3.0, wake up wfsys off mtcmos control
    CR_EN_WF_UMAC_PWR_ON_SRC_3[3] - (RW) For DTIM v3.0, wake up wfsys off mtcmos control
    CR_EN_WF_UMAC_PWR_ON_SRC_4[4] - (RW) For DTIM v3.0, wake up wfsys off mtcmos control
    CR_EN_WF_UMAC_PWR_ON_SRC_5[5] - (RW) For DTIM v3.0, wake up wfsys off mtcmos control
    CR_EN_WF_UMAC_PWR_ON_SRC_6[6] - (RW) For DTIM v3.0, wake up wfsys off mtcmos control
    CR_EN_WF_UMAC_PWR_ON_SRC_7[7] - (RW) For DTIM v3.0, wake up wfsys off mtcmos control
    CR_EN_WF_UMAC_PWR_ON_MANUAL[8] - (RW) For DTIM v3.0, wake up wfsys off mtcmos control
    CR_MASK_WF_UMAC_PWR_ON_ALL[9] - (RW) For DTIM v3.0, wake up wfsys off mtcmos control
    RESERVED10[16..10]           - (RO) Reserved bits
    CR_CMDBT_FINISH_PU_CYCLE_CNT[21..17] - (RW)  xxx 
    RESERVED22[31..22]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_CMDBT_FINISH_PU_CYCLE_CNT_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_CMDBT_FINISH_PU_CYCLE_CNT_MASK 0x003E0000                // CR_CMDBT_FINISH_PU_CYCLE_CNT[21..17]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_CMDBT_FINISH_PU_CYCLE_CNT_SHFT 17
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_MASK_WF_UMAC_PWR_ON_ALL_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_MASK_WF_UMAC_PWR_ON_ALL_MASK 0x00000200                // CR_MASK_WF_UMAC_PWR_ON_ALL[9]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_MASK_WF_UMAC_PWR_ON_ALL_SHFT 9
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_MANUAL_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_MANUAL_MASK 0x00000100                // CR_EN_WF_UMAC_PWR_ON_MANUAL[8]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_MANUAL_SHFT 8
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_7_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_7_MASK 0x00000080                // CR_EN_WF_UMAC_PWR_ON_SRC_7[7]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_7_SHFT 7
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_6_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_6_MASK 0x00000040                // CR_EN_WF_UMAC_PWR_ON_SRC_6[6]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_6_SHFT 6
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_5_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_5_MASK 0x00000020                // CR_EN_WF_UMAC_PWR_ON_SRC_5[5]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_5_SHFT 5
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_4_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_4_MASK 0x00000010                // CR_EN_WF_UMAC_PWR_ON_SRC_4[4]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_4_SHFT 4
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_3_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_3_MASK 0x00000008                // CR_EN_WF_UMAC_PWR_ON_SRC_3[3]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_3_SHFT 3
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_2_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_2_MASK 0x00000004                // CR_EN_WF_UMAC_PWR_ON_SRC_2[2]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_2_SHFT 2
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_1_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_1_MASK 0x00000002                // CR_EN_WF_UMAC_PWR_ON_SRC_1[1]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_1_SHFT 1
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_0_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_0_MASK 0x00000001                // CR_EN_WF_UMAC_PWR_ON_SRC_0[0]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_0_SHFT 0

/* =====================================================================================

  ---CMDBT_STATUS (0x81021000 + 0x460)---

    TOP_CMDBT_OP_TOP_UMAC[4..0]  - (RO) monitor of CMDBT "op code" (from wf_top_cfg_on, hclk_ck domain)
                                     5'h00000: bn0_wf_wlanon_to_on (restore)
                                     5'b00001: bn0_wf_wlanon_to_sleep (backup)
                                     5'b00010: bn0_wf_sleep_to_wlanon (restore)
                                     5'b00011: bn0_wf_init_to_sleep (backup)
                                     5'b00100: UMAC backup
                                     5'b00101: UMAC restore
                                     5'b00110: TOP backup
                                     5'b00111: TOP restore
                                     5'h01000: bn1_wf_wlanon_to_on (restore)
                                     5'b01001: bn1_wf_wlanon_to_sleep (backup)
                                     5'b01010: bn1_wf_sleep_to_wlanon (restore)
                                     5'b01011: bn1_wf_init_to_sleep (backup)
                                     5'h01100: bn2_wf_wlanon_to_on (restore)
                                     5'b01101: bn2_wf_wlanon_to_sleep (backup)
                                     5'b01110: bn2_wf_sleep_to_wlanon (restore)
                                     5'b01111: bn2_wf_init_to_sleep (backup)
                                     5'h10000: lit_wf_wlanon_to_on (restore)
                                     5'b10001: lit_wf_wlanon_to_sleep (backup)
                                     5'b10010: lit_wf_sleep_to_wlanon (restore)
                                     5'b10011: lit_wf_init_to_sleep (backup)
    RESERVED5[11..5]             - (RO) Reserved bits
    TOPUMAC_RESTORE_ING[12]      - (RO) top and umac restore indicator
                                     1'h0: not restore period
                                     1'h1: restore period
    TOPUMAC_BACKUP_ING[13]       - (RO) top and umac backup indicator
                                     1'h0: not backup period
                                     1'h1: backup period
    TOPUMAC_RESTORE_DONE[14]     - (RO) top and umac restore done indicator
                                     1'h0: restore is not completed
                                     1'h1: restore is completed
    TOPUMAC_BACKUP_DONE[15]      - (RO) top and umac backup done indicator
                                     1'h0: backup is not completed
                                     1'h1: backup is completed
    WF_TRIG_RS_FLAG_TOP_UMAC[16] - (RO) band0/1 wf mac/phy part's backup/restore record flag when top/umac backup/restore is on-going
                                     1'h0: band0/1 wf mac/phy part's backup/restore is not happened when top/umac backup/restore is on-going
                                     1'h1: band0/1 wf mac/phy part's backup/restore is happened when top/umac backup/restore is on-going
    WF_TRIG_RS_FLAG_LMAC0[17]    - (RO) band0/1 wf mac/phy part's backup/restore record flag when top/umac backup/restore is on-going
                                     1'h0: band0/1 wf mac/phy part's backup/restore is not happened when top/umac backup/restore is on-going
                                     1'h1: band0/1 wf mac/phy part's backup/restore is happened when top/umac backup/restore is on-going
    WF_TRIG_RS_FLAG_PHY0[18]     - (RO) band0/1 wf mac/phy part's backup/restore record flag when top/umac backup/restore is on-going
                                     1'h0: band0/1 wf mac/phy part's backup/restore is not happened when top/umac backup/restore is on-going
                                     1'h1: band0/1 wf mac/phy part's backup/restore is happened when top/umac backup/restore is on-going
    WF_TRIG_RS_FLAG_LMAC1[19]    - (RO) band0/1 wf mac/phy part's backup/restore record flag when top/umac backup/restore is on-going
                                     1'h0: band0/1 wf mac/phy part's backup/restore is not happened when top/umac backup/restore is on-going
                                     1'h1: band0/1 wf mac/phy part's backup/restore is happened when top/umac backup/restore is on-going
    WF_TRIG_RS_FLAG_PHY1[20]     - (RO) band0/1 wf mac/phy part's backup/restore record flag when top/umac backup/restore is on-going
                                     1'h0: band0/1 wf mac/phy part's backup/restore is not happened when top/umac backup/restore is on-going
                                     1'h1: band0/1 wf mac/phy part's backup/restore is happened when top/umac backup/restore is on-going
    WF_TRIG_RS_FLAG_LIT[21]      - (RO) band0/1 wf mac/phy part's backup/restore record flag when top/umac backup/restore is on-going
                                     1'h0: band0/1 wf mac/phy part's backup/restore is not happened when top/umac backup/restore is on-going
                                     1'h1: band0/1 wf mac/phy part's backup/restore is happened when top/umac backup/restore is on-going
    RESERVED22[31..22]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_LIT_ADDR    WF_TOP_CFG_ON_CMDBT_STATUS_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_LIT_MASK    0x00200000                // WF_TRIG_RS_FLAG_LIT[21]
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_LIT_SHFT    21
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_PHY1_ADDR   WF_TOP_CFG_ON_CMDBT_STATUS_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_PHY1_MASK   0x00100000                // WF_TRIG_RS_FLAG_PHY1[20]
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_PHY1_SHFT   20
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_LMAC1_ADDR  WF_TOP_CFG_ON_CMDBT_STATUS_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_LMAC1_MASK  0x00080000                // WF_TRIG_RS_FLAG_LMAC1[19]
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_LMAC1_SHFT  19
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_PHY0_ADDR   WF_TOP_CFG_ON_CMDBT_STATUS_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_PHY0_MASK   0x00040000                // WF_TRIG_RS_FLAG_PHY0[18]
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_PHY0_SHFT   18
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_LMAC0_ADDR  WF_TOP_CFG_ON_CMDBT_STATUS_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_LMAC0_MASK  0x00020000                // WF_TRIG_RS_FLAG_LMAC0[17]
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_LMAC0_SHFT  17
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_TOP_UMAC_ADDR WF_TOP_CFG_ON_CMDBT_STATUS_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_TOP_UMAC_MASK 0x00010000                // WF_TRIG_RS_FLAG_TOP_UMAC[16]
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_TOP_UMAC_SHFT 16
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOPUMAC_BACKUP_DONE_ADDR    WF_TOP_CFG_ON_CMDBT_STATUS_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOPUMAC_BACKUP_DONE_MASK    0x00008000                // TOPUMAC_BACKUP_DONE[15]
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOPUMAC_BACKUP_DONE_SHFT    15
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOPUMAC_RESTORE_DONE_ADDR   WF_TOP_CFG_ON_CMDBT_STATUS_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOPUMAC_RESTORE_DONE_MASK   0x00004000                // TOPUMAC_RESTORE_DONE[14]
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOPUMAC_RESTORE_DONE_SHFT   14
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOPUMAC_BACKUP_ING_ADDR     WF_TOP_CFG_ON_CMDBT_STATUS_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOPUMAC_BACKUP_ING_MASK     0x00002000                // TOPUMAC_BACKUP_ING[13]
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOPUMAC_BACKUP_ING_SHFT     13
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOPUMAC_RESTORE_ING_ADDR    WF_TOP_CFG_ON_CMDBT_STATUS_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOPUMAC_RESTORE_ING_MASK    0x00001000                // TOPUMAC_RESTORE_ING[12]
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOPUMAC_RESTORE_ING_SHFT    12
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOP_CMDBT_OP_TOP_UMAC_ADDR  WF_TOP_CFG_ON_CMDBT_STATUS_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOP_CMDBT_OP_TOP_UMAC_MASK  0x0000001F                // TOP_CMDBT_OP_TOP_UMAC[4..0]
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOP_CMDBT_OP_TOP_UMAC_SHFT  0

/* =====================================================================================

  ---MONFLG_CTL (0x81021000 + 0x500)---

    RESERVED0[28..0]             - (RO) Reserved bits
    WF_MONFLG_BIT_SWAP[29]       - (RW) wfsys monitor flag swap enable
    WF_MONFLG_CTRL_SEL[30]       - (RW) wfsys monitor flag sel
    WF_MONFLG_EN[31]             - (RW) wfsys monitor flag enable

 =====================================================================================*/
#define WF_TOP_CFG_ON_MONFLG_CTL_WF_MONFLG_EN_ADDR             WF_TOP_CFG_ON_MONFLG_CTL_ADDR
#define WF_TOP_CFG_ON_MONFLG_CTL_WF_MONFLG_EN_MASK             0x80000000                // WF_MONFLG_EN[31]
#define WF_TOP_CFG_ON_MONFLG_CTL_WF_MONFLG_EN_SHFT             31
#define WF_TOP_CFG_ON_MONFLG_CTL_WF_MONFLG_CTRL_SEL_ADDR       WF_TOP_CFG_ON_MONFLG_CTL_ADDR
#define WF_TOP_CFG_ON_MONFLG_CTL_WF_MONFLG_CTRL_SEL_MASK       0x40000000                // WF_MONFLG_CTRL_SEL[30]
#define WF_TOP_CFG_ON_MONFLG_CTL_WF_MONFLG_CTRL_SEL_SHFT       30
#define WF_TOP_CFG_ON_MONFLG_CTL_WF_MONFLG_BIT_SWAP_ADDR       WF_TOP_CFG_ON_MONFLG_CTL_ADDR
#define WF_TOP_CFG_ON_MONFLG_CTL_WF_MONFLG_BIT_SWAP_MASK       0x20000000                // WF_MONFLG_BIT_SWAP[29]
#define WF_TOP_CFG_ON_MONFLG_CTL_WF_MONFLG_BIT_SWAP_SHFT       29

/* =====================================================================================

  ---MONFLG_SEL_0 (0x81021000 + 0x504)---

    BIT07TO00[4..0]              - (RW) wfsys monitor flag output[7:0] selection
                                     5'd0: output[7:0] = input0[7:0]
                                     5'd1: output[7:0] = input1[7:0]
                                     . . .
                                     5'd31: output[7:0] = input31[7:0]
    RESERVED5[7..5]              - (RO) Reserved bits
    BIT15TO08[12..8]             - (RW) wfsys monitor flag output[15:8] selection
                                     5'd0: output[15:8] = input0[15:8]
                                     5'd1: output[15:8] = input1[15:8]
                                     . . .
                                     5'd31: output[15:8] = input31[15:8]
    RESERVED13[15..13]           - (RO) Reserved bits
    BIT23TO16[20..16]            - (RW) wfsys monitor flag output[23:16] selection
                                     5'd0: output[23:16] = input0[23:16]
                                     5'd1: output[23:16] = input1[23:16]
                                     . . .
                                     5'd31: output[23:16] = input31[23:16]
    RESERVED21[23..21]           - (RO) Reserved bits
    BIT31TO24[28..24]            - (RW) wfsys monitor flag output[31:24] selection
                                     5'd0: output[31:24] = input0[31:24]
                                     5'd1: output[31:24] = input1[31:24]
                                     . . .
                                     5'd31: output[31:24] = input31[31:24]
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_MONFLG_SEL_0_BIT31TO24_ADDR              WF_TOP_CFG_ON_MONFLG_SEL_0_ADDR
#define WF_TOP_CFG_ON_MONFLG_SEL_0_BIT31TO24_MASK              0x1F000000                // BIT31TO24[28..24]
#define WF_TOP_CFG_ON_MONFLG_SEL_0_BIT31TO24_SHFT              24
#define WF_TOP_CFG_ON_MONFLG_SEL_0_BIT23TO16_ADDR              WF_TOP_CFG_ON_MONFLG_SEL_0_ADDR
#define WF_TOP_CFG_ON_MONFLG_SEL_0_BIT23TO16_MASK              0x001F0000                // BIT23TO16[20..16]
#define WF_TOP_CFG_ON_MONFLG_SEL_0_BIT23TO16_SHFT              16
#define WF_TOP_CFG_ON_MONFLG_SEL_0_BIT15TO08_ADDR              WF_TOP_CFG_ON_MONFLG_SEL_0_ADDR
#define WF_TOP_CFG_ON_MONFLG_SEL_0_BIT15TO08_MASK              0x00001F00                // BIT15TO08[12..8]
#define WF_TOP_CFG_ON_MONFLG_SEL_0_BIT15TO08_SHFT              8
#define WF_TOP_CFG_ON_MONFLG_SEL_0_BIT07TO00_ADDR              WF_TOP_CFG_ON_MONFLG_SEL_0_ADDR
#define WF_TOP_CFG_ON_MONFLG_SEL_0_BIT07TO00_MASK              0x0000001F                // BIT07TO00[4..0]
#define WF_TOP_CFG_ON_MONFLG_SEL_0_BIT07TO00_SHFT              0

/* =====================================================================================

  ---OFF_MONFLG_CTL (0x81021000 + 0x508)---

    RESERVED0[29..0]             - (RO) Reserved bits
    WF_OFF_MONFLG_CTRL_SEL[30]   - (RW) wfsys OFF_monitor flag sel
    WF_OFF_MONFLG_EN[31]         - (RW) wfsys OFF_monitor flag enable

 =====================================================================================*/
#define WF_TOP_CFG_ON_OFF_MONFLG_CTL_WF_OFF_MONFLG_EN_ADDR     WF_TOP_CFG_ON_OFF_MONFLG_CTL_ADDR
#define WF_TOP_CFG_ON_OFF_MONFLG_CTL_WF_OFF_MONFLG_EN_MASK     0x80000000                // WF_OFF_MONFLG_EN[31]
#define WF_TOP_CFG_ON_OFF_MONFLG_CTL_WF_OFF_MONFLG_EN_SHFT     31
#define WF_TOP_CFG_ON_OFF_MONFLG_CTL_WF_OFF_MONFLG_CTRL_SEL_ADDR WF_TOP_CFG_ON_OFF_MONFLG_CTL_ADDR
#define WF_TOP_CFG_ON_OFF_MONFLG_CTL_WF_OFF_MONFLG_CTRL_SEL_MASK 0x40000000                // WF_OFF_MONFLG_CTRL_SEL[30]
#define WF_TOP_CFG_ON_OFF_MONFLG_CTL_WF_OFF_MONFLG_CTRL_SEL_SHFT 30

/* =====================================================================================

  ---OFF_MONFLG_SEL_0 (0x81021000 + 0x50C)---

    OFF_BIT07TO00[4..0]          - (RW) wfsys OFF_monitor flag output[7:0] selection
                                     5'd0: output[7:0] = input0[7:0]
                                     5'd1: output[7:0] = input1[7:0]
                                     . . .
                                     5'd31: output[7:0] = input31[7:0]
    RESERVED5[7..5]              - (RO) Reserved bits
    OFF_BIT15TO08[12..8]         - (RW) wfsys OFF_monitor flag output[15:8] selection
                                     5'd0: output[15:8] = input0[15:8]
                                     5'd1: output[15:8] = input1[15:8]
                                     . . .
                                     5'd31: output[15:8] = input31[15:8]
    RESERVED13[15..13]           - (RO) Reserved bits
    OFF_BIT23TO16[20..16]        - (RW) wfsys OFF_monitor flag output[23:16] selection
                                     5'd0: output[23:16] = input0[23:16]
                                     5'd1: output[23:16] = input1[23:16]
                                     . . .
                                     5'd31: output[23:16] = input31[23:16]
    RESERVED21[23..21]           - (RO) Reserved bits
    OFF_BIT31TO24[28..24]        - (RW) wfsys OFF_monitor flag output[31:24] selection
                                     5'd0: output[31:24] = input0[31:24]
                                     5'd1: output[31:24] = input1[31:24]
                                     . . .
                                     5'd31: output[31:24] = input31[31:24]
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_OFF_MONFLG_SEL_0_OFF_BIT31TO24_ADDR      WF_TOP_CFG_ON_OFF_MONFLG_SEL_0_ADDR
#define WF_TOP_CFG_ON_OFF_MONFLG_SEL_0_OFF_BIT31TO24_MASK      0x1F000000                // OFF_BIT31TO24[28..24]
#define WF_TOP_CFG_ON_OFF_MONFLG_SEL_0_OFF_BIT31TO24_SHFT      24
#define WF_TOP_CFG_ON_OFF_MONFLG_SEL_0_OFF_BIT23TO16_ADDR      WF_TOP_CFG_ON_OFF_MONFLG_SEL_0_ADDR
#define WF_TOP_CFG_ON_OFF_MONFLG_SEL_0_OFF_BIT23TO16_MASK      0x001F0000                // OFF_BIT23TO16[20..16]
#define WF_TOP_CFG_ON_OFF_MONFLG_SEL_0_OFF_BIT23TO16_SHFT      16
#define WF_TOP_CFG_ON_OFF_MONFLG_SEL_0_OFF_BIT15TO08_ADDR      WF_TOP_CFG_ON_OFF_MONFLG_SEL_0_ADDR
#define WF_TOP_CFG_ON_OFF_MONFLG_SEL_0_OFF_BIT15TO08_MASK      0x00001F00                // OFF_BIT15TO08[12..8]
#define WF_TOP_CFG_ON_OFF_MONFLG_SEL_0_OFF_BIT15TO08_SHFT      8
#define WF_TOP_CFG_ON_OFF_MONFLG_SEL_0_OFF_BIT07TO00_ADDR      WF_TOP_CFG_ON_OFF_MONFLG_SEL_0_ADDR
#define WF_TOP_CFG_ON_OFF_MONFLG_SEL_0_OFF_BIT07TO00_MASK      0x0000001F                // OFF_BIT07TO00[4..0]
#define WF_TOP_CFG_ON_OFF_MONFLG_SEL_0_OFF_BIT07TO00_SHFT      0

/* =====================================================================================

  ---MONFLG_STATUS (0x81021000 + 0x5f0)---

    WFSYS_MONFLG_OUT[31..0]      - (RO) debug flag signal of wf_top_monflg_on (whole wfsys's debug flag mux out)

 =====================================================================================*/
#define WF_TOP_CFG_ON_MONFLG_STATUS_WFSYS_MONFLG_OUT_ADDR      WF_TOP_CFG_ON_MONFLG_STATUS_ADDR
#define WF_TOP_CFG_ON_MONFLG_STATUS_WFSYS_MONFLG_OUT_MASK      0xFFFFFFFF                // WFSYS_MONFLG_OUT[31..0]
#define WF_TOP_CFG_ON_MONFLG_STATUS_WFSYS_MONFLG_OUT_SHFT      0

/* =====================================================================================

  ---MISC (0x81021000 + 0x600)---

    CONN_INFRA_RDY[0]            - (RO)  xxx 
    DRV_FW_STAT_SYNC[3..1]       - (RW)  xxx 
    BYPASS_WF_PON[4]             - (RW)  xxx 
    BYPASS_WF_FW_DOWNLOAD[5]     - (RW)  xxx 
    BYPASS_WF_CALIBRATION[6]     - (RW)  xxx 
    RESERVED_FOR_WF_BYPASS[7]    - (RW)  xxx 
    WF_PREVENT_SLP_SEL[8]        - (RW)  xxx 
    WF_PREVENT_SLP_SW[9]         - (RW)  xxx 
    MASK_CONN_INFRA_RDY[10]      - (RW) 1'b0: un-mask
                                     1'b1: mask
    RESERVED11[31..11]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_MISC_MASK_CONN_INFRA_RDY_ADDR            WF_TOP_CFG_ON_MISC_ADDR
#define WF_TOP_CFG_ON_MISC_MASK_CONN_INFRA_RDY_MASK            0x00000400                // MASK_CONN_INFRA_RDY[10]
#define WF_TOP_CFG_ON_MISC_MASK_CONN_INFRA_RDY_SHFT            10
#define WF_TOP_CFG_ON_MISC_WF_PREVENT_SLP_SW_ADDR              WF_TOP_CFG_ON_MISC_ADDR
#define WF_TOP_CFG_ON_MISC_WF_PREVENT_SLP_SW_MASK              0x00000200                // WF_PREVENT_SLP_SW[9]
#define WF_TOP_CFG_ON_MISC_WF_PREVENT_SLP_SW_SHFT              9
#define WF_TOP_CFG_ON_MISC_WF_PREVENT_SLP_SEL_ADDR             WF_TOP_CFG_ON_MISC_ADDR
#define WF_TOP_CFG_ON_MISC_WF_PREVENT_SLP_SEL_MASK             0x00000100                // WF_PREVENT_SLP_SEL[8]
#define WF_TOP_CFG_ON_MISC_WF_PREVENT_SLP_SEL_SHFT             8
#define WF_TOP_CFG_ON_MISC_RESERVED_FOR_WF_BYPASS_ADDR         WF_TOP_CFG_ON_MISC_ADDR
#define WF_TOP_CFG_ON_MISC_RESERVED_FOR_WF_BYPASS_MASK         0x00000080                // RESERVED_FOR_WF_BYPASS[7]
#define WF_TOP_CFG_ON_MISC_RESERVED_FOR_WF_BYPASS_SHFT         7
#define WF_TOP_CFG_ON_MISC_BYPASS_WF_CALIBRATION_ADDR          WF_TOP_CFG_ON_MISC_ADDR
#define WF_TOP_CFG_ON_MISC_BYPASS_WF_CALIBRATION_MASK          0x00000040                // BYPASS_WF_CALIBRATION[6]
#define WF_TOP_CFG_ON_MISC_BYPASS_WF_CALIBRATION_SHFT          6
#define WF_TOP_CFG_ON_MISC_BYPASS_WF_FW_DOWNLOAD_ADDR          WF_TOP_CFG_ON_MISC_ADDR
#define WF_TOP_CFG_ON_MISC_BYPASS_WF_FW_DOWNLOAD_MASK          0x00000020                // BYPASS_WF_FW_DOWNLOAD[5]
#define WF_TOP_CFG_ON_MISC_BYPASS_WF_FW_DOWNLOAD_SHFT          5
#define WF_TOP_CFG_ON_MISC_BYPASS_WF_PON_ADDR                  WF_TOP_CFG_ON_MISC_ADDR
#define WF_TOP_CFG_ON_MISC_BYPASS_WF_PON_MASK                  0x00000010                // BYPASS_WF_PON[4]
#define WF_TOP_CFG_ON_MISC_BYPASS_WF_PON_SHFT                  4
#define WF_TOP_CFG_ON_MISC_DRV_FW_STAT_SYNC_ADDR               WF_TOP_CFG_ON_MISC_ADDR
#define WF_TOP_CFG_ON_MISC_DRV_FW_STAT_SYNC_MASK               0x0000000E                // DRV_FW_STAT_SYNC[3..1]
#define WF_TOP_CFG_ON_MISC_DRV_FW_STAT_SYNC_SHFT               1
#define WF_TOP_CFG_ON_MISC_CONN_INFRA_RDY_ADDR                 WF_TOP_CFG_ON_MISC_ADDR
#define WF_TOP_CFG_ON_MISC_CONN_INFRA_RDY_MASK                 0x00000001                // CONN_INFRA_RDY[0]
#define WF_TOP_CFG_ON_MISC_CONN_INFRA_RDY_SHFT                 0

/* =====================================================================================

  ---ROMCODE_INDEX (0x81021000 + 0x604)---

    ROM_CODE_INDEX[31..0]        - (RW) SE who handles WFSYS MCU ROM code could use this CR for ROM code sequence index indicator to complete
                                     1. ROM code debug
                                     2. power-on sequence check (from PC=0 to PC= cos_idle_loop, it's useful for ROM code co-sim stage)
                                     3. other SE's application purposes

 =====================================================================================*/
#define WF_TOP_CFG_ON_ROMCODE_INDEX_ROM_CODE_INDEX_ADDR        WF_TOP_CFG_ON_ROMCODE_INDEX_ADDR
#define WF_TOP_CFG_ON_ROMCODE_INDEX_ROM_CODE_INDEX_MASK        0xFFFFFFFF                // ROM_CODE_INDEX[31..0]
#define WF_TOP_CFG_ON_ROMCODE_INDEX_ROM_CODE_INDEX_SHFT        0

/* =====================================================================================

  ---HOST_CTL (0x81021000 + 0x608)---

    WF2AP_HOST_ON_CFG[15..0]     - (RW)  xxx 
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_HOST_CTL_WF2AP_HOST_ON_CFG_ADDR          WF_TOP_CFG_ON_HOST_CTL_ADDR
#define WF_TOP_CFG_ON_HOST_CTL_WF2AP_HOST_ON_CFG_MASK          0x0000FFFF                // WF2AP_HOST_ON_CFG[15..0]
#define WF_TOP_CFG_ON_HOST_CTL_WF2AP_HOST_ON_CFG_SHFT          0

/* =====================================================================================

  ---DBG_SEL (0x81021000 + 0x610)---

    DBG_SEL[4..0]                - (RW) debug flag select signal of wf_top_cfg_on
    RESERVED5[31..5]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_DBG_SEL_DBG_SEL_ADDR                     WF_TOP_CFG_ON_DBG_SEL_ADDR
#define WF_TOP_CFG_ON_DBG_SEL_DBG_SEL_MASK                     0x0000001F                // DBG_SEL[4..0]
#define WF_TOP_CFG_ON_DBG_SEL_DBG_SEL_SHFT                     0

/* =====================================================================================

  ---DBG_STATUS (0x81021000 + 0x614)---

    WF_TOP_CFG_ON_DBG[31..0]     - (RO) debug flag signal of wf_top_cfg_on (only wf_top_cfg_on's debug flag mux out)

 =====================================================================================*/
#define WF_TOP_CFG_ON_DBG_STATUS_WF_TOP_CFG_ON_DBG_ADDR        WF_TOP_CFG_ON_DBG_STATUS_ADDR
#define WF_TOP_CFG_ON_DBG_STATUS_WF_TOP_CFG_ON_DBG_MASK        0xFFFFFFFF                // WF_TOP_CFG_ON_DBG[31..0]
#define WF_TOP_CFG_ON_DBG_STATUS_WF_TOP_CFG_ON_DBG_SHFT        0

/* =====================================================================================

  ---STRAP_STATUS (0x81021000 + 0x618)---

    OSC_IS_20M[0]                - (RO) OSC is 20MHz strap status (active-high)
    OSC_IS_24M[1]                - (RO) OSC is 24MHz strap status (active-high)
    OSC_IS_25M[2]                - (RO) OSC is 25MHz strap status (active-high)
    OSC_IS_26M[3]                - (RO) OSC is 26MHz strap status (active-high)
    OSC_IS_40M[4]                - (RO) OSC is 40MHz strap status (active-high)
    OSC_IS_52M[5]                - (RO) OSC is 52MHz strap status (active-high)
    RESERVED6[7..6]              - (RO) Reserved bits
    OLT_BLT_MODE[8]              - (RO) OLT BLT mode strap status (active-high)
    RESERVED9[9]                 - (RO) Reserved bits
    WFSYSSTRAP_MODE[10]          - (RO) wfsys system debug mode strap status (active-high)
    RESERVED11[11]               - (RO) Reserved bits
    RBIST_MODE[12]               - (RO) connsys RBIST mode strap status (active-high)
    CONN_SPI2AHB_MODE[13]        - (RO) connsys SPI to AHB mode strap status (active-high)
    CONN_TEST_MODE[14]           - (RO) connsys test mode strap status, which indicates SPI2AHB, RBIST, ATPG mode (active-high)
    CONN_FORCE_PWR_ON_MODE[15]   - (RO) force connsys MTCMOS and memory all on mode strap status (active-high)
    CONN_EXTCK_MODE[16]          - (RO) connsys external clock mode strap status (active-high)
    CONN_BYPASS_ROM_MODE[17]     - (RO) connsys bypass rom code mode strap status (active-high)
    CONN_SPEEDUP_OSC_STABLE_MODE[18] - (RO) connsys speedup OSC stable mode strap status (active-high)
    RESERVED19[31..19]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_SPEEDUP_OSC_STABLE_MODE_ADDR WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_SPEEDUP_OSC_STABLE_MODE_MASK 0x00040000                // CONN_SPEEDUP_OSC_STABLE_MODE[18]
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_SPEEDUP_OSC_STABLE_MODE_SHFT 18
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_BYPASS_ROM_MODE_ADDR   WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_BYPASS_ROM_MODE_MASK   0x00020000                // CONN_BYPASS_ROM_MODE[17]
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_BYPASS_ROM_MODE_SHFT   17
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_EXTCK_MODE_ADDR        WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_EXTCK_MODE_MASK        0x00010000                // CONN_EXTCK_MODE[16]
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_EXTCK_MODE_SHFT        16
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_FORCE_PWR_ON_MODE_ADDR WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_FORCE_PWR_ON_MODE_MASK 0x00008000                // CONN_FORCE_PWR_ON_MODE[15]
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_FORCE_PWR_ON_MODE_SHFT 15
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_TEST_MODE_ADDR         WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_TEST_MODE_MASK         0x00004000                // CONN_TEST_MODE[14]
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_TEST_MODE_SHFT         14
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_SPI2AHB_MODE_ADDR      WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_SPI2AHB_MODE_MASK      0x00002000                // CONN_SPI2AHB_MODE[13]
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_SPI2AHB_MODE_SHFT      13
#define WF_TOP_CFG_ON_STRAP_STATUS_RBIST_MODE_ADDR             WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_RBIST_MODE_MASK             0x00001000                // RBIST_MODE[12]
#define WF_TOP_CFG_ON_STRAP_STATUS_RBIST_MODE_SHFT             12
#define WF_TOP_CFG_ON_STRAP_STATUS_WFSYSSTRAP_MODE_ADDR        WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_WFSYSSTRAP_MODE_MASK        0x00000400                // WFSYSSTRAP_MODE[10]
#define WF_TOP_CFG_ON_STRAP_STATUS_WFSYSSTRAP_MODE_SHFT        10
#define WF_TOP_CFG_ON_STRAP_STATUS_OLT_BLT_MODE_ADDR           WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_OLT_BLT_MODE_MASK           0x00000100                // OLT_BLT_MODE[8]
#define WF_TOP_CFG_ON_STRAP_STATUS_OLT_BLT_MODE_SHFT           8
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_52M_ADDR             WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_52M_MASK             0x00000020                // OSC_IS_52M[5]
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_52M_SHFT             5
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_40M_ADDR             WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_40M_MASK             0x00000010                // OSC_IS_40M[4]
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_40M_SHFT             4
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_26M_ADDR             WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_26M_MASK             0x00000008                // OSC_IS_26M[3]
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_26M_SHFT             3
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_25M_ADDR             WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_25M_MASK             0x00000004                // OSC_IS_25M[2]
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_25M_SHFT             2
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_24M_ADDR             WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_24M_MASK             0x00000002                // OSC_IS_24M[1]
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_24M_SHFT             1
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_20M_ADDR             WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_20M_MASK             0x00000001                // OSC_IS_20M[0]
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_20M_SHFT             0

/* =====================================================================================

  ---CLK_STATUS (0x81021000 + 0x61C)---

    HCLK_SWITCH_RDY[3..0]        - (RO) bus clock switch indicator
                                     4'h0: bus clock is switching from one clock to anoter clock
                                     4'h1: bus clock is selected to osc clock
                                     4'h2:  bus clock is selected to 32KHz clock
                                     4'h4:  bus clock is selected to wpll clock
                                     4'h8:  bus clock is selected to RBIST clock
    RESERVED4[7..4]              - (RO) Reserved bits
    SLPCTL_SWITCH_RDY[9..8]      - (RO)  xxx 
    RESERVED10[15..10]           - (RO) Reserved bits
    OSC_RDY_OUT[16]              - (RO) osc ready
                                     1'h0: not ready
                                     1'h1: ready
    WPLL_RDY[17]                 - (RO) wpll ready
                                     1'h0: not ready
                                     1'h1: ready
    WFSYS_VCORE_RDY[18]          - (RO) vcore ready
                                     1'h0: not ready
                                     1'h1: ready
    WFSYS_OSC_ON[19]             - (RO) wfsys osc enable request
                                     1'h0: not request osc clock
                                     1'h1: request osc clock
    WFSYS_OSC_ON_ACK[20]         - (RO) wfsys osc enable request acknowledgement
                                     1'h0: not acknowledgement
                                     1'h1: acknowledgement
    BUS_CLK_EN[21]               - (RO) bus clock enable
                                     1'h0: disable
                                     1'h1: enable
    CPU_CLK_EN[22]               - (RO) cpu clock enable
                                     1'h0: disable
                                     1'h1: enable
    ULM_CLK_EN[23]               - (RO) ulm clock enable
                                     1'h0: disable
                                     1'h1: enable
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_CLK_STATUS_ULM_CLK_EN_ADDR               WF_TOP_CFG_ON_CLK_STATUS_ADDR
#define WF_TOP_CFG_ON_CLK_STATUS_ULM_CLK_EN_MASK               0x00800000                // ULM_CLK_EN[23]
#define WF_TOP_CFG_ON_CLK_STATUS_ULM_CLK_EN_SHFT               23
#define WF_TOP_CFG_ON_CLK_STATUS_CPU_CLK_EN_ADDR               WF_TOP_CFG_ON_CLK_STATUS_ADDR
#define WF_TOP_CFG_ON_CLK_STATUS_CPU_CLK_EN_MASK               0x00400000                // CPU_CLK_EN[22]
#define WF_TOP_CFG_ON_CLK_STATUS_CPU_CLK_EN_SHFT               22
#define WF_TOP_CFG_ON_CLK_STATUS_BUS_CLK_EN_ADDR               WF_TOP_CFG_ON_CLK_STATUS_ADDR
#define WF_TOP_CFG_ON_CLK_STATUS_BUS_CLK_EN_MASK               0x00200000                // BUS_CLK_EN[21]
#define WF_TOP_CFG_ON_CLK_STATUS_BUS_CLK_EN_SHFT               21
#define WF_TOP_CFG_ON_CLK_STATUS_WFSYS_OSC_ON_ACK_ADDR         WF_TOP_CFG_ON_CLK_STATUS_ADDR
#define WF_TOP_CFG_ON_CLK_STATUS_WFSYS_OSC_ON_ACK_MASK         0x00100000                // WFSYS_OSC_ON_ACK[20]
#define WF_TOP_CFG_ON_CLK_STATUS_WFSYS_OSC_ON_ACK_SHFT         20
#define WF_TOP_CFG_ON_CLK_STATUS_WFSYS_OSC_ON_ADDR             WF_TOP_CFG_ON_CLK_STATUS_ADDR
#define WF_TOP_CFG_ON_CLK_STATUS_WFSYS_OSC_ON_MASK             0x00080000                // WFSYS_OSC_ON[19]
#define WF_TOP_CFG_ON_CLK_STATUS_WFSYS_OSC_ON_SHFT             19
#define WF_TOP_CFG_ON_CLK_STATUS_WFSYS_VCORE_RDY_ADDR          WF_TOP_CFG_ON_CLK_STATUS_ADDR
#define WF_TOP_CFG_ON_CLK_STATUS_WFSYS_VCORE_RDY_MASK          0x00040000                // WFSYS_VCORE_RDY[18]
#define WF_TOP_CFG_ON_CLK_STATUS_WFSYS_VCORE_RDY_SHFT          18
#define WF_TOP_CFG_ON_CLK_STATUS_WPLL_RDY_ADDR                 WF_TOP_CFG_ON_CLK_STATUS_ADDR
#define WF_TOP_CFG_ON_CLK_STATUS_WPLL_RDY_MASK                 0x00020000                // WPLL_RDY[17]
#define WF_TOP_CFG_ON_CLK_STATUS_WPLL_RDY_SHFT                 17
#define WF_TOP_CFG_ON_CLK_STATUS_OSC_RDY_OUT_ADDR              WF_TOP_CFG_ON_CLK_STATUS_ADDR
#define WF_TOP_CFG_ON_CLK_STATUS_OSC_RDY_OUT_MASK              0x00010000                // OSC_RDY_OUT[16]
#define WF_TOP_CFG_ON_CLK_STATUS_OSC_RDY_OUT_SHFT              16
#define WF_TOP_CFG_ON_CLK_STATUS_SLPCTL_SWITCH_RDY_ADDR        WF_TOP_CFG_ON_CLK_STATUS_ADDR
#define WF_TOP_CFG_ON_CLK_STATUS_SLPCTL_SWITCH_RDY_MASK        0x00000300                // SLPCTL_SWITCH_RDY[9..8]
#define WF_TOP_CFG_ON_CLK_STATUS_SLPCTL_SWITCH_RDY_SHFT        8
#define WF_TOP_CFG_ON_CLK_STATUS_HCLK_SWITCH_RDY_ADDR          WF_TOP_CFG_ON_CLK_STATUS_ADDR
#define WF_TOP_CFG_ON_CLK_STATUS_HCLK_SWITCH_RDY_MASK          0x0000000F                // HCLK_SWITCH_RDY[3..0]
#define WF_TOP_CFG_ON_CLK_STATUS_HCLK_SWITCH_RDY_SHFT          0

/* =====================================================================================

  ---EFUSE (0x81021000 + 0x620)---

    AP2WF_EFUSE_DATA[15..0]      - (RO) efuse data
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_EFUSE_AP2WF_EFUSE_DATA_ADDR              WF_TOP_CFG_ON_EFUSE_ADDR
#define WF_TOP_CFG_ON_EFUSE_AP2WF_EFUSE_DATA_MASK              0x0000FFFF                // AP2WF_EFUSE_DATA[15..0]
#define WF_TOP_CFG_ON_EFUSE_AP2WF_EFUSE_DATA_SHFT              0

/* =====================================================================================

  ---BUS_PREADY_STATUS (0x81021000 + 0x670)---

    RO_WF_TOP_MISC_ON__PREADY_BUS[31..0] - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_BUS_PREADY_STATUS_RO_WF_TOP_MISC_ON__PREADY_BUS_ADDR WF_TOP_CFG_ON_BUS_PREADY_STATUS_ADDR
#define WF_TOP_CFG_ON_BUS_PREADY_STATUS_RO_WF_TOP_MISC_ON__PREADY_BUS_MASK 0xFFFFFFFF                // RO_WF_TOP_MISC_ON__PREADY_BUS[31..0]
#define WF_TOP_CFG_ON_BUS_PREADY_STATUS_RO_WF_TOP_MISC_ON__PREADY_BUS_SHFT 0

/* =====================================================================================

  ---RESERVED_0 (0x81021000 + 0x700)---

    RESERVED_0[31..0]            - (RW) NOT allow for S/W usage, it's reserved for ECO purpose or other H/W purpose.

 =====================================================================================*/
#define WF_TOP_CFG_ON_RESERVED_0_RESERVED_0_ADDR               WF_TOP_CFG_ON_RESERVED_0_ADDR
#define WF_TOP_CFG_ON_RESERVED_0_RESERVED_0_MASK               0xFFFFFFFF                // RESERVED_0[31..0]
#define WF_TOP_CFG_ON_RESERVED_0_RESERVED_0_SHFT               0

/* =====================================================================================

  ---RESERVED_1 (0x81021000 + 0x704)---

    RESERVED_1[31..0]            - (RW) NOT allow for S/W usage, it's reserved for ECO purpose or other H/W purpose.

 =====================================================================================*/
#define WF_TOP_CFG_ON_RESERVED_1_RESERVED_1_ADDR               WF_TOP_CFG_ON_RESERVED_1_ADDR
#define WF_TOP_CFG_ON_RESERVED_1_RESERVED_1_MASK               0xFFFFFFFF                // RESERVED_1[31..0]
#define WF_TOP_CFG_ON_RESERVED_1_RESERVED_1_SHFT               0

/* =====================================================================================

  ---RESERVED_2 (0x81021000 + 0x708)---

    RESERVED_2[31..0]            - (RW) NOT allow for S/W usage, it's reserved for ECO purpose or other H/W purpose.

 =====================================================================================*/
#define WF_TOP_CFG_ON_RESERVED_2_RESERVED_2_ADDR               WF_TOP_CFG_ON_RESERVED_2_ADDR
#define WF_TOP_CFG_ON_RESERVED_2_RESERVED_2_MASK               0xFFFFFFFF                // RESERVED_2[31..0]
#define WF_TOP_CFG_ON_RESERVED_2_RESERVED_2_SHFT               0

/* =====================================================================================

  ---RESERVED_3 (0x81021000 + 0x70C)---

    RESERVED_3[31..0]            - (RW) NOT allow for S/W usage, it's reserved for ECO purpose or other H/W purpose.

 =====================================================================================*/
#define WF_TOP_CFG_ON_RESERVED_3_RESERVED_3_ADDR               WF_TOP_CFG_ON_RESERVED_3_ADDR
#define WF_TOP_CFG_ON_RESERVED_3_RESERVED_3_MASK               0xFFFFFFFF                // RESERVED_3[31..0]
#define WF_TOP_CFG_ON_RESERVED_3_RESERVED_3_SHFT               0

/* =====================================================================================

  ---FLAG_0_1ST_POWER_ON_FLAG (0x81021000 + 0x780)---

    CR_1ST_POWER_ON_FLAG[31..0]  - (RW) cr_1st_power_on_flag

 =====================================================================================*/
#define WF_TOP_CFG_ON_FLAG_0_1ST_POWER_ON_FLAG_CR_1ST_POWER_ON_FLAG_ADDR WF_TOP_CFG_ON_FLAG_0_1ST_POWER_ON_FLAG_ADDR
#define WF_TOP_CFG_ON_FLAG_0_1ST_POWER_ON_FLAG_CR_1ST_POWER_ON_FLAG_MASK 0xFFFFFFFF                // CR_1ST_POWER_ON_FLAG[31..0]
#define WF_TOP_CFG_ON_FLAG_0_1ST_POWER_ON_FLAG_CR_1ST_POWER_ON_FLAG_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_TOP_UMAC (0x81021000 + 0x800)---

    CR_CMDBT_CONTROL_ENABLE_TOP_UMAC[19..0] - (RW) CR_CMDBT_CONTROL_ENABLE_TOP_UMAC
    CMDBT_ST_TOP_UMAC[25..20]    - (RO) moniter of CMDBT "status" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
                                     [0]=0: TOP restore done
                                     [0]=1: TOP backup done
                                     [1]=0: UMAC restore done
                                     [1]=1: UMAC backup done
                                     [2]=0: BN0 WiFi restore done
                                     [2]=1: BN0 WiFi backup done
                                     [3]=0: BN1 WiFi restore done
                                     [3]=1: BN1 WiFi backup done
                                     [4]=0: BN2 WiFi restore done
                                     [4]=1: BN2 WiFi backup done
                                     [5]=0: LIT WiFi restore done
                                     [5]=1: LIT WiFi backup done
    CMDBT_BUSY_TOP_UMAC[26]      - (RO) monitor of CMDBT "busy" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
    RESERVED27[31..27]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_CMDBT_BUSY_TOP_UMAC_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_CMDBT_BUSY_TOP_UMAC_MASK 0x04000000                // CMDBT_BUSY_TOP_UMAC[26]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_CMDBT_BUSY_TOP_UMAC_SHFT 26
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_CMDBT_ST_TOP_UMAC_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_CMDBT_ST_TOP_UMAC_MASK 0x03F00000                // CMDBT_ST_TOP_UMAC[25..20]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_CMDBT_ST_TOP_UMAC_SHFT 20
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_CR_CMDBT_CONTROL_ENABLE_TOP_UMAC_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_CR_CMDBT_CONTROL_ENABLE_TOP_UMAC_MASK 0x000FFFFF                // CR_CMDBT_CONTROL_ENABLE_TOP_UMAC[19..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_CR_CMDBT_CONTROL_ENABLE_TOP_UMAC_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_LMAC0 (0x81021000 + 0x804)---

    CR_CMDBT_CONTROL_ENABLE_LMAC0[19..0] - (RW) CR_CMDBT_CONTROL_ENABLE_LMAC0
    CMDBT_ST_LMAC0[25..20]       - (RO) moniter of CMDBT "status" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
                                     [0]=0: TOP restore done
                                     [0]=1: TOP backup done
                                     [1]=0: UMAC restore done
                                     [1]=1: UMAC backup done
                                     [2]=0: BN0 WiFi restore done
                                     [2]=1: BN0 WiFi backup done
                                     [3]=0: BN1 WiFi restore done
                                     [3]=1: BN1 WiFi backup done
                                     [4]=0: BN2 WiFi restore done
                                     [4]=1: BN2 WiFi backup done
                                     [5]=0: LIT WiFi restore done
                                     [5]=1: LIT WiFi backup done
    CMDBT_BUSY_LMAC0[26]         - (RO) monitor of CMDBT "busy" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
    RESERVED27[31..27]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_CMDBT_BUSY_LMAC0_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_CMDBT_BUSY_LMAC0_MASK 0x04000000                // CMDBT_BUSY_LMAC0[26]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_CMDBT_BUSY_LMAC0_SHFT 26
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_CMDBT_ST_LMAC0_ADDR  WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_CMDBT_ST_LMAC0_MASK  0x03F00000                // CMDBT_ST_LMAC0[25..20]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_CMDBT_ST_LMAC0_SHFT  20
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_CR_CMDBT_CONTROL_ENABLE_LMAC0_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_CR_CMDBT_CONTROL_ENABLE_LMAC0_MASK 0x000FFFFF                // CR_CMDBT_CONTROL_ENABLE_LMAC0[19..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_CR_CMDBT_CONTROL_ENABLE_LMAC0_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_PHY0 (0x81021000 + 0x808)---

    CR_CMDBT_CONTROL_ENABLE_PHY0[19..0] - (RW) CR_CMDBT_CONTROL_ENABLE_PHY0
    CMDBT_ST_PHY0[25..20]        - (RO) moniter of CMDBT "status" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
                                     [0]=0: TOP restore done
                                     [0]=1: TOP backup done
                                     [1]=0: UMAC restore done
                                     [1]=1: UMAC backup done
                                     [2]=0: BN0 WiFi restore done
                                     [2]=1: BN0 WiFi backup done
                                     [3]=0: BN1 WiFi restore done
                                     [3]=1: BN1 WiFi backup done
                                     [4]=0: BN2 WiFi restore done
                                     [4]=1: BN2 WiFi backup done
                                     [5]=0: LIT WiFi restore done
                                     [5]=1: LIT WiFi backup done
    CMDBT_BUSY_PHY0[26]          - (RO) monitor of CMDBT "busy" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
    RESERVED27[31..27]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_CMDBT_BUSY_PHY0_ADDR  WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_CMDBT_BUSY_PHY0_MASK  0x04000000                // CMDBT_BUSY_PHY0[26]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_CMDBT_BUSY_PHY0_SHFT  26
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_CMDBT_ST_PHY0_ADDR    WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_CMDBT_ST_PHY0_MASK    0x03F00000                // CMDBT_ST_PHY0[25..20]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_CMDBT_ST_PHY0_SHFT    20
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_CR_CMDBT_CONTROL_ENABLE_PHY0_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_CR_CMDBT_CONTROL_ENABLE_PHY0_MASK 0x000FFFFF                // CR_CMDBT_CONTROL_ENABLE_PHY0[19..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_CR_CMDBT_CONTROL_ENABLE_PHY0_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_LMAC1 (0x81021000 + 0x80C)---

    CR_CMDBT_CONTROL_ENABLE_LMAC1[19..0] - (RW) CR_CMDBT_CONTROL_ENABLE_LMAC1
    CMDBT_ST_LMAC1[25..20]       - (RO) moniter of CMDBT "status" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
                                     [0]=0: TOP restore done
                                     [0]=1: TOP backup done
                                     [1]=0: UMAC restore done
                                     [1]=1: UMAC backup done
                                     [2]=0: BN0 WiFi restore done
                                     [2]=1: BN0 WiFi backup done
                                     [3]=0: BN1 WiFi restore done
                                     [3]=1: BN1 WiFi backup done
                                     [4]=0: BN2 WiFi restore done
                                     [4]=1: BN2 WiFi backup done
                                     [5]=0: LIT WiFi restore done
                                     [5]=1: LIT WiFi backup done
    CMDBT_BUSY_LMAC1[26]         - (RO) monitor of CMDBT "busy" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
    RESERVED27[31..27]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_CMDBT_BUSY_LMAC1_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_CMDBT_BUSY_LMAC1_MASK 0x04000000                // CMDBT_BUSY_LMAC1[26]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_CMDBT_BUSY_LMAC1_SHFT 26
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_CMDBT_ST_LMAC1_ADDR  WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_CMDBT_ST_LMAC1_MASK  0x03F00000                // CMDBT_ST_LMAC1[25..20]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_CMDBT_ST_LMAC1_SHFT  20
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_CR_CMDBT_CONTROL_ENABLE_LMAC1_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_CR_CMDBT_CONTROL_ENABLE_LMAC1_MASK 0x000FFFFF                // CR_CMDBT_CONTROL_ENABLE_LMAC1[19..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_CR_CMDBT_CONTROL_ENABLE_LMAC1_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_PHY1 (0x81021000 + 0x810)---

    CR_CMDBT_CONTROL_ENABLE_PHY1[19..0] - (RW) CR_CMDBT_CONTROL_ENABLE_PHY1
    CMDBT_ST_PHY1[25..20]        - (RO) moniter of CMDBT "status" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
                                     [0]=0: TOP restore done
                                     [0]=1: TOP backup done
                                     [1]=0: UMAC restore done
                                     [1]=1: UMAC backup done
                                     [2]=0: BN0 WiFi restore done
                                     [2]=1: BN0 WiFi backup done
                                     [3]=0: BN1 WiFi restore done
                                     [3]=1: BN1 WiFi backup done
                                     [4]=0: BN2 WiFi restore done
                                     [4]=1: BN2 WiFi backup done
                                     [5]=0: LIT WiFi restore done
                                     [5]=1: LIT WiFi backup done
    CMDBT_BUSY_PHY1[26]          - (RO) monitor of CMDBT "busy" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
    RESERVED27[31..27]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_CMDBT_BUSY_PHY1_ADDR  WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_CMDBT_BUSY_PHY1_MASK  0x04000000                // CMDBT_BUSY_PHY1[26]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_CMDBT_BUSY_PHY1_SHFT  26
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_CMDBT_ST_PHY1_ADDR    WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_CMDBT_ST_PHY1_MASK    0x03F00000                // CMDBT_ST_PHY1[25..20]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_CMDBT_ST_PHY1_SHFT    20
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_CR_CMDBT_CONTROL_ENABLE_PHY1_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_CR_CMDBT_CONTROL_ENABLE_PHY1_MASK 0x000FFFFF                // CR_CMDBT_CONTROL_ENABLE_PHY1[19..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_CR_CMDBT_CONTROL_ENABLE_PHY1_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_LIT (0x81021000 + 0x814)---

    CR_CMDBT_CONTROL_ENABLE_LIT[19..0] - (RW) CR_CMDBT_CONTROL_ENABLE_LIT
    CMDBT_ST_LIT[25..20]         - (RO) moniter of CMDBT "status" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
                                     [0]=0: TOP restore done
                                     [0]=1: TOP backup done
                                     [1]=0: UMAC restore done
                                     [1]=1: UMAC backup done
                                     [2]=0: BN0 WiFi restore done
                                     [2]=1: BN0 WiFi backup done
                                     [3]=0: BN1 WiFi restore done
                                     [3]=1: BN1 WiFi backup done
                                     [4]=0: BN2 WiFi restore done
                                     [4]=1: BN2 WiFi backup done
                                     [5]=0: LIT WiFi restore done
                                     [5]=1: LIT WiFi backup done
    CMDBT_BUSY_LIT[26]           - (RO) monitor of CMDBT "busy" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
    RESERVED27[31..27]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_CMDBT_BUSY_LIT_ADDR    WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_CMDBT_BUSY_LIT_MASK    0x04000000                // CMDBT_BUSY_LIT[26]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_CMDBT_BUSY_LIT_SHFT    26
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_CMDBT_ST_LIT_ADDR      WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_CMDBT_ST_LIT_MASK      0x03F00000                // CMDBT_ST_LIT[25..20]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_CMDBT_ST_LIT_SHFT      20
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_CR_CMDBT_CONTROL_ENABLE_LIT_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_CR_CMDBT_CONTROL_ENABLE_LIT_MASK 0x000FFFFF                // CR_CMDBT_CONTROL_ENABLE_LIT[19..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_CR_CMDBT_CONTROL_ENABLE_LIT_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_TOP_UMAC_USE_PLL (0x81021000 + 0x850)---

    CR_CMDBT_USE_PLL_TOP_UMAC[15..0] - (RW) switch hclk from OSC to WPLL when CMDBT doing following jobs at hardware control mode
                                     [15] : lit_wf_init_to_sleep
                                     [14] : lit_wf_sleep_to_wlanon
                                     [13] : lit_wf_wlanon_to_sleep
                                     [12] : lit_wf_wlanon_to_on
                                     [11] : bn2_wf_init_to_sleep
                                     [10] : bn2_wf_sleep_to_wlanon
                                     [9] : bn2_wf_wlanon_to_sleep
                                     [8] : bn2_wf_wlanon_to_on
                                     [7] : bn1_wf_init_to_sleep
                                     [6] : bn1_wf_sleep_to_wlanon
                                     [5] : bn1_wf_wlanon_to_sleep
                                     [4] : bn1_wf_wlanon_to_on
                                     [3] : bn0_wf_init_to_sleep
                                     [2] : bn0_wf_sleep_to_wlanon
                                     [1] : bn0_wf_wlanon_to_sleep
                                     [0] : bn0_wf_wlanon_to_on
    CMDBT_USE_PLL_TOP_UMAC[16]   - (RO)  xxx 
    RESERVED17[31..17]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_USE_PLL_CMDBT_USE_PLL_TOP_UMAC_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_USE_PLL_CMDBT_USE_PLL_TOP_UMAC_MASK 0x00010000                // CMDBT_USE_PLL_TOP_UMAC[16]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_USE_PLL_CMDBT_USE_PLL_TOP_UMAC_SHFT 16
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_USE_PLL_CR_CMDBT_USE_PLL_TOP_UMAC_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_USE_PLL_CR_CMDBT_USE_PLL_TOP_UMAC_MASK 0x0000FFFF                // CR_CMDBT_USE_PLL_TOP_UMAC[15..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_USE_PLL_CR_CMDBT_USE_PLL_TOP_UMAC_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_LMAC0_USE_PLL (0x81021000 + 0x854)---

    CR_CMDBT_USE_PLL_LMAC0[15..0] - (RW) switch hclk from OSC to WPLL when CMDBT doing following jobs at hardware control mode
                                     [15] : lit_wf_init_to_sleep
                                     [14] : lit_wf_sleep_to_wlanon
                                     [13] : lit_wf_wlanon_to_sleep
                                     [12] : lit_wf_wlanon_to_on
                                     [11] : bn2_wf_init_to_sleep
                                     [10] : bn2_wf_sleep_to_wlanon
                                     [9] : bn2_wf_wlanon_to_sleep
                                     [8] : bn2_wf_wlanon_to_on
                                     [7] : bn1_wf_init_to_sleep
                                     [6] : bn1_wf_sleep_to_wlanon
                                     [5] : bn1_wf_wlanon_to_sleep
                                     [4] : bn1_wf_wlanon_to_on
                                     [3] : bn0_wf_init_to_sleep
                                     [2] : bn0_wf_sleep_to_wlanon
                                     [1] : bn0_wf_wlanon_to_sleep
                                     [0] : bn0_wf_wlanon_to_on
    CMDBT_USE_PLL_LMAC0[16]      - (RO)  xxx 
    RESERVED17[31..17]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_USE_PLL_CMDBT_USE_PLL_LMAC0_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_USE_PLL_CMDBT_USE_PLL_LMAC0_MASK 0x00010000                // CMDBT_USE_PLL_LMAC0[16]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_USE_PLL_CMDBT_USE_PLL_LMAC0_SHFT 16
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_USE_PLL_CR_CMDBT_USE_PLL_LMAC0_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_USE_PLL_CR_CMDBT_USE_PLL_LMAC0_MASK 0x0000FFFF                // CR_CMDBT_USE_PLL_LMAC0[15..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_USE_PLL_CR_CMDBT_USE_PLL_LMAC0_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_PHY0_USE_PLL (0x81021000 + 0x858)---

    CR_CMDBT_USE_PLL_PHY0[15..0] - (RW) switch hclk from OSC to WPLL when CMDBT doing following jobs at hardware control mode
                                     [15] : lit_wf_init_to_sleep
                                     [14] : lit_wf_sleep_to_wlanon
                                     [13] : lit_wf_wlanon_to_sleep
                                     [12] : lit_wf_wlanon_to_on
                                     [11] : bn2_wf_init_to_sleep
                                     [10] : bn2_wf_sleep_to_wlanon
                                     [9] : bn2_wf_wlanon_to_sleep
                                     [8] : bn2_wf_wlanon_to_on
                                     [7] : bn1_wf_init_to_sleep
                                     [6] : bn1_wf_sleep_to_wlanon
                                     [5] : bn1_wf_wlanon_to_sleep
                                     [4] : bn1_wf_wlanon_to_on
                                     [3] : bn0_wf_init_to_sleep
                                     [2] : bn0_wf_sleep_to_wlanon
                                     [1] : bn0_wf_wlanon_to_sleep
                                     [0] : bn0_wf_wlanon_to_on
    CMDBT_USE_PLL_PHY0[16]       - (RO)  xxx 
    RESERVED17[31..17]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_USE_PLL_CMDBT_USE_PLL_PHY0_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_USE_PLL_CMDBT_USE_PLL_PHY0_MASK 0x00010000                // CMDBT_USE_PLL_PHY0[16]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_USE_PLL_CMDBT_USE_PLL_PHY0_SHFT 16
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_USE_PLL_CR_CMDBT_USE_PLL_PHY0_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_USE_PLL_CR_CMDBT_USE_PLL_PHY0_MASK 0x0000FFFF                // CR_CMDBT_USE_PLL_PHY0[15..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_USE_PLL_CR_CMDBT_USE_PLL_PHY0_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_LMAC1_USE_PLL (0x81021000 + 0x85C)---

    CR_CMDBT_USE_PLL_LMAC1[15..0] - (RW) switch hclk from OSC to WPLL when CMDBT doing following jobs at hardware control mode
                                     [15] : lit_wf_init_to_sleep
                                     [14] : lit_wf_sleep_to_wlanon
                                     [13] : lit_wf_wlanon_to_sleep
                                     [12] : lit_wf_wlanon_to_on
                                     [11] : bn2_wf_init_to_sleep
                                     [10] : bn2_wf_sleep_to_wlanon
                                     [9] : bn2_wf_wlanon_to_sleep
                                     [8] : bn2_wf_wlanon_to_on
                                     [7] : bn1_wf_init_to_sleep
                                     [6] : bn1_wf_sleep_to_wlanon
                                     [5] : bn1_wf_wlanon_to_sleep
                                     [4] : bn1_wf_wlanon_to_on
                                     [3] : bn0_wf_init_to_sleep
                                     [2] : bn0_wf_sleep_to_wlanon
                                     [1] : bn0_wf_wlanon_to_sleep
                                     [0] : bn0_wf_wlanon_to_on
    CMDBT_USE_PLL_LMAC1[16]      - (RO)  xxx 
    RESERVED17[31..17]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_USE_PLL_CMDBT_USE_PLL_LMAC1_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_USE_PLL_CMDBT_USE_PLL_LMAC1_MASK 0x00010000                // CMDBT_USE_PLL_LMAC1[16]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_USE_PLL_CMDBT_USE_PLL_LMAC1_SHFT 16
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_USE_PLL_CR_CMDBT_USE_PLL_LMAC1_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_USE_PLL_CR_CMDBT_USE_PLL_LMAC1_MASK 0x0000FFFF                // CR_CMDBT_USE_PLL_LMAC1[15..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_USE_PLL_CR_CMDBT_USE_PLL_LMAC1_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_PHY1_USE_PLL (0x81021000 + 0x860)---

    CR_CMDBT_USE_PLL_PHY1[15..0] - (RW) switch hclk from OSC to WPLL when CMDBT doing following jobs at hardware control mode
                                     [15] : lit_wf_init_to_sleep
                                     [14] : lit_wf_sleep_to_wlanon
                                     [13] : lit_wf_wlanon_to_sleep
                                     [12] : lit_wf_wlanon_to_on
                                     [11] : bn2_wf_init_to_sleep
                                     [10] : bn2_wf_sleep_to_wlanon
                                     [9] : bn2_wf_wlanon_to_sleep
                                     [8] : bn2_wf_wlanon_to_on
                                     [7] : bn1_wf_init_to_sleep
                                     [6] : bn1_wf_sleep_to_wlanon
                                     [5] : bn1_wf_wlanon_to_sleep
                                     [4] : bn1_wf_wlanon_to_on
                                     [3] : bn0_wf_init_to_sleep
                                     [2] : bn0_wf_sleep_to_wlanon
                                     [1] : bn0_wf_wlanon_to_sleep
                                     [0] : bn0_wf_wlanon_to_on
    CMDBT_USE_PLL_PHY1[16]       - (RO)  xxx 
    RESERVED17[31..17]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_USE_PLL_CMDBT_USE_PLL_PHY1_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_USE_PLL_CMDBT_USE_PLL_PHY1_MASK 0x00010000                // CMDBT_USE_PLL_PHY1[16]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_USE_PLL_CMDBT_USE_PLL_PHY1_SHFT 16
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_USE_PLL_CR_CMDBT_USE_PLL_PHY1_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_USE_PLL_CR_CMDBT_USE_PLL_PHY1_MASK 0x0000FFFF                // CR_CMDBT_USE_PLL_PHY1[15..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_USE_PLL_CR_CMDBT_USE_PLL_PHY1_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_LIT_USE_PLL (0x81021000 + 0x864)---

    CR_CMDBT_USE_PLL_LIT[15..0]  - (RW) switch hclk from OSC to WPLL when CMDBT doing following jobs at hardware control mode
                                     [15] : lit_wf_init_to_sleep
                                     [14] : lit_wf_sleep_to_wlanon
                                     [13] : lit_wf_wlanon_to_sleep
                                     [12] : lit_wf_wlanon_to_on
                                     [11] : bn2_wf_init_to_sleep
                                     [10] : bn2_wf_sleep_to_wlanon
                                     [9] : bn2_wf_wlanon_to_sleep
                                     [8] : bn2_wf_wlanon_to_on
                                     [7] : bn1_wf_init_to_sleep
                                     [6] : bn1_wf_sleep_to_wlanon
                                     [5] : bn1_wf_wlanon_to_sleep
                                     [4] : bn1_wf_wlanon_to_on
                                     [3] : bn0_wf_init_to_sleep
                                     [2] : bn0_wf_sleep_to_wlanon
                                     [1] : bn0_wf_wlanon_to_sleep
                                     [0] : bn0_wf_wlanon_to_on
    CMDBT_USE_PLL_LIT[16]        - (RO)  xxx 
    RESERVED17[31..17]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_USE_PLL_CMDBT_USE_PLL_LIT_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_USE_PLL_CMDBT_USE_PLL_LIT_MASK 0x00010000                // CMDBT_USE_PLL_LIT[16]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_USE_PLL_CMDBT_USE_PLL_LIT_SHFT 16
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_USE_PLL_CR_CMDBT_USE_PLL_LIT_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_USE_PLL_CR_CMDBT_USE_PLL_LIT_MASK 0x0000FFFF                // CR_CMDBT_USE_PLL_LIT[15..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_USE_PLL_CR_CMDBT_USE_PLL_LIT_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_DEBUG_SEL (0x81021000 + 0x900)---

    CR_WF_CMDBT_CTRL_DEBUG_SEL[7..0] - (RW) debug sel
    RESERVED8[31..8]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_DEBUG_SEL_CR_WF_CMDBT_CTRL_DEBUG_SEL_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_DEBUG_SEL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_DEBUG_SEL_CR_WF_CMDBT_CTRL_DEBUG_SEL_MASK 0x000000FF                // CR_WF_CMDBT_CTRL_DEBUG_SEL[7..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_DEBUG_SEL_CR_WF_CMDBT_CTRL_DEBUG_SEL_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_DEBUG_FLAG (0x81021000 + 0x904)---

    RO_WF_CMDBT_CTRL_DEBUG_FLAG[31..0] - (RO) debug flag

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_DEBUG_FLAG_RO_WF_CMDBT_CTRL_DEBUG_FLAG_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_DEBUG_FLAG_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_DEBUG_FLAG_RO_WF_CMDBT_CTRL_DEBUG_FLAG_MASK 0xFFFFFFFF                // RO_WF_CMDBT_CTRL_DEBUG_FLAG[31..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_DEBUG_FLAG_RO_WF_CMDBT_CTRL_DEBUG_FLAG_SHFT 0

/* =====================================================================================

  ---FPGA_RESERVE (0x81021000 + 0xFFC)---

    WF_FPGA[31..0]               - (RW)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_FPGA_RESERVE_WF_FPGA_ADDR                WF_TOP_CFG_ON_FPGA_RESERVE_ADDR
#define WF_TOP_CFG_ON_FPGA_RESERVE_WF_FPGA_MASK                0xFFFFFFFF                // WF_FPGA[31..0]
#define WF_TOP_CFG_ON_FPGA_RESERVE_WF_FPGA_SHFT                0

#ifdef __cplusplus
}
#endif

#endif // __WF_TOP_CFG_ON_REGS_H__
