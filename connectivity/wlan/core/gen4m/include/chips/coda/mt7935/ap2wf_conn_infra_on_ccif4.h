/* SPDX-License-Identifier: BSD-2-Clause */
//[File]            : ap2wf_conn_infra_on_ccif4.h
//[Revision time]   : Tue Oct 31 11:11:48 2023
//[Description]     : This file is auto generated by CODA
//[Copyright]       : Copyright (C) 2023 Mediatek Incorportion. All rights reserved.

#ifndef __AP2WF_CONN_INFRA_ON_CCIF4_REGS_H__
#define __AP2WF_CONN_INFRA_ON_CCIF4_REGS_H__

#include "hal_common.h"

#ifdef __cplusplus
extern "C" {
#endif


//****************************************************************************
//
//                     AP2WF_CONN_INFRA_ON_CCIF4 CR Definitions                     
//
//****************************************************************************

#define AP2WF_CONN_INFRA_ON_CCIF4_BASE                         (0x1803D000 + CONN_INFRA_ON_REMAPPING_OFFSET)

#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_BUSY_ADDR        (AP2WF_CONN_INFRA_ON_CCIF4_BASE + 0x0004u) // D004
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_START_ADDR       (AP2WF_CONN_INFRA_ON_CCIF4_BASE + 0x0008u) // D008
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_TCHNUM_ADDR      (AP2WF_CONN_INFRA_ON_CCIF4_BASE + 0x000Cu) // D00C
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_RCHNUM_ADDR      (AP2WF_CONN_INFRA_ON_CCIF4_BASE + 0x0010u) // D010
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_ACK_ADDR         (AP2WF_CONN_INFRA_ON_CCIF4_BASE + 0x0014u) // D014
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_IRQ0_MASK_ADDR   (AP2WF_CONN_INFRA_ON_CCIF4_BASE + 0x0018u) // D018
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_IRQ1_MASK_ADDR   (AP2WF_CONN_INFRA_ON_CCIF4_BASE + 0x001Cu) // D01C
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_DUMMY1_ADDR      (AP2WF_CONN_INFRA_ON_CCIF4_BASE + 0x0020u) // D020
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_DUMMY2_ADDR      (AP2WF_CONN_INFRA_ON_CCIF4_BASE + 0x0024u) // D024
#define AP2WF_CONN_INFRA_ON_CCIF4_WF2AP_SHADOW1_ADDR           (AP2WF_CONN_INFRA_ON_CCIF4_BASE + 0x0030u) // D030
#define AP2WF_CONN_INFRA_ON_CCIF4_WF2AP_SHADOW2_ADDR           (AP2WF_CONN_INFRA_ON_CCIF4_BASE + 0x0034u) // D034
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_EINT_MASK_ADDR   (AP2WF_CONN_INFRA_ON_CCIF4_BASE + 0x0040u) // D040




/* =====================================================================================

  ---AP2WF_PCCIF_BUSY (0x1803D000 + 0x0004u)---

    BUSY[7..0]                   - (RW) Indicates which channel operation is in process
                                     It will de-assert when WF finishes fetching channel data and then write acknowledgement for according channel. BUSY [7] refers to the busy status of channel 7 and so on. DO NOT use the read-modified-write procedure to set up the BUSY register. It will result in some channels being busy all the time and cannot be cleared by the other side. The root cause is that the processing channels may be cleared during the read-modified-write procedure. The safe WFy to set up the BUSY register is to only set up the channel you would like to occupy, e.g. if you are to use channel 3 for data transfer, set the BUSY register to 0x4 no matter what the current BUSY register is. (write bit n to 1 to assert busy for channel n; write 0 has no effect)
    RESERVED8[31..8]             - (RO) Reserved bits

 =====================================================================================*/
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_BUSY_BUSY_ADDR   AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_BUSY_ADDR
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_BUSY_BUSY_MASK   0x000000FFu                // BUSY[7..0]
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_BUSY_BUSY_SHFT   0u

/* =====================================================================================

  ---AP2WF_PCCIF_START (0x1803D000 + 0x0008u)---

    START[7..0]                  - (RU) Indicates the state of completed transmitted channel number, not receiving acknowledgement. It will assert when writing TCHNUM by AP.
                                     It will de-assert when writing acknowledgement for according channel by WF. START [0] represents the start status of channel 0 and so on.
    RESERVED8[31..8]             - (RO) Reserved bits

 =====================================================================================*/
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_START_START_ADDR AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_START_ADDR
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_START_START_MASK 0x000000FFu                // START[7..0]
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_START_START_SHFT 0u

/* =====================================================================================

  ---AP2WF_PCCIF_TCHNUM (0x1803D000 + 0x000Cu)---

    TCHNUM[2..0]                 - (WO) The 3-bit channel number represents which channel (channel 7-0) is to be used for transmitting data to WF.
    RESERVED3[31..3]             - (RO) Reserved bits

 =====================================================================================*/
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_TCHNUM_TCHNUM_ADDR AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_TCHNUM_ADDR
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_TCHNUM_TCHNUM_MASK 0x00000007u                // TCHNUM[2..0]
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_TCHNUM_TCHNUM_SHFT 0u

/* =====================================================================================

  ---AP2WF_PCCIF_RCHNUM (0x1803D000 + 0x0010u)---

    RCHNUM[7..0]                 - (RO) Bit0 to Bit7 will report the read status of each channel.
    RESERVED8[31..8]             - (RO) Reserved bits

 =====================================================================================*/
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_RCHNUM_RCHNUM_ADDR AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_RCHNUM_ADDR
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_RCHNUM_RCHNUM_MASK 0x000000FFu                // RCHNUM[7..0]
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_RCHNUM_RCHNUM_SHFT 0u

/* =====================================================================================

  ---AP2WF_PCCIF_ACK (0x1803D000 + 0x0014u)---

    ACK[7..0]                    - (W1C) Acknowledgment
                                     It is write-cleared and set by AP_MCU for clearing interrupt status and BUSY/START states of WF CPU-CPU interface according channel. Writing ACK is the last step to end one channel transfer.
    RESERVED8[31..8]             - (RO) Reserved bits

 =====================================================================================*/
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_ACK_ACK_ADDR     AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_ACK_ADDR
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_ACK_ACK_MASK     0x000000FFu                // ACK[7..0]
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_ACK_ACK_SHFT     0u

/* =====================================================================================

  ---AP2WF_PCCIF_IRQ0_MASK (0x1803D000 + 0x0018u)---

    IRQ0_MASK[7..0]              - (RW) IRQ0 mask is used to mask the channel start event to signal pin IRQ0.
                                     If the register is set to 8'hff, all the 8ch start event will generate the IRQ0.
    RESERVED8[31..8]             - (RO) Reserved bits

 =====================================================================================*/
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_IRQ0_MASK_IRQ0_MASK_ADDR AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_IRQ0_MASK_ADDR
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_IRQ0_MASK_IRQ0_MASK_MASK 0x000000FFu                // IRQ0_MASK[7..0]
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_IRQ0_MASK_IRQ0_MASK_SHFT 0u

/* =====================================================================================

  ---AP2WF_PCCIF_IRQ1_MASK (0x1803D000 + 0x001Cu)---

    IRQ1_MASK[7..0]              - (RW) IRQ1 mask is used to mask the channel start event to signal pin IRQ1.
                                     If the register is set to  8'hff, all the 8ch start event will generate the IRQ1.
    RESERVED8[31..8]             - (RO) Reserved bits

 =====================================================================================*/
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_IRQ1_MASK_IRQ1_MASK_ADDR AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_IRQ1_MASK_ADDR
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_IRQ1_MASK_IRQ1_MASK_MASK 0x000000FFu                // IRQ1_MASK[7..0]
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_IRQ1_MASK_IRQ1_MASK_SHFT 0u

/* =====================================================================================

  ---AP2WF_PCCIF_DUMMY1 (0x1803D000 + 0x0020u)---

    AP2WF_PCCIF_DUMMY1[31..0]    - (RW) This register is AP side dummy register  for SW debug purpose only, AP can R/W and WF can read only.

 =====================================================================================*/
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_DUMMY1_AP2WF_PCCIF_DUMMY1_ADDR AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_DUMMY1_ADDR
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_DUMMY1_AP2WF_PCCIF_DUMMY1_MASK 0xFFFFFFFFu                // AP2WF_PCCIF_DUMMY1[31..0]
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_DUMMY1_AP2WF_PCCIF_DUMMY1_SHFT 0u

/* =====================================================================================

  ---AP2WF_PCCIF_DUMMY2 (0x1803D000 + 0x0024u)---

    AP2WF_PCCIF_DUMMY2[31..0]    - (RW) This register is AP side dummy register  for SW debug purpose only, AP can R/W and WF can read only.

 =====================================================================================*/
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_DUMMY2_AP2WF_PCCIF_DUMMY2_ADDR AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_DUMMY2_ADDR
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_DUMMY2_AP2WF_PCCIF_DUMMY2_MASK 0xFFFFFFFFu                // AP2WF_PCCIF_DUMMY2[31..0]
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_DUMMY2_AP2WF_PCCIF_DUMMY2_SHFT 0u

/* =====================================================================================

  ---WF2AP_SHADOW1 (0x1803D000 + 0x0030u)---

    WF2AP_SHADOW1[31..0]         - (RO) This register is WF side register shadow by AP side , AP can read only.

 =====================================================================================*/
#define AP2WF_CONN_INFRA_ON_CCIF4_WF2AP_SHADOW1_WF2AP_SHADOW1_ADDR AP2WF_CONN_INFRA_ON_CCIF4_WF2AP_SHADOW1_ADDR
#define AP2WF_CONN_INFRA_ON_CCIF4_WF2AP_SHADOW1_WF2AP_SHADOW1_MASK 0xFFFFFFFFu                // WF2AP_SHADOW1[31..0]
#define AP2WF_CONN_INFRA_ON_CCIF4_WF2AP_SHADOW1_WF2AP_SHADOW1_SHFT 0u

/* =====================================================================================

  ---WF2AP_SHADOW2 (0x1803D000 + 0x0034u)---

    WF2AP_SHADOW2[31..0]         - (RO) This register is WF side register shadow by AP side , AP can read only.

 =====================================================================================*/
#define AP2WF_CONN_INFRA_ON_CCIF4_WF2AP_SHADOW2_WF2AP_SHADOW2_ADDR AP2WF_CONN_INFRA_ON_CCIF4_WF2AP_SHADOW2_ADDR
#define AP2WF_CONN_INFRA_ON_CCIF4_WF2AP_SHADOW2_WF2AP_SHADOW2_MASK 0xFFFFFFFFu                // WF2AP_SHADOW2[31..0]
#define AP2WF_CONN_INFRA_ON_CCIF4_WF2AP_SHADOW2_WF2AP_SHADOW2_SHFT 0u

/* =====================================================================================

  ---AP2WF_PCCIF_EINT_MASK (0x1803D000 + 0x0040u)---

    EINT_MASK[7..0]              - (RW) EINT mask is used to mask the channel start event to signal pin EINT.
                                     If the register is set to 8'hff, all the 8ch start event will generate the EINT.
    RESERVED8[31..8]             - (RO) Reserved bits

 =====================================================================================*/
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_EINT_MASK_EINT_MASK_ADDR AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_EINT_MASK_ADDR
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_EINT_MASK_EINT_MASK_MASK 0x000000FFu                // EINT_MASK[7..0]
#define AP2WF_CONN_INFRA_ON_CCIF4_AP2WF_PCCIF_EINT_MASK_EINT_MASK_SHFT 0u

#ifdef __cplusplus
}
#endif

#endif // __AP2WF_CONN_INFRA_ON_CCIF4_REGS_H__
