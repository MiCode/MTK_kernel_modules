/* SPDX-License-Identifier: BSD-2-Clause */
//[File]            : conn_rgu_on.h
//[Revision time]   : Mon Oct 30 23:00:48 2023
//[Description]     : This file is auto generated by CODA
//[Copyright]       : Copyright (C) 2023 Mediatek Incorportion. All rights reserved.

#ifndef __CONN_RGU_ON_REGS_H__
#define __CONN_RGU_ON_REGS_H__

#include "hal_common.h"

#ifdef __cplusplus
extern "C" {
#endif


//****************************************************************************
//
//                     CONN_RGU_ON CR Definitions                     
//
//****************************************************************************

#define CONN_RGU_ON_BASE                                       (0x18000000 + CONN_INFRA_REMAPPING_OFFSET)

#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_ADDR            (CONN_RGU_ON_BASE + 0x000u) // 0000
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ON_S_EN_ADDR        (CONN_RGU_ON_BASE + 0x004u) // 0004
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ADDR                  (CONN_RGU_ON_BASE + 0x008u) // 0008
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ON_S_EN_ADDR              (CONN_RGU_ON_BASE + 0x00Cu) // 000C
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_ADDR                  (CONN_RGU_ON_BASE + 0x010u) // 0010
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_ON_S_EN_ADDR              (CONN_RGU_ON_BASE + 0x014u) // 0014
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_ADDR                 (CONN_RGU_ON_BASE + 0x020u) // 0020
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ON_S_EN_ADDR             (CONN_RGU_ON_BASE + 0x024u) // 0024
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_1_ADDR               (CONN_RGU_ON_BASE + 0x028u) // 0028
#define CONN_RGU_ON_WFSYS_SLPPROT_RDY_CTL_ADDR                 (CONN_RGU_ON_BASE + 0x030u) // 0030
#define CONN_RGU_ON_BGFSYS_SLPPROT_RDY_CTL_ADDR                (CONN_RGU_ON_BASE + 0x034u) // 0034
#define CONN_RGU_ON_ZBSYS_SLPPROT_RDY_CTL_ADDR                 (CONN_RGU_ON_BASE + 0x038u) // 0038
#define CONN_RGU_ON_MEM_PWR_CTL_ADDR                           (CONN_RGU_ON_BASE + 0x040u) // 0040
#define CONN_RGU_ON_SYSRAM_SHIFT_CHAIN_CTL_ADDR                (CONN_RGU_ON_BASE + 0x044u) // 0044
#define CONN_RGU_ON_SYSRAM_HWCTL_PDN_ADDR                      (CONN_RGU_ON_BASE + 0x050u) // 0050
#define CONN_RGU_ON_SYSRAM_HWCTL_SLP_ADDR                      (CONN_RGU_ON_BASE + 0x054u) // 0054
#define CONN_RGU_ON_SYSRAM_SWCTL_PDN_ADDR                      (CONN_RGU_ON_BASE + 0x058u) // 0058
#define CONN_RGU_ON_SYSRAM_SWCTL_SLP_ADDR                      (CONN_RGU_ON_BASE + 0x05Cu) // 005C
#define CONN_RGU_ON_SYSRAM_SWCTL_CKISO_ADDR                    (CONN_RGU_ON_BASE + 0x060u) // 0060
#define CONN_RGU_ON_SYSRAM_SWCTL_ISOINT_ADDR                   (CONN_RGU_ON_BASE + 0x064u) // 0064
#define CONN_RGU_ON_FM_CTRL_MEM_HWCTL_PDN_ADDR                 (CONN_RGU_ON_BASE + 0x090u) // 0090
#define CONN_RGU_ON_FM_CTRL_MEM_HWCTL_SLP_ADDR                 (CONN_RGU_ON_BASE + 0x094u) // 0094
#define CONN_RGU_ON_FM_CTRL_MEM_SWCTL_PDN_ADDR                 (CONN_RGU_ON_BASE + 0x098u) // 0098
#define CONN_RGU_ON_FM_CTRL_MEM_SWCTL_SLP_ADDR                 (CONN_RGU_ON_BASE + 0x09Cu) // 009C
#define CONN_RGU_ON_FM_CTRL_MEM_SWCTL_CKISO_ADDR               (CONN_RGU_ON_BASE + 0x0A0u) // 00A0
#define CONN_RGU_ON_VON_SYSRAM_SHIFT_CHAIN_CTL_ADDR            (CONN_RGU_ON_BASE + 0x0ACu) // 00AC
#define CONN_RGU_ON_VON_SYSRAM_HWCTL_PDN_ADDR                  (CONN_RGU_ON_BASE + 0x0B0u) // 00B0
#define CONN_RGU_ON_VON_SYSRAM_HWCTL_SLP_ADDR                  (CONN_RGU_ON_BASE + 0x0B4u) // 00B4
#define CONN_RGU_ON_VON_SYSRAM_SWCTL_PDN_ADDR                  (CONN_RGU_ON_BASE + 0x0B8u) // 00B8
#define CONN_RGU_ON_VON_SYSRAM_SWCTL_SLP_ADDR                  (CONN_RGU_ON_BASE + 0x0BCu) // 00BC
#define CONN_RGU_ON_VON_SYSRAM_SWCTL_CKISO_ADDR                (CONN_RGU_ON_BASE + 0x0C0u) // 00C0
#define CONN_RGU_ON_VON_SYSRAM_SWCTL_ISOINT_ADDR               (CONN_RGU_ON_BASE + 0x0C4u) // 00C4
#define CONN_RGU_ON_BGFSYS_WDT_EN_ADDR                         (CONN_RGU_ON_BASE + 0x108u) // 0108
#define CONN_RGU_ON_BGFSYS1_WDT_EN_ADDR                        (CONN_RGU_ON_BASE + 0x10Cu) // 010C
#define CONN_RGU_ON_WFSYS_CPU_SW_RST_B_ADDR                    (CONN_RGU_ON_BASE + 0x120u) // 0120
#define CONN_RGU_ON_BGFSYS_CPU_SW_RST_B_ADDR                   (CONN_RGU_ON_BASE + 0x124u) // 0124
#define CONN_RGU_ON_BGFSYS1_CPU_SW_RST_B_ADDR                  (CONN_RGU_ON_BASE + 0x128u) // 0128
#define CONN_RGU_ON_ZBSYS_CPU_SW_RST_B_ADDR                    (CONN_RGU_ON_BASE + 0x130u) // 0130
#define CONN_RGU_ON_WFSYS_SW_RST_B_ADDR                        (CONN_RGU_ON_BASE + 0x140u) // 0140
#define CONN_RGU_ON_BGFSYS_SW_RST_B_ADDR                       (CONN_RGU_ON_BASE + 0x144u) // 0144
#define CONN_RGU_ON_BGFSYS1_SW_RST_B_ADDR                      (CONN_RGU_ON_BASE + 0x148u) // 0148
#define CONN_RGU_ON_ZBSYS_SW_RST_B_ADDR                        (CONN_RGU_ON_BASE + 0x150u) // 0150
#define CONN_RGU_ON_SEMA_M0_SW_RST_B_ADDR                      (CONN_RGU_ON_BASE + 0x158u) // 0158
#define CONN_RGU_ON_SEMA_M1_SW_RST_B_ADDR                      (CONN_RGU_ON_BASE + 0x15Cu) // 015C
#define CONN_RGU_ON_SEMA_M2_SW_RST_B_ADDR                      (CONN_RGU_ON_BASE + 0x160u) // 0160
#define CONN_RGU_ON_SEMA_M3_SW_RST_B_ADDR                      (CONN_RGU_ON_BASE + 0x164u) // 0164
#define CONN_RGU_ON_HOSTCSR_WF_SW_RST_B_ADDR                   (CONN_RGU_ON_BASE + 0x170u) // 0170
#define CONN_RGU_ON_HOSTCSR_BGFSYS_SW_RST_B_ADDR               (CONN_RGU_ON_BASE + 0x174u) // 0174
#define CONN_RGU_ON_HOSTCSR_ZBSYS_SW_RST_B_ADDR                (CONN_RGU_ON_BASE + 0x178u) // 0178
#define CONN_RGU_ON_BT_MEM_RST_CTL_ADDR                        (CONN_RGU_ON_BASE + 0x180u) // 0180
#define CONN_RGU_ON_ZB_MEM_RST_CTL_ADDR                        (CONN_RGU_ON_BASE + 0x184u) // 0184
#define CONN_RGU_ON_MEM_CTRL_CG_EN_ADDR                        (CONN_RGU_ON_BASE + 0x300u) // 0300
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_ST_ADDR                   (CONN_RGU_ON_BASE + 0x400u) // 0400
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ST_ADDR                  (CONN_RGU_ON_BASE + 0x404u) // 0404
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ST_ADDR             (CONN_RGU_ON_BASE + 0x408u) // 0408
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_ACK_ST_ADDR               (CONN_RGU_ON_BASE + 0x410u) // 0410
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ACK_ST_ADDR              (CONN_RGU_ON_BASE + 0x414u) // 0414
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ACK_ST_ADDR         (CONN_RGU_ON_BASE + 0x418u) // 0418
#define CONN_RGU_ON_WFSYS_OFF_TOP_PWR_ACK_ST_ADDR              (CONN_RGU_ON_BASE + 0x420u) // 0420
#define CONN_RGU_ON_BGFSYS_OFF_TOP_PWR_ACK_ST_ADDR             (CONN_RGU_ON_BASE + 0x424u) // 0424
#define CONN_RGU_ON_BGFSYS_OFF1_TOP_PWR_ACK_ST_ADDR            (CONN_RGU_ON_BASE + 0x428u) // 0428
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ST_ADDR                   (CONN_RGU_ON_BASE + 0x430u) // 0430
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ACK_ST_ADDR               (CONN_RGU_ON_BASE + 0x434u) // 0434
#define CONN_RGU_ON_ZBSYS_OFF_TOP_PWR_ACK_ST_ADDR              (CONN_RGU_ON_BASE + 0x438u) // 0438
#define CONN_RGU_ON_SYSRAM_PDN_ST_ADDR                         (CONN_RGU_ON_BASE + 0x440u) // 0440
#define CONN_RGU_ON_SYSRAM_SLP_ST_ADDR                         (CONN_RGU_ON_BASE + 0x444u) // 0444
#define CONN_RGU_ON_SYSRAM_CKISO_ST_ADDR                       (CONN_RGU_ON_BASE + 0x448u) // 0448
#define CONN_RGU_ON_SYSRAM_ISOINT_ST_ADDR                      (CONN_RGU_ON_BASE + 0x44Cu) // 044C
#define CONN_RGU_ON_CO_EXT_MEM_PDN_ST_ADDR                     (CONN_RGU_ON_BASE + 0x450u) // 0450
#define CONN_RGU_ON_CO_EXT_MEM_SLP_ST_ADDR                     (CONN_RGU_ON_BASE + 0x454u) // 0454
#define CONN_RGU_ON_CO_EXT_MEM_CKISO_ST_ADDR                   (CONN_RGU_ON_BASE + 0x458u) // 0458
#define CONN_RGU_ON_CO_EXT_MEM_ISOINT_ST_ADDR                  (CONN_RGU_ON_BASE + 0x45Cu) // 045C
#define CONN_RGU_ON_FM_CTRL_MEM_PDN_ST_ADDR                    (CONN_RGU_ON_BASE + 0x460u) // 0460
#define CONN_RGU_ON_FM_CTRL_MEM_SLP_ST_ADDR                    (CONN_RGU_ON_BASE + 0x464u) // 0464
#define CONN_RGU_ON_FM_CTRL_MEM_CKISO_ST_ADDR                  (CONN_RGU_ON_BASE + 0x468u) // 0468
#define CONN_RGU_ON_FM_CTRL_MEM_ISOINT_ST_ADDR                 (CONN_RGU_ON_BASE + 0x46Cu) // 046C
#define CONN_RGU_ON_VON_SYSRAM_PDN_ST_ADDR                     (CONN_RGU_ON_BASE + 0x470u) // 0470
#define CONN_RGU_ON_VON_SYSRAM_SLP_ST_ADDR                     (CONN_RGU_ON_BASE + 0x474u) // 0474
#define CONN_RGU_ON_VON_SYSRAM_CKISO_ST_ADDR                   (CONN_RGU_ON_BASE + 0x478u) // 0478
#define CONN_RGU_ON_VON_SYSRAM_ISOINT_ST_ADDR                  (CONN_RGU_ON_BASE + 0x47Cu) // 047C




/* =====================================================================================

  ---CONN_INFRA_OFF_TOP_PWR_CTL (0x18000000 + 0x000u)---

    CONN_INFRA_OFF_TOP_SW_RST_B[0] - (RW) when CONN_INFRA_OFF_TOP mtcmos control flow selection = 0, CONN_INFRA_OFF_TOP power domian reset manual control
                                     0: reset CONN_INFRA_OFF_TOP power domian
                                     1: not reset CONN_INFRA_OFF_TOP power domian
    CONN_INFRA_OFF_TOP_SW_ISO_EN[1] - (RW) when CONN_INFRA_OFF_TOP mtcmos control flow selection = 0, CONN_INFRA_OFF_TOP power domain isolation manual control
                                     0: not isolating CONN_INFRA_OFF_TOP power domain output signals
                                     1: isolating CONN_INFRA_OFF_TOP power domain output signals
    CONN_INFRA_OFF_TOP_SW_PWR_ON_S[2] - (RW) when CONN_INFRA_OFF_TOP mtcmos control flow selection = 0, CONN_INFRA_OFF_TOP mtcmos secondary power switch manual control
                                     0: power off CONN_INFRA_OFF_TOP mtcmos
                                     1: power on CONN_INFRA_OFF_TOP mtcmos
    CONN_INFRA_OFF_TOP_SW_PWR_ON[3] - (RW) when CONN_INFRA_OFF_TOP mtcmos control flow selection = 0, CONN_INFRA_OFF_TOP mtcmos primary power switch manual control
                                     0: power off CONN_INFRA_OFF_TOP mtcmos
                                     1: power on CONN_INFRA_OFF_TOP mtcmos
    CONN_INFRA_OFF_TOP_HWCTL[4]  - (RW) CONN_INFRA_OFF_TOP mtcmos control flow selection
                                     0: SW flow (by CR)
                                     1: H/W flow (by mtcmos FSM)
    CONN_INFRA_OFF_TOP_PWR_CHECK_WITH_MEM_PER_EN[5] - (RW) CONN_INFRA_OFF_TOP power on/off check with mem power state
                                     1'b0: conn_infra_off power off without check mem power off
                                     1'b1: conn_infra_off power off after memory power off
    CONN_INFRA_OFF_TOP_PWR_ACK_S_MASK[6] - (RW) Mask CONN_INFRA_OFF_TOP (pwr_ack == 0  )and(pwr_ack_s == 0) check beforce CONN_INFRA_OFF_TOP pwr_on
                                     0: unmask, rgu check  (pwr_ack == 0  )and(pwr_ack_s == 0) beforce CONN_INFRA_OFF_TOP pwr_on
                                     1: mask, rgu trun on CONN_INFRA_OFF_TOP without check  (pwr_ack == 0  )and(pwr_ack_s == 0)
    RESERVED7[8..7]              - (RO) Reserved bits
    CONN_INFRA_PWR_ON_S_SPEC_TIME[11..9] - (RW) latency between pwr_on & pwr_on_ack to pwr_on_s (~556 ns)
    CONN_INFRA_PWR_ON_S_SPEC_TIME_EN[12] - (RW) enable pwr_on to pwr_on_s spec
    RESERVED13[15..13]           - (RO) Reserved bits
    CONN_INFRA_OFF_TOP_WRITE_KEY[31..16] - (WO) when user wants to write any bit of this CR iiiCONN_INFRA_OFF_TOP_PWR_CTLiii
                                     [31:16] must be set to 16'h494E

 =====================================================================================*/
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_OFF_TOP_WRITE_KEY_ADDR CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_OFF_TOP_WRITE_KEY_MASK 0xFFFF0000u                // CONN_INFRA_OFF_TOP_WRITE_KEY[31..16]
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_OFF_TOP_WRITE_KEY_SHFT 16u
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_PWR_ON_S_SPEC_TIME_EN_ADDR CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_PWR_ON_S_SPEC_TIME_EN_MASK 0x00001000u                // CONN_INFRA_PWR_ON_S_SPEC_TIME_EN[12]
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_PWR_ON_S_SPEC_TIME_EN_SHFT 12u
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_PWR_ON_S_SPEC_TIME_ADDR CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_PWR_ON_S_SPEC_TIME_MASK 0x00000E00u                // CONN_INFRA_PWR_ON_S_SPEC_TIME[11..9]
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_PWR_ON_S_SPEC_TIME_SHFT 9u
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_OFF_TOP_PWR_ACK_S_MASK_ADDR CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_OFF_TOP_PWR_ACK_S_MASK_MASK 0x00000040u                // CONN_INFRA_OFF_TOP_PWR_ACK_S_MASK[6]
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_OFF_TOP_PWR_ACK_S_MASK_SHFT 6u
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_OFF_TOP_PWR_CHECK_WITH_MEM_PER_EN_ADDR CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_OFF_TOP_PWR_CHECK_WITH_MEM_PER_EN_MASK 0x00000020u                // CONN_INFRA_OFF_TOP_PWR_CHECK_WITH_MEM_PER_EN[5]
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_OFF_TOP_PWR_CHECK_WITH_MEM_PER_EN_SHFT 5u
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_OFF_TOP_HWCTL_ADDR CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_OFF_TOP_HWCTL_MASK 0x00000010u                // CONN_INFRA_OFF_TOP_HWCTL[4]
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_OFF_TOP_HWCTL_SHFT 4u
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_OFF_TOP_SW_PWR_ON_ADDR CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_OFF_TOP_SW_PWR_ON_MASK 0x00000008u                // CONN_INFRA_OFF_TOP_SW_PWR_ON[3]
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_OFF_TOP_SW_PWR_ON_SHFT 3u
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_OFF_TOP_SW_PWR_ON_S_ADDR CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_OFF_TOP_SW_PWR_ON_S_MASK 0x00000004u                // CONN_INFRA_OFF_TOP_SW_PWR_ON_S[2]
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_OFF_TOP_SW_PWR_ON_S_SHFT 2u
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_OFF_TOP_SW_ISO_EN_ADDR CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_OFF_TOP_SW_ISO_EN_MASK 0x00000002u                // CONN_INFRA_OFF_TOP_SW_ISO_EN[1]
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_OFF_TOP_SW_ISO_EN_SHFT 1u
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_OFF_TOP_SW_RST_B_ADDR CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_OFF_TOP_SW_RST_B_MASK 0x00000001u                // CONN_INFRA_OFF_TOP_SW_RST_B[0]
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_CTL_CONN_INFRA_OFF_TOP_SW_RST_B_SHFT 0u

/* =====================================================================================

  ---CONN_INFRA_OFF_TOP_PWR_ON_S_EN (0x18000000 + 0x004u)---

    CONN_INFRA_OFF_TOP_PWR_ON_S_EN[0] - (RW) CONN_INFRA_OFF_TOP mtcmos secondary power switch control enable
                                     0: disbale
                                     1: enable
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ON_S_EN_CONN_INFRA_OFF_TOP_PWR_ON_S_EN_ADDR CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ON_S_EN_ADDR
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ON_S_EN_CONN_INFRA_OFF_TOP_PWR_ON_S_EN_MASK 0x00000001u                // CONN_INFRA_OFF_TOP_PWR_ON_S_EN[0]
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ON_S_EN_CONN_INFRA_OFF_TOP_PWR_ON_S_EN_SHFT 0u

/* =====================================================================================

  ---ZBSYS_ON_TOP_PWR_CTL (0x18000000 + 0x008u)---

    ZBSYS_ON_TOP_SW_RST_B[0]     - (RW) when ZBSYS_ON_TOP mtcmos control flow selection = 0, ZBSYS_ON_TOP power domian reset manual control
                                     0: reset ZBSYS_ON_TOP power domian
                                     1: not reset ZBSYS_ON_TOP power domian
    ZBSYS_ON_TOP_SW_ISO_EN[1]    - (RW) when ZBSYS_ON_TOP mtcmos control flow selection = 0, ZBSYS_ON_TOP power domain isolation manual control
                                     0: not isolating ZBSYS_ON_TOP power domain output signals
                                     1: isolating ZBSYS_ON_TOP power domain output signals
    ZBSYS_ON_TOP_SW_PWR_ON_S[2]  - (RW) when ZBSYS_ON_TOP mtcmos control flow selection = 0, ZBSYS_ON_TOP mtcmos secondary power switch manual control
                                     0: power off ZBSYS_ON_TOP mtcmos
                                     1: power on ZBSYS_ON_TOP mtcmos
    ZBSYS_ON_TOP_SW_PWR_ON[3]    - (RW) when ZBSYS_ON_TOP mtcmos control flow selection = 0, ZBSYS_ON_TOP mtcmos primary power switch manual control
                                     0: power off ZBSYS_ON_TOP mtcmos
                                     1: power on ZBSYS_ON_TOP mtcmos
    ZBSYS_ON_TOP_HWCTL[4]        - (RW) ZBSYS_ON_TOP mtcmos control flow selection
                                     0: SW flow (by CR)
                                     1: H/W flow (by mtcmos FSM)
    RESERVED5[5]                 - (RO) Reserved bits
    ZBSYS_ON_TOP_PWR_ACK_S_MASK[6] - (RW) Mask ZBSYS_ON_TOP (pwr_ack == 0  )and(pwr_ack_s == 0) check beforce ZBSYS_ON_TOP pwr_on
                                     0: unmask, rgu check  (pwr_ack == 0  )and(pwr_ack_s == 0) beforce ZBSYS_ON_TOP pwr_on
                                     1: mask, rgu trun on ZBSYS_ON_TOP without check  (pwr_ack == 0  )and(pwr_ack_s == 0)
    ZBSYS_ON_TOP_PWR_ON[7]       - (RW) when ZBSYS_ON_TOP mtcmos FSM trigger selection = 0  (For ZB driver use)
                                     0: trigger FSM to power off ZBSYS_ON_TOP mtcmos
                                     1: trigger FSM to power on ZBSYS_ON_TOP mtcmos
    ZBSYS_ON_TOP_PWR_ON_SRC[8]   - (RW) ZBSYS_ON_TOP mtcmos control sorce selection
                                     0: trigger source from BGSYS_ON_TOP_PWR_ON
                                     1: trigger source from chip top
    ZBSYS_PWR_ON_S_SPEC_TIME[11..9] - (RW) latency between pwr_on & pwr_on_ack to pwr_on_s (~556 ns)
    ZBSYS_PWR_ON_S_SPEC_TIME_EN[12] - (RW) enable pwr_on to pwr_on_s spec
    RESERVED13[15..13]           - (RO) Reserved bits
    ZBSYS_ON_TOP_WRITE_KEY[31..16] - (WO) when user wants to write any bit of this CR iiiZBSYS_ON_TOP_PWR_CTLiii
                                     [31:16] must be set to 16'h6042

 =====================================================================================*/
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_WRITE_KEY_ADDR CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_WRITE_KEY_MASK 0xFFFF0000u                // ZBSYS_ON_TOP_WRITE_KEY[31..16]
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_WRITE_KEY_SHFT 16u
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_PWR_ON_S_SPEC_TIME_EN_ADDR CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_PWR_ON_S_SPEC_TIME_EN_MASK 0x00001000u                // ZBSYS_PWR_ON_S_SPEC_TIME_EN[12]
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_PWR_ON_S_SPEC_TIME_EN_SHFT 12u
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_PWR_ON_S_SPEC_TIME_ADDR CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_PWR_ON_S_SPEC_TIME_MASK 0x00000E00u                // ZBSYS_PWR_ON_S_SPEC_TIME[11..9]
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_PWR_ON_S_SPEC_TIME_SHFT 9u
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_PWR_ON_SRC_ADDR CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_PWR_ON_SRC_MASK 0x00000100u                // ZBSYS_ON_TOP_PWR_ON_SRC[8]
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_PWR_ON_SRC_SHFT 8u
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_PWR_ON_ADDR CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_PWR_ON_MASK 0x00000080u                // ZBSYS_ON_TOP_PWR_ON[7]
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_PWR_ON_SHFT 7u
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_PWR_ACK_S_MASK_ADDR CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_PWR_ACK_S_MASK_MASK 0x00000040u                // ZBSYS_ON_TOP_PWR_ACK_S_MASK[6]
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_PWR_ACK_S_MASK_SHFT 6u
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_HWCTL_ADDR CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_HWCTL_MASK 0x00000010u                // ZBSYS_ON_TOP_HWCTL[4]
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_HWCTL_SHFT 4u
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_SW_PWR_ON_ADDR CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_SW_PWR_ON_MASK 0x00000008u                // ZBSYS_ON_TOP_SW_PWR_ON[3]
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_SW_PWR_ON_SHFT 3u
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_SW_PWR_ON_S_ADDR CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_SW_PWR_ON_S_MASK 0x00000004u                // ZBSYS_ON_TOP_SW_PWR_ON_S[2]
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_SW_PWR_ON_S_SHFT 2u
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_SW_ISO_EN_ADDR CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_SW_ISO_EN_MASK 0x00000002u                // ZBSYS_ON_TOP_SW_ISO_EN[1]
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_SW_ISO_EN_SHFT 1u
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_SW_RST_B_ADDR CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_SW_RST_B_MASK 0x00000001u                // ZBSYS_ON_TOP_SW_RST_B[0]
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_CTL_ZBSYS_ON_TOP_SW_RST_B_SHFT 0u

/* =====================================================================================

  ---ZBSYS_ON_TOP_PWR_ON_S_EN (0x18000000 + 0x00Cu)---

    ZBSYS_ON_TOP_PWR_ON_S_EN[0]  - (RW) ZBSYS_ON_TOP mtcmos secondary power switch control enable
                                     0: disbale
                                     1: enable
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ON_S_EN_ZBSYS_ON_TOP_PWR_ON_S_EN_ADDR CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ON_S_EN_ADDR
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ON_S_EN_ZBSYS_ON_TOP_PWR_ON_S_EN_MASK 0x00000001u                // ZBSYS_ON_TOP_PWR_ON_S_EN[0]
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ON_S_EN_ZBSYS_ON_TOP_PWR_ON_S_EN_SHFT 0u

/* =====================================================================================

  ---WFSYS_ON_TOP_PWR_CTL (0x18000000 + 0x010u)---

    WFSYS_ON_TOP_SW_RST_B[0]     - (RW) when WFSYS_ON_TOP mtcmos control flow selection = 0, WFSYS_ON_TOP power domian reset manual control
                                     0: reset WFSYS_ON_TOP power domian
                                     1: not reset WFSYS_ON_TOP power domian
    WFSYS_ON_TOP_SW_ISO_EN[1]    - (RW) when WFSYS_ON_TOP mtcmos control flow selection = 0, WFSYS_ON_TOP power domain isolation manual control
                                     0: not isolating WFSYS_ON_TOP power domain output signals
                                     1: isolating WFSYS_ON_TOP power domain output signals
    WFSYS_ON_TOP_SW_PWR_ON_S[2]  - (RW) when WFSYS_ON_TOP mtcmos control flow selection = 0, WFSYS_ON_TOP mtcmos secondary power switch manual control
                                     0: power off WFSYS_ON_TOP mtcmos
                                     1: power on WFSYS_ON_TOP mtcmos
    WFSYS_ON_TOP_SW_PWR_ON[3]    - (RW) when WFSYS_ON_TOP mtcmos control flow selection = 0, WFSYS_ON_TOP mtcmos primary power switch manual control
                                     0: power off WFSYS_ON_TOP mtcmos
                                     1: power on WFSYS_ON_TOP mtcmos
    WFSYS_ON_TOP_HWCTL[4]        - (RW) WFSYS_ON_TOP mtcmos control flow selection
                                     0: SW flow (by CR)
                                     1: H/W flow (by mtcmos FSM)
    RESERVED5[5]                 - (RO) Reserved bits
    WFSYS_ON_TOP_PWR_ACK_S_MASK[6] - (RW) Mask WFSYS_ON_TOP (pwr_ack == 0  )and(pwr_ack_s == 0) check beforce WFSYS_ON_TOP pwr_on
                                     0: unmask, rgu check  (pwr_ack == 0  )and(pwr_ack_s == 0) beforce WFSYS_ON_TOP pwr_on
                                     1: mask, rgu trun on WFSYS_ON_TOP without check  (pwr_ack == 0  )and(pwr_ack_s == 0)
    WFSYS_ON_TOP_PWR_ON[7]       - (RW) when WFSYS_ON_TOP mtcmos FSM trigger selection = 0
                                     0: trigger FSM to power off WFSYS_ON_TOP mtcmos
                                     1: trigger FSM to power on WFSYS_ON_TOP mtcmos
    WFSYS_ON_TOP_PWR_ON_SRC[8]   - (RW) WFSYS_ON_TOP mtcmos control sorce selection
                                     0: trigger source from WFSYS_ON_TOP_PWR_ON
                                     1: trigger source from chip top
    WFSYS_PWR_ON_S_SPEC_TIME[11..9] - (RW) latency between pwr_on & pwr_on_ack to pwr_on_s (~556 ns)
    WFSYS_PWR_ON_S_SPEC_TIME_EN[12] - (RW) enable pwr_on to pwr_on_s spec
    RESERVED13[15..13]           - (RO) Reserved bits
    WFSYS_ON_TOP_WRITE_KEY[31..16] - (WO) when user wants to write any bit of this CR iiiWFSYS_ON_TOP_PWR_CTLiii
                                     [31:16] must be set to 16'h5746

 =====================================================================================*/
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_WRITE_KEY_ADDR CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_WRITE_KEY_MASK 0xFFFF0000u                // WFSYS_ON_TOP_WRITE_KEY[31..16]
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_WRITE_KEY_SHFT 16u
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_PWR_ON_S_SPEC_TIME_EN_ADDR CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_PWR_ON_S_SPEC_TIME_EN_MASK 0x00001000u                // WFSYS_PWR_ON_S_SPEC_TIME_EN[12]
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_PWR_ON_S_SPEC_TIME_EN_SHFT 12u
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_PWR_ON_S_SPEC_TIME_ADDR CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_PWR_ON_S_SPEC_TIME_MASK 0x00000E00u                // WFSYS_PWR_ON_S_SPEC_TIME[11..9]
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_PWR_ON_S_SPEC_TIME_SHFT 9u
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_PWR_ON_SRC_ADDR CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_PWR_ON_SRC_MASK 0x00000100u                // WFSYS_ON_TOP_PWR_ON_SRC[8]
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_PWR_ON_SRC_SHFT 8u
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_PWR_ON_ADDR CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_PWR_ON_MASK 0x00000080u                // WFSYS_ON_TOP_PWR_ON[7]
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_PWR_ON_SHFT 7u
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_PWR_ACK_S_MASK_ADDR CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_PWR_ACK_S_MASK_MASK 0x00000040u                // WFSYS_ON_TOP_PWR_ACK_S_MASK[6]
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_PWR_ACK_S_MASK_SHFT 6u
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_HWCTL_ADDR CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_HWCTL_MASK 0x00000010u                // WFSYS_ON_TOP_HWCTL[4]
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_HWCTL_SHFT 4u
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_SW_PWR_ON_ADDR CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_SW_PWR_ON_MASK 0x00000008u                // WFSYS_ON_TOP_SW_PWR_ON[3]
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_SW_PWR_ON_SHFT 3u
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_SW_PWR_ON_S_ADDR CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_SW_PWR_ON_S_MASK 0x00000004u                // WFSYS_ON_TOP_SW_PWR_ON_S[2]
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_SW_PWR_ON_S_SHFT 2u
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_SW_ISO_EN_ADDR CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_SW_ISO_EN_MASK 0x00000002u                // WFSYS_ON_TOP_SW_ISO_EN[1]
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_SW_ISO_EN_SHFT 1u
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_SW_RST_B_ADDR CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_SW_RST_B_MASK 0x00000001u                // WFSYS_ON_TOP_SW_RST_B[0]
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_CTL_WFSYS_ON_TOP_SW_RST_B_SHFT 0u

/* =====================================================================================

  ---WFSYS_ON_TOP_PWR_ON_S_EN (0x18000000 + 0x014u)---

    WFSYS_ON_TOP_PWR_ON_S_EN[0]  - (RW) WFSYS_ON_TOP mtcmos secondary power switch control enable
                                     0: disbale
                                     1: enable
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_ON_S_EN_WFSYS_ON_TOP_PWR_ON_S_EN_ADDR CONN_RGU_ON_WFSYS_ON_TOP_PWR_ON_S_EN_ADDR
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_ON_S_EN_WFSYS_ON_TOP_PWR_ON_S_EN_MASK 0x00000001u                // WFSYS_ON_TOP_PWR_ON_S_EN[0]
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_ON_S_EN_WFSYS_ON_TOP_PWR_ON_S_EN_SHFT 0u

/* =====================================================================================

  ---BGFSYS_ON_TOP_PWR_CTL (0x18000000 + 0x020u)---

    BGFSYS_ON_TOP_SW_RST_B[0]    - (RW) when BGFSYS_ON_TOP mtcmos control flow selection = 0, BGFSYS_ON_TOP power domian reset manual control
                                     0: reset BGFSYS_ON_TOP power domian
                                     1: not reset BGFSYS_ON_TOP power domian
    BGFSYS_ON_TOP_SW_ISO_EN[1]   - (RW) when BGFSYS_ON_TOP mtcmos control flow selection = 0, BGFSYS_ON_TOP power domain isolation manual control
                                     0: not isolating BGFSYS_ON_TOP power domain output signals
                                     1: isolating BGFSYS_ON_TOP power domain output signals
    BGFSYS_ON_TOP_SW_PWR_ON_S[2] - (RW) when BGFSYS_ON_TOP mtcmos control flow selection = 0, BGFSYS_ON_TOP mtcmos secondary power switch manual control
                                     0: power off BGFSYS_ON_TOP mtcmos
                                     1: power on BGFSYS_ON_TOP mtcmos
    BGFSYS_ON_TOP_SW_PWR_ON[3]   - (RW) when BGFSYS_ON_TOP mtcmos control flow selection = 0, BGFSYS_ON_TOP mtcmos primary power switch manual control
                                     0: power off BGFSYS_ON_TOP mtcmos
                                     1: power on BGFSYS_ON_TOP mtcmos
    BGFSYS_ON_TOP_HWCTL[4]       - (RW) BGFSYS_ON_TOP mtcmos control flow selection
                                     0: SW flow (by CR)
                                     1: H/W flow (by mtcmos FSM)
    RESERVED5[5]                 - (RO) Reserved bits
    BGFSYS_ON_TOP_PWR_ACK_S_MASK[6] - (RW) Mask BGFSYS_ON_TOP (pwr_ack == 0  )and(pwr_ack_s == 0) check beforce BGFSYS_ON_TOP pwr_on
                                     0: unmask, rgu check  (pwr_ack == 0  )and(pwr_ack_s == 0) beforce BGFSYS_ON_TOP pwr_on
                                     1: mask, rgu trun on BGFSYS_ON_TOP without check  (pwr_ack == 0  )and(pwr_ack_s == 0)
    BGFSYS_ON_TOP_PWR_ON[7]      - (RW) when BGFSYS_ON_TOP mtcmos FSM trigger selection = 0  (For BT driver use)
                                     0: trigger FSM to power off BGFSYS_ON_TOP mtcmos
                                     1: trigger FSM to power on BGFSYS_ON_TOP mtcmos
    BGFSYS_ON_TOP_PWR_ON_SRC[8]  - (RW) BGFSYS_ON_TOP mtcmos control sorce selection
                                     0: trigger source from BGSYS_ON_TOP_PWR_ON
                                     1: trigger source from chip top
    BTSYS_PWR_ON_S_SPEC_TIME[11..9] - (RW) latency between pwr_on & pwr_on_ack to pwr_on_s (~556 ns)
    BTSYS_PWR_ON_S_SPEC_TIME_EN[12] - (RW) enable pwr_on to pwr_on_s spec
    RESERVED13[15..13]           - (RO) Reserved bits
    BGFSYS_ON_TOP_WRITE_KEY[31..16] - (WO) when user wants to write any bit of this CR iiiBGFSYS_ON_TOP_PWR_CTLiii
                                     [31:16] must be set to 16'h4254

 =====================================================================================*/
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_WRITE_KEY_ADDR CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_WRITE_KEY_MASK 0xFFFF0000u                // BGFSYS_ON_TOP_WRITE_KEY[31..16]
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_WRITE_KEY_SHFT 16u
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BTSYS_PWR_ON_S_SPEC_TIME_EN_ADDR CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BTSYS_PWR_ON_S_SPEC_TIME_EN_MASK 0x00001000u                // BTSYS_PWR_ON_S_SPEC_TIME_EN[12]
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BTSYS_PWR_ON_S_SPEC_TIME_EN_SHFT 12u
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BTSYS_PWR_ON_S_SPEC_TIME_ADDR CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BTSYS_PWR_ON_S_SPEC_TIME_MASK 0x00000E00u                // BTSYS_PWR_ON_S_SPEC_TIME[11..9]
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BTSYS_PWR_ON_S_SPEC_TIME_SHFT 9u
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_PWR_ON_SRC_ADDR CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_PWR_ON_SRC_MASK 0x00000100u                // BGFSYS_ON_TOP_PWR_ON_SRC[8]
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_PWR_ON_SRC_SHFT 8u
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_PWR_ON_ADDR CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_PWR_ON_MASK 0x00000080u                // BGFSYS_ON_TOP_PWR_ON[7]
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_PWR_ON_SHFT 7u
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_PWR_ACK_S_MASK_ADDR CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_PWR_ACK_S_MASK_MASK 0x00000040u                // BGFSYS_ON_TOP_PWR_ACK_S_MASK[6]
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_PWR_ACK_S_MASK_SHFT 6u
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_HWCTL_ADDR CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_HWCTL_MASK 0x00000010u                // BGFSYS_ON_TOP_HWCTL[4]
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_HWCTL_SHFT 4u
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_SW_PWR_ON_ADDR CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_SW_PWR_ON_MASK 0x00000008u                // BGFSYS_ON_TOP_SW_PWR_ON[3]
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_SW_PWR_ON_SHFT 3u
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_SW_PWR_ON_S_ADDR CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_SW_PWR_ON_S_MASK 0x00000004u                // BGFSYS_ON_TOP_SW_PWR_ON_S[2]
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_SW_PWR_ON_S_SHFT 2u
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_SW_ISO_EN_ADDR CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_SW_ISO_EN_MASK 0x00000002u                // BGFSYS_ON_TOP_SW_ISO_EN[1]
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_SW_ISO_EN_SHFT 1u
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_SW_RST_B_ADDR CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_ADDR
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_SW_RST_B_MASK 0x00000001u                // BGFSYS_ON_TOP_SW_RST_B[0]
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_BGFSYS_ON_TOP_SW_RST_B_SHFT 0u

/* =====================================================================================

  ---BGFSYS_ON_TOP_PWR_ON_S_EN (0x18000000 + 0x024u)---

    BGFSYS_ON_TOP_PWR_ON_S_EN[0] - (RW) BGFSYS_ON_TOP mtcmos secondary power switch control enable
                                     0: disbale
                                     1: enable
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ON_S_EN_BGFSYS_ON_TOP_PWR_ON_S_EN_ADDR CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ON_S_EN_ADDR
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ON_S_EN_BGFSYS_ON_TOP_PWR_ON_S_EN_MASK 0x00000001u                // BGFSYS_ON_TOP_PWR_ON_S_EN[0]
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ON_S_EN_BGFSYS_ON_TOP_PWR_ON_S_EN_SHFT 0u

/* =====================================================================================

  ---BGFSYS_ON_TOP_PWR_CTL_1 (0x18000000 + 0x028u)---

    RESERVED0[6..0]              - (RO) Reserved bits
    BGFSYS_ON_TOP_PWR_ON_1[7]    - (RW) when BGFSYS_ON_TOP mtcmos FSM trigger selection = 0 (For GPS driver use)
                                     0: trigger FSM to power off BGFSYS_ON_TOP mtcmos
                                     1: trigger FSM to power on BGFSYS_ON_TOP mtcmos
    RESERVED8[31..8]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_1_BGFSYS_ON_TOP_PWR_ON_1_ADDR CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_1_ADDR
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_1_BGFSYS_ON_TOP_PWR_ON_1_MASK 0x00000080u                // BGFSYS_ON_TOP_PWR_ON_1[7]
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_CTL_1_BGFSYS_ON_TOP_PWR_ON_1_SHFT 7u

/* =====================================================================================

  ---WFSYS_SLPPROT_RDY_CTL (0x18000000 + 0x030u)---

    CR_WFSYS_PROT_RDY_MASK[0]    - (RW)  xxx 
    CR_WFSYS_RADIO_OFF_PRE_RDY[1] - (RW)  xxx 
    CR_AP2CONN_WFSYS_ON_TOP_PWR_ON_MASK[2] - (RW)  xxx 
    RESERVED3[31..3]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_WFSYS_SLPPROT_RDY_CTL_CR_AP2CONN_WFSYS_ON_TOP_PWR_ON_MASK_ADDR CONN_RGU_ON_WFSYS_SLPPROT_RDY_CTL_ADDR
#define CONN_RGU_ON_WFSYS_SLPPROT_RDY_CTL_CR_AP2CONN_WFSYS_ON_TOP_PWR_ON_MASK_MASK 0x00000004u                // CR_AP2CONN_WFSYS_ON_TOP_PWR_ON_MASK[2]
#define CONN_RGU_ON_WFSYS_SLPPROT_RDY_CTL_CR_AP2CONN_WFSYS_ON_TOP_PWR_ON_MASK_SHFT 2u
#define CONN_RGU_ON_WFSYS_SLPPROT_RDY_CTL_CR_WFSYS_RADIO_OFF_PRE_RDY_ADDR CONN_RGU_ON_WFSYS_SLPPROT_RDY_CTL_ADDR
#define CONN_RGU_ON_WFSYS_SLPPROT_RDY_CTL_CR_WFSYS_RADIO_OFF_PRE_RDY_MASK 0x00000002u                // CR_WFSYS_RADIO_OFF_PRE_RDY[1]
#define CONN_RGU_ON_WFSYS_SLPPROT_RDY_CTL_CR_WFSYS_RADIO_OFF_PRE_RDY_SHFT 1u
#define CONN_RGU_ON_WFSYS_SLPPROT_RDY_CTL_CR_WFSYS_PROT_RDY_MASK_ADDR CONN_RGU_ON_WFSYS_SLPPROT_RDY_CTL_ADDR
#define CONN_RGU_ON_WFSYS_SLPPROT_RDY_CTL_CR_WFSYS_PROT_RDY_MASK_MASK 0x00000001u                // CR_WFSYS_PROT_RDY_MASK[0]
#define CONN_RGU_ON_WFSYS_SLPPROT_RDY_CTL_CR_WFSYS_PROT_RDY_MASK_SHFT 0u

/* =====================================================================================

  ---BGFSYS_SLPPROT_RDY_CTL (0x18000000 + 0x034u)---

    CR_BGSYS_PROT_RDY_MASK[0]    - (RW)  xxx 
    CR_BGSYS_RADIO_OFF_PRE_RDY[1] - (RW)  xxx 
    CR_AP2CONN_BGSYS_ON_TOP_PWR_ON_MASK[2] - (RW)  xxx 
    CR_BTSYS_IS_PWR_OFF_MASK[3]  - (RW)  xxx 
    RESERVED4[31..4]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_BGFSYS_SLPPROT_RDY_CTL_CR_BTSYS_IS_PWR_OFF_MASK_ADDR CONN_RGU_ON_BGFSYS_SLPPROT_RDY_CTL_ADDR
#define CONN_RGU_ON_BGFSYS_SLPPROT_RDY_CTL_CR_BTSYS_IS_PWR_OFF_MASK_MASK 0x00000008u                // CR_BTSYS_IS_PWR_OFF_MASK[3]
#define CONN_RGU_ON_BGFSYS_SLPPROT_RDY_CTL_CR_BTSYS_IS_PWR_OFF_MASK_SHFT 3u
#define CONN_RGU_ON_BGFSYS_SLPPROT_RDY_CTL_CR_AP2CONN_BGSYS_ON_TOP_PWR_ON_MASK_ADDR CONN_RGU_ON_BGFSYS_SLPPROT_RDY_CTL_ADDR
#define CONN_RGU_ON_BGFSYS_SLPPROT_RDY_CTL_CR_AP2CONN_BGSYS_ON_TOP_PWR_ON_MASK_MASK 0x00000004u                // CR_AP2CONN_BGSYS_ON_TOP_PWR_ON_MASK[2]
#define CONN_RGU_ON_BGFSYS_SLPPROT_RDY_CTL_CR_AP2CONN_BGSYS_ON_TOP_PWR_ON_MASK_SHFT 2u
#define CONN_RGU_ON_BGFSYS_SLPPROT_RDY_CTL_CR_BGSYS_RADIO_OFF_PRE_RDY_ADDR CONN_RGU_ON_BGFSYS_SLPPROT_RDY_CTL_ADDR
#define CONN_RGU_ON_BGFSYS_SLPPROT_RDY_CTL_CR_BGSYS_RADIO_OFF_PRE_RDY_MASK 0x00000002u                // CR_BGSYS_RADIO_OFF_PRE_RDY[1]
#define CONN_RGU_ON_BGFSYS_SLPPROT_RDY_CTL_CR_BGSYS_RADIO_OFF_PRE_RDY_SHFT 1u
#define CONN_RGU_ON_BGFSYS_SLPPROT_RDY_CTL_CR_BGSYS_PROT_RDY_MASK_ADDR CONN_RGU_ON_BGFSYS_SLPPROT_RDY_CTL_ADDR
#define CONN_RGU_ON_BGFSYS_SLPPROT_RDY_CTL_CR_BGSYS_PROT_RDY_MASK_MASK 0x00000001u                // CR_BGSYS_PROT_RDY_MASK[0]
#define CONN_RGU_ON_BGFSYS_SLPPROT_RDY_CTL_CR_BGSYS_PROT_RDY_MASK_SHFT 0u

/* =====================================================================================

  ---ZBSYS_SLPPROT_RDY_CTL (0x18000000 + 0x038u)---

    CR_ZBSYS_PROT_RDY_MASK[0]    - (RW)  xxx 
    CR_ZBSYS_RADIO_OFF_PRE_RDY[1] - (RW)  xxx 
    CR_AP2CONN_ZBSYS_ON_TOP_PWR_ON_MASK[2] - (RW)  xxx 
    CR_BTSYS_IS_PWR_OFF_MASK[3]  - (RW)  xxx 
    RESERVED4[31..4]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_ZBSYS_SLPPROT_RDY_CTL_CR_BTSYS_IS_PWR_OFF_MASK_ADDR CONN_RGU_ON_ZBSYS_SLPPROT_RDY_CTL_ADDR
#define CONN_RGU_ON_ZBSYS_SLPPROT_RDY_CTL_CR_BTSYS_IS_PWR_OFF_MASK_MASK 0x00000008u                // CR_BTSYS_IS_PWR_OFF_MASK[3]
#define CONN_RGU_ON_ZBSYS_SLPPROT_RDY_CTL_CR_BTSYS_IS_PWR_OFF_MASK_SHFT 3u
#define CONN_RGU_ON_ZBSYS_SLPPROT_RDY_CTL_CR_AP2CONN_ZBSYS_ON_TOP_PWR_ON_MASK_ADDR CONN_RGU_ON_ZBSYS_SLPPROT_RDY_CTL_ADDR
#define CONN_RGU_ON_ZBSYS_SLPPROT_RDY_CTL_CR_AP2CONN_ZBSYS_ON_TOP_PWR_ON_MASK_MASK 0x00000004u                // CR_AP2CONN_ZBSYS_ON_TOP_PWR_ON_MASK[2]
#define CONN_RGU_ON_ZBSYS_SLPPROT_RDY_CTL_CR_AP2CONN_ZBSYS_ON_TOP_PWR_ON_MASK_SHFT 2u
#define CONN_RGU_ON_ZBSYS_SLPPROT_RDY_CTL_CR_ZBSYS_RADIO_OFF_PRE_RDY_ADDR CONN_RGU_ON_ZBSYS_SLPPROT_RDY_CTL_ADDR
#define CONN_RGU_ON_ZBSYS_SLPPROT_RDY_CTL_CR_ZBSYS_RADIO_OFF_PRE_RDY_MASK 0x00000002u                // CR_ZBSYS_RADIO_OFF_PRE_RDY[1]
#define CONN_RGU_ON_ZBSYS_SLPPROT_RDY_CTL_CR_ZBSYS_RADIO_OFF_PRE_RDY_SHFT 1u
#define CONN_RGU_ON_ZBSYS_SLPPROT_RDY_CTL_CR_ZBSYS_PROT_RDY_MASK_ADDR CONN_RGU_ON_ZBSYS_SLPPROT_RDY_CTL_ADDR
#define CONN_RGU_ON_ZBSYS_SLPPROT_RDY_CTL_CR_ZBSYS_PROT_RDY_MASK_MASK 0x00000001u                // CR_ZBSYS_PROT_RDY_MASK[0]
#define CONN_RGU_ON_ZBSYS_SLPPROT_RDY_CTL_CR_ZBSYS_PROT_RDY_MASK_SHFT 0u

/* =====================================================================================

  ---MEM_PWR_CTL (0x18000000 + 0x040u)---

    OSC_RDY_MASK_FOR_MEM_ON[0]   - (RW) conn_infra memory power on check
                                     1'b0: conn_infra mem power on after osc_rdy = 1
                                     1'b1: don't care osc_rdy value
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_MEM_PWR_CTL_OSC_RDY_MASK_FOR_MEM_ON_ADDR   CONN_RGU_ON_MEM_PWR_CTL_ADDR
#define CONN_RGU_ON_MEM_PWR_CTL_OSC_RDY_MASK_FOR_MEM_ON_MASK   0x00000001u                // OSC_RDY_MASK_FOR_MEM_ON[0]
#define CONN_RGU_ON_MEM_PWR_CTL_OSC_RDY_MASK_FOR_MEM_ON_SHFT   0u

/* =====================================================================================

  ---SYSRAM_SHIFT_CHAIN_CTL (0x18000000 + 0x044u)---

    ISO_PRE[7..0]                - (RW) For conn_infra_off memory(conn_infra sysram/co_ex mem/fm_ctrl mem) power-on sequence, the initial delay cycles numbers.
                                     From SYSRAM_PWR_ON 0->1 to RGU hardware generate CS/CK isolation 1->0
                                     (number below 8 are invalid)
    PDN_PRE[15..8]               - (RW) For conn_infra_off memory(conn_infra sysram/co_ex mem/fm_ctrl mem) power-off sequence, the initial delay cycles numbers.
                                     From SYSRAM_PWR_ON 1->0 to RGU hardware generate power down delay chain enable 0->1
    PON_PRE[23..16]              - (RW) For conn_infra_off memory(conn_infra sysram/co_ex mem/fm_ctrl mem) power-on sequence, the initial delay cycles numbers.
                                     From SYSRAM_PWR_ON 0->1 to RGU hardware generate power down delay chain enable 1->0
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_SYSRAM_SHIFT_CHAIN_CTL_PON_PRE_ADDR        CONN_RGU_ON_SYSRAM_SHIFT_CHAIN_CTL_ADDR
#define CONN_RGU_ON_SYSRAM_SHIFT_CHAIN_CTL_PON_PRE_MASK        0x00FF0000u                // PON_PRE[23..16]
#define CONN_RGU_ON_SYSRAM_SHIFT_CHAIN_CTL_PON_PRE_SHFT        16u
#define CONN_RGU_ON_SYSRAM_SHIFT_CHAIN_CTL_PDN_PRE_ADDR        CONN_RGU_ON_SYSRAM_SHIFT_CHAIN_CTL_ADDR
#define CONN_RGU_ON_SYSRAM_SHIFT_CHAIN_CTL_PDN_PRE_MASK        0x0000FF00u                // PDN_PRE[15..8]
#define CONN_RGU_ON_SYSRAM_SHIFT_CHAIN_CTL_PDN_PRE_SHFT        8u
#define CONN_RGU_ON_SYSRAM_SHIFT_CHAIN_CTL_ISO_PRE_ADDR        CONN_RGU_ON_SYSRAM_SHIFT_CHAIN_CTL_ADDR
#define CONN_RGU_ON_SYSRAM_SHIFT_CHAIN_CTL_ISO_PRE_MASK        0x000000FFu                // ISO_PRE[7..0]
#define CONN_RGU_ON_SYSRAM_SHIFT_CHAIN_CTL_ISO_PRE_SHFT        0u

/* =====================================================================================

  ---SYSRAM_HWCTL_PDN (0x18000000 + 0x050u)---

    SYSRAM_HWCTL_PDN[5..0]       - (RW) 0: power-on/power-down control by S/W CR *_SWCTL_*
                                     1: power-on/power-down control by H/W
    RESERVED6[31..6]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_SYSRAM_HWCTL_PDN_SYSRAM_HWCTL_PDN_ADDR     CONN_RGU_ON_SYSRAM_HWCTL_PDN_ADDR
#define CONN_RGU_ON_SYSRAM_HWCTL_PDN_SYSRAM_HWCTL_PDN_MASK     0x0000003Fu                // SYSRAM_HWCTL_PDN[5..0]
#define CONN_RGU_ON_SYSRAM_HWCTL_PDN_SYSRAM_HWCTL_PDN_SHFT     0u

/* =====================================================================================

  ---SYSRAM_HWCTL_SLP (0x18000000 + 0x054u)---

    SYSRAM_HWCTL_SLP[5..0]       - (RW) 0: wakeup/sleep control by S/W CR *_SWCTL_*
                                     1: wakeup/sleep control by H/W
    RESERVED6[31..6]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_SYSRAM_HWCTL_SLP_SYSRAM_HWCTL_SLP_ADDR     CONN_RGU_ON_SYSRAM_HWCTL_SLP_ADDR
#define CONN_RGU_ON_SYSRAM_HWCTL_SLP_SYSRAM_HWCTL_SLP_MASK     0x0000003Fu                // SYSRAM_HWCTL_SLP[5..0]
#define CONN_RGU_ON_SYSRAM_HWCTL_SLP_SYSRAM_HWCTL_SLP_SHFT     0u

/* =====================================================================================

  ---SYSRAM_SWCTL_PDN (0x18000000 + 0x058u)---

    SYSRAM_SWCTL_PDN[5..0]       - (RW) 0: power-down=0
                                     1: power-down=1
    RESERVED6[31..6]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_SYSRAM_SWCTL_PDN_SYSRAM_SWCTL_PDN_ADDR     CONN_RGU_ON_SYSRAM_SWCTL_PDN_ADDR
#define CONN_RGU_ON_SYSRAM_SWCTL_PDN_SYSRAM_SWCTL_PDN_MASK     0x0000003Fu                // SYSRAM_SWCTL_PDN[5..0]
#define CONN_RGU_ON_SYSRAM_SWCTL_PDN_SYSRAM_SWCTL_PDN_SHFT     0u

/* =====================================================================================

  ---SYSRAM_SWCTL_SLP (0x18000000 + 0x05Cu)---

    SYSRAM_SWCTL_SLP[5..0]       - (RW) 0: sleep=0
                                     1: sleep=1
    RESERVED6[31..6]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_SYSRAM_SWCTL_SLP_SYSRAM_SWCTL_SLP_ADDR     CONN_RGU_ON_SYSRAM_SWCTL_SLP_ADDR
#define CONN_RGU_ON_SYSRAM_SWCTL_SLP_SYSRAM_SWCTL_SLP_MASK     0x0000003Fu                // SYSRAM_SWCTL_SLP[5..0]
#define CONN_RGU_ON_SYSRAM_SWCTL_SLP_SYSRAM_SWCTL_SLP_SHFT     0u

/* =====================================================================================

  ---SYSRAM_SWCTL_CKISO (0x18000000 + 0x060u)---

    SYSRAM_SWCTL_CKISO[5..0]     - (RW) 0: ckiso=0
                                     1: ckiso=1
    RESERVED6[31..6]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_SYSRAM_SWCTL_CKISO_SYSRAM_SWCTL_CKISO_ADDR CONN_RGU_ON_SYSRAM_SWCTL_CKISO_ADDR
#define CONN_RGU_ON_SYSRAM_SWCTL_CKISO_SYSRAM_SWCTL_CKISO_MASK 0x0000003Fu                // SYSRAM_SWCTL_CKISO[5..0]
#define CONN_RGU_ON_SYSRAM_SWCTL_CKISO_SYSRAM_SWCTL_CKISO_SHFT 0u

/* =====================================================================================

  ---SYSRAM_SWCTL_ISOINT (0x18000000 + 0x064u)---

    SYSRAM_SWCTL_ISOINT[5..0]    - (RW) 0: isoint=0
                                     1: isoint=1
    RESERVED6[31..6]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_SYSRAM_SWCTL_ISOINT_SYSRAM_SWCTL_ISOINT_ADDR CONN_RGU_ON_SYSRAM_SWCTL_ISOINT_ADDR
#define CONN_RGU_ON_SYSRAM_SWCTL_ISOINT_SYSRAM_SWCTL_ISOINT_MASK 0x0000003Fu                // SYSRAM_SWCTL_ISOINT[5..0]
#define CONN_RGU_ON_SYSRAM_SWCTL_ISOINT_SYSRAM_SWCTL_ISOINT_SHFT 0u

/* =====================================================================================

  ---FM_CTRL_MEM_HWCTL_PDN (0x18000000 + 0x090u)---

    FM_CTRL_MEM_HWCTL_PDN[0]     - (RW) 0: power-on/power-down control by S/W CR *_SWCTL_*
                                     1: power-on/power-down control by H/W
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_FM_CTRL_MEM_HWCTL_PDN_FM_CTRL_MEM_HWCTL_PDN_ADDR CONN_RGU_ON_FM_CTRL_MEM_HWCTL_PDN_ADDR
#define CONN_RGU_ON_FM_CTRL_MEM_HWCTL_PDN_FM_CTRL_MEM_HWCTL_PDN_MASK 0x00000001u                // FM_CTRL_MEM_HWCTL_PDN[0]
#define CONN_RGU_ON_FM_CTRL_MEM_HWCTL_PDN_FM_CTRL_MEM_HWCTL_PDN_SHFT 0u

/* =====================================================================================

  ---FM_CTRL_MEM_HWCTL_SLP (0x18000000 + 0x094u)---

    FM_CTRL_MEM_HWCTL_SLP[0]     - (RW) 0: wakeup/sleep control by S/W CR *_SWCTL_*
                                     1: wakeup/sleep control by H/W
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_FM_CTRL_MEM_HWCTL_SLP_FM_CTRL_MEM_HWCTL_SLP_ADDR CONN_RGU_ON_FM_CTRL_MEM_HWCTL_SLP_ADDR
#define CONN_RGU_ON_FM_CTRL_MEM_HWCTL_SLP_FM_CTRL_MEM_HWCTL_SLP_MASK 0x00000001u                // FM_CTRL_MEM_HWCTL_SLP[0]
#define CONN_RGU_ON_FM_CTRL_MEM_HWCTL_SLP_FM_CTRL_MEM_HWCTL_SLP_SHFT 0u

/* =====================================================================================

  ---FM_CTRL_MEM_SWCTL_PDN (0x18000000 + 0x098u)---

    FM_CTRL_MEM_SWCTL_PDN[0]     - (RW) 0: power-down=0
                                     1: power-down=1
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_FM_CTRL_MEM_SWCTL_PDN_FM_CTRL_MEM_SWCTL_PDN_ADDR CONN_RGU_ON_FM_CTRL_MEM_SWCTL_PDN_ADDR
#define CONN_RGU_ON_FM_CTRL_MEM_SWCTL_PDN_FM_CTRL_MEM_SWCTL_PDN_MASK 0x00000001u                // FM_CTRL_MEM_SWCTL_PDN[0]
#define CONN_RGU_ON_FM_CTRL_MEM_SWCTL_PDN_FM_CTRL_MEM_SWCTL_PDN_SHFT 0u

/* =====================================================================================

  ---FM_CTRL_MEM_SWCTL_SLP (0x18000000 + 0x09Cu)---

    FM_CTRL_MEM_SWCTL_SLP[0]     - (RW) 0: sleep=0
                                     1: sleep=1
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_FM_CTRL_MEM_SWCTL_SLP_FM_CTRL_MEM_SWCTL_SLP_ADDR CONN_RGU_ON_FM_CTRL_MEM_SWCTL_SLP_ADDR
#define CONN_RGU_ON_FM_CTRL_MEM_SWCTL_SLP_FM_CTRL_MEM_SWCTL_SLP_MASK 0x00000001u                // FM_CTRL_MEM_SWCTL_SLP[0]
#define CONN_RGU_ON_FM_CTRL_MEM_SWCTL_SLP_FM_CTRL_MEM_SWCTL_SLP_SHFT 0u

/* =====================================================================================

  ---FM_CTRL_MEM_SWCTL_CKISO (0x18000000 + 0x0A0u)---

    FM_CTRL_MEM_SWCTL_CKISO[0]   - (RW) 0: ckiso=0
                                     1: ckiso=1
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_FM_CTRL_MEM_SWCTL_CKISO_FM_CTRL_MEM_SWCTL_CKISO_ADDR CONN_RGU_ON_FM_CTRL_MEM_SWCTL_CKISO_ADDR
#define CONN_RGU_ON_FM_CTRL_MEM_SWCTL_CKISO_FM_CTRL_MEM_SWCTL_CKISO_MASK 0x00000001u                // FM_CTRL_MEM_SWCTL_CKISO[0]
#define CONN_RGU_ON_FM_CTRL_MEM_SWCTL_CKISO_FM_CTRL_MEM_SWCTL_CKISO_SHFT 0u

/* =====================================================================================

  ---VON_SYSRAM_SHIFT_CHAIN_CTL (0x18000000 + 0x0ACu)---

    ISO_PRE[7..0]                - (RW) For conn_infra_off memory(conn_infra sysram/co_ex mem/fm_ctrl mem) power-on sequence, the initial delay cycles numbers.
                                     From SYSRAM_PWR_ON 0->1 to RGU hardware generate CS/CK isolation 1->0
                                     (number below 8 are invalid)
    PDN_PRE[15..8]               - (RW) For conn_infra_off memory(conn_infra sysram/co_ex mem/fm_ctrl mem) power-off sequence, the initial delay cycles numbers.
                                     From SYSRAM_PWR_ON 1->0 to RGU hardware generate power down delay chain enable 0->1
    PON_PRE[23..16]              - (RW) For conn_infra_off memory(conn_infra sysram/co_ex mem/fm_ctrl mem) power-on sequence, the initial delay cycles numbers.
                                     From SYSRAM_PWR_ON 0->1 to RGU hardware generate power down delay chain enable 1->0
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_VON_SYSRAM_SHIFT_CHAIN_CTL_PON_PRE_ADDR    CONN_RGU_ON_VON_SYSRAM_SHIFT_CHAIN_CTL_ADDR
#define CONN_RGU_ON_VON_SYSRAM_SHIFT_CHAIN_CTL_PON_PRE_MASK    0x00FF0000u                // PON_PRE[23..16]
#define CONN_RGU_ON_VON_SYSRAM_SHIFT_CHAIN_CTL_PON_PRE_SHFT    16u
#define CONN_RGU_ON_VON_SYSRAM_SHIFT_CHAIN_CTL_PDN_PRE_ADDR    CONN_RGU_ON_VON_SYSRAM_SHIFT_CHAIN_CTL_ADDR
#define CONN_RGU_ON_VON_SYSRAM_SHIFT_CHAIN_CTL_PDN_PRE_MASK    0x0000FF00u                // PDN_PRE[15..8]
#define CONN_RGU_ON_VON_SYSRAM_SHIFT_CHAIN_CTL_PDN_PRE_SHFT    8u
#define CONN_RGU_ON_VON_SYSRAM_SHIFT_CHAIN_CTL_ISO_PRE_ADDR    CONN_RGU_ON_VON_SYSRAM_SHIFT_CHAIN_CTL_ADDR
#define CONN_RGU_ON_VON_SYSRAM_SHIFT_CHAIN_CTL_ISO_PRE_MASK    0x000000FFu                // ISO_PRE[7..0]
#define CONN_RGU_ON_VON_SYSRAM_SHIFT_CHAIN_CTL_ISO_PRE_SHFT    0u

/* =====================================================================================

  ---VON_SYSRAM_HWCTL_PDN (0x18000000 + 0x0B0u)---

    VON_SYSRAM_HWCTL_PDN[0]      - (RW) 0: power-on/power-down control by S/W CR *_SWCTL_*
                                     1: power-on/power-down control by H/W
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_VON_SYSRAM_HWCTL_PDN_VON_SYSRAM_HWCTL_PDN_ADDR CONN_RGU_ON_VON_SYSRAM_HWCTL_PDN_ADDR
#define CONN_RGU_ON_VON_SYSRAM_HWCTL_PDN_VON_SYSRAM_HWCTL_PDN_MASK 0x00000001u                // VON_SYSRAM_HWCTL_PDN[0]
#define CONN_RGU_ON_VON_SYSRAM_HWCTL_PDN_VON_SYSRAM_HWCTL_PDN_SHFT 0u

/* =====================================================================================

  ---VON_SYSRAM_HWCTL_SLP (0x18000000 + 0x0B4u)---

    VON_SYSRAM_HWCTL_SLP[0]      - (RW) 0: wakeup/sleep control by S/W CR *_SWCTL_*
                                     1: wakeup/sleep control by H/W
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_VON_SYSRAM_HWCTL_SLP_VON_SYSRAM_HWCTL_SLP_ADDR CONN_RGU_ON_VON_SYSRAM_HWCTL_SLP_ADDR
#define CONN_RGU_ON_VON_SYSRAM_HWCTL_SLP_VON_SYSRAM_HWCTL_SLP_MASK 0x00000001u                // VON_SYSRAM_HWCTL_SLP[0]
#define CONN_RGU_ON_VON_SYSRAM_HWCTL_SLP_VON_SYSRAM_HWCTL_SLP_SHFT 0u

/* =====================================================================================

  ---VON_SYSRAM_SWCTL_PDN (0x18000000 + 0x0B8u)---

    VON_SYSRAM_SWCTL_PDN[0]      - (RW) 0: power-down=0
                                     1: power-down=1
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_VON_SYSRAM_SWCTL_PDN_VON_SYSRAM_SWCTL_PDN_ADDR CONN_RGU_ON_VON_SYSRAM_SWCTL_PDN_ADDR
#define CONN_RGU_ON_VON_SYSRAM_SWCTL_PDN_VON_SYSRAM_SWCTL_PDN_MASK 0x00000001u                // VON_SYSRAM_SWCTL_PDN[0]
#define CONN_RGU_ON_VON_SYSRAM_SWCTL_PDN_VON_SYSRAM_SWCTL_PDN_SHFT 0u

/* =====================================================================================

  ---VON_SYSRAM_SWCTL_SLP (0x18000000 + 0x0BCu)---

    VON_SYSRAM_SWCTL_SLP[0]      - (RW) 0: sleep=0
                                     1: sleep=1
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_VON_SYSRAM_SWCTL_SLP_VON_SYSRAM_SWCTL_SLP_ADDR CONN_RGU_ON_VON_SYSRAM_SWCTL_SLP_ADDR
#define CONN_RGU_ON_VON_SYSRAM_SWCTL_SLP_VON_SYSRAM_SWCTL_SLP_MASK 0x00000001u                // VON_SYSRAM_SWCTL_SLP[0]
#define CONN_RGU_ON_VON_SYSRAM_SWCTL_SLP_VON_SYSRAM_SWCTL_SLP_SHFT 0u

/* =====================================================================================

  ---VON_SYSRAM_SWCTL_CKISO (0x18000000 + 0x0C0u)---

    VON_SYSRAM_SWCTL_CKISO[0]    - (RW) 0: ckiso=0
                                     1: ckiso=1
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_VON_SYSRAM_SWCTL_CKISO_VON_SYSRAM_SWCTL_CKISO_ADDR CONN_RGU_ON_VON_SYSRAM_SWCTL_CKISO_ADDR
#define CONN_RGU_ON_VON_SYSRAM_SWCTL_CKISO_VON_SYSRAM_SWCTL_CKISO_MASK 0x00000001u                // VON_SYSRAM_SWCTL_CKISO[0]
#define CONN_RGU_ON_VON_SYSRAM_SWCTL_CKISO_VON_SYSRAM_SWCTL_CKISO_SHFT 0u

/* =====================================================================================

  ---VON_SYSRAM_SWCTL_ISOINT (0x18000000 + 0x0C4u)---

    VON_SYSRAM_SWCTL_ISOINT[0]   - (RW) 0: isoint=0
                                     1: isoint=1
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_VON_SYSRAM_SWCTL_ISOINT_VON_SYSRAM_SWCTL_ISOINT_ADDR CONN_RGU_ON_VON_SYSRAM_SWCTL_ISOINT_ADDR
#define CONN_RGU_ON_VON_SYSRAM_SWCTL_ISOINT_VON_SYSRAM_SWCTL_ISOINT_MASK 0x00000001u                // VON_SYSRAM_SWCTL_ISOINT[0]
#define CONN_RGU_ON_VON_SYSRAM_SWCTL_ISOINT_VON_SYSRAM_SWCTL_ISOINT_SHFT 0u

/* =====================================================================================

  ---BGFSYS_WDT_EN (0x18000000 + 0x108u)---

    BGFSYS_WDT_RESET_ENABLE[3..0] - (RW) BGFSYS WDT reset to iiiCONN_INFRA, WFSYS and BGFSYSiii enable, disable
                                     Note that these 3-bit CR do not be reset by WDT reset, they are reset by power-on reset only
                                     [3]
                                     0: disable BGFSYS WDT reset to iiiCONN_INFRAiii (SUBSYS only)
                                     1: enable BGFSYS WDT reset to iiiCONN_INFRAiii (SUBSYS only)
                                     [2]
                                     0: disable BGFSYS WDT reset to iiiBGFSYSiii
                                     1: enable BGFSYS WDT reset to iiiBGFSYSiii
                                     [1]
                                     0: disable BGFSYS WDT reset to iiiWFSYSiii
                                     1: enable BGFSYS WDT reset to iiiWFSYSiii
                                     [0]
                                     0: disable BGFSYS WDT reset to iiiCONN_INFRAiii
                                     1: enable BGFSYS WDT reset to iiiCONN_INFRAiii
    RESERVED4[31..4]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_BGFSYS_WDT_EN_BGFSYS_WDT_RESET_ENABLE_ADDR CONN_RGU_ON_BGFSYS_WDT_EN_ADDR
#define CONN_RGU_ON_BGFSYS_WDT_EN_BGFSYS_WDT_RESET_ENABLE_MASK 0x0000000Fu                // BGFSYS_WDT_RESET_ENABLE[3..0]
#define CONN_RGU_ON_BGFSYS_WDT_EN_BGFSYS_WDT_RESET_ENABLE_SHFT 0u

/* =====================================================================================

  ---BGFSYS1_WDT_EN (0x18000000 + 0x10Cu)---

    BGFSYS1_WDT_RESET_ENABLE[3..0] - (RW) BGFSYS1 WDT reset to iiiCONN_INFRA, WFSYS and BGFSYSiii enable, disable
                                     Note that these 3-bit CR do not be reset by WDT reset, they are reset by power-on reset only
                                     [3]
                                     0: disable BGFSYS1 WDT reset to iiiCONN_INFRAiii (SUBSYS only)
                                     1: enable BGFSYS1 WDT reset to iiiCONN_INFRAiii (SUBSYS only)
                                     [2]
                                     0: disable BGFSYS1 WDT reset to iiiBGFSYSiii
                                     1: enable BGFSYS1 WDT reset to iiiBGFSYSiii
                                     [1]
                                     0: disable BGFSYS1 WDT reset to iiiWFSYSiii
                                     1: enable BGFSYS1 WDT reset to iiiWFSYSiii
                                     [0]
                                     0: disable BGFSYS1 WDT reset to iiiCONN_INFRAiii
                                     1: enable BGFSYS1 WDT reset to iiiCONN_INFRAiii
    RESERVED4[31..4]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_BGFSYS1_WDT_EN_BGFSYS1_WDT_RESET_ENABLE_ADDR CONN_RGU_ON_BGFSYS1_WDT_EN_ADDR
#define CONN_RGU_ON_BGFSYS1_WDT_EN_BGFSYS1_WDT_RESET_ENABLE_MASK 0x0000000Fu                // BGFSYS1_WDT_RESET_ENABLE[3..0]
#define CONN_RGU_ON_BGFSYS1_WDT_EN_BGFSYS1_WDT_RESET_ENABLE_SHFT 0u

/* =====================================================================================

  ---WFSYS_CPU_SW_RST_B (0x18000000 + 0x120u)---

    WFSYS_CPU_SW_RST_B[0]        - (RW) WFSYS CPU software reset (active-low) to WFSYS CPU (depends on MCYSYS of each project, this bit is for WFSYS iiiWMiii CPU only in Harrier project)
                                     0: reset
                                     1: not reset
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_WFSYS_CPU_SW_RST_B_WFSYS_CPU_SW_RST_B_ADDR CONN_RGU_ON_WFSYS_CPU_SW_RST_B_ADDR
#define CONN_RGU_ON_WFSYS_CPU_SW_RST_B_WFSYS_CPU_SW_RST_B_MASK 0x00000001u                // WFSYS_CPU_SW_RST_B[0]
#define CONN_RGU_ON_WFSYS_CPU_SW_RST_B_WFSYS_CPU_SW_RST_B_SHFT 0u

/* =====================================================================================

  ---BGFSYS_CPU_SW_RST_B (0x18000000 + 0x124u)---

    BGFSYS_CPU_SW_RST_B[0]       - (RW) BGFSYS CPU software reset (active-low) to BGFSYS CPU
                                     0: reset
                                     1: not reset
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_BGFSYS_CPU_SW_RST_B_BGFSYS_CPU_SW_RST_B_ADDR CONN_RGU_ON_BGFSYS_CPU_SW_RST_B_ADDR
#define CONN_RGU_ON_BGFSYS_CPU_SW_RST_B_BGFSYS_CPU_SW_RST_B_MASK 0x00000001u                // BGFSYS_CPU_SW_RST_B[0]
#define CONN_RGU_ON_BGFSYS_CPU_SW_RST_B_BGFSYS_CPU_SW_RST_B_SHFT 0u

/* =====================================================================================

  ---BGFSYS1_CPU_SW_RST_B (0x18000000 + 0x128u)---

    BGFSYS1_CPU_SW_RST_B[0]      - (RW) BGFSYS1 CPU software reset (active-low) to BGFSYS1 CPU
                                     0: reset
                                     1: not reset
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_BGFSYS1_CPU_SW_RST_B_BGFSYS1_CPU_SW_RST_B_ADDR CONN_RGU_ON_BGFSYS1_CPU_SW_RST_B_ADDR
#define CONN_RGU_ON_BGFSYS1_CPU_SW_RST_B_BGFSYS1_CPU_SW_RST_B_MASK 0x00000001u                // BGFSYS1_CPU_SW_RST_B[0]
#define CONN_RGU_ON_BGFSYS1_CPU_SW_RST_B_BGFSYS1_CPU_SW_RST_B_SHFT 0u

/* =====================================================================================

  ---ZBSYS_CPU_SW_RST_B (0x18000000 + 0x130u)---

    ZBSYS_CPU_SW_RST_B[0]        - (RW) ZBSYS CPU software reset (active-low) to ZBSYS CPU
                                     0: reset
                                     1: not reset
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_ZBSYS_CPU_SW_RST_B_ZBSYS_CPU_SW_RST_B_ADDR CONN_RGU_ON_ZBSYS_CPU_SW_RST_B_ADDR
#define CONN_RGU_ON_ZBSYS_CPU_SW_RST_B_ZBSYS_CPU_SW_RST_B_MASK 0x00000001u                // ZBSYS_CPU_SW_RST_B[0]
#define CONN_RGU_ON_ZBSYS_CPU_SW_RST_B_ZBSYS_CPU_SW_RST_B_SHFT 0u

/* =====================================================================================

  ---WFSYS_SW_RST_B (0x18000000 + 0x140u)---

    WFSYS_SW_RST_B[0]            - (RW) WFSYS software reset (active-low)
                                     0: reset
                                     1: not reset
    WFSYS_SW_RST_BYPASS[1]       - (RW) WFSYS software reset bypass waiting iiiHW auto-switch bus clockiii and iiiHW auto-control slpprotiii
                                     0: not bypass
                                     1: bypass
    RESERVED2[2]                 - (RO) Reserved bits
    WFSYS_SW_RST_B_BYPASS_CHK[3] - (RW) bypass slpprot/clock control from subsys sw reset
    WFSYS_SW_INIT_DONE[4]        - (RW) Used for SW to indicate iiiWFSYS initial done after software resetiii
                                     0: SW INIT. On-going
                                     1: SW INIT. Done
    WFSYS_ON_TOP_RST_B_VLD_FOR_SEMA[5] - (RW) 0: valid
                                     1: invalid
    RESERVED6[7..6]              - (RO) Reserved bits
    CR_WFSYS_VLP_SW_RST_B[8]     - (RW) vlp domain reset by sw mode
    RESERVED9[31..9]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_WFSYS_SW_RST_B_CR_WFSYS_VLP_SW_RST_B_ADDR  CONN_RGU_ON_WFSYS_SW_RST_B_ADDR
#define CONN_RGU_ON_WFSYS_SW_RST_B_CR_WFSYS_VLP_SW_RST_B_MASK  0x00000100u                // CR_WFSYS_VLP_SW_RST_B[8]
#define CONN_RGU_ON_WFSYS_SW_RST_B_CR_WFSYS_VLP_SW_RST_B_SHFT  8u
#define CONN_RGU_ON_WFSYS_SW_RST_B_WFSYS_ON_TOP_RST_B_VLD_FOR_SEMA_ADDR CONN_RGU_ON_WFSYS_SW_RST_B_ADDR
#define CONN_RGU_ON_WFSYS_SW_RST_B_WFSYS_ON_TOP_RST_B_VLD_FOR_SEMA_MASK 0x00000020u                // WFSYS_ON_TOP_RST_B_VLD_FOR_SEMA[5]
#define CONN_RGU_ON_WFSYS_SW_RST_B_WFSYS_ON_TOP_RST_B_VLD_FOR_SEMA_SHFT 5u
#define CONN_RGU_ON_WFSYS_SW_RST_B_WFSYS_SW_INIT_DONE_ADDR     CONN_RGU_ON_WFSYS_SW_RST_B_ADDR
#define CONN_RGU_ON_WFSYS_SW_RST_B_WFSYS_SW_INIT_DONE_MASK     0x00000010u                // WFSYS_SW_INIT_DONE[4]
#define CONN_RGU_ON_WFSYS_SW_RST_B_WFSYS_SW_INIT_DONE_SHFT     4u
#define CONN_RGU_ON_WFSYS_SW_RST_B_WFSYS_SW_RST_B_BYPASS_CHK_ADDR CONN_RGU_ON_WFSYS_SW_RST_B_ADDR
#define CONN_RGU_ON_WFSYS_SW_RST_B_WFSYS_SW_RST_B_BYPASS_CHK_MASK 0x00000008u                // WFSYS_SW_RST_B_BYPASS_CHK[3]
#define CONN_RGU_ON_WFSYS_SW_RST_B_WFSYS_SW_RST_B_BYPASS_CHK_SHFT 3u
#define CONN_RGU_ON_WFSYS_SW_RST_B_WFSYS_SW_RST_BYPASS_ADDR    CONN_RGU_ON_WFSYS_SW_RST_B_ADDR
#define CONN_RGU_ON_WFSYS_SW_RST_B_WFSYS_SW_RST_BYPASS_MASK    0x00000002u                // WFSYS_SW_RST_BYPASS[1]
#define CONN_RGU_ON_WFSYS_SW_RST_B_WFSYS_SW_RST_BYPASS_SHFT    1u
#define CONN_RGU_ON_WFSYS_SW_RST_B_WFSYS_SW_RST_B_ADDR         CONN_RGU_ON_WFSYS_SW_RST_B_ADDR
#define CONN_RGU_ON_WFSYS_SW_RST_B_WFSYS_SW_RST_B_MASK         0x00000001u                // WFSYS_SW_RST_B[0]
#define CONN_RGU_ON_WFSYS_SW_RST_B_WFSYS_SW_RST_B_SHFT         0u

/* =====================================================================================

  ---BGFSYS_SW_RST_B (0x18000000 + 0x144u)---

    BGFSYS_SW_RST_B[0]           - (RW) BGFSYS software reset (active-low)
                                     0: reset
                                     1: not reset
    BGFSYS_SW_RST_BYPASS[1]      - (RW) BGFSYS software reset bypass waiting iiiHW auto-switch bus clockiii and iiiHW auto-control slpprotiii
                                     0: not bypass
                                     1: bypass
    RESERVED2[2]                 - (RO) Reserved bits
    BGFSYS_SW_RST_B_BYPASS_CHK[3] - (RW) bypass slpprot/clock control from subsys sw reset
    BGFSYS_SW_INIT_DONE[4]       - (RW) Used for SW to indicate iiiBGFSYS initial done after software resetiii
                                     0: SW INIT. On-going
                                     1: SW INIT. Done
    BGFSYS_ON_TOP_RST_B_VLD_FOR_SEMA[5] - (RW) 0: valid
                                     1: invalid
    RESERVED6[7..6]              - (RO) Reserved bits
    CR_BGFSYS_VLP_SW_RST_B[8]    - (RW) vlp domain reset by sw mode
    RESERVED9[31..9]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_BGFSYS_SW_RST_B_CR_BGFSYS_VLP_SW_RST_B_ADDR CONN_RGU_ON_BGFSYS_SW_RST_B_ADDR
#define CONN_RGU_ON_BGFSYS_SW_RST_B_CR_BGFSYS_VLP_SW_RST_B_MASK 0x00000100u                // CR_BGFSYS_VLP_SW_RST_B[8]
#define CONN_RGU_ON_BGFSYS_SW_RST_B_CR_BGFSYS_VLP_SW_RST_B_SHFT 8u
#define CONN_RGU_ON_BGFSYS_SW_RST_B_BGFSYS_ON_TOP_RST_B_VLD_FOR_SEMA_ADDR CONN_RGU_ON_BGFSYS_SW_RST_B_ADDR
#define CONN_RGU_ON_BGFSYS_SW_RST_B_BGFSYS_ON_TOP_RST_B_VLD_FOR_SEMA_MASK 0x00000020u                // BGFSYS_ON_TOP_RST_B_VLD_FOR_SEMA[5]
#define CONN_RGU_ON_BGFSYS_SW_RST_B_BGFSYS_ON_TOP_RST_B_VLD_FOR_SEMA_SHFT 5u
#define CONN_RGU_ON_BGFSYS_SW_RST_B_BGFSYS_SW_INIT_DONE_ADDR   CONN_RGU_ON_BGFSYS_SW_RST_B_ADDR
#define CONN_RGU_ON_BGFSYS_SW_RST_B_BGFSYS_SW_INIT_DONE_MASK   0x00000010u                // BGFSYS_SW_INIT_DONE[4]
#define CONN_RGU_ON_BGFSYS_SW_RST_B_BGFSYS_SW_INIT_DONE_SHFT   4u
#define CONN_RGU_ON_BGFSYS_SW_RST_B_BGFSYS_SW_RST_B_BYPASS_CHK_ADDR CONN_RGU_ON_BGFSYS_SW_RST_B_ADDR
#define CONN_RGU_ON_BGFSYS_SW_RST_B_BGFSYS_SW_RST_B_BYPASS_CHK_MASK 0x00000008u                // BGFSYS_SW_RST_B_BYPASS_CHK[3]
#define CONN_RGU_ON_BGFSYS_SW_RST_B_BGFSYS_SW_RST_B_BYPASS_CHK_SHFT 3u
#define CONN_RGU_ON_BGFSYS_SW_RST_B_BGFSYS_SW_RST_BYPASS_ADDR  CONN_RGU_ON_BGFSYS_SW_RST_B_ADDR
#define CONN_RGU_ON_BGFSYS_SW_RST_B_BGFSYS_SW_RST_BYPASS_MASK  0x00000002u                // BGFSYS_SW_RST_BYPASS[1]
#define CONN_RGU_ON_BGFSYS_SW_RST_B_BGFSYS_SW_RST_BYPASS_SHFT  1u
#define CONN_RGU_ON_BGFSYS_SW_RST_B_BGFSYS_SW_RST_B_ADDR       CONN_RGU_ON_BGFSYS_SW_RST_B_ADDR
#define CONN_RGU_ON_BGFSYS_SW_RST_B_BGFSYS_SW_RST_B_MASK       0x00000001u                // BGFSYS_SW_RST_B[0]
#define CONN_RGU_ON_BGFSYS_SW_RST_B_BGFSYS_SW_RST_B_SHFT       0u

/* =====================================================================================

  ---BGFSYS1_SW_RST_B (0x18000000 + 0x148u)---

    BGFSYS1_SW_RST_B[0]          - (RW) BGFSYS1 software reset (active-low)
                                     0: reset
                                     1: not reset
    RESERVED1[3..1]              - (RO) Reserved bits
    BGFSYS1_SW_INIT_DONE[4]      - (RW) Used for SW to indicate iiiBGFSYS1 initial done after software resetiii
                                     0: SW INIT. On-going
                                     1: SW INIT. Done
    RESERVED5[31..5]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_BGFSYS1_SW_RST_B_BGFSYS1_SW_INIT_DONE_ADDR CONN_RGU_ON_BGFSYS1_SW_RST_B_ADDR
#define CONN_RGU_ON_BGFSYS1_SW_RST_B_BGFSYS1_SW_INIT_DONE_MASK 0x00000010u                // BGFSYS1_SW_INIT_DONE[4]
#define CONN_RGU_ON_BGFSYS1_SW_RST_B_BGFSYS1_SW_INIT_DONE_SHFT 4u
#define CONN_RGU_ON_BGFSYS1_SW_RST_B_BGFSYS1_SW_RST_B_ADDR     CONN_RGU_ON_BGFSYS1_SW_RST_B_ADDR
#define CONN_RGU_ON_BGFSYS1_SW_RST_B_BGFSYS1_SW_RST_B_MASK     0x00000001u                // BGFSYS1_SW_RST_B[0]
#define CONN_RGU_ON_BGFSYS1_SW_RST_B_BGFSYS1_SW_RST_B_SHFT     0u

/* =====================================================================================

  ---ZBSYS_SW_RST_B (0x18000000 + 0x150u)---

    ZBSYS_SW_RST_B[0]            - (RW) ZBSYS software reset (active-low)
                                     0: reset
                                     1: not reset
    ZBSYS_SW_RST_BYPASS[1]       - (RW) ZBSYS software reset bypass waiting iiiHW auto-switch bus clockiii and iiiHW auto-control slpprotiii
                                     0: not bypass
                                     1: bypass
    RESERVED2[2]                 - (RO) Reserved bits
    ZBSYS_SW_RST_B_BYPASS_CHK[3] - (RW) bypass slpprot/clock control from subsys sw reset
    ZBSYS_SW_INIT_DONE[4]        - (RW) Used for SW to indicate iiiZBSYS initial done after software resetiii
                                     0: SW INIT. On-going
                                     1: SW INIT. Done
    ZBSYS_ON_TOP_RST_B_VLD_FOR_SEMA[5] - (RW) 0: valid
                                     1: invalid
    RESERVED6[7..6]              - (RO) Reserved bits
    CR_ZBSYS_VLP_SW_RST_B[8]     - (RW) vlp domain reset by sw mode
    RESERVED9[31..9]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_ZBSYS_SW_RST_B_CR_ZBSYS_VLP_SW_RST_B_ADDR  CONN_RGU_ON_ZBSYS_SW_RST_B_ADDR
#define CONN_RGU_ON_ZBSYS_SW_RST_B_CR_ZBSYS_VLP_SW_RST_B_MASK  0x00000100u                // CR_ZBSYS_VLP_SW_RST_B[8]
#define CONN_RGU_ON_ZBSYS_SW_RST_B_CR_ZBSYS_VLP_SW_RST_B_SHFT  8u
#define CONN_RGU_ON_ZBSYS_SW_RST_B_ZBSYS_ON_TOP_RST_B_VLD_FOR_SEMA_ADDR CONN_RGU_ON_ZBSYS_SW_RST_B_ADDR
#define CONN_RGU_ON_ZBSYS_SW_RST_B_ZBSYS_ON_TOP_RST_B_VLD_FOR_SEMA_MASK 0x00000020u                // ZBSYS_ON_TOP_RST_B_VLD_FOR_SEMA[5]
#define CONN_RGU_ON_ZBSYS_SW_RST_B_ZBSYS_ON_TOP_RST_B_VLD_FOR_SEMA_SHFT 5u
#define CONN_RGU_ON_ZBSYS_SW_RST_B_ZBSYS_SW_INIT_DONE_ADDR     CONN_RGU_ON_ZBSYS_SW_RST_B_ADDR
#define CONN_RGU_ON_ZBSYS_SW_RST_B_ZBSYS_SW_INIT_DONE_MASK     0x00000010u                // ZBSYS_SW_INIT_DONE[4]
#define CONN_RGU_ON_ZBSYS_SW_RST_B_ZBSYS_SW_INIT_DONE_SHFT     4u
#define CONN_RGU_ON_ZBSYS_SW_RST_B_ZBSYS_SW_RST_B_BYPASS_CHK_ADDR CONN_RGU_ON_ZBSYS_SW_RST_B_ADDR
#define CONN_RGU_ON_ZBSYS_SW_RST_B_ZBSYS_SW_RST_B_BYPASS_CHK_MASK 0x00000008u                // ZBSYS_SW_RST_B_BYPASS_CHK[3]
#define CONN_RGU_ON_ZBSYS_SW_RST_B_ZBSYS_SW_RST_B_BYPASS_CHK_SHFT 3u
#define CONN_RGU_ON_ZBSYS_SW_RST_B_ZBSYS_SW_RST_BYPASS_ADDR    CONN_RGU_ON_ZBSYS_SW_RST_B_ADDR
#define CONN_RGU_ON_ZBSYS_SW_RST_B_ZBSYS_SW_RST_BYPASS_MASK    0x00000002u                // ZBSYS_SW_RST_BYPASS[1]
#define CONN_RGU_ON_ZBSYS_SW_RST_B_ZBSYS_SW_RST_BYPASS_SHFT    1u
#define CONN_RGU_ON_ZBSYS_SW_RST_B_ZBSYS_SW_RST_B_ADDR         CONN_RGU_ON_ZBSYS_SW_RST_B_ADDR
#define CONN_RGU_ON_ZBSYS_SW_RST_B_ZBSYS_SW_RST_B_MASK         0x00000001u                // ZBSYS_SW_RST_B[0]
#define CONN_RGU_ON_ZBSYS_SW_RST_B_ZBSYS_SW_RST_B_SHFT         0u

/* =====================================================================================

  ---SEMA_M0_SW_RST_B (0x18000000 + 0x158u)---

    SEMA_M0_SW_RST_B[0]          - (RW) Semaphore M0 software reset (active-low)
                                     0: reset
                                     1: not reset
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_SEMA_M0_SW_RST_B_SEMA_M0_SW_RST_B_ADDR     CONN_RGU_ON_SEMA_M0_SW_RST_B_ADDR
#define CONN_RGU_ON_SEMA_M0_SW_RST_B_SEMA_M0_SW_RST_B_MASK     0x00000001u                // SEMA_M0_SW_RST_B[0]
#define CONN_RGU_ON_SEMA_M0_SW_RST_B_SEMA_M0_SW_RST_B_SHFT     0u

/* =====================================================================================

  ---SEMA_M1_SW_RST_B (0x18000000 + 0x15Cu)---

    SEMA_M1_SW_RST_B[0]          - (RW) Semaphore M1 software reset (active-low)
                                     0: reset
                                     1: not reset
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_SEMA_M1_SW_RST_B_SEMA_M1_SW_RST_B_ADDR     CONN_RGU_ON_SEMA_M1_SW_RST_B_ADDR
#define CONN_RGU_ON_SEMA_M1_SW_RST_B_SEMA_M1_SW_RST_B_MASK     0x00000001u                // SEMA_M1_SW_RST_B[0]
#define CONN_RGU_ON_SEMA_M1_SW_RST_B_SEMA_M1_SW_RST_B_SHFT     0u

/* =====================================================================================

  ---SEMA_M2_SW_RST_B (0x18000000 + 0x160u)---

    SEMA_M2_SW_RST_B[0]          - (RW) Semaphore M2 software reset (active-low)
                                     0: reset
                                     1: not reset
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_SEMA_M2_SW_RST_B_SEMA_M2_SW_RST_B_ADDR     CONN_RGU_ON_SEMA_M2_SW_RST_B_ADDR
#define CONN_RGU_ON_SEMA_M2_SW_RST_B_SEMA_M2_SW_RST_B_MASK     0x00000001u                // SEMA_M2_SW_RST_B[0]
#define CONN_RGU_ON_SEMA_M2_SW_RST_B_SEMA_M2_SW_RST_B_SHFT     0u

/* =====================================================================================

  ---SEMA_M3_SW_RST_B (0x18000000 + 0x164u)---

    SEMA_M3_SW_RST_B[0]          - (RW) Semaphore M3 software reset (active-low)
                                     0: reset
                                     1: not reset
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_SEMA_M3_SW_RST_B_SEMA_M3_SW_RST_B_ADDR     CONN_RGU_ON_SEMA_M3_SW_RST_B_ADDR
#define CONN_RGU_ON_SEMA_M3_SW_RST_B_SEMA_M3_SW_RST_B_MASK     0x00000001u                // SEMA_M3_SW_RST_B[0]
#define CONN_RGU_ON_SEMA_M3_SW_RST_B_SEMA_M3_SW_RST_B_SHFT     0u

/* =====================================================================================

  ---HOSTCSR_WF_SW_RST_B (0x18000000 + 0x170u)---

    HOSTCSR_WF_SW_RST_B[0]       - (RW) WFSYS software reset (active-low) for host_csr
                                     0: reset
                                     1: not reset
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_HOSTCSR_WF_SW_RST_B_HOSTCSR_WF_SW_RST_B_ADDR CONN_RGU_ON_HOSTCSR_WF_SW_RST_B_ADDR
#define CONN_RGU_ON_HOSTCSR_WF_SW_RST_B_HOSTCSR_WF_SW_RST_B_MASK 0x00000001u                // HOSTCSR_WF_SW_RST_B[0]
#define CONN_RGU_ON_HOSTCSR_WF_SW_RST_B_HOSTCSR_WF_SW_RST_B_SHFT 0u

/* =====================================================================================

  ---HOSTCSR_BGFSYS_SW_RST_B (0x18000000 + 0x174u)---

    HOSTCSR_BGFSYS_SW_RST_B[0]   - (RW) BGFSYS software reset (active-low) for host_csr
                                     0: reset
                                     1: not reset
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_HOSTCSR_BGFSYS_SW_RST_B_HOSTCSR_BGFSYS_SW_RST_B_ADDR CONN_RGU_ON_HOSTCSR_BGFSYS_SW_RST_B_ADDR
#define CONN_RGU_ON_HOSTCSR_BGFSYS_SW_RST_B_HOSTCSR_BGFSYS_SW_RST_B_MASK 0x00000001u                // HOSTCSR_BGFSYS_SW_RST_B[0]
#define CONN_RGU_ON_HOSTCSR_BGFSYS_SW_RST_B_HOSTCSR_BGFSYS_SW_RST_B_SHFT 0u

/* =====================================================================================

  ---HOSTCSR_ZBSYS_SW_RST_B (0x18000000 + 0x178u)---

    HOSTCSR_ZBSYS_SW_RST_B[0]    - (RW) ZBSYS software reset (active-low) for host_csr
                                     0: reset
                                     1: not reset
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_HOSTCSR_ZBSYS_SW_RST_B_HOSTCSR_ZBSYS_SW_RST_B_ADDR CONN_RGU_ON_HOSTCSR_ZBSYS_SW_RST_B_ADDR
#define CONN_RGU_ON_HOSTCSR_ZBSYS_SW_RST_B_HOSTCSR_ZBSYS_SW_RST_B_MASK 0x00000001u                // HOSTCSR_ZBSYS_SW_RST_B[0]
#define CONN_RGU_ON_HOSTCSR_ZBSYS_SW_RST_B_HOSTCSR_ZBSYS_SW_RST_B_SHFT 0u

/* =====================================================================================

  ---BT_MEM_RST_CTL (0x18000000 + 0x180u)---

    BT_K_MEM_RST[0]              - (RW) cr_bgfsys_mem_rst for BT K
    BT_K_MEM_RST_SEL[1]          - (RW) cr_bgfsys_mem_rst_sel for BT K
    RESERVED2[31..2]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_BT_MEM_RST_CTL_BT_K_MEM_RST_SEL_ADDR       CONN_RGU_ON_BT_MEM_RST_CTL_ADDR
#define CONN_RGU_ON_BT_MEM_RST_CTL_BT_K_MEM_RST_SEL_MASK       0x00000002u                // BT_K_MEM_RST_SEL[1]
#define CONN_RGU_ON_BT_MEM_RST_CTL_BT_K_MEM_RST_SEL_SHFT       1u
#define CONN_RGU_ON_BT_MEM_RST_CTL_BT_K_MEM_RST_ADDR           CONN_RGU_ON_BT_MEM_RST_CTL_ADDR
#define CONN_RGU_ON_BT_MEM_RST_CTL_BT_K_MEM_RST_MASK           0x00000001u                // BT_K_MEM_RST[0]
#define CONN_RGU_ON_BT_MEM_RST_CTL_BT_K_MEM_RST_SHFT           0u

/* =====================================================================================

  ---ZB_MEM_RST_CTL (0x18000000 + 0x184u)---

    ZB_K_MEM_RST[0]              - (RW) cr_zbsys_mem_rst for ZB K
    ZB_K_MEM_RST_SEL[1]          - (RW) cr_zbsys_mem_rst_sel for ZB K
    RESERVED2[31..2]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_ZB_MEM_RST_CTL_ZB_K_MEM_RST_SEL_ADDR       CONN_RGU_ON_ZB_MEM_RST_CTL_ADDR
#define CONN_RGU_ON_ZB_MEM_RST_CTL_ZB_K_MEM_RST_SEL_MASK       0x00000002u                // ZB_K_MEM_RST_SEL[1]
#define CONN_RGU_ON_ZB_MEM_RST_CTL_ZB_K_MEM_RST_SEL_SHFT       1u
#define CONN_RGU_ON_ZB_MEM_RST_CTL_ZB_K_MEM_RST_ADDR           CONN_RGU_ON_ZB_MEM_RST_CTL_ADDR
#define CONN_RGU_ON_ZB_MEM_RST_CTL_ZB_K_MEM_RST_MASK           0x00000001u                // ZB_K_MEM_RST[0]
#define CONN_RGU_ON_ZB_MEM_RST_CTL_ZB_K_MEM_RST_SHFT           0u

/* =====================================================================================

  ---MEM_CTRL_CG_EN (0x18000000 + 0x300u)---

    sw_rgu_mem_ctl_ck_en[0]      - (RW) sw_rgu_mem_ctl_ck_en
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_MEM_CTRL_CG_EN_sw_rgu_mem_ctl_ck_en_ADDR   CONN_RGU_ON_MEM_CTRL_CG_EN_ADDR
#define CONN_RGU_ON_MEM_CTRL_CG_EN_sw_rgu_mem_ctl_ck_en_MASK   0x00000001u                // sw_rgu_mem_ctl_ck_en[0]
#define CONN_RGU_ON_MEM_CTRL_CG_EN_sw_rgu_mem_ctl_ck_en_SHFT   0u

/* =====================================================================================

  ---WFSYS_ON_TOP_PWR_ST (0x18000000 + 0x400u)---

    WFSYS_ON_TOP_MTCMOS_PWR_FSM_ON_ST[0] - (RO) WFSYS_ON_TOP mtcmos FSM ON state
    WFSYS_ON_TOP_MTCMOS_PWR_FSM_OFF_ST[1] - (RO) WFSYS_ON_TOP mtcmos FSM OFF state
    WFSYS_ON_TOP_MTCMOS_PWR_FSM[4..2] - (RO) WFSYS_ON_TOP mtcmos FSM state
    RESERVED5[31..5]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_ST_WFSYS_ON_TOP_MTCMOS_PWR_FSM_ADDR CONN_RGU_ON_WFSYS_ON_TOP_PWR_ST_ADDR
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_ST_WFSYS_ON_TOP_MTCMOS_PWR_FSM_MASK 0x0000001Cu                // WFSYS_ON_TOP_MTCMOS_PWR_FSM[4..2]
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_ST_WFSYS_ON_TOP_MTCMOS_PWR_FSM_SHFT 2u
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_ST_WFSYS_ON_TOP_MTCMOS_PWR_FSM_OFF_ST_ADDR CONN_RGU_ON_WFSYS_ON_TOP_PWR_ST_ADDR
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_ST_WFSYS_ON_TOP_MTCMOS_PWR_FSM_OFF_ST_MASK 0x00000002u                // WFSYS_ON_TOP_MTCMOS_PWR_FSM_OFF_ST[1]
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_ST_WFSYS_ON_TOP_MTCMOS_PWR_FSM_OFF_ST_SHFT 1u
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_ST_WFSYS_ON_TOP_MTCMOS_PWR_FSM_ON_ST_ADDR CONN_RGU_ON_WFSYS_ON_TOP_PWR_ST_ADDR
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_ST_WFSYS_ON_TOP_MTCMOS_PWR_FSM_ON_ST_MASK 0x00000001u                // WFSYS_ON_TOP_MTCMOS_PWR_FSM_ON_ST[0]
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_ST_WFSYS_ON_TOP_MTCMOS_PWR_FSM_ON_ST_SHFT 0u

/* =====================================================================================

  ---BGFSYS_ON_TOP_PWR_ST (0x18000000 + 0x404u)---

    BGFSYS_ON_TOP_MTCMOS_PWR_FSM_ON_ST[0] - (RO) BGFSYS_ON_TOP mtcmos FSM ON state
    BGFSYS_ON_TOP_MTCMOS_PWR_FSM_OFF_ST[1] - (RO) BGFSYS_ON_TOP mtcmos FSM OFF state
    BGFSYS_ON_TOP_MTCMOS_PWR_FSM[4..2] - (RO) BGFSYS_ON_TOP mtcmos FSM state
    RESERVED5[31..5]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ST_BGFSYS_ON_TOP_MTCMOS_PWR_FSM_ADDR CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ST_ADDR
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ST_BGFSYS_ON_TOP_MTCMOS_PWR_FSM_MASK 0x0000001Cu                // BGFSYS_ON_TOP_MTCMOS_PWR_FSM[4..2]
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ST_BGFSYS_ON_TOP_MTCMOS_PWR_FSM_SHFT 2u
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ST_BGFSYS_ON_TOP_MTCMOS_PWR_FSM_OFF_ST_ADDR CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ST_ADDR
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ST_BGFSYS_ON_TOP_MTCMOS_PWR_FSM_OFF_ST_MASK 0x00000002u                // BGFSYS_ON_TOP_MTCMOS_PWR_FSM_OFF_ST[1]
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ST_BGFSYS_ON_TOP_MTCMOS_PWR_FSM_OFF_ST_SHFT 1u
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ST_BGFSYS_ON_TOP_MTCMOS_PWR_FSM_ON_ST_ADDR CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ST_ADDR
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ST_BGFSYS_ON_TOP_MTCMOS_PWR_FSM_ON_ST_MASK 0x00000001u                // BGFSYS_ON_TOP_MTCMOS_PWR_FSM_ON_ST[0]
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ST_BGFSYS_ON_TOP_MTCMOS_PWR_FSM_ON_ST_SHFT 0u

/* =====================================================================================

  ---CONN_INFRA_OFF_TOP_PWR_ST (0x18000000 + 0x408u)---

    CONN_INFRA_OFF_TOP_MTCMOS_PWR_FSM_ON_ST[0] - (RO) CONN_INFRA_OFF_TOP mtcmos FSM ON state
    CONN_INFRA_OFF_TOP_MTCMOS_PWR_FSM_OFF_ST[1] - (RO) CONN_INFRA_OFF_TOP mtcmos FSM OFF state
    CONN_INFRA_OFF_TOP_MTCMOS_PWR_FSM[4..2] - (RO) CONN_INFRA_OFF_TOP mtcmos FSM state
    RESERVED5[31..5]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ST_CONN_INFRA_OFF_TOP_MTCMOS_PWR_FSM_ADDR CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ST_ADDR
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ST_CONN_INFRA_OFF_TOP_MTCMOS_PWR_FSM_MASK 0x0000001Cu                // CONN_INFRA_OFF_TOP_MTCMOS_PWR_FSM[4..2]
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ST_CONN_INFRA_OFF_TOP_MTCMOS_PWR_FSM_SHFT 2u
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ST_CONN_INFRA_OFF_TOP_MTCMOS_PWR_FSM_OFF_ST_ADDR CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ST_ADDR
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ST_CONN_INFRA_OFF_TOP_MTCMOS_PWR_FSM_OFF_ST_MASK 0x00000002u                // CONN_INFRA_OFF_TOP_MTCMOS_PWR_FSM_OFF_ST[1]
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ST_CONN_INFRA_OFF_TOP_MTCMOS_PWR_FSM_OFF_ST_SHFT 1u
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ST_CONN_INFRA_OFF_TOP_MTCMOS_PWR_FSM_ON_ST_ADDR CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ST_ADDR
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ST_CONN_INFRA_OFF_TOP_MTCMOS_PWR_FSM_ON_ST_MASK 0x00000001u                // CONN_INFRA_OFF_TOP_MTCMOS_PWR_FSM_ON_ST[0]
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ST_CONN_INFRA_OFF_TOP_MTCMOS_PWR_FSM_ON_ST_SHFT 0u

/* =====================================================================================

  ---WFSYS_ON_TOP_PWR_ACK_ST (0x18000000 + 0x410u)---

    WFSYS_ON_TOP_PWR_ACK_S[23..0] - (RO) WFSYS_ON_TOP secondary power ack (multi-bit)
    WFSYS_ON_TOP_PWR_ACK[24]     - (RO) WFSYS_ON_TOP primary power ack
    AN_WFSYS_ON_TOP_PWR_ACK_S[25] - (RO) WFSYS_ON_TOP secondary power ack (multi-bit AND to 1-bit)
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_ACK_ST_AN_WFSYS_ON_TOP_PWR_ACK_S_ADDR CONN_RGU_ON_WFSYS_ON_TOP_PWR_ACK_ST_ADDR
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_ACK_ST_AN_WFSYS_ON_TOP_PWR_ACK_S_MASK 0x02000000u                // AN_WFSYS_ON_TOP_PWR_ACK_S[25]
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_ACK_ST_AN_WFSYS_ON_TOP_PWR_ACK_S_SHFT 25u
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_ACK_ST_WFSYS_ON_TOP_PWR_ACK_ADDR CONN_RGU_ON_WFSYS_ON_TOP_PWR_ACK_ST_ADDR
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_ACK_ST_WFSYS_ON_TOP_PWR_ACK_MASK 0x01000000u                // WFSYS_ON_TOP_PWR_ACK[24]
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_ACK_ST_WFSYS_ON_TOP_PWR_ACK_SHFT 24u
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_ACK_ST_WFSYS_ON_TOP_PWR_ACK_S_ADDR CONN_RGU_ON_WFSYS_ON_TOP_PWR_ACK_ST_ADDR
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_ACK_ST_WFSYS_ON_TOP_PWR_ACK_S_MASK 0x00FFFFFFu                // WFSYS_ON_TOP_PWR_ACK_S[23..0]
#define CONN_RGU_ON_WFSYS_ON_TOP_PWR_ACK_ST_WFSYS_ON_TOP_PWR_ACK_S_SHFT 0u

/* =====================================================================================

  ---BGFSYS_ON_TOP_PWR_ACK_ST (0x18000000 + 0x414u)---

    BGFSYS_ON_TOP_PWR_ACK_S[0]   - (RO) BGFSYS_ON_TOP secondary power ack (multi-bit)
    RESERVED1[23..1]             - (RO) Reserved bits
    BGFSYS_ON_TOP_PWR_ACK[24]    - (RO) BGFSYS_ON_TOP primary power ack
    AN_BGFSYS_ON_TOP_PWR_ACK_S[25] - (RO) BGFSYS_ON_TOP secondary power ack (multi-bit AND to 1-bit)
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ACK_ST_AN_BGFSYS_ON_TOP_PWR_ACK_S_ADDR CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ACK_ST_ADDR
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ACK_ST_AN_BGFSYS_ON_TOP_PWR_ACK_S_MASK 0x02000000u                // AN_BGFSYS_ON_TOP_PWR_ACK_S[25]
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ACK_ST_AN_BGFSYS_ON_TOP_PWR_ACK_S_SHFT 25u
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ACK_ST_BGFSYS_ON_TOP_PWR_ACK_ADDR CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ACK_ST_ADDR
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ACK_ST_BGFSYS_ON_TOP_PWR_ACK_MASK 0x01000000u                // BGFSYS_ON_TOP_PWR_ACK[24]
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ACK_ST_BGFSYS_ON_TOP_PWR_ACK_SHFT 24u
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ACK_ST_BGFSYS_ON_TOP_PWR_ACK_S_ADDR CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ACK_ST_ADDR
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ACK_ST_BGFSYS_ON_TOP_PWR_ACK_S_MASK 0x00000001u                // BGFSYS_ON_TOP_PWR_ACK_S[0]
#define CONN_RGU_ON_BGFSYS_ON_TOP_PWR_ACK_ST_BGFSYS_ON_TOP_PWR_ACK_S_SHFT 0u

/* =====================================================================================

  ---CONN_INFRA_OFF_TOP_PWR_ACK_ST (0x18000000 + 0x418u)---

    CONN_INFRA_OFF_TOP_PWR_ACK_S[0] - (RO) CONN_INFRA_OFF_TOP secondary power ack (multi-bit)
    RESERVED1[23..1]             - (RO) Reserved bits
    CONN_INFRA_OFF_TOP_PWR_ACK[24] - (RO) CONN_INFRA_OFF_TOP primary power ack
    AN_CONN_INFRA_OFF_TOP_PWR_ACK_S[25] - (RO) CONN_INFRA_OFF_TOP secondary power ack (multi-bit AND to 1-bit)
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ACK_ST_AN_CONN_INFRA_OFF_TOP_PWR_ACK_S_ADDR CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ACK_ST_ADDR
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ACK_ST_AN_CONN_INFRA_OFF_TOP_PWR_ACK_S_MASK 0x02000000u                // AN_CONN_INFRA_OFF_TOP_PWR_ACK_S[25]
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ACK_ST_AN_CONN_INFRA_OFF_TOP_PWR_ACK_S_SHFT 25u
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ACK_ST_CONN_INFRA_OFF_TOP_PWR_ACK_ADDR CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ACK_ST_ADDR
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ACK_ST_CONN_INFRA_OFF_TOP_PWR_ACK_MASK 0x01000000u                // CONN_INFRA_OFF_TOP_PWR_ACK[24]
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ACK_ST_CONN_INFRA_OFF_TOP_PWR_ACK_SHFT 24u
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ACK_ST_CONN_INFRA_OFF_TOP_PWR_ACK_S_ADDR CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ACK_ST_ADDR
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ACK_ST_CONN_INFRA_OFF_TOP_PWR_ACK_S_MASK 0x00000001u                // CONN_INFRA_OFF_TOP_PWR_ACK_S[0]
#define CONN_RGU_ON_CONN_INFRA_OFF_TOP_PWR_ACK_ST_CONN_INFRA_OFF_TOP_PWR_ACK_S_SHFT 0u

/* =====================================================================================

  ---WFSYS_OFF_TOP_PWR_ACK_ST (0x18000000 + 0x420u)---

    WFSYS_OFF_TOP_PWR_ACK_S[23..0] - (RO) WFSYS_OFF_TOP secondary power ack (multi-bit)
    WFSYS_OFF_TOP_PWR_ACK[24]    - (RO) WFSYS_OFF_TOP primary power ack
    RESERVED25[31..25]           - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_WFSYS_OFF_TOP_PWR_ACK_ST_WFSYS_OFF_TOP_PWR_ACK_ADDR CONN_RGU_ON_WFSYS_OFF_TOP_PWR_ACK_ST_ADDR
#define CONN_RGU_ON_WFSYS_OFF_TOP_PWR_ACK_ST_WFSYS_OFF_TOP_PWR_ACK_MASK 0x01000000u                // WFSYS_OFF_TOP_PWR_ACK[24]
#define CONN_RGU_ON_WFSYS_OFF_TOP_PWR_ACK_ST_WFSYS_OFF_TOP_PWR_ACK_SHFT 24u
#define CONN_RGU_ON_WFSYS_OFF_TOP_PWR_ACK_ST_WFSYS_OFF_TOP_PWR_ACK_S_ADDR CONN_RGU_ON_WFSYS_OFF_TOP_PWR_ACK_ST_ADDR
#define CONN_RGU_ON_WFSYS_OFF_TOP_PWR_ACK_ST_WFSYS_OFF_TOP_PWR_ACK_S_MASK 0x00FFFFFFu                // WFSYS_OFF_TOP_PWR_ACK_S[23..0]
#define CONN_RGU_ON_WFSYS_OFF_TOP_PWR_ACK_ST_WFSYS_OFF_TOP_PWR_ACK_S_SHFT 0u

/* =====================================================================================

  ---BGFSYS_OFF_TOP_PWR_ACK_ST (0x18000000 + 0x424u)---

    BGFSYS_OFF_TOP_PWR_ACK_S[1..0] - (RO) BGFSYS_OFF_TOP secondary power ack (multi-bit)
    RESERVED2[23..2]             - (RO) Reserved bits
    BGFSYS_OFF_TOP_PWR_ACK[24]   - (RO) BGFSYS_OFF_TOP primary power ack
    RESERVED25[31..25]           - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_BGFSYS_OFF_TOP_PWR_ACK_ST_BGFSYS_OFF_TOP_PWR_ACK_ADDR CONN_RGU_ON_BGFSYS_OFF_TOP_PWR_ACK_ST_ADDR
#define CONN_RGU_ON_BGFSYS_OFF_TOP_PWR_ACK_ST_BGFSYS_OFF_TOP_PWR_ACK_MASK 0x01000000u                // BGFSYS_OFF_TOP_PWR_ACK[24]
#define CONN_RGU_ON_BGFSYS_OFF_TOP_PWR_ACK_ST_BGFSYS_OFF_TOP_PWR_ACK_SHFT 24u
#define CONN_RGU_ON_BGFSYS_OFF_TOP_PWR_ACK_ST_BGFSYS_OFF_TOP_PWR_ACK_S_ADDR CONN_RGU_ON_BGFSYS_OFF_TOP_PWR_ACK_ST_ADDR
#define CONN_RGU_ON_BGFSYS_OFF_TOP_PWR_ACK_ST_BGFSYS_OFF_TOP_PWR_ACK_S_MASK 0x00000003u                // BGFSYS_OFF_TOP_PWR_ACK_S[1..0]
#define CONN_RGU_ON_BGFSYS_OFF_TOP_PWR_ACK_ST_BGFSYS_OFF_TOP_PWR_ACK_S_SHFT 0u

/* =====================================================================================

  ---BGFSYS_OFF1_TOP_PWR_ACK_ST (0x18000000 + 0x428u)---

    BGFSYS_OFF1_TOP_PWR_ACK_S[1..0] - (RO) BGFSYS_OFF1_TOP secondary power ack (multi-bit)
    RESERVED2[23..2]             - (RO) Reserved bits
    BGFSYS_OFF1_TOP_PWR_ACK[24]  - (RO) BGFSYS_OFF1_TOP primary power ack
    RESERVED25[31..25]           - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_BGFSYS_OFF1_TOP_PWR_ACK_ST_BGFSYS_OFF1_TOP_PWR_ACK_ADDR CONN_RGU_ON_BGFSYS_OFF1_TOP_PWR_ACK_ST_ADDR
#define CONN_RGU_ON_BGFSYS_OFF1_TOP_PWR_ACK_ST_BGFSYS_OFF1_TOP_PWR_ACK_MASK 0x01000000u                // BGFSYS_OFF1_TOP_PWR_ACK[24]
#define CONN_RGU_ON_BGFSYS_OFF1_TOP_PWR_ACK_ST_BGFSYS_OFF1_TOP_PWR_ACK_SHFT 24u
#define CONN_RGU_ON_BGFSYS_OFF1_TOP_PWR_ACK_ST_BGFSYS_OFF1_TOP_PWR_ACK_S_ADDR CONN_RGU_ON_BGFSYS_OFF1_TOP_PWR_ACK_ST_ADDR
#define CONN_RGU_ON_BGFSYS_OFF1_TOP_PWR_ACK_ST_BGFSYS_OFF1_TOP_PWR_ACK_S_MASK 0x00000003u                // BGFSYS_OFF1_TOP_PWR_ACK_S[1..0]
#define CONN_RGU_ON_BGFSYS_OFF1_TOP_PWR_ACK_ST_BGFSYS_OFF1_TOP_PWR_ACK_S_SHFT 0u

/* =====================================================================================

  ---ZBSYS_ON_TOP_PWR_ST (0x18000000 + 0x430u)---

    ZBSYS_ON_TOP_MTCMOS_PWR_FSM_ON_ST[0] - (RO) ZBSYS_ON_TOP mtcmos FSM ON state
    ZBSYS_ON_TOP_MTCMOS_PWR_FSM_OFF_ST[1] - (RO) ZBSYS_ON_TOP mtcmos FSM OFF state
    ZBSYS_ON_TOP_MTCMOS_PWR_FSM[4..2] - (RO) ZBSYS_ON_TOP mtcmos FSM state
    RESERVED5[31..5]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ST_ZBSYS_ON_TOP_MTCMOS_PWR_FSM_ADDR CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ST_ADDR
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ST_ZBSYS_ON_TOP_MTCMOS_PWR_FSM_MASK 0x0000001Cu                // ZBSYS_ON_TOP_MTCMOS_PWR_FSM[4..2]
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ST_ZBSYS_ON_TOP_MTCMOS_PWR_FSM_SHFT 2u
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ST_ZBSYS_ON_TOP_MTCMOS_PWR_FSM_OFF_ST_ADDR CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ST_ADDR
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ST_ZBSYS_ON_TOP_MTCMOS_PWR_FSM_OFF_ST_MASK 0x00000002u                // ZBSYS_ON_TOP_MTCMOS_PWR_FSM_OFF_ST[1]
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ST_ZBSYS_ON_TOP_MTCMOS_PWR_FSM_OFF_ST_SHFT 1u
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ST_ZBSYS_ON_TOP_MTCMOS_PWR_FSM_ON_ST_ADDR CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ST_ADDR
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ST_ZBSYS_ON_TOP_MTCMOS_PWR_FSM_ON_ST_MASK 0x00000001u                // ZBSYS_ON_TOP_MTCMOS_PWR_FSM_ON_ST[0]
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ST_ZBSYS_ON_TOP_MTCMOS_PWR_FSM_ON_ST_SHFT 0u

/* =====================================================================================

  ---ZBSYS_ON_TOP_PWR_ACK_ST (0x18000000 + 0x434u)---

    ZBSYS_ON_TOP_PWR_ACK_S[0]    - (RO) ZBSYS_ON_TOP secondary power ack (multi-bit)
    RESERVED1[23..1]             - (RO) Reserved bits
    ZBSYS_ON_TOP_PWR_ACK[24]     - (RO) ZBSYS_ON_TOP primary power ack
    AN_ZBSYS_ON_TOP_PWR_ACK_S[25] - (RO) ZBSYS_ON_TOP secondary power ack (multi-bit AND to 1-bit)
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ACK_ST_AN_ZBSYS_ON_TOP_PWR_ACK_S_ADDR CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ACK_ST_ADDR
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ACK_ST_AN_ZBSYS_ON_TOP_PWR_ACK_S_MASK 0x02000000u                // AN_ZBSYS_ON_TOP_PWR_ACK_S[25]
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ACK_ST_AN_ZBSYS_ON_TOP_PWR_ACK_S_SHFT 25u
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ACK_ST_ZBSYS_ON_TOP_PWR_ACK_ADDR CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ACK_ST_ADDR
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ACK_ST_ZBSYS_ON_TOP_PWR_ACK_MASK 0x01000000u                // ZBSYS_ON_TOP_PWR_ACK[24]
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ACK_ST_ZBSYS_ON_TOP_PWR_ACK_SHFT 24u
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ACK_ST_ZBSYS_ON_TOP_PWR_ACK_S_ADDR CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ACK_ST_ADDR
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ACK_ST_ZBSYS_ON_TOP_PWR_ACK_S_MASK 0x00000001u                // ZBSYS_ON_TOP_PWR_ACK_S[0]
#define CONN_RGU_ON_ZBSYS_ON_TOP_PWR_ACK_ST_ZBSYS_ON_TOP_PWR_ACK_S_SHFT 0u

/* =====================================================================================

  ---ZBSYS_OFF_TOP_PWR_ACK_ST (0x18000000 + 0x438u)---

    ZBSYS_OFF_TOP_PWR_ACK_S[1..0] - (RO) ZBSYS_OFF_TOP secondary power ack (multi-bit)
    RESERVED2[23..2]             - (RO) Reserved bits
    ZBSYS_OFF_TOP_PWR_ACK[24]    - (RO) ZBSYS_OFF_TOP primary power ack
    RESERVED25[31..25]           - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_ZBSYS_OFF_TOP_PWR_ACK_ST_ZBSYS_OFF_TOP_PWR_ACK_ADDR CONN_RGU_ON_ZBSYS_OFF_TOP_PWR_ACK_ST_ADDR
#define CONN_RGU_ON_ZBSYS_OFF_TOP_PWR_ACK_ST_ZBSYS_OFF_TOP_PWR_ACK_MASK 0x01000000u                // ZBSYS_OFF_TOP_PWR_ACK[24]
#define CONN_RGU_ON_ZBSYS_OFF_TOP_PWR_ACK_ST_ZBSYS_OFF_TOP_PWR_ACK_SHFT 24u
#define CONN_RGU_ON_ZBSYS_OFF_TOP_PWR_ACK_ST_ZBSYS_OFF_TOP_PWR_ACK_S_ADDR CONN_RGU_ON_ZBSYS_OFF_TOP_PWR_ACK_ST_ADDR
#define CONN_RGU_ON_ZBSYS_OFF_TOP_PWR_ACK_ST_ZBSYS_OFF_TOP_PWR_ACK_S_MASK 0x00000003u                // ZBSYS_OFF_TOP_PWR_ACK_S[1..0]
#define CONN_RGU_ON_ZBSYS_OFF_TOP_PWR_ACK_ST_ZBSYS_OFF_TOP_PWR_ACK_S_SHFT 0u

/* =====================================================================================

  ---SYSRAM_PDN_ST (0x18000000 + 0x440u)---

    SYSRAM_PDN_ST[1..0]          - (RO) 0: power-down=0
                                     1: power-down=1
    RESERVED2[31..2]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_SYSRAM_PDN_ST_SYSRAM_PDN_ST_ADDR           CONN_RGU_ON_SYSRAM_PDN_ST_ADDR
#define CONN_RGU_ON_SYSRAM_PDN_ST_SYSRAM_PDN_ST_MASK           0x00000003u                // SYSRAM_PDN_ST[1..0]
#define CONN_RGU_ON_SYSRAM_PDN_ST_SYSRAM_PDN_ST_SHFT           0u

/* =====================================================================================

  ---SYSRAM_SLP_ST (0x18000000 + 0x444u)---

    SYSRAM_SLP_ST[1..0]          - (RO) 0: sleep=0
                                     1: sleep=1
    RESERVED2[31..2]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_SYSRAM_SLP_ST_SYSRAM_SLP_ST_ADDR           CONN_RGU_ON_SYSRAM_SLP_ST_ADDR
#define CONN_RGU_ON_SYSRAM_SLP_ST_SYSRAM_SLP_ST_MASK           0x00000003u                // SYSRAM_SLP_ST[1..0]
#define CONN_RGU_ON_SYSRAM_SLP_ST_SYSRAM_SLP_ST_SHFT           0u

/* =====================================================================================

  ---SYSRAM_CKISO_ST (0x18000000 + 0x448u)---

    SYSRAM_CKISO_ST[1..0]        - (RO) 0: ckiso=0
                                     1: ckiso=1
    RESERVED2[31..2]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_SYSRAM_CKISO_ST_SYSRAM_CKISO_ST_ADDR       CONN_RGU_ON_SYSRAM_CKISO_ST_ADDR
#define CONN_RGU_ON_SYSRAM_CKISO_ST_SYSRAM_CKISO_ST_MASK       0x00000003u                // SYSRAM_CKISO_ST[1..0]
#define CONN_RGU_ON_SYSRAM_CKISO_ST_SYSRAM_CKISO_ST_SHFT       0u

/* =====================================================================================

  ---SYSRAM_ISOINT_ST (0x18000000 + 0x44Cu)---

    SYSRAM_ISOINT_ST[1..0]       - (RO) 0: isoint=0
                                     1: isoint=1
    RESERVED2[31..2]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_SYSRAM_ISOINT_ST_SYSRAM_ISOINT_ST_ADDR     CONN_RGU_ON_SYSRAM_ISOINT_ST_ADDR
#define CONN_RGU_ON_SYSRAM_ISOINT_ST_SYSRAM_ISOINT_ST_MASK     0x00000003u                // SYSRAM_ISOINT_ST[1..0]
#define CONN_RGU_ON_SYSRAM_ISOINT_ST_SYSRAM_ISOINT_ST_SHFT     0u

/* =====================================================================================

  ---CO_EXT_MEM_PDN_ST (0x18000000 + 0x450u)---

    CO_EXT_MEM_PDN_ST[0]         - (RO) 0: power-down=0
                                     1: power-down=1
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_CO_EXT_MEM_PDN_ST_CO_EXT_MEM_PDN_ST_ADDR   CONN_RGU_ON_CO_EXT_MEM_PDN_ST_ADDR
#define CONN_RGU_ON_CO_EXT_MEM_PDN_ST_CO_EXT_MEM_PDN_ST_MASK   0x00000001u                // CO_EXT_MEM_PDN_ST[0]
#define CONN_RGU_ON_CO_EXT_MEM_PDN_ST_CO_EXT_MEM_PDN_ST_SHFT   0u

/* =====================================================================================

  ---CO_EXT_MEM_SLP_ST (0x18000000 + 0x454u)---

    CO_EXT_MEM_SLP_ST[0]         - (RO) 0: sleep=0
                                     1: sleep=1
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_CO_EXT_MEM_SLP_ST_CO_EXT_MEM_SLP_ST_ADDR   CONN_RGU_ON_CO_EXT_MEM_SLP_ST_ADDR
#define CONN_RGU_ON_CO_EXT_MEM_SLP_ST_CO_EXT_MEM_SLP_ST_MASK   0x00000001u                // CO_EXT_MEM_SLP_ST[0]
#define CONN_RGU_ON_CO_EXT_MEM_SLP_ST_CO_EXT_MEM_SLP_ST_SHFT   0u

/* =====================================================================================

  ---CO_EXT_MEM_CKISO_ST (0x18000000 + 0x458u)---

    CO_EXT_MEM_CKISO_ST[0]       - (RO) 0: ckiso=0
                                     1: ckiso=1
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_CO_EXT_MEM_CKISO_ST_CO_EXT_MEM_CKISO_ST_ADDR CONN_RGU_ON_CO_EXT_MEM_CKISO_ST_ADDR
#define CONN_RGU_ON_CO_EXT_MEM_CKISO_ST_CO_EXT_MEM_CKISO_ST_MASK 0x00000001u                // CO_EXT_MEM_CKISO_ST[0]
#define CONN_RGU_ON_CO_EXT_MEM_CKISO_ST_CO_EXT_MEM_CKISO_ST_SHFT 0u

/* =====================================================================================

  ---CO_EXT_MEM_ISOINT_ST (0x18000000 + 0x45Cu)---

    CO_EXT_MEM_ISOINT_ST[0]      - (RO) 0: isoint=0
                                     1: isoint=1
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_CO_EXT_MEM_ISOINT_ST_CO_EXT_MEM_ISOINT_ST_ADDR CONN_RGU_ON_CO_EXT_MEM_ISOINT_ST_ADDR
#define CONN_RGU_ON_CO_EXT_MEM_ISOINT_ST_CO_EXT_MEM_ISOINT_ST_MASK 0x00000001u                // CO_EXT_MEM_ISOINT_ST[0]
#define CONN_RGU_ON_CO_EXT_MEM_ISOINT_ST_CO_EXT_MEM_ISOINT_ST_SHFT 0u

/* =====================================================================================

  ---FM_CTRL_MEM_PDN_ST (0x18000000 + 0x460u)---

    FM_CTRL_MEM_PDN_ST[0]        - (RO) 0: power-down=0
                                     1: power-down=1
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_FM_CTRL_MEM_PDN_ST_FM_CTRL_MEM_PDN_ST_ADDR CONN_RGU_ON_FM_CTRL_MEM_PDN_ST_ADDR
#define CONN_RGU_ON_FM_CTRL_MEM_PDN_ST_FM_CTRL_MEM_PDN_ST_MASK 0x00000001u                // FM_CTRL_MEM_PDN_ST[0]
#define CONN_RGU_ON_FM_CTRL_MEM_PDN_ST_FM_CTRL_MEM_PDN_ST_SHFT 0u

/* =====================================================================================

  ---FM_CTRL_MEM_SLP_ST (0x18000000 + 0x464u)---

    FM_CTRL_MEM_SLP_ST[0]        - (RO) 0: sleep=0
                                     1: sleep=1
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_FM_CTRL_MEM_SLP_ST_FM_CTRL_MEM_SLP_ST_ADDR CONN_RGU_ON_FM_CTRL_MEM_SLP_ST_ADDR
#define CONN_RGU_ON_FM_CTRL_MEM_SLP_ST_FM_CTRL_MEM_SLP_ST_MASK 0x00000001u                // FM_CTRL_MEM_SLP_ST[0]
#define CONN_RGU_ON_FM_CTRL_MEM_SLP_ST_FM_CTRL_MEM_SLP_ST_SHFT 0u

/* =====================================================================================

  ---FM_CTRL_MEM_CKISO_ST (0x18000000 + 0x468u)---

    FM_CTRL_MEM_CKISO_ST[0]      - (RO) 0: ckiso=0
                                     1: ckiso=1
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_FM_CTRL_MEM_CKISO_ST_FM_CTRL_MEM_CKISO_ST_ADDR CONN_RGU_ON_FM_CTRL_MEM_CKISO_ST_ADDR
#define CONN_RGU_ON_FM_CTRL_MEM_CKISO_ST_FM_CTRL_MEM_CKISO_ST_MASK 0x00000001u                // FM_CTRL_MEM_CKISO_ST[0]
#define CONN_RGU_ON_FM_CTRL_MEM_CKISO_ST_FM_CTRL_MEM_CKISO_ST_SHFT 0u

/* =====================================================================================

  ---FM_CTRL_MEM_ISOINT_ST (0x18000000 + 0x46Cu)---

    FM_CTRL_MEM_ISOINT_ST[0]     - (RO) 0: isoint=0
                                     1: isoint=1
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_FM_CTRL_MEM_ISOINT_ST_FM_CTRL_MEM_ISOINT_ST_ADDR CONN_RGU_ON_FM_CTRL_MEM_ISOINT_ST_ADDR
#define CONN_RGU_ON_FM_CTRL_MEM_ISOINT_ST_FM_CTRL_MEM_ISOINT_ST_MASK 0x00000001u                // FM_CTRL_MEM_ISOINT_ST[0]
#define CONN_RGU_ON_FM_CTRL_MEM_ISOINT_ST_FM_CTRL_MEM_ISOINT_ST_SHFT 0u

/* =====================================================================================

  ---VON_SYSRAM_PDN_ST (0x18000000 + 0x470u)---

    VON_SYSRAM_PDN_ST[1..0]      - (RO) 0: power-down=0
                                     1: power-down=1
    RESERVED2[31..2]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_VON_SYSRAM_PDN_ST_VON_SYSRAM_PDN_ST_ADDR   CONN_RGU_ON_VON_SYSRAM_PDN_ST_ADDR
#define CONN_RGU_ON_VON_SYSRAM_PDN_ST_VON_SYSRAM_PDN_ST_MASK   0x00000003u                // VON_SYSRAM_PDN_ST[1..0]
#define CONN_RGU_ON_VON_SYSRAM_PDN_ST_VON_SYSRAM_PDN_ST_SHFT   0u

/* =====================================================================================

  ---VON_SYSRAM_SLP_ST (0x18000000 + 0x474u)---

    VON_SYSRAM_SLP_ST[1..0]      - (RO) 0: sleep=0
                                     1: sleep=1
    RESERVED2[31..2]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_VON_SYSRAM_SLP_ST_VON_SYSRAM_SLP_ST_ADDR   CONN_RGU_ON_VON_SYSRAM_SLP_ST_ADDR
#define CONN_RGU_ON_VON_SYSRAM_SLP_ST_VON_SYSRAM_SLP_ST_MASK   0x00000003u                // VON_SYSRAM_SLP_ST[1..0]
#define CONN_RGU_ON_VON_SYSRAM_SLP_ST_VON_SYSRAM_SLP_ST_SHFT   0u

/* =====================================================================================

  ---VON_SYSRAM_CKISO_ST (0x18000000 + 0x478u)---

    VON_SYSRAM_CKISO_ST[1..0]    - (RO) 0: ckiso=0
                                     1: ckiso=1
    RESERVED2[31..2]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_VON_SYSRAM_CKISO_ST_VON_SYSRAM_CKISO_ST_ADDR CONN_RGU_ON_VON_SYSRAM_CKISO_ST_ADDR
#define CONN_RGU_ON_VON_SYSRAM_CKISO_ST_VON_SYSRAM_CKISO_ST_MASK 0x00000003u                // VON_SYSRAM_CKISO_ST[1..0]
#define CONN_RGU_ON_VON_SYSRAM_CKISO_ST_VON_SYSRAM_CKISO_ST_SHFT 0u

/* =====================================================================================

  ---VON_SYSRAM_ISOINT_ST (0x18000000 + 0x47Cu)---

    VON_SYSRAM_ISOINT_ST[1..0]   - (RO) 0: isoint=0
                                     1: isoint=1
    RESERVED2[31..2]             - (RO) Reserved bits

 =====================================================================================*/
#define CONN_RGU_ON_VON_SYSRAM_ISOINT_ST_VON_SYSRAM_ISOINT_ST_ADDR CONN_RGU_ON_VON_SYSRAM_ISOINT_ST_ADDR
#define CONN_RGU_ON_VON_SYSRAM_ISOINT_ST_VON_SYSRAM_ISOINT_ST_MASK 0x00000003u                // VON_SYSRAM_ISOINT_ST[1..0]
#define CONN_RGU_ON_VON_SYSRAM_ISOINT_ST_VON_SYSRAM_ISOINT_ST_SHFT 0u

#ifdef __cplusplus
}
#endif

#endif // __CONN_RGU_ON_REGS_H__
