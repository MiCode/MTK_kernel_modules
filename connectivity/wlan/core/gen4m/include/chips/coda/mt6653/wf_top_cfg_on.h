/* SPDX-License-Identifier: BSD-2-Clause */
/*
 * Copyright (c) 2023 MediaTek Inc.
 */

//[File]            : wf_top_cfg_on.h
//[Revision time]   : Wed Jan  4 12:38:22 2023
//[Description]     : This file is auto generated by CODA
//[Copyright]       : Copyright (C) 2023 Mediatek Incorportion. All rights reserved.

#ifndef __WF_TOP_CFG_ON_REGS_H__
#define __WF_TOP_CFG_ON_REGS_H__

#include "hal_common.h"

#ifdef __cplusplus
extern "C" {
#endif


//****************************************************************************
//
//                     WF_TOP_CFG_ON CR Definitions                     
//
//****************************************************************************

#define WF_TOP_CFG_ON_BASE                                     0x81021000

#define WF_TOP_CFG_ON_SLP_CTL_ADDR                             (WF_TOP_CFG_ON_BASE + 0x0) // 1000
#define WF_TOP_CFG_ON_WF_NAPPING_SLEEP_STATUS_ADDR             (WF_TOP_CFG_ON_BASE + 0x4) // 1004
#define WF_TOP_CFG_ON_WF_CMDBT_TOPUMAC_EARLY_CONTROL_ADDR      (WF_TOP_CFG_ON_BASE + 0x8) // 1008
#define WF_TOP_CFG_ON_OSC_CTL_ADDR                             (WF_TOP_CFG_ON_BASE + 0x100) // 1100
#define WF_TOP_CFG_ON_OSC_MASK_ADDR                            (WF_TOP_CFG_ON_BASE + 0x104) // 1104
#define WF_TOP_CFG_ON_OSC_MASK_NAP_ADDR                        (WF_TOP_CFG_ON_BASE + 0x108) // 1108
#define WF_TOP_CFG_ON_WPLL_MASK_ADDR                           (WF_TOP_CFG_ON_BASE + 0x10C) // 110C
#define WF_TOP_CFG_ON_OSC_MASK_1_ADDR                          (WF_TOP_CFG_ON_BASE + 0x110) // 1110
#define WF_TOP_CFG_ON_WF_CONN_INFRA_BUS_CTL_ADDR               (WF_TOP_CFG_ON_BASE + 0x120) // 1120
#define WF_TOP_CFG_ON_WF_CONN_INFRA_OFF_DOMAIN_CTL_ADDR        (WF_TOP_CFG_ON_BASE + 0x124) // 1124
#define WF_TOP_CFG_ON_WF_CONN_INFRA_COEX_ENABLE_CTL_ADDR       (WF_TOP_CFG_ON_BASE + 0x128) // 1128
#define WF_TOP_CFG_ON_IRQ_CTL_ADDR                             (WF_TOP_CFG_ON_BASE + 0x200) // 1200
#define WF_TOP_CFG_ON_LPOSC_CTL_ADDR                           (WF_TOP_CFG_ON_BASE + 0x300) // 1300
#define WF_TOP_CFG_ON_LPOSC_CTL_2_ADDR                         (WF_TOP_CFG_ON_BASE + 0x304) // 1304
#define WF_TOP_CFG_ON_AOC_MEM_CTL_ADDR                         (WF_TOP_CFG_ON_BASE + 0x310) // 1310
#define WF_TOP_CFG_ON_CMDBT_CTL_ADDR                           (WF_TOP_CFG_ON_BASE + 0x400) // 1400
#define WF_TOP_CFG_ON_CMDBT_CTL_ON_ADDR                        (WF_TOP_CFG_ON_BASE + 0x404) // 1404
#define WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR                         (WF_TOP_CFG_ON_BASE + 0x408) // 1408
#define WF_TOP_CFG_ON_CMDBT_CTL_2_ADDR                         (WF_TOP_CFG_ON_BASE + 0x410) // 1410
#define WF_TOP_CFG_ON_CMDBT_STATUS_ADDR                        (WF_TOP_CFG_ON_BASE + 0x460) // 1460
#define WF_TOP_CFG_ON_CMDBT_STATUS_1_ADDR                      (WF_TOP_CFG_ON_BASE + 0x464) // 1464
#define WF_TOP_CFG_ON_MONFLG_CTL_ADDR                          (WF_TOP_CFG_ON_BASE + 0x500) // 1500
#define WF_TOP_CFG_ON_MONFLG_SEL_0_ADDR                        (WF_TOP_CFG_ON_BASE + 0x504) // 1504
#define WF_TOP_CFG_ON_OFF_MONFLG_CTL_ADDR                      (WF_TOP_CFG_ON_BASE + 0x508) // 1508
#define WF_TOP_CFG_ON_VON_MONFLG_CTL_ADDR                      (WF_TOP_CFG_ON_BASE + 0x50C) // 150C
#define WF_TOP_CFG_ON_LIT_MONFLG_CTL_ADDR                      (WF_TOP_CFG_ON_BASE + 0x510) // 1510
#define WF_TOP_CFG_ON_OFF_MCU_MONFLG_CTL_ADDR                  (WF_TOP_CFG_ON_BASE + 0x514) // 1514
#define WF_TOP_CFG_ON_MONFLG_STATUS_ADDR                       (WF_TOP_CFG_ON_BASE + 0x5f0) // 15F0
#define WF_TOP_CFG_ON_MISC_ADDR                                (WF_TOP_CFG_ON_BASE + 0x600) // 1600
#define WF_TOP_CFG_ON_ROMCODE_INDEX_ADDR                       (WF_TOP_CFG_ON_BASE + 0x604) // 1604
#define WF_TOP_CFG_ON_HOST_CTL_ADDR                            (WF_TOP_CFG_ON_BASE + 0x608) // 1608
#define WF_TOP_CFG_ON_DBG_SEL_ADDR                             (WF_TOP_CFG_ON_BASE + 0x610) // 1610
#define WF_TOP_CFG_ON_DBG_STATUS_ADDR                          (WF_TOP_CFG_ON_BASE + 0x614) // 1614
#define WF_TOP_CFG_ON_STRAP_STATUS_ADDR                        (WF_TOP_CFG_ON_BASE + 0x618) // 1618
#define WF_TOP_CFG_ON_CLK_STATUS_ADDR                          (WF_TOP_CFG_ON_BASE + 0x61C) // 161C
#define WF_TOP_CFG_ON_TOP_DSLEEP_STATUS_ADDR                   (WF_TOP_CFG_ON_BASE + 0x630) // 1630
#define WF_TOP_CFG_ON_TOP_NSLEEP_STATUS_ADDR                   (WF_TOP_CFG_ON_BASE + 0x634) // 1634
#define WF_TOP_CFG_ON_BUS_PREADY_STATUS_ADDR                   (WF_TOP_CFG_ON_BASE + 0x670) // 1670
#define WF_TOP_CFG_ON_RESERVED_0_ADDR                          (WF_TOP_CFG_ON_BASE + 0x700) // 1700
#define WF_TOP_CFG_ON_RESERVED_1_ADDR                          (WF_TOP_CFG_ON_BASE + 0x704) // 1704
#define WF_TOP_CFG_ON_RESERVED_2_ADDR                          (WF_TOP_CFG_ON_BASE + 0x708) // 1708
#define WF_TOP_CFG_ON_RESERVED_3_ADDR                          (WF_TOP_CFG_ON_BASE + 0x70C) // 170C
#define WF_TOP_CFG_ON_FLAG_0_1ST_POWER_ON_FLAG_ADDR            (WF_TOP_CFG_ON_BASE + 0x780) // 1780
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_ADDR              (WF_TOP_CFG_ON_BASE + 0x800) // 1800
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_ADDR                 (WF_TOP_CFG_ON_BASE + 0x804) // 1804
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_ADDR                  (WF_TOP_CFG_ON_BASE + 0x808) // 1808
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_ADDR                 (WF_TOP_CFG_ON_BASE + 0x80C) // 180C
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_ADDR                  (WF_TOP_CFG_ON_BASE + 0x810) // 1810
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_ADDR                   (WF_TOP_CFG_ON_BASE + 0x814) // 1814
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY2_ADDR                  (WF_TOP_CFG_ON_BASE + 0x818) // 1818
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC2_ADDR                 (WF_TOP_CFG_ON_BASE + 0x81C) // 181C
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMACON_ADDR                (WF_TOP_CFG_ON_BASE + 0x820) // 1820
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_USE_PLL_ADDR      (WF_TOP_CFG_ON_BASE + 0x850) // 1850
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_USE_PLL_ADDR         (WF_TOP_CFG_ON_BASE + 0x854) // 1854
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_USE_PLL_ADDR          (WF_TOP_CFG_ON_BASE + 0x858) // 1858
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_USE_PLL_ADDR         (WF_TOP_CFG_ON_BASE + 0x85C) // 185C
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_USE_PLL_ADDR          (WF_TOP_CFG_ON_BASE + 0x860) // 1860
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_USE_PLL_ADDR           (WF_TOP_CFG_ON_BASE + 0x864) // 1864
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY2_USE_PLL_ADDR          (WF_TOP_CFG_ON_BASE + 0x868) // 1868
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC2_USE_PLL_ADDR         (WF_TOP_CFG_ON_BASE + 0x86C) // 186C
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMACON_USE_PLL_ADDR        (WF_TOP_CFG_ON_BASE + 0x870) // 1870
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_CLOCK_ADDR                 (WF_TOP_CFG_ON_BASE + 0x874) // 1874
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_DEBUG_SEL_ADDR             (WF_TOP_CFG_ON_BASE + 0x900) // 1900
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_DEBUG_FLAG_ADDR            (WF_TOP_CFG_ON_BASE + 0x904) // 1904
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOPUMAC_ADDR        (WF_TOP_CFG_ON_BASE + 0x910) // 1910
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_ADDR          (WF_TOP_CFG_ON_BASE + 0x914) // 1914
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_ADDR           (WF_TOP_CFG_ON_BASE + 0x918) // 1918
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_ADDR          (WF_TOP_CFG_ON_BASE + 0x91C) // 191C
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_ADDR           (WF_TOP_CFG_ON_BASE + 0x920) // 1920
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_ADDR            (WF_TOP_CFG_ON_BASE + 0x924) // 1924
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_ADDR             (WF_TOP_CFG_ON_BASE + 0x928) // 1928
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_ADDR    (WF_TOP_CFG_ON_BASE + 0x92C) // 192C
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_ADDR       (WF_TOP_CFG_ON_BASE + 0x930) // 1930
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_ADDR        (WF_TOP_CFG_ON_BASE + 0x934) // 1934
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_ADDR       (WF_TOP_CFG_ON_BASE + 0x938) // 1938
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_ADDR        (WF_TOP_CFG_ON_BASE + 0x93C) // 193C
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_ADDR         (WF_TOP_CFG_ON_BASE + 0x940) // 1940
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_ADDR          (WF_TOP_CFG_ON_BASE + 0x944) // 1944
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_ADDR           (WF_TOP_CFG_ON_BASE + 0x948) // 1948
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_ADDR         (WF_TOP_CFG_ON_BASE + 0x94C) // 194C
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_ADDR       (WF_TOP_CFG_ON_BASE + 0x950) // 1950
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_ADDR        (WF_TOP_CFG_ON_BASE + 0x954) // 1954
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_ADDR      (WF_TOP_CFG_ON_BASE + 0x958) // 1958
#define WF_TOP_CFG_ON_WF_TOP_RGU_SW_RST_ADDR                   (WF_TOP_CFG_ON_BASE + 0x960) // 1960
#define WF_TOP_CFG_ON_DEBUG_FLAG0_ADDR                         (WF_TOP_CFG_ON_BASE + 0xB00) // 1B00
#define WF_TOP_CFG_ON_DEBUG_FLAG1_ADDR                         (WF_TOP_CFG_ON_BASE + 0xB04) // 1B04
#define WF_TOP_CFG_ON_DEBUG_FLAG2_ADDR                         (WF_TOP_CFG_ON_BASE + 0xB08) // 1B08
#define WF_TOP_CFG_ON_DEBUG_FLAG3_ADDR                         (WF_TOP_CFG_ON_BASE + 0xB0C) // 1B0C
#define WF_TOP_CFG_ON_DEBUG_FLAG4_ADDR                         (WF_TOP_CFG_ON_BASE + 0xB10) // 1B10
#define WF_TOP_CFG_ON_DEBUG_FLAG5_ADDR                         (WF_TOP_CFG_ON_BASE + 0xB14) // 1B14
#define WF_TOP_CFG_ON_DEBUG_FLAG6_ADDR                         (WF_TOP_CFG_ON_BASE + 0xB18) // 1B18
#define WF_TOP_CFG_ON_DEBUG_FLAG7_ADDR                         (WF_TOP_CFG_ON_BASE + 0xB1C) // 1B1C
#define WF_TOP_CFG_ON_DEBUG_FLAG8_ADDR                         (WF_TOP_CFG_ON_BASE + 0xB20) // 1B20
#define WF_TOP_CFG_ON_DEBUG_FLAG9_ADDR                         (WF_TOP_CFG_ON_BASE + 0xB24) // 1B24
#define WF_TOP_CFG_ON_DEBUG_FLAG10_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB28) // 1B28
#define WF_TOP_CFG_ON_DEBUG_FLAG11_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB2C) // 1B2C
#define WF_TOP_CFG_ON_DEBUG_FLAG12_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB30) // 1B30
#define WF_TOP_CFG_ON_DEBUG_FLAG13_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB34) // 1B34
#define WF_TOP_CFG_ON_DEBUG_FLAG14_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB38) // 1B38
#define WF_TOP_CFG_ON_DEBUG_FLAG15_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB3C) // 1B3C
#define WF_TOP_CFG_ON_DEBUG_FLAG16_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB40) // 1B40
#define WF_TOP_CFG_ON_DEBUG_FLAG17_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB50) // 1B50
#define WF_TOP_CFG_ON_DEBUG_FLAG18_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB54) // 1B54
#define WF_TOP_CFG_ON_DEBUG_FLAG19_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB58) // 1B58
#define WF_TOP_CFG_ON_DEBUG_FLAG20_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB5C) // 1B5C
#define WF_TOP_CFG_ON_DEBUG_FLAG21_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB60) // 1B60
#define WF_TOP_CFG_ON_DEBUG_FLAG22_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB64) // 1B64
#define WF_TOP_CFG_ON_DEBUG_FLAG23_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB68) // 1B68
#define WF_TOP_CFG_ON_DEBUG_FLAG24_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB6C) // 1B6C
#define WF_TOP_CFG_ON_DEBUG_FLAG25_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB70) // 1B70
#define WF_TOP_CFG_ON_DEBUG_FLAG26_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB74) // 1B74
#define WF_TOP_CFG_ON_DEBUG_FLAG27_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB78) // 1B78
#define WF_TOP_CFG_ON_DEBUG_FLAG28_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB7C) // 1B7C
#define WF_TOP_CFG_ON_DEBUG_FLAG29_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB80) // 1B80
#define WF_TOP_CFG_ON_DEBUG_FLAG30_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB84) // 1B84
#define WF_TOP_CFG_ON_DEBUG_FLAG31_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB88) // 1B88
#define WF_TOP_CFG_ON_DEBUG_FLAG32_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB8C) // 1B8C
#define WF_TOP_CFG_ON_DEBUG_FLAG33_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB90) // 1B90
#define WF_TOP_CFG_ON_DEBUG_FLAG34_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB94) // 1B94
#define WF_TOP_CFG_ON_DEBUG_FLAG35_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB98) // 1B98
#define WF_TOP_CFG_ON_DEBUG_FLAG36_ADDR                        (WF_TOP_CFG_ON_BASE + 0xB9C) // 1B9C
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG0_ADDR                     (WF_TOP_CFG_ON_BASE + 0xC00) // 1C00
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG1_ADDR                     (WF_TOP_CFG_ON_BASE + 0xC04) // 1C04
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG2_ADDR                     (WF_TOP_CFG_ON_BASE + 0xC08) // 1C08
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG3_ADDR                     (WF_TOP_CFG_ON_BASE + 0xC0C) // 1C0C
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG4_ADDR                     (WF_TOP_CFG_ON_BASE + 0xC10) // 1C10
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG5_ADDR                     (WF_TOP_CFG_ON_BASE + 0xC14) // 1C14
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG6_ADDR                     (WF_TOP_CFG_ON_BASE + 0xC18) // 1C18
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG7_ADDR                     (WF_TOP_CFG_ON_BASE + 0xC1C) // 1C1C
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG8_ADDR                     (WF_TOP_CFG_ON_BASE + 0xC20) // 1C20
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG9_ADDR                     (WF_TOP_CFG_ON_BASE + 0xC24) // 1C24
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG10_ADDR                    (WF_TOP_CFG_ON_BASE + 0xC28) // 1C28
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG11_ADDR                    (WF_TOP_CFG_ON_BASE + 0xC2C) // 1C2C
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG12_ADDR                    (WF_TOP_CFG_ON_BASE + 0xC30) // 1C30
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG13_ADDR                    (WF_TOP_CFG_ON_BASE + 0xC34) // 1C34
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG14_ADDR                    (WF_TOP_CFG_ON_BASE + 0xC38) // 1C38
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG15_ADDR                    (WF_TOP_CFG_ON_BASE + 0xC3C) // 1C3C
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG_SEL_ADDR                  (WF_TOP_CFG_ON_BASE + 0xC40) // 1C40
#define WF_TOP_CFG_ON_MET_CFG_ON_EVENT_DBG_SEL_ADDR            (WF_TOP_CFG_ON_BASE + 0xCF0) // 1CF0
#define WF_TOP_CFG_ON_APB_DECODER_CTL_0_ADDR                   (WF_TOP_CFG_ON_BASE + 0xF00) // 1F00
#define WF_TOP_CFG_ON_APB_DECODER_STAT_0_ADDR                  (WF_TOP_CFG_ON_BASE + 0xF04) // 1F04
#define WF_TOP_CFG_ON_APB_DECODER_BIG_CTL_0_ADDR               (WF_TOP_CFG_ON_BASE + 0xF08) // 1F08
#define WF_TOP_CFG_ON_APB_DECODER_BIG_STAT_0_ADDR              (WF_TOP_CFG_ON_BASE + 0xF0C) // 1F0C
#define WF_TOP_CFG_ON_APB_DECODER_AON_CTL_0_ADDR               (WF_TOP_CFG_ON_BASE + 0xF10) // 1F10
#define WF_TOP_CFG_ON_APB_DECODER_AON_STAT_0_ADDR              (WF_TOP_CFG_ON_BASE + 0xF14) // 1F14
#define WF_TOP_CFG_ON_FPGA_RESERVE_ADDR                        (WF_TOP_CFG_ON_BASE + 0xFFC) // 1FFC




/* =====================================================================================

  ---SLP_CTL (0x81021000 + 0x0)---

    NON_1ST_TIME_PWR_ON_CHK_EN[0] - (RW) non-1st time power on indicator enable (MCU needs a indicator for S/W restore after MCU does S/W backup)
                                     1'h0: Disable non-1st time power on indicator when using "Legacy Sleep" mode (no TOP power-down, thus MCU does not need to do S/W backup and restore)
                                     1'h1: Enable non-1st time power on indicator when using "Deep Sleep" mode (TOP power-down)
    NON_1ST_TIME_PWR_ON[1]       - (RO) non-1st time power on indicator (infrom MCU needs to do S/W restore)
                                     set to 1 by "H/W" when (MCU dose "standby" instruction & NON_1ST_TIME_PWR_ON_CHK_EN=1)
                                     clear to 0 by "S/W writing this bit to 1" when MCU finish restore routine
                                     1'h0 : 1st time power on (only valid before clear this bit)
                                     1'h1 : non-1st time power on
                                     
                                     write 1'h0: no function
                                     write 1'h1: clear this bit to 0
                                     read 1'h1: non-1st time power on
                                     read 1'h0: 1st time power on (only valid before clear this bit)
                                     
                                     MCU should perform S/W backup procedure before do "standby" instruction if (NON_1ST_TIME_PWR_ON_CHK_EN=1)
                                     MCU should perform S/W restore procedure after reset if (NON_1ST_TIME_PWR_ON_CHK_EN=1 & NON_1ST_TIME_PWR_ON=1)
    RESERVED2[7..2]              - (RO) Reserved bits
    FORCE_MCU_STOP[8]            - (RW) for FT mode to gen dsleep-leakage pattern usage
                                     force sleep controller to ignore "mcu_stop" from MCU core, thus allow to enter dsleep under FT mode
                                     1'h0: not force
                                     1'h1: force
    VCORE_RDY_RST_B_SEL[9]       - (RW)  xxx 
    RESERVED10[14..10]           - (RO) Reserved bits
    CR_SLPPROT_RDY_OUT_MASK[15]  - (RW) 0: un-mask 1:mask
    RESERVED16[21..16]           - (RO) Reserved bits
    CR_SKIP_NAP_SLEEP[22]        - (RW) 1: force nap sleep not power off
                                     0: nap sleep will power off
    CR_ENABLE_HW_CONTROL_NAP_CONTROL_NOT_CORRECT_SETTING[23] - (RW) 1: enable detection for wrong setting if  hw_control = 1 & nap_control = 1 (not support setting) to aware sw for wrong setting
                                     0: disable detection
    TOP_PWR_STAT[27..24]         - (RO) sleep controller FSM state
                                     4'b0001 : RESET state
                                     4'b0010 : STANDBY state
                                     4'b0100 : IDLE state
                                     4'b1000 : DSLEEP state
    CR_NAP_CONTROL_WF_CONN_INFRA_REQ[28] - (RW) keep conn infra powr on if nap sleep, 1: keep wakeup conn infra when napping sleep, 0: or not
    NAP_CONTROL[29]              - (RO) write 1'h0: let MCU behavior (clock, reset, power, ...) is controlled by S/W
                                     write 1'h1: let MCU behavior (clock, reset, power, ...) is controlled by H/W (this bit is set to 1'h1 when MCU wants to make MCU to enter napping sleep)
                                     read 1'h0: MCU behavior is controller by S/W
                                     read 1'h1: MCU behavior is controlled by H/W
    HW_CONTROL[30]               - (RO) This bit is valid only when HW_CONTROL_EN=1
                                     1'h0 : TOP behavior is controller by S/W
                                     1'h1 : TOP behavior is controlled by H/W
                                     
                                     write 1'h0: let TOP behavior (clock, reset, power, ...) is controlled by S/W
                                     write 1'h1: let TOP behavior (clock, reset, power, ...) is controlled by H/W (this bit is set to 1'h1 when MCU wants to make TOP to enter sleep)
                                     read 1'h0: TOP behavior is controller by S/W
                                     read 1'h1: TOP behavior is controlled by H/W
    HW_CONTROL_EN[31]            - (RW) hardware control TOP power state
                                     1'h0: not enable
                                     1'h1: enable hardware control (this bit is set to 1'h1 when MCU wants to make TOP to enter sleep)

 =====================================================================================*/
#define WF_TOP_CFG_ON_SLP_CTL_HW_CONTROL_EN_ADDR               WF_TOP_CFG_ON_SLP_CTL_ADDR
#define WF_TOP_CFG_ON_SLP_CTL_HW_CONTROL_EN_MASK               0x80000000                // HW_CONTROL_EN[31]
#define WF_TOP_CFG_ON_SLP_CTL_HW_CONTROL_EN_SHFT               31
#define WF_TOP_CFG_ON_SLP_CTL_HW_CONTROL_ADDR                  WF_TOP_CFG_ON_SLP_CTL_ADDR
#define WF_TOP_CFG_ON_SLP_CTL_HW_CONTROL_MASK                  0x40000000                // HW_CONTROL[30]
#define WF_TOP_CFG_ON_SLP_CTL_HW_CONTROL_SHFT                  30
#define WF_TOP_CFG_ON_SLP_CTL_NAP_CONTROL_ADDR                 WF_TOP_CFG_ON_SLP_CTL_ADDR
#define WF_TOP_CFG_ON_SLP_CTL_NAP_CONTROL_MASK                 0x20000000                // NAP_CONTROL[29]
#define WF_TOP_CFG_ON_SLP_CTL_NAP_CONTROL_SHFT                 29
#define WF_TOP_CFG_ON_SLP_CTL_CR_NAP_CONTROL_WF_CONN_INFRA_REQ_ADDR WF_TOP_CFG_ON_SLP_CTL_ADDR
#define WF_TOP_CFG_ON_SLP_CTL_CR_NAP_CONTROL_WF_CONN_INFRA_REQ_MASK 0x10000000                // CR_NAP_CONTROL_WF_CONN_INFRA_REQ[28]
#define WF_TOP_CFG_ON_SLP_CTL_CR_NAP_CONTROL_WF_CONN_INFRA_REQ_SHFT 28
#define WF_TOP_CFG_ON_SLP_CTL_TOP_PWR_STAT_ADDR                WF_TOP_CFG_ON_SLP_CTL_ADDR
#define WF_TOP_CFG_ON_SLP_CTL_TOP_PWR_STAT_MASK                0x0F000000                // TOP_PWR_STAT[27..24]
#define WF_TOP_CFG_ON_SLP_CTL_TOP_PWR_STAT_SHFT                24
#define WF_TOP_CFG_ON_SLP_CTL_CR_ENABLE_HW_CONTROL_NAP_CONTROL_NOT_CORRECT_SETTING_ADDR WF_TOP_CFG_ON_SLP_CTL_ADDR
#define WF_TOP_CFG_ON_SLP_CTL_CR_ENABLE_HW_CONTROL_NAP_CONTROL_NOT_CORRECT_SETTING_MASK 0x00800000                // CR_ENABLE_HW_CONTROL_NAP_CONTROL_NOT_CORRECT_SETTING[23]
#define WF_TOP_CFG_ON_SLP_CTL_CR_ENABLE_HW_CONTROL_NAP_CONTROL_NOT_CORRECT_SETTING_SHFT 23
#define WF_TOP_CFG_ON_SLP_CTL_CR_SKIP_NAP_SLEEP_ADDR           WF_TOP_CFG_ON_SLP_CTL_ADDR
#define WF_TOP_CFG_ON_SLP_CTL_CR_SKIP_NAP_SLEEP_MASK           0x00400000                // CR_SKIP_NAP_SLEEP[22]
#define WF_TOP_CFG_ON_SLP_CTL_CR_SKIP_NAP_SLEEP_SHFT           22
#define WF_TOP_CFG_ON_SLP_CTL_CR_SLPPROT_RDY_OUT_MASK_ADDR     WF_TOP_CFG_ON_SLP_CTL_ADDR
#define WF_TOP_CFG_ON_SLP_CTL_CR_SLPPROT_RDY_OUT_MASK_MASK     0x00008000                // CR_SLPPROT_RDY_OUT_MASK[15]
#define WF_TOP_CFG_ON_SLP_CTL_CR_SLPPROT_RDY_OUT_MASK_SHFT     15
#define WF_TOP_CFG_ON_SLP_CTL_VCORE_RDY_RST_B_SEL_ADDR         WF_TOP_CFG_ON_SLP_CTL_ADDR
#define WF_TOP_CFG_ON_SLP_CTL_VCORE_RDY_RST_B_SEL_MASK         0x00000200                // VCORE_RDY_RST_B_SEL[9]
#define WF_TOP_CFG_ON_SLP_CTL_VCORE_RDY_RST_B_SEL_SHFT         9
#define WF_TOP_CFG_ON_SLP_CTL_FORCE_MCU_STOP_ADDR              WF_TOP_CFG_ON_SLP_CTL_ADDR
#define WF_TOP_CFG_ON_SLP_CTL_FORCE_MCU_STOP_MASK              0x00000100                // FORCE_MCU_STOP[8]
#define WF_TOP_CFG_ON_SLP_CTL_FORCE_MCU_STOP_SHFT              8
#define WF_TOP_CFG_ON_SLP_CTL_NON_1ST_TIME_PWR_ON_ADDR         WF_TOP_CFG_ON_SLP_CTL_ADDR
#define WF_TOP_CFG_ON_SLP_CTL_NON_1ST_TIME_PWR_ON_MASK         0x00000002                // NON_1ST_TIME_PWR_ON[1]
#define WF_TOP_CFG_ON_SLP_CTL_NON_1ST_TIME_PWR_ON_SHFT         1
#define WF_TOP_CFG_ON_SLP_CTL_NON_1ST_TIME_PWR_ON_CHK_EN_ADDR  WF_TOP_CFG_ON_SLP_CTL_ADDR
#define WF_TOP_CFG_ON_SLP_CTL_NON_1ST_TIME_PWR_ON_CHK_EN_MASK  0x00000001                // NON_1ST_TIME_PWR_ON_CHK_EN[0]
#define WF_TOP_CFG_ON_SLP_CTL_NON_1ST_TIME_PWR_ON_CHK_EN_SHFT  0

/* =====================================================================================

  ---WF_NAPPING_SLEEP_STATUS (0x81021000 + 0x4)---

    NAP_CONTROL_STATUS[0]        - (RO) read check status
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_NAPPING_SLEEP_STATUS_NAP_CONTROL_STATUS_ADDR WF_TOP_CFG_ON_WF_NAPPING_SLEEP_STATUS_ADDR
#define WF_TOP_CFG_ON_WF_NAPPING_SLEEP_STATUS_NAP_CONTROL_STATUS_MASK 0x00000001                // NAP_CONTROL_STATUS[0]
#define WF_TOP_CFG_ON_WF_NAPPING_SLEEP_STATUS_NAP_CONTROL_STATUS_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_TOPUMAC_EARLY_CONTROL (0x81021000 + 0x8)---

    WF_CMDBT_TOPUMAC_EARLY_CONTROL_MODE[0] - (RW) WF_CMDBT_TOPUMAC_EARLY_CONTROL_MODE
    WF_CMDBT_TOPUMAC_EARLY_CONTROL[1] - (RW) WF_CMDBT_TOPUMAC_EARLY_CONTROL
    RESERVED2[31..2]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_TOPUMAC_EARLY_CONTROL_WF_CMDBT_TOPUMAC_EARLY_CONTROL_ADDR WF_TOP_CFG_ON_WF_CMDBT_TOPUMAC_EARLY_CONTROL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_TOPUMAC_EARLY_CONTROL_WF_CMDBT_TOPUMAC_EARLY_CONTROL_MASK 0x00000002                // WF_CMDBT_TOPUMAC_EARLY_CONTROL[1]
#define WF_TOP_CFG_ON_WF_CMDBT_TOPUMAC_EARLY_CONTROL_WF_CMDBT_TOPUMAC_EARLY_CONTROL_SHFT 1
#define WF_TOP_CFG_ON_WF_CMDBT_TOPUMAC_EARLY_CONTROL_WF_CMDBT_TOPUMAC_EARLY_CONTROL_MODE_ADDR WF_TOP_CFG_ON_WF_CMDBT_TOPUMAC_EARLY_CONTROL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_TOPUMAC_EARLY_CONTROL_WF_CMDBT_TOPUMAC_EARLY_CONTROL_MODE_MASK 0x00000001                // WF_CMDBT_TOPUMAC_EARLY_CONTROL_MODE[0]
#define WF_TOP_CFG_ON_WF_CMDBT_TOPUMAC_EARLY_CONTROL_WF_CMDBT_TOPUMAC_EARLY_CONTROL_MODE_SHFT 0

/* =====================================================================================

  ---OSC_CTL (0x81021000 + 0x100)---

    OSC_EN_ALL_CLR_CNT[5..0]     - (RW) mask short osc enble counter
                                     6'h0: masking 1T "osc enable=0"
                                     6'h1: masking 2T "osc enable=0"
                                     . . .
                                     6'h63: masking 64 "osc enable=0"
    RESERVED6[6]                 - (RO) Reserved bits
    OSC_EN_ALL_SEL[7]            - (RW) OSC enable source selection
                                     1'h0: use qualified "osc enable" (mask "short osc enable=0")
                                     1'h1: use original  "osc enable"
    HWCTL_OSC_ON_LEGACY_MODE[8]  - (RW) Select hwctl_osc_on condition logic
                                     0: up-to-date mode (After Skyhawk)
                                     1: legacy mode (Before Skyhawk)
    RESERVED9[29..9]             - (RO) Reserved bits
    WF_VCORE_ON[30]              - (RW)  xxx 
    XO_NO_OFF[31]                - (RW) it's a option that not turn-off OSC during "Deep Sleep" mode
                                     1'h0: not force OSC turn-on, OSC turn-on/-off is controlled by normal sleep/wakeup H/W procedure
                                     1'h1: force OSC turn-on

 =====================================================================================*/
#define WF_TOP_CFG_ON_OSC_CTL_XO_NO_OFF_ADDR                   WF_TOP_CFG_ON_OSC_CTL_ADDR
#define WF_TOP_CFG_ON_OSC_CTL_XO_NO_OFF_MASK                   0x80000000                // XO_NO_OFF[31]
#define WF_TOP_CFG_ON_OSC_CTL_XO_NO_OFF_SHFT                   31
#define WF_TOP_CFG_ON_OSC_CTL_WF_VCORE_ON_ADDR                 WF_TOP_CFG_ON_OSC_CTL_ADDR
#define WF_TOP_CFG_ON_OSC_CTL_WF_VCORE_ON_MASK                 0x40000000                // WF_VCORE_ON[30]
#define WF_TOP_CFG_ON_OSC_CTL_WF_VCORE_ON_SHFT                 30
#define WF_TOP_CFG_ON_OSC_CTL_HWCTL_OSC_ON_LEGACY_MODE_ADDR    WF_TOP_CFG_ON_OSC_CTL_ADDR
#define WF_TOP_CFG_ON_OSC_CTL_HWCTL_OSC_ON_LEGACY_MODE_MASK    0x00000100                // HWCTL_OSC_ON_LEGACY_MODE[8]
#define WF_TOP_CFG_ON_OSC_CTL_HWCTL_OSC_ON_LEGACY_MODE_SHFT    8
#define WF_TOP_CFG_ON_OSC_CTL_OSC_EN_ALL_SEL_ADDR              WF_TOP_CFG_ON_OSC_CTL_ADDR
#define WF_TOP_CFG_ON_OSC_CTL_OSC_EN_ALL_SEL_MASK              0x00000080                // OSC_EN_ALL_SEL[7]
#define WF_TOP_CFG_ON_OSC_CTL_OSC_EN_ALL_SEL_SHFT              7
#define WF_TOP_CFG_ON_OSC_CTL_OSC_EN_ALL_CLR_CNT_ADDR          WF_TOP_CFG_ON_OSC_CTL_ADDR
#define WF_TOP_CFG_ON_OSC_CTL_OSC_EN_ALL_CLR_CNT_MASK          0x0000003F                // OSC_EN_ALL_CLR_CNT[5..0]
#define WF_TOP_CFG_ON_OSC_CTL_OSC_EN_ALL_CLR_CNT_SHFT          0

/* =====================================================================================

  ---OSC_MASK (0x81021000 + 0x104)---

    OSC_EN_MASK[15..0]           - (RW) mask OSC enable request
                                     [15]: set 1'b1 to mask "BN2 WF OSC EN"
                                     [14]: set 1'b1 to mask "BN2 WF DMA RX BUSY OSC EN"
                                     [13]: set 1'b1 to mask "WF_SDIO_WRAP_BUSY"
                                     [12]: set 1'b1 to mask "MCU_AXIDMA_OSC_EN"
                                     [11]: set 1'b1 to mask "AP2WF OSC EN" (from conn_infra's ap2wf_osc_en, chip top -> conn_infra -> here)
                                     [10]: set 1'b1 to mask "INT HIF OSC EN" (from wfdma_top's int_hif_osc_en)
                                     [9]: set 1'b1 to mask "EXT HIF OSC EN" (from wfdma_top's ext_hif_osc_en)
                                     [8]: set 1'b1 to mask "MCU OSC EN" (from MCU's )mcu_osc_en
                                     [7]: set 1'b1 to mask "PLE OSC EN" (from wf_umac_top's ple_lp_idle_all)
                                     [6]: set 1'b1 to mask "PSE OSC EN" (from wf_umac_top's pse_lp_idle_all)
                                     [5]: set 1'b1 to mask "BN1 WF OSC EN" (from wfsys_on's bn1_wf_osc_en)
                                     [4]: set 1'b1 to mask "BN0 WF OSC EN" (from wfsys_on's bn0_wf_osc_en)
                                     [3]: set 1'b1 to mask "PLE RX OSC EN" (from wf_umac_top's ple_lp_idle_rx)
                                     [2]: set 1'b1 to mask "PSE RX OSC EN" (from wf_umac_top's pse_lp_idle_rx)
                                     [1]: set 1'b1 to mask "BN1 WF DMA RX BUSY OSC EN" (from bn1_wf_lmac_top's bn1_wf_dma_rx_busy)
                                     [0]: set 1'b1 to mask "BN0 WF DMA RX BUSY OSC EN" (from bn0_wf_lmac_top's bn0_wf_dma_rx_busy)
    BN0_WF_DMA_RX_BUSY[16]       - (RO) indicator: "BN0 WF DMA RX BUSY OSC EN" (from bn0_wf_lmac_top's bn0_wf_dma_rx_busy)
    BN1_WF_DMA_RX_BUSY[17]       - (RO) indicator: "BN1 WF DMA RX BUSY OSC EN" (from bn0_wf_lmac_top's bn1_wf_dma_rx_busy)
    PSE_OSC_EN_RX[18]            - (RO) indicator: "PSE RX OSC EN" (from wf_umac_top's pse_lp_idle_rx)
    PLE_OSC_EN_RX[19]            - (RO) indicator: "PLE RX OSC EN" (from wf_umac_top's ple_lp_idle_rx)
    BN0_WF_OSC_EN[20]            - (RO) indicator: "BN0 WF OSC EN" (from wfsys_on's bn0_wf_osc_en)
    BN1_WF_OSC_EN[21]            - (RO) indicator: "BN1 WF OSC EN" (from wfsys_on's bn1_wf_osc_en)
    PSE_OSC_EN[22]               - (RO) indicator: "PSE OSC EN" (from wf_umac_top's pse_lp_idle_all)
    PLE_OSC_EN[23]               - (RO) indicator: "PLE OSC EN" (from wf_umac_top's ple_lp_idle_all)
    MCU_OSC_EN[24]               - (RO) indicator: "MCU OSC EN" (from MCU's mcu_osc_en)
    EXT_HIF_OSC_EN[25]           - (RO) indicator: "EXT HIF OSC EN" (from wfdma_top's ext_hif_osc_en)
    INT_HIF_OSC_EN[26]           - (RO) indicator: "INT HIF OSC EN" (from wfdma_top's int_hif_osc_en)
    AP2CONN_WFSYS_OSC_EN[27]     - (RO) indicator: "AP2WF OSC EN" (from conn_infra's ap2wf_osc_en, chip top -> conn_infra -> here)
    RESERVED28[28]               - (RO) Reserved bits
    MCU_AXIDMA_OSC_EN[29]        - (RO) indicator: "MCU_AXIDMA_OSC_EN"
    RESERVED30[30]               - (RO) Reserved bits
    OSC_EN_ALL[31]               - (RO) indicator : OR all OSC enables

 =====================================================================================*/
#define WF_TOP_CFG_ON_OSC_MASK_OSC_EN_ALL_ADDR                 WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_OSC_EN_ALL_MASK                 0x80000000                // OSC_EN_ALL[31]
#define WF_TOP_CFG_ON_OSC_MASK_OSC_EN_ALL_SHFT                 31
#define WF_TOP_CFG_ON_OSC_MASK_MCU_AXIDMA_OSC_EN_ADDR          WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_MCU_AXIDMA_OSC_EN_MASK          0x20000000                // MCU_AXIDMA_OSC_EN[29]
#define WF_TOP_CFG_ON_OSC_MASK_MCU_AXIDMA_OSC_EN_SHFT          29
#define WF_TOP_CFG_ON_OSC_MASK_AP2CONN_WFSYS_OSC_EN_ADDR       WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_AP2CONN_WFSYS_OSC_EN_MASK       0x08000000                // AP2CONN_WFSYS_OSC_EN[27]
#define WF_TOP_CFG_ON_OSC_MASK_AP2CONN_WFSYS_OSC_EN_SHFT       27
#define WF_TOP_CFG_ON_OSC_MASK_INT_HIF_OSC_EN_ADDR             WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_INT_HIF_OSC_EN_MASK             0x04000000                // INT_HIF_OSC_EN[26]
#define WF_TOP_CFG_ON_OSC_MASK_INT_HIF_OSC_EN_SHFT             26
#define WF_TOP_CFG_ON_OSC_MASK_EXT_HIF_OSC_EN_ADDR             WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_EXT_HIF_OSC_EN_MASK             0x02000000                // EXT_HIF_OSC_EN[25]
#define WF_TOP_CFG_ON_OSC_MASK_EXT_HIF_OSC_EN_SHFT             25
#define WF_TOP_CFG_ON_OSC_MASK_MCU_OSC_EN_ADDR                 WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_MCU_OSC_EN_MASK                 0x01000000                // MCU_OSC_EN[24]
#define WF_TOP_CFG_ON_OSC_MASK_MCU_OSC_EN_SHFT                 24
#define WF_TOP_CFG_ON_OSC_MASK_PLE_OSC_EN_ADDR                 WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_PLE_OSC_EN_MASK                 0x00800000                // PLE_OSC_EN[23]
#define WF_TOP_CFG_ON_OSC_MASK_PLE_OSC_EN_SHFT                 23
#define WF_TOP_CFG_ON_OSC_MASK_PSE_OSC_EN_ADDR                 WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_PSE_OSC_EN_MASK                 0x00400000                // PSE_OSC_EN[22]
#define WF_TOP_CFG_ON_OSC_MASK_PSE_OSC_EN_SHFT                 22
#define WF_TOP_CFG_ON_OSC_MASK_BN1_WF_OSC_EN_ADDR              WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_BN1_WF_OSC_EN_MASK              0x00200000                // BN1_WF_OSC_EN[21]
#define WF_TOP_CFG_ON_OSC_MASK_BN1_WF_OSC_EN_SHFT              21
#define WF_TOP_CFG_ON_OSC_MASK_BN0_WF_OSC_EN_ADDR              WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_BN0_WF_OSC_EN_MASK              0x00100000                // BN0_WF_OSC_EN[20]
#define WF_TOP_CFG_ON_OSC_MASK_BN0_WF_OSC_EN_SHFT              20
#define WF_TOP_CFG_ON_OSC_MASK_PLE_OSC_EN_RX_ADDR              WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_PLE_OSC_EN_RX_MASK              0x00080000                // PLE_OSC_EN_RX[19]
#define WF_TOP_CFG_ON_OSC_MASK_PLE_OSC_EN_RX_SHFT              19
#define WF_TOP_CFG_ON_OSC_MASK_PSE_OSC_EN_RX_ADDR              WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_PSE_OSC_EN_RX_MASK              0x00040000                // PSE_OSC_EN_RX[18]
#define WF_TOP_CFG_ON_OSC_MASK_PSE_OSC_EN_RX_SHFT              18
#define WF_TOP_CFG_ON_OSC_MASK_BN1_WF_DMA_RX_BUSY_ADDR         WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_BN1_WF_DMA_RX_BUSY_MASK         0x00020000                // BN1_WF_DMA_RX_BUSY[17]
#define WF_TOP_CFG_ON_OSC_MASK_BN1_WF_DMA_RX_BUSY_SHFT         17
#define WF_TOP_CFG_ON_OSC_MASK_BN0_WF_DMA_RX_BUSY_ADDR         WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_BN0_WF_DMA_RX_BUSY_MASK         0x00010000                // BN0_WF_DMA_RX_BUSY[16]
#define WF_TOP_CFG_ON_OSC_MASK_BN0_WF_DMA_RX_BUSY_SHFT         16
#define WF_TOP_CFG_ON_OSC_MASK_OSC_EN_MASK_ADDR                WF_TOP_CFG_ON_OSC_MASK_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_OSC_EN_MASK_MASK                0x0000FFFF                // OSC_EN_MASK[15..0]
#define WF_TOP_CFG_ON_OSC_MASK_OSC_EN_MASK_SHFT                0

/* =====================================================================================

  ---OSC_MASK_NAP (0x81021000 + 0x108)---

    CR_OSC_MASK_NAP[31..0]       - (RW) osc mask for wf napping sleep

 =====================================================================================*/
#define WF_TOP_CFG_ON_OSC_MASK_NAP_CR_OSC_MASK_NAP_ADDR        WF_TOP_CFG_ON_OSC_MASK_NAP_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_NAP_CR_OSC_MASK_NAP_MASK        0xFFFFFFFF                // CR_OSC_MASK_NAP[31..0]
#define WF_TOP_CFG_ON_OSC_MASK_NAP_CR_OSC_MASK_NAP_SHFT        0

/* =====================================================================================

  ---WPLL_MASK (0x81021000 + 0x10C)---

    CR_BN1_WF_WPLL_ON_MASK[0]    - (RW) set 1'b1 to mask "BN1_WF_WPLL_ON"
    CR_BN0_WF_WPLL_ON_MASK[1]    - (RW) set 1'b1 to mask "BN0_WF_WPLL_ON"
    CR_WFSYS_WBG_EN_PLL_MASK[2]  - (RW) set 1'b1 to mask "WFSYS_WBG_EN_PLL"
    CR_BN2_WF_WPLL_ON_MASK[3]    - (RW) set 1'b1 to mask "BN2_WF_WPLL_ON"
    CR_LIT_WF_WPLL_ON_MASK[4]    - (RW) set 1'b1 to mask "LIT_WF_WPLL_ON"
    RESERVED5[31..5]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WPLL_MASK_CR_LIT_WF_WPLL_ON_MASK_ADDR    WF_TOP_CFG_ON_WPLL_MASK_ADDR
#define WF_TOP_CFG_ON_WPLL_MASK_CR_LIT_WF_WPLL_ON_MASK_MASK    0x00000010                // CR_LIT_WF_WPLL_ON_MASK[4]
#define WF_TOP_CFG_ON_WPLL_MASK_CR_LIT_WF_WPLL_ON_MASK_SHFT    4
#define WF_TOP_CFG_ON_WPLL_MASK_CR_BN2_WF_WPLL_ON_MASK_ADDR    WF_TOP_CFG_ON_WPLL_MASK_ADDR
#define WF_TOP_CFG_ON_WPLL_MASK_CR_BN2_WF_WPLL_ON_MASK_MASK    0x00000008                // CR_BN2_WF_WPLL_ON_MASK[3]
#define WF_TOP_CFG_ON_WPLL_MASK_CR_BN2_WF_WPLL_ON_MASK_SHFT    3
#define WF_TOP_CFG_ON_WPLL_MASK_CR_WFSYS_WBG_EN_PLL_MASK_ADDR  WF_TOP_CFG_ON_WPLL_MASK_ADDR
#define WF_TOP_CFG_ON_WPLL_MASK_CR_WFSYS_WBG_EN_PLL_MASK_MASK  0x00000004                // CR_WFSYS_WBG_EN_PLL_MASK[2]
#define WF_TOP_CFG_ON_WPLL_MASK_CR_WFSYS_WBG_EN_PLL_MASK_SHFT  2
#define WF_TOP_CFG_ON_WPLL_MASK_CR_BN0_WF_WPLL_ON_MASK_ADDR    WF_TOP_CFG_ON_WPLL_MASK_ADDR
#define WF_TOP_CFG_ON_WPLL_MASK_CR_BN0_WF_WPLL_ON_MASK_MASK    0x00000002                // CR_BN0_WF_WPLL_ON_MASK[1]
#define WF_TOP_CFG_ON_WPLL_MASK_CR_BN0_WF_WPLL_ON_MASK_SHFT    1
#define WF_TOP_CFG_ON_WPLL_MASK_CR_BN1_WF_WPLL_ON_MASK_ADDR    WF_TOP_CFG_ON_WPLL_MASK_ADDR
#define WF_TOP_CFG_ON_WPLL_MASK_CR_BN1_WF_WPLL_ON_MASK_MASK    0x00000001                // CR_BN1_WF_WPLL_ON_MASK[0]
#define WF_TOP_CFG_ON_WPLL_MASK_CR_BN1_WF_WPLL_ON_MASK_SHFT    0

/* =====================================================================================

  ---OSC_MASK_1 (0x81021000 + 0x110)---

    OSC_EN_MASK_1[15..0]         - (RW) mask OSC enable request
                                     [15:2]: reserved
                                     [1]: set 1'b1 to mask "LIT WF OSC EN" 
                                     [0]: set 1'b1 to mask "LIT WF DMA RX BUSY OSC EN"
    BN2_WF_DMA_RX_BUSY[16]       - (RO) indicator: "BN2 WF DMA RX BUSY OSC EN"
    LIT_WF_DMA_RX_BUSY[17]       - (RO) indicator: "LIT WF DMA RX BUSY OSC EN"
    RESERVED18[19..18]           - (RO) Reserved bits
    BN2_WF_OSC_EN[20]            - (RO) indicator: "BN2 WF OSC EN"
    LIT_WF_OSC_EN[21]            - (RO) indicator: "LIT WF OSC EN" (from wfsys_on's bn1_wf_osc_en)
    RESERVED22[31..22]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_OSC_MASK_1_LIT_WF_OSC_EN_ADDR            WF_TOP_CFG_ON_OSC_MASK_1_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_1_LIT_WF_OSC_EN_MASK            0x00200000                // LIT_WF_OSC_EN[21]
#define WF_TOP_CFG_ON_OSC_MASK_1_LIT_WF_OSC_EN_SHFT            21
#define WF_TOP_CFG_ON_OSC_MASK_1_BN2_WF_OSC_EN_ADDR            WF_TOP_CFG_ON_OSC_MASK_1_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_1_BN2_WF_OSC_EN_MASK            0x00100000                // BN2_WF_OSC_EN[20]
#define WF_TOP_CFG_ON_OSC_MASK_1_BN2_WF_OSC_EN_SHFT            20
#define WF_TOP_CFG_ON_OSC_MASK_1_LIT_WF_DMA_RX_BUSY_ADDR       WF_TOP_CFG_ON_OSC_MASK_1_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_1_LIT_WF_DMA_RX_BUSY_MASK       0x00020000                // LIT_WF_DMA_RX_BUSY[17]
#define WF_TOP_CFG_ON_OSC_MASK_1_LIT_WF_DMA_RX_BUSY_SHFT       17
#define WF_TOP_CFG_ON_OSC_MASK_1_BN2_WF_DMA_RX_BUSY_ADDR       WF_TOP_CFG_ON_OSC_MASK_1_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_1_BN2_WF_DMA_RX_BUSY_MASK       0x00010000                // BN2_WF_DMA_RX_BUSY[16]
#define WF_TOP_CFG_ON_OSC_MASK_1_BN2_WF_DMA_RX_BUSY_SHFT       16
#define WF_TOP_CFG_ON_OSC_MASK_1_OSC_EN_MASK_1_ADDR            WF_TOP_CFG_ON_OSC_MASK_1_ADDR
#define WF_TOP_CFG_ON_OSC_MASK_1_OSC_EN_MASK_1_MASK            0x0000FFFF                // OSC_EN_MASK_1[15..0]
#define WF_TOP_CFG_ON_OSC_MASK_1_OSC_EN_MASK_1_SHFT            0

/* =====================================================================================

  ---WF_CONN_INFRA_BUS_CTL (0x81021000 + 0x120)---

    CR_WF_CONN_INFRA_BUS_PLL_SW_REQ[0] - (RW) 1: SW request conn_infra bus switch to pll
                                     0: SW no request conn_infra bus switch to pll
    CR_WF_CONN_INFRA_BUS_PLL_REQ_SEL[1] - (RW) 1: select cr_wf_conn_infra_bus_pll_sw_req as wf_conn_infra_bus_pll_req
                                     0: select original wf_pll_req_pre as wf_conn_infra_bus_pll_req
    CR_DBC_OUTPUT_LOW_COUNT_LIMIT[6..2] - (RW) conn_infra_bus_pll_req HW debounce  for low signal control, default set to min debounce limit
    CR_DBC_OUTPUT_HIGH_COUNT_LIMIT[11..7] - (RW) conn_infra_bus_pll_req HW debounce for high signal control, default set to max debounce limit
    RESERVED12[31..12]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CONN_INFRA_BUS_CTL_CR_DBC_OUTPUT_HIGH_COUNT_LIMIT_ADDR WF_TOP_CFG_ON_WF_CONN_INFRA_BUS_CTL_ADDR
#define WF_TOP_CFG_ON_WF_CONN_INFRA_BUS_CTL_CR_DBC_OUTPUT_HIGH_COUNT_LIMIT_MASK 0x00000F80                // CR_DBC_OUTPUT_HIGH_COUNT_LIMIT[11..7]
#define WF_TOP_CFG_ON_WF_CONN_INFRA_BUS_CTL_CR_DBC_OUTPUT_HIGH_COUNT_LIMIT_SHFT 7
#define WF_TOP_CFG_ON_WF_CONN_INFRA_BUS_CTL_CR_DBC_OUTPUT_LOW_COUNT_LIMIT_ADDR WF_TOP_CFG_ON_WF_CONN_INFRA_BUS_CTL_ADDR
#define WF_TOP_CFG_ON_WF_CONN_INFRA_BUS_CTL_CR_DBC_OUTPUT_LOW_COUNT_LIMIT_MASK 0x0000007C                // CR_DBC_OUTPUT_LOW_COUNT_LIMIT[6..2]
#define WF_TOP_CFG_ON_WF_CONN_INFRA_BUS_CTL_CR_DBC_OUTPUT_LOW_COUNT_LIMIT_SHFT 2
#define WF_TOP_CFG_ON_WF_CONN_INFRA_BUS_CTL_CR_WF_CONN_INFRA_BUS_PLL_REQ_SEL_ADDR WF_TOP_CFG_ON_WF_CONN_INFRA_BUS_CTL_ADDR
#define WF_TOP_CFG_ON_WF_CONN_INFRA_BUS_CTL_CR_WF_CONN_INFRA_BUS_PLL_REQ_SEL_MASK 0x00000002                // CR_WF_CONN_INFRA_BUS_PLL_REQ_SEL[1]
#define WF_TOP_CFG_ON_WF_CONN_INFRA_BUS_CTL_CR_WF_CONN_INFRA_BUS_PLL_REQ_SEL_SHFT 1
#define WF_TOP_CFG_ON_WF_CONN_INFRA_BUS_CTL_CR_WF_CONN_INFRA_BUS_PLL_SW_REQ_ADDR WF_TOP_CFG_ON_WF_CONN_INFRA_BUS_CTL_ADDR
#define WF_TOP_CFG_ON_WF_CONN_INFRA_BUS_CTL_CR_WF_CONN_INFRA_BUS_PLL_SW_REQ_MASK 0x00000001                // CR_WF_CONN_INFRA_BUS_PLL_SW_REQ[0]
#define WF_TOP_CFG_ON_WF_CONN_INFRA_BUS_CTL_CR_WF_CONN_INFRA_BUS_PLL_SW_REQ_SHFT 0

/* =====================================================================================

  ---WF_CONN_INFRA_OFF_DOMAIN_CTL (0x81021000 + 0x124)---

    CR_WF_CONN_INFRA_SW_REQ[0]   - (RW) 1: SW wakeup conn_infra off domain
                                     0: SW no wakeup conn_iinfra off domain
    CR_WF_CONN_INFRA_REQ_SEL[1]  - (RW) 1: select cr_wf_conn_infra_req as wf_conn_infra_req
                                     0: select original osc_on as wf_conn_infra_req
    CR_WF_CONN_INFRA_REQ_MODE_SEL[2] - (RW) 1: Legacy mode, conn_infra_off keep power-on when wfsys_osc_on asserted
                                     0: Dynamic power-on/off conn_infra_off by wf2conn bus req or COEX use conn_infra_req
    CR_CONN_REQ_DBC_OUTPUT_LOW_COUNT_LIMIT[7..3] - (RW) conn_infra_req HW debounce  for low signal control, default set to min debounce limit
    CR_CONN_REQ_DBC_OUTPUT_HIGH_COUNT_LIMIT[12..8] - (RW) conn_infra_req HW debounce for high signal control, default set to max debounce limit
    RESERVED13[31..13]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CONN_INFRA_OFF_DOMAIN_CTL_CR_CONN_REQ_DBC_OUTPUT_HIGH_COUNT_LIMIT_ADDR WF_TOP_CFG_ON_WF_CONN_INFRA_OFF_DOMAIN_CTL_ADDR
#define WF_TOP_CFG_ON_WF_CONN_INFRA_OFF_DOMAIN_CTL_CR_CONN_REQ_DBC_OUTPUT_HIGH_COUNT_LIMIT_MASK 0x00001F00                // CR_CONN_REQ_DBC_OUTPUT_HIGH_COUNT_LIMIT[12..8]
#define WF_TOP_CFG_ON_WF_CONN_INFRA_OFF_DOMAIN_CTL_CR_CONN_REQ_DBC_OUTPUT_HIGH_COUNT_LIMIT_SHFT 8
#define WF_TOP_CFG_ON_WF_CONN_INFRA_OFF_DOMAIN_CTL_CR_CONN_REQ_DBC_OUTPUT_LOW_COUNT_LIMIT_ADDR WF_TOP_CFG_ON_WF_CONN_INFRA_OFF_DOMAIN_CTL_ADDR
#define WF_TOP_CFG_ON_WF_CONN_INFRA_OFF_DOMAIN_CTL_CR_CONN_REQ_DBC_OUTPUT_LOW_COUNT_LIMIT_MASK 0x000000F8                // CR_CONN_REQ_DBC_OUTPUT_LOW_COUNT_LIMIT[7..3]
#define WF_TOP_CFG_ON_WF_CONN_INFRA_OFF_DOMAIN_CTL_CR_CONN_REQ_DBC_OUTPUT_LOW_COUNT_LIMIT_SHFT 3
#define WF_TOP_CFG_ON_WF_CONN_INFRA_OFF_DOMAIN_CTL_CR_WF_CONN_INFRA_REQ_MODE_SEL_ADDR WF_TOP_CFG_ON_WF_CONN_INFRA_OFF_DOMAIN_CTL_ADDR
#define WF_TOP_CFG_ON_WF_CONN_INFRA_OFF_DOMAIN_CTL_CR_WF_CONN_INFRA_REQ_MODE_SEL_MASK 0x00000004                // CR_WF_CONN_INFRA_REQ_MODE_SEL[2]
#define WF_TOP_CFG_ON_WF_CONN_INFRA_OFF_DOMAIN_CTL_CR_WF_CONN_INFRA_REQ_MODE_SEL_SHFT 2
#define WF_TOP_CFG_ON_WF_CONN_INFRA_OFF_DOMAIN_CTL_CR_WF_CONN_INFRA_REQ_SEL_ADDR WF_TOP_CFG_ON_WF_CONN_INFRA_OFF_DOMAIN_CTL_ADDR
#define WF_TOP_CFG_ON_WF_CONN_INFRA_OFF_DOMAIN_CTL_CR_WF_CONN_INFRA_REQ_SEL_MASK 0x00000002                // CR_WF_CONN_INFRA_REQ_SEL[1]
#define WF_TOP_CFG_ON_WF_CONN_INFRA_OFF_DOMAIN_CTL_CR_WF_CONN_INFRA_REQ_SEL_SHFT 1
#define WF_TOP_CFG_ON_WF_CONN_INFRA_OFF_DOMAIN_CTL_CR_WF_CONN_INFRA_SW_REQ_ADDR WF_TOP_CFG_ON_WF_CONN_INFRA_OFF_DOMAIN_CTL_ADDR
#define WF_TOP_CFG_ON_WF_CONN_INFRA_OFF_DOMAIN_CTL_CR_WF_CONN_INFRA_SW_REQ_MASK 0x00000001                // CR_WF_CONN_INFRA_SW_REQ[0]
#define WF_TOP_CFG_ON_WF_CONN_INFRA_OFF_DOMAIN_CTL_CR_WF_CONN_INFRA_SW_REQ_SHFT 0

/* =====================================================================================

  ---WF_CONN_INFRA_COEX_ENABLE_CTL (0x81021000 + 0x128)---

    CR_ENABLE_BN0_COEX[0]        - (RW) 1: Enable COEX's  conn_infra_off requirement
                                     0: Disable COEX's  conn_infra_off requirement
    CR_ENABLE_BN1_COEX[1]        - (RW) 1: Enable COEX's  conn_infra_off requirement
                                     0: Disable COEX's  conn_infra_off requirement
    CR_ENABLE_BN2_COEX[2]        - (RW) 1: Enable COEX's  conn_infra_off requirement
                                     0: Disable COEX's  conn_infra_off requirement
    CR_ENABLE_LIT_COEX[3]        - (RW) 1: Enable COEX's  conn_infra_off requirement
                                     0: Disable COEX's  conn_infra_off requirement
    RESERVED4[31..4]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CONN_INFRA_COEX_ENABLE_CTL_CR_ENABLE_LIT_COEX_ADDR WF_TOP_CFG_ON_WF_CONN_INFRA_COEX_ENABLE_CTL_ADDR
#define WF_TOP_CFG_ON_WF_CONN_INFRA_COEX_ENABLE_CTL_CR_ENABLE_LIT_COEX_MASK 0x00000008                // CR_ENABLE_LIT_COEX[3]
#define WF_TOP_CFG_ON_WF_CONN_INFRA_COEX_ENABLE_CTL_CR_ENABLE_LIT_COEX_SHFT 3
#define WF_TOP_CFG_ON_WF_CONN_INFRA_COEX_ENABLE_CTL_CR_ENABLE_BN2_COEX_ADDR WF_TOP_CFG_ON_WF_CONN_INFRA_COEX_ENABLE_CTL_ADDR
#define WF_TOP_CFG_ON_WF_CONN_INFRA_COEX_ENABLE_CTL_CR_ENABLE_BN2_COEX_MASK 0x00000004                // CR_ENABLE_BN2_COEX[2]
#define WF_TOP_CFG_ON_WF_CONN_INFRA_COEX_ENABLE_CTL_CR_ENABLE_BN2_COEX_SHFT 2
#define WF_TOP_CFG_ON_WF_CONN_INFRA_COEX_ENABLE_CTL_CR_ENABLE_BN1_COEX_ADDR WF_TOP_CFG_ON_WF_CONN_INFRA_COEX_ENABLE_CTL_ADDR
#define WF_TOP_CFG_ON_WF_CONN_INFRA_COEX_ENABLE_CTL_CR_ENABLE_BN1_COEX_MASK 0x00000002                // CR_ENABLE_BN1_COEX[1]
#define WF_TOP_CFG_ON_WF_CONN_INFRA_COEX_ENABLE_CTL_CR_ENABLE_BN1_COEX_SHFT 1
#define WF_TOP_CFG_ON_WF_CONN_INFRA_COEX_ENABLE_CTL_CR_ENABLE_BN0_COEX_ADDR WF_TOP_CFG_ON_WF_CONN_INFRA_COEX_ENABLE_CTL_ADDR
#define WF_TOP_CFG_ON_WF_CONN_INFRA_COEX_ENABLE_CTL_CR_ENABLE_BN0_COEX_MASK 0x00000001                // CR_ENABLE_BN0_COEX[0]
#define WF_TOP_CFG_ON_WF_CONN_INFRA_COEX_ENABLE_CTL_CR_ENABLE_BN0_COEX_SHFT 0

/* =====================================================================================

  ---IRQ_CTL (0x81021000 + 0x200)---

    RESERVED0[0]                 - (RO) Reserved bits
    CMDBT_PLL_IRQ_EN[2..1]       - (RW) enable of cmdbt_pll_irq_b
                                     [0]:For WF Backup/Restore action START
                                     [1]:For WF Backup/Restore action END
                                     1'h0 : Disable the interrupt function
                                     1'h1 : Enable the interrupt function
    RESERVED3[31..3]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_IRQ_CTL_CMDBT_PLL_IRQ_EN_ADDR            WF_TOP_CFG_ON_IRQ_CTL_ADDR
#define WF_TOP_CFG_ON_IRQ_CTL_CMDBT_PLL_IRQ_EN_MASK            0x00000006                // CMDBT_PLL_IRQ_EN[2..1]
#define WF_TOP_CFG_ON_IRQ_CTL_CMDBT_PLL_IRQ_EN_SHFT            1

/* =====================================================================================

  ---LPOSC_CTL (0x81021000 + 0x300)---

    CR_MASK_WF_VON_SLPCTL_F32K_SW_RDY[0] - (RW) 0: mask
                                     1: un-mask
    CR_FORCE_WFSYS_LPOSC_ON[1]   - (RW) 0: no force
                                     1: force on
    CR_MASK_WF_LPOSC_RDY_FOR_CLOCK_SWITCH[2] - (RW) 0: un-mask
                                     1: mask
    RESERVED3[31..3]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_LPOSC_CTL_CR_MASK_WF_LPOSC_RDY_FOR_CLOCK_SWITCH_ADDR WF_TOP_CFG_ON_LPOSC_CTL_ADDR
#define WF_TOP_CFG_ON_LPOSC_CTL_CR_MASK_WF_LPOSC_RDY_FOR_CLOCK_SWITCH_MASK 0x00000004                // CR_MASK_WF_LPOSC_RDY_FOR_CLOCK_SWITCH[2]
#define WF_TOP_CFG_ON_LPOSC_CTL_CR_MASK_WF_LPOSC_RDY_FOR_CLOCK_SWITCH_SHFT 2
#define WF_TOP_CFG_ON_LPOSC_CTL_CR_FORCE_WFSYS_LPOSC_ON_ADDR   WF_TOP_CFG_ON_LPOSC_CTL_ADDR
#define WF_TOP_CFG_ON_LPOSC_CTL_CR_FORCE_WFSYS_LPOSC_ON_MASK   0x00000002                // CR_FORCE_WFSYS_LPOSC_ON[1]
#define WF_TOP_CFG_ON_LPOSC_CTL_CR_FORCE_WFSYS_LPOSC_ON_SHFT   1
#define WF_TOP_CFG_ON_LPOSC_CTL_CR_MASK_WF_VON_SLPCTL_F32K_SW_RDY_ADDR WF_TOP_CFG_ON_LPOSC_CTL_ADDR
#define WF_TOP_CFG_ON_LPOSC_CTL_CR_MASK_WF_VON_SLPCTL_F32K_SW_RDY_MASK 0x00000001                // CR_MASK_WF_VON_SLPCTL_F32K_SW_RDY[0]
#define WF_TOP_CFG_ON_LPOSC_CTL_CR_MASK_WF_VON_SLPCTL_F32K_SW_RDY_SHFT 0

/* =====================================================================================

  ---LPOSC_CTL_2 (0x81021000 + 0x304)---

    CR_MASK_WF_VON_SLPCTL_OSC_SW_RDY[0] - (RW) 0: mask
                                     1: un-mask
    CR_MASK_WF_VON_SLPCTL_LPOSC_SW_RDY[1] - (RW) 0: mask
                                     1: un-mask
    CR_WFSYS_LPOSC_ON_LEGACY_MODE[2] - (RW) 1: Legacy mode (Before Skyhawk WF_BE_TOP 3.4.0.0) => lposc keep high in normal mode
                                     0: Up-to-date mode (After Skyhawk WF_BE_TOP 3.4.0.0) => lposc dynamic on/off
    RESERVED3[31..3]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_LPOSC_CTL_2_CR_WFSYS_LPOSC_ON_LEGACY_MODE_ADDR WF_TOP_CFG_ON_LPOSC_CTL_2_ADDR
#define WF_TOP_CFG_ON_LPOSC_CTL_2_CR_WFSYS_LPOSC_ON_LEGACY_MODE_MASK 0x00000004                // CR_WFSYS_LPOSC_ON_LEGACY_MODE[2]
#define WF_TOP_CFG_ON_LPOSC_CTL_2_CR_WFSYS_LPOSC_ON_LEGACY_MODE_SHFT 2
#define WF_TOP_CFG_ON_LPOSC_CTL_2_CR_MASK_WF_VON_SLPCTL_LPOSC_SW_RDY_ADDR WF_TOP_CFG_ON_LPOSC_CTL_2_ADDR
#define WF_TOP_CFG_ON_LPOSC_CTL_2_CR_MASK_WF_VON_SLPCTL_LPOSC_SW_RDY_MASK 0x00000002                // CR_MASK_WF_VON_SLPCTL_LPOSC_SW_RDY[1]
#define WF_TOP_CFG_ON_LPOSC_CTL_2_CR_MASK_WF_VON_SLPCTL_LPOSC_SW_RDY_SHFT 1
#define WF_TOP_CFG_ON_LPOSC_CTL_2_CR_MASK_WF_VON_SLPCTL_OSC_SW_RDY_ADDR WF_TOP_CFG_ON_LPOSC_CTL_2_ADDR
#define WF_TOP_CFG_ON_LPOSC_CTL_2_CR_MASK_WF_VON_SLPCTL_OSC_SW_RDY_MASK 0x00000001                // CR_MASK_WF_VON_SLPCTL_OSC_SW_RDY[0]
#define WF_TOP_CFG_ON_LPOSC_CTL_2_CR_MASK_WF_VON_SLPCTL_OSC_SW_RDY_SHFT 0

/* =====================================================================================

  ---AOC_MEM_CTL (0x81021000 + 0x310)---

    CR_AOC_MEM_CTL_DELAY_TIME[3..0] - (RW) AOCISO & AOCLHENB need to delay > 35ns
    CR_AOC_MANUAL_SEL[4]         - (RW) 0: HW control
                                     1: SW control
    CR_AOCLHENB_MANUAL[5]        - (RW) AOCLHENB sw control
    CR_AOCISO_MANUAL[6]          - (RW) AOCISO sw control
    RESERVED7[31..7]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_AOC_MEM_CTL_CR_AOCISO_MANUAL_ADDR        WF_TOP_CFG_ON_AOC_MEM_CTL_ADDR
#define WF_TOP_CFG_ON_AOC_MEM_CTL_CR_AOCISO_MANUAL_MASK        0x00000040                // CR_AOCISO_MANUAL[6]
#define WF_TOP_CFG_ON_AOC_MEM_CTL_CR_AOCISO_MANUAL_SHFT        6
#define WF_TOP_CFG_ON_AOC_MEM_CTL_CR_AOCLHENB_MANUAL_ADDR      WF_TOP_CFG_ON_AOC_MEM_CTL_ADDR
#define WF_TOP_CFG_ON_AOC_MEM_CTL_CR_AOCLHENB_MANUAL_MASK      0x00000020                // CR_AOCLHENB_MANUAL[5]
#define WF_TOP_CFG_ON_AOC_MEM_CTL_CR_AOCLHENB_MANUAL_SHFT      5
#define WF_TOP_CFG_ON_AOC_MEM_CTL_CR_AOC_MANUAL_SEL_ADDR       WF_TOP_CFG_ON_AOC_MEM_CTL_ADDR
#define WF_TOP_CFG_ON_AOC_MEM_CTL_CR_AOC_MANUAL_SEL_MASK       0x00000010                // CR_AOC_MANUAL_SEL[4]
#define WF_TOP_CFG_ON_AOC_MEM_CTL_CR_AOC_MANUAL_SEL_SHFT       4
#define WF_TOP_CFG_ON_AOC_MEM_CTL_CR_AOC_MEM_CTL_DELAY_TIME_ADDR WF_TOP_CFG_ON_AOC_MEM_CTL_ADDR
#define WF_TOP_CFG_ON_AOC_MEM_CTL_CR_AOC_MEM_CTL_DELAY_TIME_MASK 0x0000000F                // CR_AOC_MEM_CTL_DELAY_TIME[3..0]
#define WF_TOP_CFG_ON_AOC_MEM_CTL_CR_AOC_MEM_CTL_DELAY_TIME_SHFT 0

/* =====================================================================================

  ---CMDBT_CTL (0x81021000 + 0x400)---

    TOP_SLEEP_IND_END[4..0]      - (RW) sleep indicator end region of top_cmdbt_op
                                     3'h0: BN0 WiFi restore (bn0_wlanon to on)
                                     3'h2: BN0 WiFi restore (bn0_sleep to wlanon)
                                     3'h5: UMAC restore
                                     3'h7: TOP restore
                                     4'h8: BN1 WiFi restore (bn1_wlanon to on)
                                     4'ha: BN1 WiFi restore (bn1_sleep to wlanon)
                                     Others: not allowed to set
    TOP_SLEEP_IND_START[9..5]    - (RW) sleep indicator start region of top_cmdbt_op
                                     4'h1: BN0 WiFi backup (bn0_wlanon to sleep)
                                     4'h3: BN0 WiFi backup (bn0_initial to sleep)
                                     4'h4: UMAC backup
                                     4'h6: TOP backup
                                     4'h9: BN1 WiFi backup (bn1_wlanon to sleep)
                                     4'hb: BN1 WiFi backup (bn1_initial to sleep)
                                     Others: not allowed to set
    RESERVED10[23..10]           - (RO) Reserved bits
    TOPUMAC_RS_ING_EN[24]        - (RW) guarantee TOP restore and UMAC restore back-to-back enable
                                     1'b0: disable
                                     1'b1: enable
    RESERVED25[31..25]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_CMDBT_CTL_TOPUMAC_RS_ING_EN_ADDR         WF_TOP_CFG_ON_CMDBT_CTL_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_TOPUMAC_RS_ING_EN_MASK         0x01000000                // TOPUMAC_RS_ING_EN[24]
#define WF_TOP_CFG_ON_CMDBT_CTL_TOPUMAC_RS_ING_EN_SHFT         24
#define WF_TOP_CFG_ON_CMDBT_CTL_TOP_SLEEP_IND_START_ADDR       WF_TOP_CFG_ON_CMDBT_CTL_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_TOP_SLEEP_IND_START_MASK       0x000003E0                // TOP_SLEEP_IND_START[9..5]
#define WF_TOP_CFG_ON_CMDBT_CTL_TOP_SLEEP_IND_START_SHFT       5
#define WF_TOP_CFG_ON_CMDBT_CTL_TOP_SLEEP_IND_END_ADDR         WF_TOP_CFG_ON_CMDBT_CTL_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_TOP_SLEEP_IND_END_MASK         0x0000001F                // TOP_SLEEP_IND_END[4..0]
#define WF_TOP_CFG_ON_CMDBT_CTL_TOP_SLEEP_IND_END_SHFT         0

/* =====================================================================================

  ---CMDBT_CTL_ON (0x81021000 + 0x404)---

    CR_ON_CMDBT_EXT_MEM_ADDR_PREFIX_0_PRE[12..0] - (RW) reserved for icap
    CR_ON_CMDBT_EXT_MEM_ADDR_PREFIX_1_PRE[25..13] - (RW) reserved for icap
    CR_CMDBT_SEL_ON_ADDR_PREFIX[26] - (RW) reserved for icap
    RESERVED27[31..27]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_CMDBT_CTL_ON_CR_CMDBT_SEL_ON_ADDR_PREFIX_ADDR WF_TOP_CFG_ON_CMDBT_CTL_ON_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_ON_CR_CMDBT_SEL_ON_ADDR_PREFIX_MASK 0x04000000                // CR_CMDBT_SEL_ON_ADDR_PREFIX[26]
#define WF_TOP_CFG_ON_CMDBT_CTL_ON_CR_CMDBT_SEL_ON_ADDR_PREFIX_SHFT 26
#define WF_TOP_CFG_ON_CMDBT_CTL_ON_CR_ON_CMDBT_EXT_MEM_ADDR_PREFIX_1_PRE_ADDR WF_TOP_CFG_ON_CMDBT_CTL_ON_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_ON_CR_ON_CMDBT_EXT_MEM_ADDR_PREFIX_1_PRE_MASK 0x03FFE000                // CR_ON_CMDBT_EXT_MEM_ADDR_PREFIX_1_PRE[25..13]
#define WF_TOP_CFG_ON_CMDBT_CTL_ON_CR_ON_CMDBT_EXT_MEM_ADDR_PREFIX_1_PRE_SHFT 13
#define WF_TOP_CFG_ON_CMDBT_CTL_ON_CR_ON_CMDBT_EXT_MEM_ADDR_PREFIX_0_PRE_ADDR WF_TOP_CFG_ON_CMDBT_CTL_ON_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_ON_CR_ON_CMDBT_EXT_MEM_ADDR_PREFIX_0_PRE_MASK 0x00001FFF                // CR_ON_CMDBT_EXT_MEM_ADDR_PREFIX_0_PRE[12..0]
#define WF_TOP_CFG_ON_CMDBT_CTL_ON_CR_ON_CMDBT_EXT_MEM_ADDR_PREFIX_0_PRE_SHFT 0

/* =====================================================================================

  ---CMDBT_CTL_1 (0x81021000 + 0x408)---

    CR_EN_WF_UMAC_PWR_ON_SRC_0[0] - (RW) For DTIM v3.1, wake up wfsys off mtcmos control
    CR_EN_WF_UMAC_PWR_ON_SRC_1[1] - (RW) For DTIM v3.1, wake up wfsys off mtcmos control
    CR_EN_WF_UMAC_PWR_ON_SRC_2[2] - (RW) For DTIM v3.1, wake up wfsys off mtcmos control
    CR_EN_WF_UMAC_PWR_ON_SRC_3[3] - (RW) For DTIM v3.1, wake up wfsys off mtcmos control
    CR_EN_WF_UMAC_PWR_ON_SRC_4[4] - (RW) For DTIM v3.1, wake up wfsys off mtcmos control
    CR_EN_WF_UMAC_PWR_ON_SRC_5[5] - (RW) For DTIM v3.1, wake up wfsys off mtcmos control
    CR_EN_WF_UMAC_PWR_ON_SRC_6[6] - (RW) For DTIM v3.1, wake up wfsys off mtcmos control
    CR_EN_WF_UMAC_PWR_ON_SRC_7[7] - (RW) For DTIM v3.1, wake up wfsys off mtcmos control
    CR_EN_WF_UMAC_PWR_ON_MANUAL[8] - (RW) For DTIM v3.1, wake up wfsys off mtcmos control
    CR_MASK_WF_UMAC_PWR_ON_ALL[9] - (RW) For DTIM v3.1, wake up wfsys off mtcmos control
    CR_EN_WF_UMAC_PWR_ON_SRC_8[10] - (RW) For DTIM v3.1, wake up wfsys off mtcmos control
    CR_EN_WF_UMAC_PWR_ON_SRC_9[11] - (RW) For DTIM v3.1, wake up wfsys off mtcmos control
    CR_EN_WF_UMAC_PWR_ON_SRC_10[12] - (RW) For DTIM v3.1, wake up wfsys off mtcmos control
    CR_EN_WF_UMAC_PWR_ON_SRC_11[13] - (RW) For DTIM v3.1, wake up wfsys off mtcmos control
    RESERVED14[16..14]           - (RO) Reserved bits
    CR_CMDBT_FINISH_PU_CYCLE_CNT[21..17] - (RW)  xxx 
    RESERVED22[31..22]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_CMDBT_FINISH_PU_CYCLE_CNT_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_CMDBT_FINISH_PU_CYCLE_CNT_MASK 0x003E0000                // CR_CMDBT_FINISH_PU_CYCLE_CNT[21..17]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_CMDBT_FINISH_PU_CYCLE_CNT_SHFT 17
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_11_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_11_MASK 0x00002000                // CR_EN_WF_UMAC_PWR_ON_SRC_11[13]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_11_SHFT 13
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_10_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_10_MASK 0x00001000                // CR_EN_WF_UMAC_PWR_ON_SRC_10[12]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_10_SHFT 12
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_9_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_9_MASK 0x00000800                // CR_EN_WF_UMAC_PWR_ON_SRC_9[11]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_9_SHFT 11
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_8_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_8_MASK 0x00000400                // CR_EN_WF_UMAC_PWR_ON_SRC_8[10]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_8_SHFT 10
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_MASK_WF_UMAC_PWR_ON_ALL_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_MASK_WF_UMAC_PWR_ON_ALL_MASK 0x00000200                // CR_MASK_WF_UMAC_PWR_ON_ALL[9]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_MASK_WF_UMAC_PWR_ON_ALL_SHFT 9
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_MANUAL_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_MANUAL_MASK 0x00000100                // CR_EN_WF_UMAC_PWR_ON_MANUAL[8]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_MANUAL_SHFT 8
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_7_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_7_MASK 0x00000080                // CR_EN_WF_UMAC_PWR_ON_SRC_7[7]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_7_SHFT 7
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_6_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_6_MASK 0x00000040                // CR_EN_WF_UMAC_PWR_ON_SRC_6[6]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_6_SHFT 6
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_5_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_5_MASK 0x00000020                // CR_EN_WF_UMAC_PWR_ON_SRC_5[5]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_5_SHFT 5
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_4_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_4_MASK 0x00000010                // CR_EN_WF_UMAC_PWR_ON_SRC_4[4]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_4_SHFT 4
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_3_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_3_MASK 0x00000008                // CR_EN_WF_UMAC_PWR_ON_SRC_3[3]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_3_SHFT 3
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_2_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_2_MASK 0x00000004                // CR_EN_WF_UMAC_PWR_ON_SRC_2[2]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_2_SHFT 2
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_1_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_1_MASK 0x00000002                // CR_EN_WF_UMAC_PWR_ON_SRC_1[1]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_1_SHFT 1
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_0_ADDR WF_TOP_CFG_ON_CMDBT_CTL_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_0_MASK 0x00000001                // CR_EN_WF_UMAC_PWR_ON_SRC_0[0]
#define WF_TOP_CFG_ON_CMDBT_CTL_1_CR_EN_WF_UMAC_PWR_ON_SRC_0_SHFT 0

/* =====================================================================================

  ---CMDBT_CTL_2 (0x81021000 + 0x410)---

    CR_WF_VON_NEED_BK_MASK[0]    - (RW) 0: non-mask
                                     1: mask
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_CMDBT_CTL_2_CR_WF_VON_NEED_BK_MASK_ADDR  WF_TOP_CFG_ON_CMDBT_CTL_2_ADDR
#define WF_TOP_CFG_ON_CMDBT_CTL_2_CR_WF_VON_NEED_BK_MASK_MASK  0x00000001                // CR_WF_VON_NEED_BK_MASK[0]
#define WF_TOP_CFG_ON_CMDBT_CTL_2_CR_WF_VON_NEED_BK_MASK_SHFT  0

/* =====================================================================================

  ---CMDBT_STATUS (0x81021000 + 0x460)---

    TOP_CMDBT_OP_TOP_UMAC[4..0]  - (RO) monitor of CMDBT "op code" (from wf_top_cfg_on, hclk_ck domain)
                                     5'h00000: bn0_wf_wlanon_to_on (restore)
                                     5'b00001: bn0_wf_wlanon_to_sleep (backup)
                                     5'b00010: bn0_wf_sleep_to_wlanon (restore)
                                     5'b00011: bn0_wf_init_to_sleep (backup)
                                     5'b00100: UMAC backup
                                     5'b00101: UMAC restore
                                     5'b00110: TOP backup
                                     5'b00111: TOP restore
                                     5'h01000: bn1_wf_wlanon_to_on (restore)
                                     5'b01001: bn1_wf_wlanon_to_sleep (backup)
                                     5'b01010: bn1_wf_sleep_to_wlanon (restore)
                                     5'b01011: bn1_wf_init_to_sleep (backup)
                                     5'h01100: bn2_wf_wlanon_to_on (restore)
                                     5'b01101: bn2_wf_wlanon_to_sleep (backup)
                                     5'b01110: bn2_wf_sleep_to_wlanon (restore)
                                     5'b01111: bn2_wf_init_to_sleep (backup)
                                     5'h10000: lit_wf_wlanon_to_on (restore)
                                     5'b10001: lit_wf_wlanon_to_sleep (backup)
                                     5'b10010: lit_wf_sleep_to_wlanon (restore)
                                     5'b10011: lit_wf_init_to_sleep (backup)
    RESERVED5[11..5]             - (RO) Reserved bits
    TOPUMAC_RESTORE_ING[12]      - (RO) top and umac restore indicator
                                     1'h0: not restore period
                                     1'h1: restore period
    TOPUMAC_BACKUP_ING[13]       - (RO) top and umac backup indicator
                                     1'h0: not backup period
                                     1'h1: backup period
    TOPUMAC_RESTORE_DONE[14]     - (RO) top and umac restore done indicator
                                     1'h0: restore is not completed
                                     1'h1: restore is completed
    TOPUMAC_BACKUP_DONE[15]      - (RO) top and umac backup done indicator
                                     1'h0: backup is not completed
                                     1'h1: backup is completed
    WF_TRIG_RS_FLAG_TOP_UMAC[16] - (RO) band0/1 wf mac/phy part's backup/restore record flag when top/umac backup/restore is on-going
                                     1'h0: band0/1 wf mac/phy part's backup/restore is not happened when top/umac backup/restore is on-going
                                     1'h1: band0/1 wf mac/phy part's backup/restore is happened when top/umac backup/restore is on-going
    WF_TRIG_RS_FLAG_LMAC0[17]    - (RO) band0/1 wf mac/phy part's backup/restore record flag when top/umac backup/restore is on-going
                                     1'h0: band0/1 wf mac/phy part's backup/restore is not happened when top/umac backup/restore is on-going
                                     1'h1: band0/1 wf mac/phy part's backup/restore is happened when top/umac backup/restore is on-going
    WF_TRIG_RS_FLAG_PHY0[18]     - (RO) band0/1 wf mac/phy part's backup/restore record flag when top/umac backup/restore is on-going
                                     1'h0: band0/1 wf mac/phy part's backup/restore is not happened when top/umac backup/restore is on-going
                                     1'h1: band0/1 wf mac/phy part's backup/restore is happened when top/umac backup/restore is on-going
    WF_TRIG_RS_FLAG_LMAC1[19]    - (RO) band0/1 wf mac/phy part's backup/restore record flag when top/umac backup/restore is on-going
                                     1'h0: band0/1 wf mac/phy part's backup/restore is not happened when top/umac backup/restore is on-going
                                     1'h1: band0/1 wf mac/phy part's backup/restore is happened when top/umac backup/restore is on-going
    WF_TRIG_RS_FLAG_PHY1[20]     - (RO) band0/1 wf mac/phy part's backup/restore record flag when top/umac backup/restore is on-going
                                     1'h0: band0/1 wf mac/phy part's backup/restore is not happened when top/umac backup/restore is on-going
                                     1'h1: band0/1 wf mac/phy part's backup/restore is happened when top/umac backup/restore is on-going
    WF_TRIG_RS_FLAG_LIT[21]      - (RO) band0/1 wf mac/phy part's backup/restore record flag when top/umac backup/restore is on-going
                                     1'h0: band0/1 wf mac/phy part's backup/restore is not happened when top/umac backup/restore is on-going
                                     1'h1: band0/1 wf mac/phy part's backup/restore is happened when top/umac backup/restore is on-going
    WF_TRIG_RS_FLAG_PHY2[22]     - (RO) band0/1 wf mac/phy part's backup/restore record flag when top/umac backup/restore is on-going
                                     1'h0: band0/1 wf mac/phy part's backup/restore is not happened when top/umac backup/restore is on-going
                                     1'h1: band0/1 wf mac/phy part's backup/restore is happened when top/umac backup/restore is on-going
    WF_TRIG_RS_FLAG_LMAC2[23]    - (RO) band0/1 wf mac/phy part's backup/restore record flag when top/umac backup/restore is on-going
                                     1'h0: band0/1 wf mac/phy part's backup/restore is not happened when top/umac backup/restore is on-going
                                     1'h1: band0/1 wf mac/phy part's backup/restore is happened when top/umac backup/restore is on-going
    WF_TRIG_RS_FLAG_LMACON[24]   - (RO) band0/1 wf mac/phy part's backup/restore record flag when top/umac backup/restore is on-going
                                     1'h0: band0/1 wf mac/phy part's backup/restore is not happened when top/umac backup/restore is on-going
                                     1'h1: band0/1 wf mac/phy part's backup/restore is happened when top/umac backup/restore is on-going
    RESERVED25[31..25]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_LMACON_ADDR WF_TOP_CFG_ON_CMDBT_STATUS_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_LMACON_MASK 0x01000000                // WF_TRIG_RS_FLAG_LMACON[24]
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_LMACON_SHFT 24
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_LMAC2_ADDR  WF_TOP_CFG_ON_CMDBT_STATUS_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_LMAC2_MASK  0x00800000                // WF_TRIG_RS_FLAG_LMAC2[23]
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_LMAC2_SHFT  23
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_PHY2_ADDR   WF_TOP_CFG_ON_CMDBT_STATUS_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_PHY2_MASK   0x00400000                // WF_TRIG_RS_FLAG_PHY2[22]
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_PHY2_SHFT   22
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_LIT_ADDR    WF_TOP_CFG_ON_CMDBT_STATUS_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_LIT_MASK    0x00200000                // WF_TRIG_RS_FLAG_LIT[21]
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_LIT_SHFT    21
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_PHY1_ADDR   WF_TOP_CFG_ON_CMDBT_STATUS_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_PHY1_MASK   0x00100000                // WF_TRIG_RS_FLAG_PHY1[20]
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_PHY1_SHFT   20
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_LMAC1_ADDR  WF_TOP_CFG_ON_CMDBT_STATUS_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_LMAC1_MASK  0x00080000                // WF_TRIG_RS_FLAG_LMAC1[19]
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_LMAC1_SHFT  19
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_PHY0_ADDR   WF_TOP_CFG_ON_CMDBT_STATUS_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_PHY0_MASK   0x00040000                // WF_TRIG_RS_FLAG_PHY0[18]
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_PHY0_SHFT   18
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_LMAC0_ADDR  WF_TOP_CFG_ON_CMDBT_STATUS_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_LMAC0_MASK  0x00020000                // WF_TRIG_RS_FLAG_LMAC0[17]
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_LMAC0_SHFT  17
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_TOP_UMAC_ADDR WF_TOP_CFG_ON_CMDBT_STATUS_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_TOP_UMAC_MASK 0x00010000                // WF_TRIG_RS_FLAG_TOP_UMAC[16]
#define WF_TOP_CFG_ON_CMDBT_STATUS_WF_TRIG_RS_FLAG_TOP_UMAC_SHFT 16
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOPUMAC_BACKUP_DONE_ADDR    WF_TOP_CFG_ON_CMDBT_STATUS_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOPUMAC_BACKUP_DONE_MASK    0x00008000                // TOPUMAC_BACKUP_DONE[15]
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOPUMAC_BACKUP_DONE_SHFT    15
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOPUMAC_RESTORE_DONE_ADDR   WF_TOP_CFG_ON_CMDBT_STATUS_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOPUMAC_RESTORE_DONE_MASK   0x00004000                // TOPUMAC_RESTORE_DONE[14]
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOPUMAC_RESTORE_DONE_SHFT   14
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOPUMAC_BACKUP_ING_ADDR     WF_TOP_CFG_ON_CMDBT_STATUS_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOPUMAC_BACKUP_ING_MASK     0x00002000                // TOPUMAC_BACKUP_ING[13]
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOPUMAC_BACKUP_ING_SHFT     13
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOPUMAC_RESTORE_ING_ADDR    WF_TOP_CFG_ON_CMDBT_STATUS_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOPUMAC_RESTORE_ING_MASK    0x00001000                // TOPUMAC_RESTORE_ING[12]
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOPUMAC_RESTORE_ING_SHFT    12
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOP_CMDBT_OP_TOP_UMAC_ADDR  WF_TOP_CFG_ON_CMDBT_STATUS_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOP_CMDBT_OP_TOP_UMAC_MASK  0x0000001F                // TOP_CMDBT_OP_TOP_UMAC[4..0]
#define WF_TOP_CFG_ON_CMDBT_STATUS_TOP_CMDBT_OP_TOP_UMAC_SHFT  0

/* =====================================================================================

  ---CMDBT_STATUS_1 (0x81021000 + 0x464)---

    RO_WF_VON_BACKUP_DONE[0]     - (RO)  xxx 
    RO_WF_VON_RESTORE_DONE[1]    - (RO)  xxx 
    RO_TOP_CMDBT_OP_VON[6..2]    - (RO) 5'b10100: von_bk
                                     5'b10101: von_rs
    RO_VON_CMDBT_STATE[11..7]    - (RO) 5'b00001: CMDBT_IDLE_STAT
                                     5'b00010: CMDBT_BK_STAT
                                     5'b00100: CMDBT_BK_DONE_STAT
                                     5'b01000: CMDBT_RS_STAT
                                     5'b10000: CMDBT_RS_DONE_STAT
    RO_VON_CMDBT_STATE_NEXT[16..12] - (RO) 5'b00001: CMDBT_IDLE_STAT
                                     5'b00010: CMDBT_BK_STAT
                                     5'b00100: CMDBT_BK_DONE_STAT
                                     5'b01000: CMDBT_RS_STAT
                                     5'b10000: CMDBT_RS_DONE_STAT
    RO_VON_NEED_BK[17]           - (RO) 0: don't need bk
                                     1: need bk
    RESERVED18[31..18]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_CMDBT_STATUS_1_RO_VON_NEED_BK_ADDR       WF_TOP_CFG_ON_CMDBT_STATUS_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_1_RO_VON_NEED_BK_MASK       0x00020000                // RO_VON_NEED_BK[17]
#define WF_TOP_CFG_ON_CMDBT_STATUS_1_RO_VON_NEED_BK_SHFT       17
#define WF_TOP_CFG_ON_CMDBT_STATUS_1_RO_VON_CMDBT_STATE_NEXT_ADDR WF_TOP_CFG_ON_CMDBT_STATUS_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_1_RO_VON_CMDBT_STATE_NEXT_MASK 0x0001F000                // RO_VON_CMDBT_STATE_NEXT[16..12]
#define WF_TOP_CFG_ON_CMDBT_STATUS_1_RO_VON_CMDBT_STATE_NEXT_SHFT 12
#define WF_TOP_CFG_ON_CMDBT_STATUS_1_RO_VON_CMDBT_STATE_ADDR   WF_TOP_CFG_ON_CMDBT_STATUS_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_1_RO_VON_CMDBT_STATE_MASK   0x00000F80                // RO_VON_CMDBT_STATE[11..7]
#define WF_TOP_CFG_ON_CMDBT_STATUS_1_RO_VON_CMDBT_STATE_SHFT   7
#define WF_TOP_CFG_ON_CMDBT_STATUS_1_RO_TOP_CMDBT_OP_VON_ADDR  WF_TOP_CFG_ON_CMDBT_STATUS_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_1_RO_TOP_CMDBT_OP_VON_MASK  0x0000007C                // RO_TOP_CMDBT_OP_VON[6..2]
#define WF_TOP_CFG_ON_CMDBT_STATUS_1_RO_TOP_CMDBT_OP_VON_SHFT  2
#define WF_TOP_CFG_ON_CMDBT_STATUS_1_RO_WF_VON_RESTORE_DONE_ADDR WF_TOP_CFG_ON_CMDBT_STATUS_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_1_RO_WF_VON_RESTORE_DONE_MASK 0x00000002                // RO_WF_VON_RESTORE_DONE[1]
#define WF_TOP_CFG_ON_CMDBT_STATUS_1_RO_WF_VON_RESTORE_DONE_SHFT 1
#define WF_TOP_CFG_ON_CMDBT_STATUS_1_RO_WF_VON_BACKUP_DONE_ADDR WF_TOP_CFG_ON_CMDBT_STATUS_1_ADDR
#define WF_TOP_CFG_ON_CMDBT_STATUS_1_RO_WF_VON_BACKUP_DONE_MASK 0x00000001                // RO_WF_VON_BACKUP_DONE[0]
#define WF_TOP_CFG_ON_CMDBT_STATUS_1_RO_WF_VON_BACKUP_DONE_SHFT 0

/* =====================================================================================

  ---MONFLG_CTL (0x81021000 + 0x500)---

    RESERVED0[28..0]             - (RO) Reserved bits
    WF_MONFLG_BIT_SWAP[29]       - (RW) wfsys monitor flag swap enable
    WF_MONFLG_CTRL_SEL[30]       - (RW) wfsys monitor flag sel
    WF_MONFLG_EN[31]             - (RW) wfsys monitor flag enable

 =====================================================================================*/
#define WF_TOP_CFG_ON_MONFLG_CTL_WF_MONFLG_EN_ADDR             WF_TOP_CFG_ON_MONFLG_CTL_ADDR
#define WF_TOP_CFG_ON_MONFLG_CTL_WF_MONFLG_EN_MASK             0x80000000                // WF_MONFLG_EN[31]
#define WF_TOP_CFG_ON_MONFLG_CTL_WF_MONFLG_EN_SHFT             31
#define WF_TOP_CFG_ON_MONFLG_CTL_WF_MONFLG_CTRL_SEL_ADDR       WF_TOP_CFG_ON_MONFLG_CTL_ADDR
#define WF_TOP_CFG_ON_MONFLG_CTL_WF_MONFLG_CTRL_SEL_MASK       0x40000000                // WF_MONFLG_CTRL_SEL[30]
#define WF_TOP_CFG_ON_MONFLG_CTL_WF_MONFLG_CTRL_SEL_SHFT       30
#define WF_TOP_CFG_ON_MONFLG_CTL_WF_MONFLG_BIT_SWAP_ADDR       WF_TOP_CFG_ON_MONFLG_CTL_ADDR
#define WF_TOP_CFG_ON_MONFLG_CTL_WF_MONFLG_BIT_SWAP_MASK       0x20000000                // WF_MONFLG_BIT_SWAP[29]
#define WF_TOP_CFG_ON_MONFLG_CTL_WF_MONFLG_BIT_SWAP_SHFT       29

/* =====================================================================================

  ---MONFLG_SEL_0 (0x81021000 + 0x504)---

    BIT07TO00[4..0]              - (RW) wfsys monitor flag output[7:0] selection
                                     5'd0: output[7:0] = input0[7:0]
                                     5'd1: output[7:0] = input1[7:0]
                                     . . .
                                     5'd31: output[7:0] = input31[7:0]
    RESERVED5[7..5]              - (RO) Reserved bits
    BIT15TO08[12..8]             - (RW) wfsys monitor flag output[15:8] selection
                                     5'd0: output[15:8] = input0[15:8]
                                     5'd1: output[15:8] = input1[15:8]
                                     . . .
                                     5'd31: output[15:8] = input31[15:8]
    RESERVED13[15..13]           - (RO) Reserved bits
    BIT23TO16[20..16]            - (RW) wfsys monitor flag output[23:16] selection
                                     5'd0: output[23:16] = input0[23:16]
                                     5'd1: output[23:16] = input1[23:16]
                                     . . .
                                     5'd31: output[23:16] = input31[23:16]
    RESERVED21[23..21]           - (RO) Reserved bits
    BIT31TO24[28..24]            - (RW) wfsys monitor flag output[31:24] selection
                                     5'd0: output[31:24] = input0[31:24]
                                     5'd1: output[31:24] = input1[31:24]
                                     . . .
                                     5'd31: output[31:24] = input31[31:24]
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_MONFLG_SEL_0_BIT31TO24_ADDR              WF_TOP_CFG_ON_MONFLG_SEL_0_ADDR
#define WF_TOP_CFG_ON_MONFLG_SEL_0_BIT31TO24_MASK              0x1F000000                // BIT31TO24[28..24]
#define WF_TOP_CFG_ON_MONFLG_SEL_0_BIT31TO24_SHFT              24
#define WF_TOP_CFG_ON_MONFLG_SEL_0_BIT23TO16_ADDR              WF_TOP_CFG_ON_MONFLG_SEL_0_ADDR
#define WF_TOP_CFG_ON_MONFLG_SEL_0_BIT23TO16_MASK              0x001F0000                // BIT23TO16[20..16]
#define WF_TOP_CFG_ON_MONFLG_SEL_0_BIT23TO16_SHFT              16
#define WF_TOP_CFG_ON_MONFLG_SEL_0_BIT15TO08_ADDR              WF_TOP_CFG_ON_MONFLG_SEL_0_ADDR
#define WF_TOP_CFG_ON_MONFLG_SEL_0_BIT15TO08_MASK              0x00001F00                // BIT15TO08[12..8]
#define WF_TOP_CFG_ON_MONFLG_SEL_0_BIT15TO08_SHFT              8
#define WF_TOP_CFG_ON_MONFLG_SEL_0_BIT07TO00_ADDR              WF_TOP_CFG_ON_MONFLG_SEL_0_ADDR
#define WF_TOP_CFG_ON_MONFLG_SEL_0_BIT07TO00_MASK              0x0000001F                // BIT07TO00[4..0]
#define WF_TOP_CFG_ON_MONFLG_SEL_0_BIT07TO00_SHFT              0

/* =====================================================================================

  ---OFF_MONFLG_CTL (0x81021000 + 0x508)---

    WF_OFF_MONFLG_SEL[4..0]      - (RW) wfsys OFF_monitor flag output selection
    RESERVED5[29..5]             - (RO) Reserved bits
    WF_OFF_MONFLG_CTRL_SEL[30]   - (RW) wfsys OFF_monitor flag sel
    WF_OFF_MONFLG_EN[31]         - (RW) wfsys OFF_monitor flag enable

 =====================================================================================*/
#define WF_TOP_CFG_ON_OFF_MONFLG_CTL_WF_OFF_MONFLG_EN_ADDR     WF_TOP_CFG_ON_OFF_MONFLG_CTL_ADDR
#define WF_TOP_CFG_ON_OFF_MONFLG_CTL_WF_OFF_MONFLG_EN_MASK     0x80000000                // WF_OFF_MONFLG_EN[31]
#define WF_TOP_CFG_ON_OFF_MONFLG_CTL_WF_OFF_MONFLG_EN_SHFT     31
#define WF_TOP_CFG_ON_OFF_MONFLG_CTL_WF_OFF_MONFLG_CTRL_SEL_ADDR WF_TOP_CFG_ON_OFF_MONFLG_CTL_ADDR
#define WF_TOP_CFG_ON_OFF_MONFLG_CTL_WF_OFF_MONFLG_CTRL_SEL_MASK 0x40000000                // WF_OFF_MONFLG_CTRL_SEL[30]
#define WF_TOP_CFG_ON_OFF_MONFLG_CTL_WF_OFF_MONFLG_CTRL_SEL_SHFT 30
#define WF_TOP_CFG_ON_OFF_MONFLG_CTL_WF_OFF_MONFLG_SEL_ADDR    WF_TOP_CFG_ON_OFF_MONFLG_CTL_ADDR
#define WF_TOP_CFG_ON_OFF_MONFLG_CTL_WF_OFF_MONFLG_SEL_MASK    0x0000001F                // WF_OFF_MONFLG_SEL[4..0]
#define WF_TOP_CFG_ON_OFF_MONFLG_CTL_WF_OFF_MONFLG_SEL_SHFT    0

/* =====================================================================================

  ---VON_MONFLG_CTL (0x81021000 + 0x50C)---

    WF_VON_MONFLG_SEL[4..0]      - (RW) wfsys VON_monitor flag output selection
    RESERVED5[29..5]             - (RO) Reserved bits
    WF_VON_MONFLG_CTRL_SEL[30]   - (RW) wfsys VON_monitor flag sel
    WF_VON_MONFLG_EN[31]         - (RW) wfsys VON_monitor flag enable

 =====================================================================================*/
#define WF_TOP_CFG_ON_VON_MONFLG_CTL_WF_VON_MONFLG_EN_ADDR     WF_TOP_CFG_ON_VON_MONFLG_CTL_ADDR
#define WF_TOP_CFG_ON_VON_MONFLG_CTL_WF_VON_MONFLG_EN_MASK     0x80000000                // WF_VON_MONFLG_EN[31]
#define WF_TOP_CFG_ON_VON_MONFLG_CTL_WF_VON_MONFLG_EN_SHFT     31
#define WF_TOP_CFG_ON_VON_MONFLG_CTL_WF_VON_MONFLG_CTRL_SEL_ADDR WF_TOP_CFG_ON_VON_MONFLG_CTL_ADDR
#define WF_TOP_CFG_ON_VON_MONFLG_CTL_WF_VON_MONFLG_CTRL_SEL_MASK 0x40000000                // WF_VON_MONFLG_CTRL_SEL[30]
#define WF_TOP_CFG_ON_VON_MONFLG_CTL_WF_VON_MONFLG_CTRL_SEL_SHFT 30
#define WF_TOP_CFG_ON_VON_MONFLG_CTL_WF_VON_MONFLG_SEL_ADDR    WF_TOP_CFG_ON_VON_MONFLG_CTL_ADDR
#define WF_TOP_CFG_ON_VON_MONFLG_CTL_WF_VON_MONFLG_SEL_MASK    0x0000001F                // WF_VON_MONFLG_SEL[4..0]
#define WF_TOP_CFG_ON_VON_MONFLG_CTL_WF_VON_MONFLG_SEL_SHFT    0

/* =====================================================================================

  ---LIT_MONFLG_CTL (0x81021000 + 0x510)---

    WF_LIT_MONFLG_SEL[4..0]      - (RW) wfsys VON_monitor flag output selection
    RESERVED5[29..5]             - (RO) Reserved bits
    WF_LIT_MONFLG_CTRL_SEL[30]   - (RW) wfsys VON_monitor flag sel
    WF_LIT_MONFLG_EN[31]         - (RW) wfsys VON_monitor flag enable

 =====================================================================================*/
#define WF_TOP_CFG_ON_LIT_MONFLG_CTL_WF_LIT_MONFLG_EN_ADDR     WF_TOP_CFG_ON_LIT_MONFLG_CTL_ADDR
#define WF_TOP_CFG_ON_LIT_MONFLG_CTL_WF_LIT_MONFLG_EN_MASK     0x80000000                // WF_LIT_MONFLG_EN[31]
#define WF_TOP_CFG_ON_LIT_MONFLG_CTL_WF_LIT_MONFLG_EN_SHFT     31
#define WF_TOP_CFG_ON_LIT_MONFLG_CTL_WF_LIT_MONFLG_CTRL_SEL_ADDR WF_TOP_CFG_ON_LIT_MONFLG_CTL_ADDR
#define WF_TOP_CFG_ON_LIT_MONFLG_CTL_WF_LIT_MONFLG_CTRL_SEL_MASK 0x40000000                // WF_LIT_MONFLG_CTRL_SEL[30]
#define WF_TOP_CFG_ON_LIT_MONFLG_CTL_WF_LIT_MONFLG_CTRL_SEL_SHFT 30
#define WF_TOP_CFG_ON_LIT_MONFLG_CTL_WF_LIT_MONFLG_SEL_ADDR    WF_TOP_CFG_ON_LIT_MONFLG_CTL_ADDR
#define WF_TOP_CFG_ON_LIT_MONFLG_CTL_WF_LIT_MONFLG_SEL_MASK    0x0000001F                // WF_LIT_MONFLG_SEL[4..0]
#define WF_TOP_CFG_ON_LIT_MONFLG_CTL_WF_LIT_MONFLG_SEL_SHFT    0

/* =====================================================================================

  ---OFF_MCU_MONFLG_CTL (0x81021000 + 0x514)---

    WF_OFF_MCU_MONFLG_SEL[4..0]  - (RW) wfsys OFF_MCU_monitor flag output selection
    RESERVED5[29..5]             - (RO) Reserved bits
    WF_OFF_MCU_MONFLG_CTRL_SEL[30] - (RW) wfsys OFF_MCU_monitor flag sel
    WF_OFF_MCU_MONFLG_EN[31]     - (RW) wfsys OFF_MCU_monitor flag enable

 =====================================================================================*/
#define WF_TOP_CFG_ON_OFF_MCU_MONFLG_CTL_WF_OFF_MCU_MONFLG_EN_ADDR WF_TOP_CFG_ON_OFF_MCU_MONFLG_CTL_ADDR
#define WF_TOP_CFG_ON_OFF_MCU_MONFLG_CTL_WF_OFF_MCU_MONFLG_EN_MASK 0x80000000                // WF_OFF_MCU_MONFLG_EN[31]
#define WF_TOP_CFG_ON_OFF_MCU_MONFLG_CTL_WF_OFF_MCU_MONFLG_EN_SHFT 31
#define WF_TOP_CFG_ON_OFF_MCU_MONFLG_CTL_WF_OFF_MCU_MONFLG_CTRL_SEL_ADDR WF_TOP_CFG_ON_OFF_MCU_MONFLG_CTL_ADDR
#define WF_TOP_CFG_ON_OFF_MCU_MONFLG_CTL_WF_OFF_MCU_MONFLG_CTRL_SEL_MASK 0x40000000                // WF_OFF_MCU_MONFLG_CTRL_SEL[30]
#define WF_TOP_CFG_ON_OFF_MCU_MONFLG_CTL_WF_OFF_MCU_MONFLG_CTRL_SEL_SHFT 30
#define WF_TOP_CFG_ON_OFF_MCU_MONFLG_CTL_WF_OFF_MCU_MONFLG_SEL_ADDR WF_TOP_CFG_ON_OFF_MCU_MONFLG_CTL_ADDR
#define WF_TOP_CFG_ON_OFF_MCU_MONFLG_CTL_WF_OFF_MCU_MONFLG_SEL_MASK 0x0000001F                // WF_OFF_MCU_MONFLG_SEL[4..0]
#define WF_TOP_CFG_ON_OFF_MCU_MONFLG_CTL_WF_OFF_MCU_MONFLG_SEL_SHFT 0

/* =====================================================================================

  ---MONFLG_STATUS (0x81021000 + 0x5f0)---

    WFSYS_MONFLG_OUT[31..0]      - (RO) debug flag signal of wf_top_monflg_on (whole wfsys's debug flag mux out)

 =====================================================================================*/
#define WF_TOP_CFG_ON_MONFLG_STATUS_WFSYS_MONFLG_OUT_ADDR      WF_TOP_CFG_ON_MONFLG_STATUS_ADDR
#define WF_TOP_CFG_ON_MONFLG_STATUS_WFSYS_MONFLG_OUT_MASK      0xFFFFFFFF                // WFSYS_MONFLG_OUT[31..0]
#define WF_TOP_CFG_ON_MONFLG_STATUS_WFSYS_MONFLG_OUT_SHFT      0

/* =====================================================================================

  ---MISC (0x81021000 + 0x600)---

    CONN_INFRA_RDY[0]            - (RO)  xxx 
    DRV_FW_STAT_SYNC[3..1]       - (RW)  xxx 
    BYPASS_WF_PON[4]             - (RW)  xxx 
    BYPASS_WF_FW_DOWNLOAD[5]     - (RW)  xxx 
    BYPASS_WF_CALIBRATION[6]     - (RW)  xxx 
    RESERVED_FOR_WF_BYPASS[7]    - (RW)  xxx 
    WF_PREVENT_SLP_SEL[8]        - (RW)  xxx 
    WF_PREVENT_SLP_SW[9]         - (RW)  xxx 
    MASK_CONN_INFRA_RDY[10]      - (RW) 1'b0: un-mask
                                     1'b1: mask
    RESERVED11[31..11]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_MISC_MASK_CONN_INFRA_RDY_ADDR            WF_TOP_CFG_ON_MISC_ADDR
#define WF_TOP_CFG_ON_MISC_MASK_CONN_INFRA_RDY_MASK            0x00000400                // MASK_CONN_INFRA_RDY[10]
#define WF_TOP_CFG_ON_MISC_MASK_CONN_INFRA_RDY_SHFT            10
#define WF_TOP_CFG_ON_MISC_WF_PREVENT_SLP_SW_ADDR              WF_TOP_CFG_ON_MISC_ADDR
#define WF_TOP_CFG_ON_MISC_WF_PREVENT_SLP_SW_MASK              0x00000200                // WF_PREVENT_SLP_SW[9]
#define WF_TOP_CFG_ON_MISC_WF_PREVENT_SLP_SW_SHFT              9
#define WF_TOP_CFG_ON_MISC_WF_PREVENT_SLP_SEL_ADDR             WF_TOP_CFG_ON_MISC_ADDR
#define WF_TOP_CFG_ON_MISC_WF_PREVENT_SLP_SEL_MASK             0x00000100                // WF_PREVENT_SLP_SEL[8]
#define WF_TOP_CFG_ON_MISC_WF_PREVENT_SLP_SEL_SHFT             8
#define WF_TOP_CFG_ON_MISC_RESERVED_FOR_WF_BYPASS_ADDR         WF_TOP_CFG_ON_MISC_ADDR
#define WF_TOP_CFG_ON_MISC_RESERVED_FOR_WF_BYPASS_MASK         0x00000080                // RESERVED_FOR_WF_BYPASS[7]
#define WF_TOP_CFG_ON_MISC_RESERVED_FOR_WF_BYPASS_SHFT         7
#define WF_TOP_CFG_ON_MISC_BYPASS_WF_CALIBRATION_ADDR          WF_TOP_CFG_ON_MISC_ADDR
#define WF_TOP_CFG_ON_MISC_BYPASS_WF_CALIBRATION_MASK          0x00000040                // BYPASS_WF_CALIBRATION[6]
#define WF_TOP_CFG_ON_MISC_BYPASS_WF_CALIBRATION_SHFT          6
#define WF_TOP_CFG_ON_MISC_BYPASS_WF_FW_DOWNLOAD_ADDR          WF_TOP_CFG_ON_MISC_ADDR
#define WF_TOP_CFG_ON_MISC_BYPASS_WF_FW_DOWNLOAD_MASK          0x00000020                // BYPASS_WF_FW_DOWNLOAD[5]
#define WF_TOP_CFG_ON_MISC_BYPASS_WF_FW_DOWNLOAD_SHFT          5
#define WF_TOP_CFG_ON_MISC_BYPASS_WF_PON_ADDR                  WF_TOP_CFG_ON_MISC_ADDR
#define WF_TOP_CFG_ON_MISC_BYPASS_WF_PON_MASK                  0x00000010                // BYPASS_WF_PON[4]
#define WF_TOP_CFG_ON_MISC_BYPASS_WF_PON_SHFT                  4
#define WF_TOP_CFG_ON_MISC_DRV_FW_STAT_SYNC_ADDR               WF_TOP_CFG_ON_MISC_ADDR
#define WF_TOP_CFG_ON_MISC_DRV_FW_STAT_SYNC_MASK               0x0000000E                // DRV_FW_STAT_SYNC[3..1]
#define WF_TOP_CFG_ON_MISC_DRV_FW_STAT_SYNC_SHFT               1
#define WF_TOP_CFG_ON_MISC_CONN_INFRA_RDY_ADDR                 WF_TOP_CFG_ON_MISC_ADDR
#define WF_TOP_CFG_ON_MISC_CONN_INFRA_RDY_MASK                 0x00000001                // CONN_INFRA_RDY[0]
#define WF_TOP_CFG_ON_MISC_CONN_INFRA_RDY_SHFT                 0

/* =====================================================================================

  ---ROMCODE_INDEX (0x81021000 + 0x604)---

    ROM_CODE_INDEX[31..0]        - (RW) SE who handles WFSYS MCU ROM code could use this CR for ROM code sequence index indicator to complete
                                     1. ROM code debug
                                     2. power-on sequence check (from PC=0 to PC= cos_idle_loop, it's useful for ROM code co-sim stage)
                                     3. other SE's application purposes

 =====================================================================================*/
#define WF_TOP_CFG_ON_ROMCODE_INDEX_ROM_CODE_INDEX_ADDR        WF_TOP_CFG_ON_ROMCODE_INDEX_ADDR
#define WF_TOP_CFG_ON_ROMCODE_INDEX_ROM_CODE_INDEX_MASK        0xFFFFFFFF                // ROM_CODE_INDEX[31..0]
#define WF_TOP_CFG_ON_ROMCODE_INDEX_ROM_CODE_INDEX_SHFT        0

/* =====================================================================================

  ---HOST_CTL (0x81021000 + 0x608)---

    WF2AP_HOST_ON_CFG[15..0]     - (RW)  xxx 
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_HOST_CTL_WF2AP_HOST_ON_CFG_ADDR          WF_TOP_CFG_ON_HOST_CTL_ADDR
#define WF_TOP_CFG_ON_HOST_CTL_WF2AP_HOST_ON_CFG_MASK          0x0000FFFF                // WF2AP_HOST_ON_CFG[15..0]
#define WF_TOP_CFG_ON_HOST_CTL_WF2AP_HOST_ON_CFG_SHFT          0

/* =====================================================================================

  ---DBG_SEL (0x81021000 + 0x610)---

    DBG_SEL[4..0]                - (RW) debug flag select signal of wf_top_cfg_on
    RESERVED5[31..5]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_DBG_SEL_DBG_SEL_ADDR                     WF_TOP_CFG_ON_DBG_SEL_ADDR
#define WF_TOP_CFG_ON_DBG_SEL_DBG_SEL_MASK                     0x0000001F                // DBG_SEL[4..0]
#define WF_TOP_CFG_ON_DBG_SEL_DBG_SEL_SHFT                     0

/* =====================================================================================

  ---DBG_STATUS (0x81021000 + 0x614)---

    WF_TOP_CFG_ON_DBG[31..0]     - (RO) debug flag signal of wf_top_cfg_on (only wf_top_cfg_on's debug flag mux out)

 =====================================================================================*/
#define WF_TOP_CFG_ON_DBG_STATUS_WF_TOP_CFG_ON_DBG_ADDR        WF_TOP_CFG_ON_DBG_STATUS_ADDR
#define WF_TOP_CFG_ON_DBG_STATUS_WF_TOP_CFG_ON_DBG_MASK        0xFFFFFFFF                // WF_TOP_CFG_ON_DBG[31..0]
#define WF_TOP_CFG_ON_DBG_STATUS_WF_TOP_CFG_ON_DBG_SHFT        0

/* =====================================================================================

  ---STRAP_STATUS (0x81021000 + 0x618)---

    OSC_IS_20M[0]                - (RO) OSC is 20MHz strap status (active-high)
    OSC_IS_24M[1]                - (RO) OSC is 24MHz strap status (active-high)
    OSC_IS_25M[2]                - (RO) OSC is 25MHz strap status (active-high)
    OSC_IS_26M[3]                - (RO) OSC is 26MHz strap status (active-high)
    OSC_IS_40M[4]                - (RO) OSC is 40MHz strap status (active-high)
    OSC_IS_52M[5]                - (RO) OSC is 52MHz strap status (active-high)
    RESERVED6[7..6]              - (RO) Reserved bits
    OLT_BLT_MODE[8]              - (RO) OLT BLT mode strap status (active-high)
    RESERVED9[9]                 - (RO) Reserved bits
    WFSYSSTRAP_MODE[10]          - (RO) wfsys system debug mode strap status (active-high)
    RESERVED11[11]               - (RO) Reserved bits
    RBIST_MODE[12]               - (RO) connsys RBIST mode strap status (active-high)
    CONN_SPI2AHB_MODE[13]        - (RO) connsys SPI to AHB mode strap status (active-high)
    CONN_TEST_MODE[14]           - (RO) connsys test mode strap status, which indicates SPI2AHB, RBIST, ATPG mode (active-high)
    CONN_FORCE_PWR_ON_MODE[15]   - (RO) force connsys MTCMOS and memory all on mode strap status (active-high)
    CONN_EXTCK_MODE[16]          - (RO) connsys external clock mode strap status (active-high)
    CONN_BYPASS_ROM_MODE[17]     - (RO) connsys bypass rom code mode strap status (active-high)
    CONN_SPEEDUP_OSC_STABLE_MODE[18] - (RO) connsys speedup OSC stable mode strap status (active-high)
    RESERVED19[31..19]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_SPEEDUP_OSC_STABLE_MODE_ADDR WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_SPEEDUP_OSC_STABLE_MODE_MASK 0x00040000                // CONN_SPEEDUP_OSC_STABLE_MODE[18]
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_SPEEDUP_OSC_STABLE_MODE_SHFT 18
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_BYPASS_ROM_MODE_ADDR   WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_BYPASS_ROM_MODE_MASK   0x00020000                // CONN_BYPASS_ROM_MODE[17]
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_BYPASS_ROM_MODE_SHFT   17
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_EXTCK_MODE_ADDR        WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_EXTCK_MODE_MASK        0x00010000                // CONN_EXTCK_MODE[16]
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_EXTCK_MODE_SHFT        16
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_FORCE_PWR_ON_MODE_ADDR WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_FORCE_PWR_ON_MODE_MASK 0x00008000                // CONN_FORCE_PWR_ON_MODE[15]
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_FORCE_PWR_ON_MODE_SHFT 15
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_TEST_MODE_ADDR         WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_TEST_MODE_MASK         0x00004000                // CONN_TEST_MODE[14]
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_TEST_MODE_SHFT         14
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_SPI2AHB_MODE_ADDR      WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_SPI2AHB_MODE_MASK      0x00002000                // CONN_SPI2AHB_MODE[13]
#define WF_TOP_CFG_ON_STRAP_STATUS_CONN_SPI2AHB_MODE_SHFT      13
#define WF_TOP_CFG_ON_STRAP_STATUS_RBIST_MODE_ADDR             WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_RBIST_MODE_MASK             0x00001000                // RBIST_MODE[12]
#define WF_TOP_CFG_ON_STRAP_STATUS_RBIST_MODE_SHFT             12
#define WF_TOP_CFG_ON_STRAP_STATUS_WFSYSSTRAP_MODE_ADDR        WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_WFSYSSTRAP_MODE_MASK        0x00000400                // WFSYSSTRAP_MODE[10]
#define WF_TOP_CFG_ON_STRAP_STATUS_WFSYSSTRAP_MODE_SHFT        10
#define WF_TOP_CFG_ON_STRAP_STATUS_OLT_BLT_MODE_ADDR           WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_OLT_BLT_MODE_MASK           0x00000100                // OLT_BLT_MODE[8]
#define WF_TOP_CFG_ON_STRAP_STATUS_OLT_BLT_MODE_SHFT           8
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_52M_ADDR             WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_52M_MASK             0x00000020                // OSC_IS_52M[5]
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_52M_SHFT             5
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_40M_ADDR             WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_40M_MASK             0x00000010                // OSC_IS_40M[4]
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_40M_SHFT             4
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_26M_ADDR             WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_26M_MASK             0x00000008                // OSC_IS_26M[3]
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_26M_SHFT             3
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_25M_ADDR             WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_25M_MASK             0x00000004                // OSC_IS_25M[2]
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_25M_SHFT             2
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_24M_ADDR             WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_24M_MASK             0x00000002                // OSC_IS_24M[1]
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_24M_SHFT             1
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_20M_ADDR             WF_TOP_CFG_ON_STRAP_STATUS_ADDR
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_20M_MASK             0x00000001                // OSC_IS_20M[0]
#define WF_TOP_CFG_ON_STRAP_STATUS_OSC_IS_20M_SHFT             0

/* =====================================================================================

  ---CLK_STATUS (0x81021000 + 0x61C)---

    HCLK_SWITCH_RDY[3..0]        - (RO) bus clock switch indicator
                                     4'h0: bus clock is switching from one clock to anoter clock
                                     4'h1: bus clock is selected to osc clock
                                     4'h2:  bus clock is selected to 32KHz clock
                                     4'h4:  bus clock is selected to wpll clock
                                     4'h8:  bus clock is selected to RBIST clock
    RESERVED4[7..4]              - (RO) Reserved bits
    SLPCTL_SWITCH_RDY[9..8]      - (RO)  xxx 
    RESERVED10[15..10]           - (RO) Reserved bits
    OSC_RDY_OUT[16]              - (RO) osc ready
                                     1'h0: not ready
                                     1'h1: ready
    WPLL_RDY[17]                 - (RO) wpll ready
                                     1'h0: not ready
                                     1'h1: ready
    WFSYS_VCORE_RDY[18]          - (RO) vcore ready
                                     1'h0: not ready
                                     1'h1: ready
    WFSYS_OSC_ON[19]             - (RO) wfsys osc enable request
                                     1'h0: not request osc clock
                                     1'h1: request osc clock
    WFSYS_OSC_ON_ACK[20]         - (RO) wfsys osc enable request acknowledgement
                                     1'h0: not acknowledgement
                                     1'h1: acknowledgement
    BUS_CLK_EN[21]               - (RO) bus clock enable
                                     1'h0: disable
                                     1'h1: enable
    CPU_CLK_EN[22]               - (RO) cpu clock enable
                                     1'h0: disable
                                     1'h1: enable
    ULM_CLK_EN[23]               - (RO) ulm clock enable
                                     1'h0: disable
                                     1'h1: enable
    WFSYS_OSC_ON_LEGACY[24]      - (RO) wfsys osc enable request
                                     1'h0: not request osc clock
                                     1'h1: request osc clock
    RESERVED25[31..25]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_CLK_STATUS_WFSYS_OSC_ON_LEGACY_ADDR      WF_TOP_CFG_ON_CLK_STATUS_ADDR
#define WF_TOP_CFG_ON_CLK_STATUS_WFSYS_OSC_ON_LEGACY_MASK      0x01000000                // WFSYS_OSC_ON_LEGACY[24]
#define WF_TOP_CFG_ON_CLK_STATUS_WFSYS_OSC_ON_LEGACY_SHFT      24
#define WF_TOP_CFG_ON_CLK_STATUS_ULM_CLK_EN_ADDR               WF_TOP_CFG_ON_CLK_STATUS_ADDR
#define WF_TOP_CFG_ON_CLK_STATUS_ULM_CLK_EN_MASK               0x00800000                // ULM_CLK_EN[23]
#define WF_TOP_CFG_ON_CLK_STATUS_ULM_CLK_EN_SHFT               23
#define WF_TOP_CFG_ON_CLK_STATUS_CPU_CLK_EN_ADDR               WF_TOP_CFG_ON_CLK_STATUS_ADDR
#define WF_TOP_CFG_ON_CLK_STATUS_CPU_CLK_EN_MASK               0x00400000                // CPU_CLK_EN[22]
#define WF_TOP_CFG_ON_CLK_STATUS_CPU_CLK_EN_SHFT               22
#define WF_TOP_CFG_ON_CLK_STATUS_BUS_CLK_EN_ADDR               WF_TOP_CFG_ON_CLK_STATUS_ADDR
#define WF_TOP_CFG_ON_CLK_STATUS_BUS_CLK_EN_MASK               0x00200000                // BUS_CLK_EN[21]
#define WF_TOP_CFG_ON_CLK_STATUS_BUS_CLK_EN_SHFT               21
#define WF_TOP_CFG_ON_CLK_STATUS_WFSYS_OSC_ON_ACK_ADDR         WF_TOP_CFG_ON_CLK_STATUS_ADDR
#define WF_TOP_CFG_ON_CLK_STATUS_WFSYS_OSC_ON_ACK_MASK         0x00100000                // WFSYS_OSC_ON_ACK[20]
#define WF_TOP_CFG_ON_CLK_STATUS_WFSYS_OSC_ON_ACK_SHFT         20
#define WF_TOP_CFG_ON_CLK_STATUS_WFSYS_OSC_ON_ADDR             WF_TOP_CFG_ON_CLK_STATUS_ADDR
#define WF_TOP_CFG_ON_CLK_STATUS_WFSYS_OSC_ON_MASK             0x00080000                // WFSYS_OSC_ON[19]
#define WF_TOP_CFG_ON_CLK_STATUS_WFSYS_OSC_ON_SHFT             19
#define WF_TOP_CFG_ON_CLK_STATUS_WFSYS_VCORE_RDY_ADDR          WF_TOP_CFG_ON_CLK_STATUS_ADDR
#define WF_TOP_CFG_ON_CLK_STATUS_WFSYS_VCORE_RDY_MASK          0x00040000                // WFSYS_VCORE_RDY[18]
#define WF_TOP_CFG_ON_CLK_STATUS_WFSYS_VCORE_RDY_SHFT          18
#define WF_TOP_CFG_ON_CLK_STATUS_WPLL_RDY_ADDR                 WF_TOP_CFG_ON_CLK_STATUS_ADDR
#define WF_TOP_CFG_ON_CLK_STATUS_WPLL_RDY_MASK                 0x00020000                // WPLL_RDY[17]
#define WF_TOP_CFG_ON_CLK_STATUS_WPLL_RDY_SHFT                 17
#define WF_TOP_CFG_ON_CLK_STATUS_OSC_RDY_OUT_ADDR              WF_TOP_CFG_ON_CLK_STATUS_ADDR
#define WF_TOP_CFG_ON_CLK_STATUS_OSC_RDY_OUT_MASK              0x00010000                // OSC_RDY_OUT[16]
#define WF_TOP_CFG_ON_CLK_STATUS_OSC_RDY_OUT_SHFT              16
#define WF_TOP_CFG_ON_CLK_STATUS_SLPCTL_SWITCH_RDY_ADDR        WF_TOP_CFG_ON_CLK_STATUS_ADDR
#define WF_TOP_CFG_ON_CLK_STATUS_SLPCTL_SWITCH_RDY_MASK        0x00000300                // SLPCTL_SWITCH_RDY[9..8]
#define WF_TOP_CFG_ON_CLK_STATUS_SLPCTL_SWITCH_RDY_SHFT        8
#define WF_TOP_CFG_ON_CLK_STATUS_HCLK_SWITCH_RDY_ADDR          WF_TOP_CFG_ON_CLK_STATUS_ADDR
#define WF_TOP_CFG_ON_CLK_STATUS_HCLK_SWITCH_RDY_MASK          0x0000000F                // HCLK_SWITCH_RDY[3..0]
#define WF_TOP_CFG_ON_CLK_STATUS_HCLK_SWITCH_RDY_SHFT          0

/* =====================================================================================

  ---TOP_DSLEEP_STATUS (0x81021000 + 0x630)---

    RO_WF_TOP_DSLEEP_INDICATOR[7..0] - (RO) other: top entered dsleep times
                                     0: top has not entered dsleep
    CR_WF_TOP_DSLEEP_INDICATOR_CLEAR[8] - (RW) 1: clear bit
    RESERVED9[31..9]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_TOP_DSLEEP_STATUS_CR_WF_TOP_DSLEEP_INDICATOR_CLEAR_ADDR WF_TOP_CFG_ON_TOP_DSLEEP_STATUS_ADDR
#define WF_TOP_CFG_ON_TOP_DSLEEP_STATUS_CR_WF_TOP_DSLEEP_INDICATOR_CLEAR_MASK 0x00000100                // CR_WF_TOP_DSLEEP_INDICATOR_CLEAR[8]
#define WF_TOP_CFG_ON_TOP_DSLEEP_STATUS_CR_WF_TOP_DSLEEP_INDICATOR_CLEAR_SHFT 8
#define WF_TOP_CFG_ON_TOP_DSLEEP_STATUS_RO_WF_TOP_DSLEEP_INDICATOR_ADDR WF_TOP_CFG_ON_TOP_DSLEEP_STATUS_ADDR
#define WF_TOP_CFG_ON_TOP_DSLEEP_STATUS_RO_WF_TOP_DSLEEP_INDICATOR_MASK 0x000000FF                // RO_WF_TOP_DSLEEP_INDICATOR[7..0]
#define WF_TOP_CFG_ON_TOP_DSLEEP_STATUS_RO_WF_TOP_DSLEEP_INDICATOR_SHFT 0

/* =====================================================================================

  ---TOP_NSLEEP_STATUS (0x81021000 + 0x634)---

    RO_WF_TOP_NSLEEP_INDICATOR[7..0] - (RO) other: top entered nsleep times
                                     0: top has not entered nsleep
    CR_WF_TOP_NSLEEP_INDICATOR_CLEAR[8] - (RW) 1: clear bit
    RESERVED9[31..9]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_TOP_NSLEEP_STATUS_CR_WF_TOP_NSLEEP_INDICATOR_CLEAR_ADDR WF_TOP_CFG_ON_TOP_NSLEEP_STATUS_ADDR
#define WF_TOP_CFG_ON_TOP_NSLEEP_STATUS_CR_WF_TOP_NSLEEP_INDICATOR_CLEAR_MASK 0x00000100                // CR_WF_TOP_NSLEEP_INDICATOR_CLEAR[8]
#define WF_TOP_CFG_ON_TOP_NSLEEP_STATUS_CR_WF_TOP_NSLEEP_INDICATOR_CLEAR_SHFT 8
#define WF_TOP_CFG_ON_TOP_NSLEEP_STATUS_RO_WF_TOP_NSLEEP_INDICATOR_ADDR WF_TOP_CFG_ON_TOP_NSLEEP_STATUS_ADDR
#define WF_TOP_CFG_ON_TOP_NSLEEP_STATUS_RO_WF_TOP_NSLEEP_INDICATOR_MASK 0x000000FF                // RO_WF_TOP_NSLEEP_INDICATOR[7..0]
#define WF_TOP_CFG_ON_TOP_NSLEEP_STATUS_RO_WF_TOP_NSLEEP_INDICATOR_SHFT 0

/* =====================================================================================

  ---BUS_PREADY_STATUS (0x81021000 + 0x670)---

    RO_WF_TOP_MISC_ON__PREADY_BUS[31..0] - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_BUS_PREADY_STATUS_RO_WF_TOP_MISC_ON__PREADY_BUS_ADDR WF_TOP_CFG_ON_BUS_PREADY_STATUS_ADDR
#define WF_TOP_CFG_ON_BUS_PREADY_STATUS_RO_WF_TOP_MISC_ON__PREADY_BUS_MASK 0xFFFFFFFF                // RO_WF_TOP_MISC_ON__PREADY_BUS[31..0]
#define WF_TOP_CFG_ON_BUS_PREADY_STATUS_RO_WF_TOP_MISC_ON__PREADY_BUS_SHFT 0

/* =====================================================================================

  ---RESERVED_0 (0x81021000 + 0x700)---

    RESERVED_0[31..0]            - (RW) NOT allow for S/W usage, it's reserved for ECO purpose or other H/W purpose.

 =====================================================================================*/
#define WF_TOP_CFG_ON_RESERVED_0_RESERVED_0_ADDR               WF_TOP_CFG_ON_RESERVED_0_ADDR
#define WF_TOP_CFG_ON_RESERVED_0_RESERVED_0_MASK               0xFFFFFFFF                // RESERVED_0[31..0]
#define WF_TOP_CFG_ON_RESERVED_0_RESERVED_0_SHFT               0

/* =====================================================================================

  ---RESERVED_1 (0x81021000 + 0x704)---

    RESERVED_1[31..0]            - (RW) NOT allow for S/W usage, it's reserved for ECO purpose or other H/W purpose.

 =====================================================================================*/
#define WF_TOP_CFG_ON_RESERVED_1_RESERVED_1_ADDR               WF_TOP_CFG_ON_RESERVED_1_ADDR
#define WF_TOP_CFG_ON_RESERVED_1_RESERVED_1_MASK               0xFFFFFFFF                // RESERVED_1[31..0]
#define WF_TOP_CFG_ON_RESERVED_1_RESERVED_1_SHFT               0

/* =====================================================================================

  ---RESERVED_2 (0x81021000 + 0x708)---

    RESERVED_2[31..0]            - (RW) NOT allow for S/W usage, it's reserved for ECO purpose or other H/W purpose.

 =====================================================================================*/
#define WF_TOP_CFG_ON_RESERVED_2_RESERVED_2_ADDR               WF_TOP_CFG_ON_RESERVED_2_ADDR
#define WF_TOP_CFG_ON_RESERVED_2_RESERVED_2_MASK               0xFFFFFFFF                // RESERVED_2[31..0]
#define WF_TOP_CFG_ON_RESERVED_2_RESERVED_2_SHFT               0

/* =====================================================================================

  ---RESERVED_3 (0x81021000 + 0x70C)---

    RESERVED_3[31..0]            - (RW) NOT allow for S/W usage, it's reserved for ECO purpose or other H/W purpose.

 =====================================================================================*/
#define WF_TOP_CFG_ON_RESERVED_3_RESERVED_3_ADDR               WF_TOP_CFG_ON_RESERVED_3_ADDR
#define WF_TOP_CFG_ON_RESERVED_3_RESERVED_3_MASK               0xFFFFFFFF                // RESERVED_3[31..0]
#define WF_TOP_CFG_ON_RESERVED_3_RESERVED_3_SHFT               0

/* =====================================================================================

  ---FLAG_0_1ST_POWER_ON_FLAG (0x81021000 + 0x780)---

    CR_1ST_POWER_ON_FLAG[31..0]  - (RW) cr_1st_power_on_flag

 =====================================================================================*/
#define WF_TOP_CFG_ON_FLAG_0_1ST_POWER_ON_FLAG_CR_1ST_POWER_ON_FLAG_ADDR WF_TOP_CFG_ON_FLAG_0_1ST_POWER_ON_FLAG_ADDR
#define WF_TOP_CFG_ON_FLAG_0_1ST_POWER_ON_FLAG_CR_1ST_POWER_ON_FLAG_MASK 0xFFFFFFFF                // CR_1ST_POWER_ON_FLAG[31..0]
#define WF_TOP_CFG_ON_FLAG_0_1ST_POWER_ON_FLAG_CR_1ST_POWER_ON_FLAG_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_TOP_UMAC (0x81021000 + 0x800)---

    CR_CMDBT_CONTROL_ENABLE_TOP_UMAC[19..0] - (RW) CR_CMDBT_CONTROL_ENABLE_TOP_UMAC
    CMDBT_ST_TOP_UMAC[25..20]    - (RO) moniter of CMDBT "status" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
                                     [0]=0: TOP restore done
                                     [0]=1: TOP backup done
                                     [1]=0: UMAC restore done
                                     [1]=1: UMAC backup done
                                     [2]=0: BN0 WiFi restore done
                                     [2]=1: BN0 WiFi backup done
                                     [3]=0: BN1 WiFi restore done
                                     [3]=1: BN1 WiFi backup done
                                     [4]=0: BN2 WiFi restore done
                                     [4]=1: BN2 WiFi backup done
                                     [5]=0: LIT WiFi restore done
                                     [5]=1: LIT WiFi backup done
    CMDBT_BUSY_TOP_UMAC[26]      - (RO) monitor of CMDBT "busy" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
    RESERVED27[31..27]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_CMDBT_BUSY_TOP_UMAC_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_CMDBT_BUSY_TOP_UMAC_MASK 0x04000000                // CMDBT_BUSY_TOP_UMAC[26]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_CMDBT_BUSY_TOP_UMAC_SHFT 26
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_CMDBT_ST_TOP_UMAC_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_CMDBT_ST_TOP_UMAC_MASK 0x03F00000                // CMDBT_ST_TOP_UMAC[25..20]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_CMDBT_ST_TOP_UMAC_SHFT 20
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_CR_CMDBT_CONTROL_ENABLE_TOP_UMAC_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_CR_CMDBT_CONTROL_ENABLE_TOP_UMAC_MASK 0x000FFFFF                // CR_CMDBT_CONTROL_ENABLE_TOP_UMAC[19..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_CR_CMDBT_CONTROL_ENABLE_TOP_UMAC_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_LMAC0 (0x81021000 + 0x804)---

    CR_CMDBT_CONTROL_ENABLE_LMAC0[19..0] - (RW) CR_CMDBT_CONTROL_ENABLE_LMAC0
    CMDBT_ST_LMAC0[25..20]       - (RO) moniter of CMDBT "status" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
                                     [0]=0: TOP restore done
                                     [0]=1: TOP backup done
                                     [1]=0: UMAC restore done
                                     [1]=1: UMAC backup done
                                     [2]=0: BN0 WiFi restore done
                                     [2]=1: BN0 WiFi backup done
                                     [3]=0: BN1 WiFi restore done
                                     [3]=1: BN1 WiFi backup done
                                     [4]=0: BN2 WiFi restore done
                                     [4]=1: BN2 WiFi backup done
                                     [5]=0: LIT WiFi restore done
                                     [5]=1: LIT WiFi backup done
    CMDBT_BUSY_LMAC0[26]         - (RO) monitor of CMDBT "busy" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
    RESERVED27[31..27]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_CMDBT_BUSY_LMAC0_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_CMDBT_BUSY_LMAC0_MASK 0x04000000                // CMDBT_BUSY_LMAC0[26]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_CMDBT_BUSY_LMAC0_SHFT 26
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_CMDBT_ST_LMAC0_ADDR  WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_CMDBT_ST_LMAC0_MASK  0x03F00000                // CMDBT_ST_LMAC0[25..20]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_CMDBT_ST_LMAC0_SHFT  20
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_CR_CMDBT_CONTROL_ENABLE_LMAC0_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_CR_CMDBT_CONTROL_ENABLE_LMAC0_MASK 0x000FFFFF                // CR_CMDBT_CONTROL_ENABLE_LMAC0[19..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_CR_CMDBT_CONTROL_ENABLE_LMAC0_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_PHY0 (0x81021000 + 0x808)---

    CR_CMDBT_CONTROL_ENABLE_PHY0[19..0] - (RW) CR_CMDBT_CONTROL_ENABLE_PHY0
    CMDBT_ST_PHY0[25..20]        - (RO) moniter of CMDBT "status" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
                                     [0]=0: TOP restore done
                                     [0]=1: TOP backup done
                                     [1]=0: UMAC restore done
                                     [1]=1: UMAC backup done
                                     [2]=0: BN0 WiFi restore done
                                     [2]=1: BN0 WiFi backup done
                                     [3]=0: BN1 WiFi restore done
                                     [3]=1: BN1 WiFi backup done
                                     [4]=0: BN2 WiFi restore done
                                     [4]=1: BN2 WiFi backup done
                                     [5]=0: LIT WiFi restore done
                                     [5]=1: LIT WiFi backup done
    CMDBT_BUSY_PHY0[26]          - (RO) monitor of CMDBT "busy" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
    RESERVED27[31..27]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_CMDBT_BUSY_PHY0_ADDR  WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_CMDBT_BUSY_PHY0_MASK  0x04000000                // CMDBT_BUSY_PHY0[26]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_CMDBT_BUSY_PHY0_SHFT  26
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_CMDBT_ST_PHY0_ADDR    WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_CMDBT_ST_PHY0_MASK    0x03F00000                // CMDBT_ST_PHY0[25..20]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_CMDBT_ST_PHY0_SHFT    20
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_CR_CMDBT_CONTROL_ENABLE_PHY0_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_CR_CMDBT_CONTROL_ENABLE_PHY0_MASK 0x000FFFFF                // CR_CMDBT_CONTROL_ENABLE_PHY0[19..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_CR_CMDBT_CONTROL_ENABLE_PHY0_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_LMAC1 (0x81021000 + 0x80C)---

    CR_CMDBT_CONTROL_ENABLE_LMAC1[19..0] - (RW) CR_CMDBT_CONTROL_ENABLE_LMAC1
    CMDBT_ST_LMAC1[25..20]       - (RO) moniter of CMDBT "status" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
                                     [0]=0: TOP restore done
                                     [0]=1: TOP backup done
                                     [1]=0: UMAC restore done
                                     [1]=1: UMAC backup done
                                     [2]=0: BN0 WiFi restore done
                                     [2]=1: BN0 WiFi backup done
                                     [3]=0: BN1 WiFi restore done
                                     [3]=1: BN1 WiFi backup done
                                     [4]=0: BN2 WiFi restore done
                                     [4]=1: BN2 WiFi backup done
                                     [5]=0: LIT WiFi restore done
                                     [5]=1: LIT WiFi backup done
    CMDBT_BUSY_LMAC1[26]         - (RO) monitor of CMDBT "busy" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
    RESERVED27[31..27]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_CMDBT_BUSY_LMAC1_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_CMDBT_BUSY_LMAC1_MASK 0x04000000                // CMDBT_BUSY_LMAC1[26]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_CMDBT_BUSY_LMAC1_SHFT 26
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_CMDBT_ST_LMAC1_ADDR  WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_CMDBT_ST_LMAC1_MASK  0x03F00000                // CMDBT_ST_LMAC1[25..20]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_CMDBT_ST_LMAC1_SHFT  20
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_CR_CMDBT_CONTROL_ENABLE_LMAC1_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_CR_CMDBT_CONTROL_ENABLE_LMAC1_MASK 0x000FFFFF                // CR_CMDBT_CONTROL_ENABLE_LMAC1[19..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_CR_CMDBT_CONTROL_ENABLE_LMAC1_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_PHY1 (0x81021000 + 0x810)---

    CR_CMDBT_CONTROL_ENABLE_PHY1[19..0] - (RW) CR_CMDBT_CONTROL_ENABLE_PHY1
    CMDBT_ST_PHY1[25..20]        - (RO) moniter of CMDBT "status" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
                                     [0]=0: TOP restore done
                                     [0]=1: TOP backup done
                                     [1]=0: UMAC restore done
                                     [1]=1: UMAC backup done
                                     [2]=0: BN0 WiFi restore done
                                     [2]=1: BN0 WiFi backup done
                                     [3]=0: BN1 WiFi restore done
                                     [3]=1: BN1 WiFi backup done
                                     [4]=0: BN2 WiFi restore done
                                     [4]=1: BN2 WiFi backup done
                                     [5]=0: LIT WiFi restore done
                                     [5]=1: LIT WiFi backup done
    CMDBT_BUSY_PHY1[26]          - (RO) monitor of CMDBT "busy" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
    RESERVED27[31..27]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_CMDBT_BUSY_PHY1_ADDR  WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_CMDBT_BUSY_PHY1_MASK  0x04000000                // CMDBT_BUSY_PHY1[26]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_CMDBT_BUSY_PHY1_SHFT  26
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_CMDBT_ST_PHY1_ADDR    WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_CMDBT_ST_PHY1_MASK    0x03F00000                // CMDBT_ST_PHY1[25..20]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_CMDBT_ST_PHY1_SHFT    20
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_CR_CMDBT_CONTROL_ENABLE_PHY1_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_CR_CMDBT_CONTROL_ENABLE_PHY1_MASK 0x000FFFFF                // CR_CMDBT_CONTROL_ENABLE_PHY1[19..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_CR_CMDBT_CONTROL_ENABLE_PHY1_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_LIT (0x81021000 + 0x814)---

    CR_CMDBT_CONTROL_ENABLE_LIT[19..0] - (RW) CR_CMDBT_CONTROL_ENABLE_LIT
    CMDBT_ST_LIT[25..20]         - (RO) moniter of CMDBT "status" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
                                     [0]=0: TOP restore done
                                     [0]=1: TOP backup done
                                     [1]=0: UMAC restore done
                                     [1]=1: UMAC backup done
                                     [2]=0: BN0 WiFi restore done
                                     [2]=1: BN0 WiFi backup done
                                     [3]=0: BN1 WiFi restore done
                                     [3]=1: BN1 WiFi backup done
                                     [4]=0: BN2 WiFi restore done
                                     [4]=1: BN2 WiFi backup done
                                     [5]=0: LIT WiFi restore done
                                     [5]=1: LIT WiFi backup done
    CMDBT_BUSY_LIT[26]           - (RO) monitor of CMDBT "busy" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
    RESERVED27[31..27]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_CMDBT_BUSY_LIT_ADDR    WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_CMDBT_BUSY_LIT_MASK    0x04000000                // CMDBT_BUSY_LIT[26]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_CMDBT_BUSY_LIT_SHFT    26
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_CMDBT_ST_LIT_ADDR      WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_CMDBT_ST_LIT_MASK      0x03F00000                // CMDBT_ST_LIT[25..20]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_CMDBT_ST_LIT_SHFT      20
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_CR_CMDBT_CONTROL_ENABLE_LIT_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_CR_CMDBT_CONTROL_ENABLE_LIT_MASK 0x000FFFFF                // CR_CMDBT_CONTROL_ENABLE_LIT[19..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_CR_CMDBT_CONTROL_ENABLE_LIT_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_PHY2 (0x81021000 + 0x818)---

    CR_CMDBT_CONTROL_ENABLE_PHY2[19..0] - (RW) CR_CMDBT_CONTROL_ENABLE_PHY2
    CMDBT_ST_PHY2[25..20]        - (RO) moniter of CMDBT "status" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
                                     [0]=0: TOP restore done
                                     [0]=1: TOP backup done
                                     [1]=0: UMAC restore done
                                     [1]=1: UMAC backup done
                                     [2]=0: BN0 WiFi restore done
                                     [2]=1: BN0 WiFi backup done
                                     [3]=0: BN1 WiFi restore done
                                     [3]=1: BN1 WiFi backup done
                                     [4]=0: BN2 WiFi restore done
                                     [4]=1: BN2 WiFi backup done
                                     [5]=0: LIT WiFi restore done
                                     [5]=1: LIT WiFi backup done
    CMDBT_BUSY_PHY2[26]          - (RO) monitor of CMDBT "busy" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
    RESERVED27[31..27]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY2_CMDBT_BUSY_PHY2_ADDR  WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY2_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY2_CMDBT_BUSY_PHY2_MASK  0x04000000                // CMDBT_BUSY_PHY2[26]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY2_CMDBT_BUSY_PHY2_SHFT  26
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY2_CMDBT_ST_PHY2_ADDR    WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY2_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY2_CMDBT_ST_PHY2_MASK    0x03F00000                // CMDBT_ST_PHY2[25..20]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY2_CMDBT_ST_PHY2_SHFT    20
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY2_CR_CMDBT_CONTROL_ENABLE_PHY2_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY2_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY2_CR_CMDBT_CONTROL_ENABLE_PHY2_MASK 0x000FFFFF                // CR_CMDBT_CONTROL_ENABLE_PHY2[19..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY2_CR_CMDBT_CONTROL_ENABLE_PHY2_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_LMAC2 (0x81021000 + 0x81C)---

    CR_CMDBT_CONTROL_ENABLE_LMAC2[19..0] - (RW) CR_CMDBT_CONTROL_ENABLE_LMAC2
    CMDBT_ST_LMAC2[25..20]       - (RO) moniter of CMDBT "status" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
                                     [0]=0: TOP restore done
                                     [0]=1: TOP backup done
                                     [1]=0: UMAC restore done
                                     [1]=1: UMAC backup done
                                     [2]=0: BN0 WiFi restore done
                                     [2]=1: BN0 WiFi backup done
                                     [3]=0: BN1 WiFi restore done
                                     [3]=1: BN1 WiFi backup done
                                     [4]=0: BN2 WiFi restore done
                                     [4]=1: BN2 WiFi backup done
                                     [5]=0: LIT WiFi restore done
                                     [5]=1: LIT WiFi backup done
    CMDBT_BUSY_LMAC2[26]         - (RO) monitor of CMDBT "busy" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
    RESERVED27[31..27]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC2_CMDBT_BUSY_LMAC2_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC2_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC2_CMDBT_BUSY_LMAC2_MASK 0x04000000                // CMDBT_BUSY_LMAC2[26]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC2_CMDBT_BUSY_LMAC2_SHFT 26
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC2_CMDBT_ST_LMAC2_ADDR  WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC2_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC2_CMDBT_ST_LMAC2_MASK  0x03F00000                // CMDBT_ST_LMAC2[25..20]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC2_CMDBT_ST_LMAC2_SHFT  20
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC2_CR_CMDBT_CONTROL_ENABLE_LMAC2_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC2_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC2_CR_CMDBT_CONTROL_ENABLE_LMAC2_MASK 0x000FFFFF                // CR_CMDBT_CONTROL_ENABLE_LMAC2[19..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC2_CR_CMDBT_CONTROL_ENABLE_LMAC2_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_LMACON (0x81021000 + 0x820)---

    CR_CMDBT_CONTROL_ENABLE_LMACON[19..0] - (RW) CR_CMDBT_CONTROL_ENABLE_LMACON
    CMDBT_ST_LMACON[25..20]      - (RO) moniter of CMDBT "status" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
                                     [0]=0: TOP restore done
                                     [0]=1: TOP backup done
                                     [1]=0: UMAC restore done
                                     [1]=1: UMAC backup done
                                     [2]=0: BN0 WiFi restore done
                                     [2]=1: BN0 WiFi backup done
                                     [3]=0: BN1 WiFi restore done
                                     [3]=1: BN1 WiFi backup done
                                     [4]=0: BN2 WiFi restore done
                                     [4]=1: BN2 WiFi backup done
                                     [5]=0: LIT WiFi restore done
                                     [5]=1: LIT WiFi backup done
    CMDBT_BUSY_LMACON[26]        - (RO) monitor of CMDBT "busy" (from wf_top_cfg_on_cmdbt_ctl, slpctl_ck domain)
    RESERVED27[31..27]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMACON_CMDBT_BUSY_LMACON_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMACON_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMACON_CMDBT_BUSY_LMACON_MASK 0x04000000                // CMDBT_BUSY_LMACON[26]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMACON_CMDBT_BUSY_LMACON_SHFT 26
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMACON_CMDBT_ST_LMACON_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMACON_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMACON_CMDBT_ST_LMACON_MASK 0x03F00000                // CMDBT_ST_LMACON[25..20]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMACON_CMDBT_ST_LMACON_SHFT 20
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMACON_CR_CMDBT_CONTROL_ENABLE_LMACON_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMACON_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMACON_CR_CMDBT_CONTROL_ENABLE_LMACON_MASK 0x000FFFFF                // CR_CMDBT_CONTROL_ENABLE_LMACON[19..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMACON_CR_CMDBT_CONTROL_ENABLE_LMACON_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_TOP_UMAC_USE_PLL (0x81021000 + 0x850)---

    CR_CMDBT_USE_PLL_TOP_UMAC[15..0] - (RW) switch hclk from OSC to WPLL when CMDBT doing following jobs at hardware control mode
                                     [15] : lit_wf_init_to_sleep
                                     [14] : lit_wf_sleep_to_wlanon
                                     [13] : lit_wf_wlanon_to_sleep
                                     [12] : lit_wf_wlanon_to_on
                                     [11] : bn2_wf_init_to_sleep
                                     [10] : bn2_wf_sleep_to_wlanon
                                     [9] : bn2_wf_wlanon_to_sleep
                                     [8] : bn2_wf_wlanon_to_on
                                     [7] : bn1_wf_init_to_sleep
                                     [6] : bn1_wf_sleep_to_wlanon
                                     [5] : bn1_wf_wlanon_to_sleep
                                     [4] : bn1_wf_wlanon_to_on
                                     [3] : bn0_wf_init_to_sleep
                                     [2] : bn0_wf_sleep_to_wlanon
                                     [1] : bn0_wf_wlanon_to_sleep
                                     [0] : bn0_wf_wlanon_to_on
    CMDBT_USE_PLL_TOP_UMAC[16]   - (RO)  xxx 
    RESERVED17[31..17]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_USE_PLL_CMDBT_USE_PLL_TOP_UMAC_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_USE_PLL_CMDBT_USE_PLL_TOP_UMAC_MASK 0x00010000                // CMDBT_USE_PLL_TOP_UMAC[16]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_USE_PLL_CMDBT_USE_PLL_TOP_UMAC_SHFT 16
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_USE_PLL_CR_CMDBT_USE_PLL_TOP_UMAC_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_USE_PLL_CR_CMDBT_USE_PLL_TOP_UMAC_MASK 0x0000FFFF                // CR_CMDBT_USE_PLL_TOP_UMAC[15..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_TOP_UMAC_USE_PLL_CR_CMDBT_USE_PLL_TOP_UMAC_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_LMAC0_USE_PLL (0x81021000 + 0x854)---

    CR_CMDBT_USE_PLL_LMAC0[15..0] - (RW) switch hclk from OSC to WPLL when CMDBT doing following jobs at hardware control mode
                                     [15] : lit_wf_init_to_sleep
                                     [14] : lit_wf_sleep_to_wlanon
                                     [13] : lit_wf_wlanon_to_sleep
                                     [12] : lit_wf_wlanon_to_on
                                     [11] : bn2_wf_init_to_sleep
                                     [10] : bn2_wf_sleep_to_wlanon
                                     [9] : bn2_wf_wlanon_to_sleep
                                     [8] : bn2_wf_wlanon_to_on
                                     [7] : bn1_wf_init_to_sleep
                                     [6] : bn1_wf_sleep_to_wlanon
                                     [5] : bn1_wf_wlanon_to_sleep
                                     [4] : bn1_wf_wlanon_to_on
                                     [3] : bn0_wf_init_to_sleep
                                     [2] : bn0_wf_sleep_to_wlanon
                                     [1] : bn0_wf_wlanon_to_sleep
                                     [0] : bn0_wf_wlanon_to_on
    CMDBT_USE_PLL_LMAC0[16]      - (RO)  xxx 
    RESERVED17[31..17]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_USE_PLL_CMDBT_USE_PLL_LMAC0_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_USE_PLL_CMDBT_USE_PLL_LMAC0_MASK 0x00010000                // CMDBT_USE_PLL_LMAC0[16]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_USE_PLL_CMDBT_USE_PLL_LMAC0_SHFT 16
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_USE_PLL_CR_CMDBT_USE_PLL_LMAC0_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_USE_PLL_CR_CMDBT_USE_PLL_LMAC0_MASK 0x0000FFFF                // CR_CMDBT_USE_PLL_LMAC0[15..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC0_USE_PLL_CR_CMDBT_USE_PLL_LMAC0_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_PHY0_USE_PLL (0x81021000 + 0x858)---

    CR_CMDBT_USE_PLL_PHY0[15..0] - (RW) switch hclk from OSC to WPLL when CMDBT doing following jobs at hardware control mode
                                     [15] : lit_wf_init_to_sleep
                                     [14] : lit_wf_sleep_to_wlanon
                                     [13] : lit_wf_wlanon_to_sleep
                                     [12] : lit_wf_wlanon_to_on
                                     [11] : bn2_wf_init_to_sleep
                                     [10] : bn2_wf_sleep_to_wlanon
                                     [9] : bn2_wf_wlanon_to_sleep
                                     [8] : bn2_wf_wlanon_to_on
                                     [7] : bn1_wf_init_to_sleep
                                     [6] : bn1_wf_sleep_to_wlanon
                                     [5] : bn1_wf_wlanon_to_sleep
                                     [4] : bn1_wf_wlanon_to_on
                                     [3] : bn0_wf_init_to_sleep
                                     [2] : bn0_wf_sleep_to_wlanon
                                     [1] : bn0_wf_wlanon_to_sleep
                                     [0] : bn0_wf_wlanon_to_on
    CMDBT_USE_PLL_PHY0[16]       - (RO)  xxx 
    RESERVED17[31..17]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_USE_PLL_CMDBT_USE_PLL_PHY0_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_USE_PLL_CMDBT_USE_PLL_PHY0_MASK 0x00010000                // CMDBT_USE_PLL_PHY0[16]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_USE_PLL_CMDBT_USE_PLL_PHY0_SHFT 16
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_USE_PLL_CR_CMDBT_USE_PLL_PHY0_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_USE_PLL_CR_CMDBT_USE_PLL_PHY0_MASK 0x0000FFFF                // CR_CMDBT_USE_PLL_PHY0[15..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY0_USE_PLL_CR_CMDBT_USE_PLL_PHY0_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_LMAC1_USE_PLL (0x81021000 + 0x85C)---

    CR_CMDBT_USE_PLL_LMAC1[15..0] - (RW) switch hclk from OSC to WPLL when CMDBT doing following jobs at hardware control mode
                                     [15] : lit_wf_init_to_sleep
                                     [14] : lit_wf_sleep_to_wlanon
                                     [13] : lit_wf_wlanon_to_sleep
                                     [12] : lit_wf_wlanon_to_on
                                     [11] : bn2_wf_init_to_sleep
                                     [10] : bn2_wf_sleep_to_wlanon
                                     [9] : bn2_wf_wlanon_to_sleep
                                     [8] : bn2_wf_wlanon_to_on
                                     [7] : bn1_wf_init_to_sleep
                                     [6] : bn1_wf_sleep_to_wlanon
                                     [5] : bn1_wf_wlanon_to_sleep
                                     [4] : bn1_wf_wlanon_to_on
                                     [3] : bn0_wf_init_to_sleep
                                     [2] : bn0_wf_sleep_to_wlanon
                                     [1] : bn0_wf_wlanon_to_sleep
                                     [0] : bn0_wf_wlanon_to_on
    CMDBT_USE_PLL_LMAC1[16]      - (RO)  xxx 
    RESERVED17[31..17]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_USE_PLL_CMDBT_USE_PLL_LMAC1_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_USE_PLL_CMDBT_USE_PLL_LMAC1_MASK 0x00010000                // CMDBT_USE_PLL_LMAC1[16]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_USE_PLL_CMDBT_USE_PLL_LMAC1_SHFT 16
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_USE_PLL_CR_CMDBT_USE_PLL_LMAC1_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_USE_PLL_CR_CMDBT_USE_PLL_LMAC1_MASK 0x0000FFFF                // CR_CMDBT_USE_PLL_LMAC1[15..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC1_USE_PLL_CR_CMDBT_USE_PLL_LMAC1_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_PHY1_USE_PLL (0x81021000 + 0x860)---

    CR_CMDBT_USE_PLL_PHY1[15..0] - (RW) switch hclk from OSC to WPLL when CMDBT doing following jobs at hardware control mode
                                     [15] : lit_wf_init_to_sleep
                                     [14] : lit_wf_sleep_to_wlanon
                                     [13] : lit_wf_wlanon_to_sleep
                                     [12] : lit_wf_wlanon_to_on
                                     [11] : bn2_wf_init_to_sleep
                                     [10] : bn2_wf_sleep_to_wlanon
                                     [9] : bn2_wf_wlanon_to_sleep
                                     [8] : bn2_wf_wlanon_to_on
                                     [7] : bn1_wf_init_to_sleep
                                     [6] : bn1_wf_sleep_to_wlanon
                                     [5] : bn1_wf_wlanon_to_sleep
                                     [4] : bn1_wf_wlanon_to_on
                                     [3] : bn0_wf_init_to_sleep
                                     [2] : bn0_wf_sleep_to_wlanon
                                     [1] : bn0_wf_wlanon_to_sleep
                                     [0] : bn0_wf_wlanon_to_on
    CMDBT_USE_PLL_PHY1[16]       - (RO)  xxx 
    RESERVED17[31..17]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_USE_PLL_CMDBT_USE_PLL_PHY1_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_USE_PLL_CMDBT_USE_PLL_PHY1_MASK 0x00010000                // CMDBT_USE_PLL_PHY1[16]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_USE_PLL_CMDBT_USE_PLL_PHY1_SHFT 16
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_USE_PLL_CR_CMDBT_USE_PLL_PHY1_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_USE_PLL_CR_CMDBT_USE_PLL_PHY1_MASK 0x0000FFFF                // CR_CMDBT_USE_PLL_PHY1[15..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY1_USE_PLL_CR_CMDBT_USE_PLL_PHY1_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_LIT_USE_PLL (0x81021000 + 0x864)---

    CR_CMDBT_USE_PLL_LIT[15..0]  - (RW) switch hclk from OSC to WPLL when CMDBT doing following jobs at hardware control mode
                                     [15] : lit_wf_init_to_sleep
                                     [14] : lit_wf_sleep_to_wlanon
                                     [13] : lit_wf_wlanon_to_sleep
                                     [12] : lit_wf_wlanon_to_on
                                     [11] : bn2_wf_init_to_sleep
                                     [10] : bn2_wf_sleep_to_wlanon
                                     [9] : bn2_wf_wlanon_to_sleep
                                     [8] : bn2_wf_wlanon_to_on
                                     [7] : bn1_wf_init_to_sleep
                                     [6] : bn1_wf_sleep_to_wlanon
                                     [5] : bn1_wf_wlanon_to_sleep
                                     [4] : bn1_wf_wlanon_to_on
                                     [3] : bn0_wf_init_to_sleep
                                     [2] : bn0_wf_sleep_to_wlanon
                                     [1] : bn0_wf_wlanon_to_sleep
                                     [0] : bn0_wf_wlanon_to_on
    CMDBT_USE_PLL_LIT[16]        - (RO)  xxx 
    RESERVED17[31..17]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_USE_PLL_CMDBT_USE_PLL_LIT_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_USE_PLL_CMDBT_USE_PLL_LIT_MASK 0x00010000                // CMDBT_USE_PLL_LIT[16]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_USE_PLL_CMDBT_USE_PLL_LIT_SHFT 16
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_USE_PLL_CR_CMDBT_USE_PLL_LIT_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_USE_PLL_CR_CMDBT_USE_PLL_LIT_MASK 0x0000FFFF                // CR_CMDBT_USE_PLL_LIT[15..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LIT_USE_PLL_CR_CMDBT_USE_PLL_LIT_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_PHY2_USE_PLL (0x81021000 + 0x868)---

    CR_CMDBT_USE_PLL_PHY2[15..0] - (RW) switch hclk from OSC to WPLL when CMDBT doing following jobs at hardware control mode
                                     [15] : lit_wf_init_to_sleep
                                     [14] : lit_wf_sleep_to_wlanon
                                     [13] : lit_wf_wlanon_to_sleep
                                     [12] : lit_wf_wlanon_to_on
                                     [11] : bn2_wf_init_to_sleep
                                     [10] : bn2_wf_sleep_to_wlanon
                                     [9] : bn2_wf_wlanon_to_sleep
                                     [8] : bn2_wf_wlanon_to_on
                                     [7] : bn1_wf_init_to_sleep
                                     [6] : bn1_wf_sleep_to_wlanon
                                     [5] : bn1_wf_wlanon_to_sleep
                                     [4] : bn1_wf_wlanon_to_on
                                     [3] : bn0_wf_init_to_sleep
                                     [2] : bn0_wf_sleep_to_wlanon
                                     [1] : bn0_wf_wlanon_to_sleep
                                     [0] : bn0_wf_wlanon_to_on
    CMDBT_USE_PLL_PHY2[16]       - (RO)  xxx 
    RESERVED17[31..17]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY2_USE_PLL_CMDBT_USE_PLL_PHY2_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY2_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY2_USE_PLL_CMDBT_USE_PLL_PHY2_MASK 0x00010000                // CMDBT_USE_PLL_PHY2[16]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY2_USE_PLL_CMDBT_USE_PLL_PHY2_SHFT 16
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY2_USE_PLL_CR_CMDBT_USE_PLL_PHY2_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY2_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY2_USE_PLL_CR_CMDBT_USE_PLL_PHY2_MASK 0x0000FFFF                // CR_CMDBT_USE_PLL_PHY2[15..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_PHY2_USE_PLL_CR_CMDBT_USE_PLL_PHY2_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_LMAC2_USE_PLL (0x81021000 + 0x86C)---

    CR_CMDBT_USE_PLL_LMAC2[15..0] - (RW) switch hclk from OSC to WPLL when CMDBT doing following jobs at hardware control mode
                                     [15] : lit_wf_init_to_sleep
                                     [14] : lit_wf_sleep_to_wlanon
                                     [13] : lit_wf_wlanon_to_sleep
                                     [12] : lit_wf_wlanon_to_on
                                     [11] : bn2_wf_init_to_sleep
                                     [10] : bn2_wf_sleep_to_wlanon
                                     [9] : bn2_wf_wlanon_to_sleep
                                     [8] : bn2_wf_wlanon_to_on
                                     [7] : bn1_wf_init_to_sleep
                                     [6] : bn1_wf_sleep_to_wlanon
                                     [5] : bn1_wf_wlanon_to_sleep
                                     [4] : bn1_wf_wlanon_to_on
                                     [3] : bn0_wf_init_to_sleep
                                     [2] : bn0_wf_sleep_to_wlanon
                                     [1] : bn0_wf_wlanon_to_sleep
                                     [0] : bn0_wf_wlanon_to_on
    CMDBT_USE_PLL_LMAC2[16]      - (RO)  xxx 
    RESERVED17[31..17]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC2_USE_PLL_CMDBT_USE_PLL_LMAC2_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC2_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC2_USE_PLL_CMDBT_USE_PLL_LMAC2_MASK 0x00010000                // CMDBT_USE_PLL_LMAC2[16]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC2_USE_PLL_CMDBT_USE_PLL_LMAC2_SHFT 16
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC2_USE_PLL_CR_CMDBT_USE_PLL_LMAC2_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC2_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC2_USE_PLL_CR_CMDBT_USE_PLL_LMAC2_MASK 0x0000FFFF                // CR_CMDBT_USE_PLL_LMAC2[15..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMAC2_USE_PLL_CR_CMDBT_USE_PLL_LMAC2_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_LMACON_USE_PLL (0x81021000 + 0x870)---

    CR_CMDBT_USE_PLL_LMACON[15..0] - (RW) switch hclk from OSC to WPLL when CMDBT doing following jobs at hardware control mode
                                     [15] : lit_wf_init_to_sleep
                                     [14] : lit_wf_sleep_to_wlanon
                                     [13] : lit_wf_wlanon_to_sleep
                                     [12] : lit_wf_wlanon_to_on
                                     [11] : bn2_wf_init_to_sleep
                                     [10] : bn2_wf_sleep_to_wlanon
                                     [9] : bn2_wf_wlanon_to_sleep
                                     [8] : bn2_wf_wlanon_to_on
                                     [7] : bn1_wf_init_to_sleep
                                     [6] : bn1_wf_sleep_to_wlanon
                                     [5] : bn1_wf_wlanon_to_sleep
                                     [4] : bn1_wf_wlanon_to_on
                                     [3] : bn0_wf_init_to_sleep
                                     [2] : bn0_wf_sleep_to_wlanon
                                     [1] : bn0_wf_wlanon_to_sleep
                                     [0] : bn0_wf_wlanon_to_on
    CMDBT_USE_PLL_LMACON[16]     - (RO)  xxx 
    RESERVED17[31..17]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMACON_USE_PLL_CMDBT_USE_PLL_LMACON_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMACON_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMACON_USE_PLL_CMDBT_USE_PLL_LMACON_MASK 0x00010000                // CMDBT_USE_PLL_LMACON[16]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMACON_USE_PLL_CMDBT_USE_PLL_LMACON_SHFT 16
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMACON_USE_PLL_CR_CMDBT_USE_PLL_LMACON_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMACON_USE_PLL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMACON_USE_PLL_CR_CMDBT_USE_PLL_LMACON_MASK 0x0000FFFF                // CR_CMDBT_USE_PLL_LMACON[15..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_LMACON_USE_PLL_CR_CMDBT_USE_PLL_LMACON_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_CLOCK (0x81021000 + 0x874)---

    CR_CMDBT_CTL_CKEN[0]         - (RW) SW manual mode for cmdbt control clock gated
                                     1: force non-gated
                                     0: according HW gated logic
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_CLOCK_CR_CMDBT_CTL_CKEN_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_CLOCK_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_CLOCK_CR_CMDBT_CTL_CKEN_MASK 0x00000001                // CR_CMDBT_CTL_CKEN[0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_CLOCK_CR_CMDBT_CTL_CKEN_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_DEBUG_SEL (0x81021000 + 0x900)---

    CR_WF_CMDBT_CTRL_DEBUG_SEL[8..0] - (RW) debug sel
    RESERVED9[31..9]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_DEBUG_SEL_CR_WF_CMDBT_CTRL_DEBUG_SEL_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_DEBUG_SEL_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_DEBUG_SEL_CR_WF_CMDBT_CTRL_DEBUG_SEL_MASK 0x000001FF                // CR_WF_CMDBT_CTRL_DEBUG_SEL[8..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_DEBUG_SEL_CR_WF_CMDBT_CTRL_DEBUG_SEL_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_CTRL_DEBUG_FLAG (0x81021000 + 0x904)---

    RO_WF_CMDBT_CTRL_DEBUG_FLAG[31..0] - (RO) debug flag

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_DEBUG_FLAG_RO_WF_CMDBT_CTRL_DEBUG_FLAG_ADDR WF_TOP_CFG_ON_WF_CMDBT_CTRL_DEBUG_FLAG_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_DEBUG_FLAG_RO_WF_CMDBT_CTRL_DEBUG_FLAG_MASK 0xFFFFFFFF                // RO_WF_CMDBT_CTRL_DEBUG_FLAG[31..0]
#define WF_TOP_CFG_ON_WF_CMDBT_CTRL_DEBUG_FLAG_RO_WF_CMDBT_CTRL_DEBUG_FLAG_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_MANUAL_CTRL_TOPUMAC (0x81021000 + 0x910)---

    CR_CMDBT_MANUAL_MODE_SIGNAL_TOP_UMAC[15..0] - (RW) reserved for manual control cmdbt trigger
    CR_CMDBT_MANUAL_MODE_TOP_UMAC[31..16] - (RW)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOPUMAC_CR_CMDBT_MANUAL_MODE_TOP_UMAC_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOPUMAC_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOPUMAC_CR_CMDBT_MANUAL_MODE_TOP_UMAC_MASK 0xFFFF0000                // CR_CMDBT_MANUAL_MODE_TOP_UMAC[31..16]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOPUMAC_CR_CMDBT_MANUAL_MODE_TOP_UMAC_SHFT 16
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOPUMAC_CR_CMDBT_MANUAL_MODE_SIGNAL_TOP_UMAC_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOPUMAC_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOPUMAC_CR_CMDBT_MANUAL_MODE_SIGNAL_TOP_UMAC_MASK 0x0000FFFF                // CR_CMDBT_MANUAL_MODE_SIGNAL_TOP_UMAC[15..0]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOPUMAC_CR_CMDBT_MANUAL_MODE_SIGNAL_TOP_UMAC_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_MANUAL_CTRL_LMAC0 (0x81021000 + 0x914)---

    CR_CMDBT_MANUAL_MODE_SIGNAL_LMAC0[15..0] - (RW) reserved for manual control cmdbt trigger
    CR_CMDBT_MANUAL_MODE_LMAC0[31..16] - (RW)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_CR_CMDBT_MANUAL_MODE_LMAC0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_CR_CMDBT_MANUAL_MODE_LMAC0_MASK 0xFFFF0000                // CR_CMDBT_MANUAL_MODE_LMAC0[31..16]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_CR_CMDBT_MANUAL_MODE_LMAC0_SHFT 16
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_CR_CMDBT_MANUAL_MODE_SIGNAL_LMAC0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_CR_CMDBT_MANUAL_MODE_SIGNAL_LMAC0_MASK 0x0000FFFF                // CR_CMDBT_MANUAL_MODE_SIGNAL_LMAC0[15..0]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_CR_CMDBT_MANUAL_MODE_SIGNAL_LMAC0_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_MANUAL_CTRL_PHY0 (0x81021000 + 0x918)---

    CR_CMDBT_MANUAL_MODE_SIGNAL_PHY0[15..0] - (RW) reserved for manual control cmdbt trigger
    CR_CMDBT_MANUAL_MODE_PHY0[31..16] - (RW)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_CR_CMDBT_MANUAL_MODE_PHY0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_CR_CMDBT_MANUAL_MODE_PHY0_MASK 0xFFFF0000                // CR_CMDBT_MANUAL_MODE_PHY0[31..16]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_CR_CMDBT_MANUAL_MODE_PHY0_SHFT 16
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_CR_CMDBT_MANUAL_MODE_SIGNAL_PHY0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_CR_CMDBT_MANUAL_MODE_SIGNAL_PHY0_MASK 0x0000FFFF                // CR_CMDBT_MANUAL_MODE_SIGNAL_PHY0[15..0]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_CR_CMDBT_MANUAL_MODE_SIGNAL_PHY0_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_MANUAL_CTRL_LMAC1 (0x81021000 + 0x91C)---

    CR_CMDBT_MANUAL_MODE_SIGNAL_LMAC1[15..0] - (RW) reserved for manual control cmdbt trigger
    CR_CMDBT_MANUAL_MODE_LMAC1[31..16] - (RW)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_CR_CMDBT_MANUAL_MODE_LMAC1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_CR_CMDBT_MANUAL_MODE_LMAC1_MASK 0xFFFF0000                // CR_CMDBT_MANUAL_MODE_LMAC1[31..16]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_CR_CMDBT_MANUAL_MODE_LMAC1_SHFT 16
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_CR_CMDBT_MANUAL_MODE_SIGNAL_LMAC1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_CR_CMDBT_MANUAL_MODE_SIGNAL_LMAC1_MASK 0x0000FFFF                // CR_CMDBT_MANUAL_MODE_SIGNAL_LMAC1[15..0]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_CR_CMDBT_MANUAL_MODE_SIGNAL_LMAC1_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_MANUAL_CTRL_PHY1 (0x81021000 + 0x920)---

    CR_CMDBT_MANUAL_MODE_SIGNAL_PHY1[15..0] - (RW) reserved for manual control cmdbt trigger
    CR_CMDBT_MANUAL_MODE_PHY1[31..16] - (RW)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_CR_CMDBT_MANUAL_MODE_PHY1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_CR_CMDBT_MANUAL_MODE_PHY1_MASK 0xFFFF0000                // CR_CMDBT_MANUAL_MODE_PHY1[31..16]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_CR_CMDBT_MANUAL_MODE_PHY1_SHFT 16
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_CR_CMDBT_MANUAL_MODE_SIGNAL_PHY1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_CR_CMDBT_MANUAL_MODE_SIGNAL_PHY1_MASK 0x0000FFFF                // CR_CMDBT_MANUAL_MODE_SIGNAL_PHY1[15..0]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_CR_CMDBT_MANUAL_MODE_SIGNAL_PHY1_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_MANUAL_CTRL_LIT (0x81021000 + 0x924)---

    CR_CMDBT_MANUAL_MODE_SIGNAL_LIT[15..0] - (RW) reserved for manual control cmdbt trigger
    CR_CMDBT_MANUAL_MODE_LIT[31..16] - (RW)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_CR_CMDBT_MANUAL_MODE_LIT_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_CR_CMDBT_MANUAL_MODE_LIT_MASK 0xFFFF0000                // CR_CMDBT_MANUAL_MODE_LIT[31..16]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_CR_CMDBT_MANUAL_MODE_LIT_SHFT 16
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_CR_CMDBT_MANUAL_MODE_SIGNAL_LIT_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_CR_CMDBT_MANUAL_MODE_SIGNAL_LIT_MASK 0x0000FFFF                // CR_CMDBT_MANUAL_MODE_SIGNAL_LIT[15..0]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_CR_CMDBT_MANUAL_MODE_SIGNAL_LIT_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_MANUAL_CTRL_RO (0x81021000 + 0x928)---

    bn0_cfg_wlanon_on_instr_finish[0] - (RO) read status
    bn0_cfg_wlanon_sleep_instr_finish[1] - (RO) read status
    bn0_cfg_sleep_wlanon_instr_finish[2] - (RO) read status
    bn0_cfg_init_sleep_instr_finish[3] - (RO) read status
    bn1_cfg_wlanon_on_instr_finish[4] - (RO) read status
    bn1_cfg_wlanon_sleep_instr_finish[5] - (RO) read status
    bn1_cfg_sleep_wlanon_instr_finish[6] - (RO) read status
    bn1_cfg_init_sleep_instr_finish[7] - (RO) read status
    bn2_cfg_wlanon_on_instr_finish[8] - (RO) read status
    bn2_cfg_wlanon_sleep_instr_finish[9] - (RO) read status
    bn2_cfg_sleep_wlanon_instr_finish[10] - (RO) read status
    bn2_cfg_init_sleep_instr_finish[11] - (RO) read status
    lit_cfg_wlanon_on_instr_finish[12] - (RO) read status
    lit_cfg_wlanon_sleep_instr_finish[13] - (RO) read status
    lit_cfg_sleep_wlanon_instr_finish[14] - (RO) read status
    lit_cfg_init_sleep_instr_finish[15] - (RO) read status
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_lit_cfg_init_sleep_instr_finish_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_lit_cfg_init_sleep_instr_finish_MASK 0x00008000                // lit_cfg_init_sleep_instr_finish[15]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_lit_cfg_init_sleep_instr_finish_SHFT 15
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_lit_cfg_sleep_wlanon_instr_finish_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_lit_cfg_sleep_wlanon_instr_finish_MASK 0x00004000                // lit_cfg_sleep_wlanon_instr_finish[14]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_lit_cfg_sleep_wlanon_instr_finish_SHFT 14
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_lit_cfg_wlanon_sleep_instr_finish_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_lit_cfg_wlanon_sleep_instr_finish_MASK 0x00002000                // lit_cfg_wlanon_sleep_instr_finish[13]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_lit_cfg_wlanon_sleep_instr_finish_SHFT 13
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_lit_cfg_wlanon_on_instr_finish_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_lit_cfg_wlanon_on_instr_finish_MASK 0x00001000                // lit_cfg_wlanon_on_instr_finish[12]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_lit_cfg_wlanon_on_instr_finish_SHFT 12
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn2_cfg_init_sleep_instr_finish_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn2_cfg_init_sleep_instr_finish_MASK 0x00000800                // bn2_cfg_init_sleep_instr_finish[11]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn2_cfg_init_sleep_instr_finish_SHFT 11
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn2_cfg_sleep_wlanon_instr_finish_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn2_cfg_sleep_wlanon_instr_finish_MASK 0x00000400                // bn2_cfg_sleep_wlanon_instr_finish[10]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn2_cfg_sleep_wlanon_instr_finish_SHFT 10
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn2_cfg_wlanon_sleep_instr_finish_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn2_cfg_wlanon_sleep_instr_finish_MASK 0x00000200                // bn2_cfg_wlanon_sleep_instr_finish[9]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn2_cfg_wlanon_sleep_instr_finish_SHFT 9
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn2_cfg_wlanon_on_instr_finish_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn2_cfg_wlanon_on_instr_finish_MASK 0x00000100                // bn2_cfg_wlanon_on_instr_finish[8]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn2_cfg_wlanon_on_instr_finish_SHFT 8
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn1_cfg_init_sleep_instr_finish_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn1_cfg_init_sleep_instr_finish_MASK 0x00000080                // bn1_cfg_init_sleep_instr_finish[7]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn1_cfg_init_sleep_instr_finish_SHFT 7
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn1_cfg_sleep_wlanon_instr_finish_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn1_cfg_sleep_wlanon_instr_finish_MASK 0x00000040                // bn1_cfg_sleep_wlanon_instr_finish[6]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn1_cfg_sleep_wlanon_instr_finish_SHFT 6
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn1_cfg_wlanon_sleep_instr_finish_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn1_cfg_wlanon_sleep_instr_finish_MASK 0x00000020                // bn1_cfg_wlanon_sleep_instr_finish[5]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn1_cfg_wlanon_sleep_instr_finish_SHFT 5
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn1_cfg_wlanon_on_instr_finish_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn1_cfg_wlanon_on_instr_finish_MASK 0x00000010                // bn1_cfg_wlanon_on_instr_finish[4]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn1_cfg_wlanon_on_instr_finish_SHFT 4
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn0_cfg_init_sleep_instr_finish_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn0_cfg_init_sleep_instr_finish_MASK 0x00000008                // bn0_cfg_init_sleep_instr_finish[3]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn0_cfg_init_sleep_instr_finish_SHFT 3
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn0_cfg_sleep_wlanon_instr_finish_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn0_cfg_sleep_wlanon_instr_finish_MASK 0x00000004                // bn0_cfg_sleep_wlanon_instr_finish[2]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn0_cfg_sleep_wlanon_instr_finish_SHFT 2
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn0_cfg_wlanon_sleep_instr_finish_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn0_cfg_wlanon_sleep_instr_finish_MASK 0x00000002                // bn0_cfg_wlanon_sleep_instr_finish[1]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn0_cfg_wlanon_sleep_instr_finish_SHFT 1
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn0_cfg_wlanon_on_instr_finish_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn0_cfg_wlanon_on_instr_finish_MASK 0x00000001                // bn0_cfg_wlanon_on_instr_finish[0]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_RO_bn0_cfg_wlanon_on_instr_finish_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO (0x81021000 + 0x92C)---

    bn0_cfg_wlanon_on_instr_finish_top_umac[0] - (RO) read status
    bn0_cfg_wlanon_sleep_instr_finish_top_umac[1] - (RO) read status
    bn0_cfg_sleep_wlanon_instr_finish_top_umac[2] - (RO) read status
    bn0_cfg_init_sleep_instr_finish_top_umac[3] - (RO) read status
    bn1_cfg_wlanon_on_instr_finish_top_umac[4] - (RO) read status
    bn1_cfg_wlanon_sleep_instr_finish_top_umac[5] - (RO) read status
    bn1_cfg_sleep_wlanon_instr_finish_top_umac[6] - (RO) read status
    bn1_cfg_init_sleep_instr_finish_top_umac[7] - (RO) read status
    bn2_cfg_wlanon_on_instr_finish_top_umac[8] - (RO) read status
    bn2_cfg_wlanon_sleep_instr_finish_top_umac[9] - (RO) read status
    bn2_cfg_sleep_wlanon_instr_finish_top_umac[10] - (RO) read status
    bn2_cfg_init_sleep_instr_finish_top_umac[11] - (RO) read status
    lit_cfg_wlanon_on_instr_finish_top_umac[12] - (RO) read status
    lit_cfg_wlanon_sleep_instr_finish_top_umac[13] - (RO) read status
    lit_cfg_sleep_wlanon_instr_finish_top_umac[14] - (RO) read status
    lit_cfg_init_sleep_instr_finish_top_umac[15] - (RO) read status
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_lit_cfg_init_sleep_instr_finish_top_umac_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_lit_cfg_init_sleep_instr_finish_top_umac_MASK 0x00008000                // lit_cfg_init_sleep_instr_finish_top_umac[15]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_lit_cfg_init_sleep_instr_finish_top_umac_SHFT 15
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_lit_cfg_sleep_wlanon_instr_finish_top_umac_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_lit_cfg_sleep_wlanon_instr_finish_top_umac_MASK 0x00004000                // lit_cfg_sleep_wlanon_instr_finish_top_umac[14]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_lit_cfg_sleep_wlanon_instr_finish_top_umac_SHFT 14
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_lit_cfg_wlanon_sleep_instr_finish_top_umac_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_lit_cfg_wlanon_sleep_instr_finish_top_umac_MASK 0x00002000                // lit_cfg_wlanon_sleep_instr_finish_top_umac[13]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_lit_cfg_wlanon_sleep_instr_finish_top_umac_SHFT 13
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_lit_cfg_wlanon_on_instr_finish_top_umac_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_lit_cfg_wlanon_on_instr_finish_top_umac_MASK 0x00001000                // lit_cfg_wlanon_on_instr_finish_top_umac[12]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_lit_cfg_wlanon_on_instr_finish_top_umac_SHFT 12
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn2_cfg_init_sleep_instr_finish_top_umac_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn2_cfg_init_sleep_instr_finish_top_umac_MASK 0x00000800                // bn2_cfg_init_sleep_instr_finish_top_umac[11]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn2_cfg_init_sleep_instr_finish_top_umac_SHFT 11
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn2_cfg_sleep_wlanon_instr_finish_top_umac_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn2_cfg_sleep_wlanon_instr_finish_top_umac_MASK 0x00000400                // bn2_cfg_sleep_wlanon_instr_finish_top_umac[10]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn2_cfg_sleep_wlanon_instr_finish_top_umac_SHFT 10
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn2_cfg_wlanon_sleep_instr_finish_top_umac_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn2_cfg_wlanon_sleep_instr_finish_top_umac_MASK 0x00000200                // bn2_cfg_wlanon_sleep_instr_finish_top_umac[9]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn2_cfg_wlanon_sleep_instr_finish_top_umac_SHFT 9
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn2_cfg_wlanon_on_instr_finish_top_umac_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn2_cfg_wlanon_on_instr_finish_top_umac_MASK 0x00000100                // bn2_cfg_wlanon_on_instr_finish_top_umac[8]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn2_cfg_wlanon_on_instr_finish_top_umac_SHFT 8
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn1_cfg_init_sleep_instr_finish_top_umac_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn1_cfg_init_sleep_instr_finish_top_umac_MASK 0x00000080                // bn1_cfg_init_sleep_instr_finish_top_umac[7]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn1_cfg_init_sleep_instr_finish_top_umac_SHFT 7
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn1_cfg_sleep_wlanon_instr_finish_top_umac_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn1_cfg_sleep_wlanon_instr_finish_top_umac_MASK 0x00000040                // bn1_cfg_sleep_wlanon_instr_finish_top_umac[6]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn1_cfg_sleep_wlanon_instr_finish_top_umac_SHFT 6
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn1_cfg_wlanon_sleep_instr_finish_top_umac_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn1_cfg_wlanon_sleep_instr_finish_top_umac_MASK 0x00000020                // bn1_cfg_wlanon_sleep_instr_finish_top_umac[5]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn1_cfg_wlanon_sleep_instr_finish_top_umac_SHFT 5
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn1_cfg_wlanon_on_instr_finish_top_umac_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn1_cfg_wlanon_on_instr_finish_top_umac_MASK 0x00000010                // bn1_cfg_wlanon_on_instr_finish_top_umac[4]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn1_cfg_wlanon_on_instr_finish_top_umac_SHFT 4
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn0_cfg_init_sleep_instr_finish_top_umac_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn0_cfg_init_sleep_instr_finish_top_umac_MASK 0x00000008                // bn0_cfg_init_sleep_instr_finish_top_umac[3]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn0_cfg_init_sleep_instr_finish_top_umac_SHFT 3
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn0_cfg_sleep_wlanon_instr_finish_top_umac_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn0_cfg_sleep_wlanon_instr_finish_top_umac_MASK 0x00000004                // bn0_cfg_sleep_wlanon_instr_finish_top_umac[2]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn0_cfg_sleep_wlanon_instr_finish_top_umac_SHFT 2
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn0_cfg_wlanon_sleep_instr_finish_top_umac_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn0_cfg_wlanon_sleep_instr_finish_top_umac_MASK 0x00000002                // bn0_cfg_wlanon_sleep_instr_finish_top_umac[1]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn0_cfg_wlanon_sleep_instr_finish_top_umac_SHFT 1
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn0_cfg_wlanon_on_instr_finish_top_umac_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn0_cfg_wlanon_on_instr_finish_top_umac_MASK 0x00000001                // bn0_cfg_wlanon_on_instr_finish_top_umac[0]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_TOP_UMAC_RO_bn0_cfg_wlanon_on_instr_finish_top_umac_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_MANUAL_CTRL_LMAC0_RO (0x81021000 + 0x930)---

    bn0_cfg_wlanon_on_instr_finish_lmac0[0] - (RO) read status
    bn0_cfg_wlanon_sleep_instr_finish_lmac0[1] - (RO) read status
    bn0_cfg_sleep_wlanon_instr_finish_lmac0[2] - (RO) read status
    bn0_cfg_init_sleep_instr_finish_lmac0[3] - (RO) read status
    bn1_cfg_wlanon_on_instr_finish_lmac0[4] - (RO) read status
    bn1_cfg_wlanon_sleep_instr_finish_lmac0[5] - (RO) read status
    bn1_cfg_sleep_wlanon_instr_finish_lmac0[6] - (RO) read status
    bn1_cfg_init_sleep_instr_finish_lmac0[7] - (RO) read status
    bn2_cfg_wlanon_on_instr_finish_lmac0[8] - (RO) read status
    bn2_cfg_wlanon_sleep_instr_finish_lmac0[9] - (RO) read status
    bn2_cfg_sleep_wlanon_instr_finish_lmac0[10] - (RO) read status
    bn2_cfg_init_sleep_instr_finish_lmac0[11] - (RO) read status
    lit_cfg_wlanon_on_instr_finish_lmac0[12] - (RO) read status
    lit_cfg_wlanon_sleep_instr_finish_lmac0[13] - (RO) read status
    lit_cfg_sleep_wlanon_instr_finish_lmac0[14] - (RO) read status
    lit_cfg_init_sleep_instr_finish_lmac0[15] - (RO) read status
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_lit_cfg_init_sleep_instr_finish_lmac0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_lit_cfg_init_sleep_instr_finish_lmac0_MASK 0x00008000                // lit_cfg_init_sleep_instr_finish_lmac0[15]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_lit_cfg_init_sleep_instr_finish_lmac0_SHFT 15
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_lit_cfg_sleep_wlanon_instr_finish_lmac0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_lit_cfg_sleep_wlanon_instr_finish_lmac0_MASK 0x00004000                // lit_cfg_sleep_wlanon_instr_finish_lmac0[14]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_lit_cfg_sleep_wlanon_instr_finish_lmac0_SHFT 14
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_lit_cfg_wlanon_sleep_instr_finish_lmac0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_lit_cfg_wlanon_sleep_instr_finish_lmac0_MASK 0x00002000                // lit_cfg_wlanon_sleep_instr_finish_lmac0[13]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_lit_cfg_wlanon_sleep_instr_finish_lmac0_SHFT 13
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_lit_cfg_wlanon_on_instr_finish_lmac0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_lit_cfg_wlanon_on_instr_finish_lmac0_MASK 0x00001000                // lit_cfg_wlanon_on_instr_finish_lmac0[12]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_lit_cfg_wlanon_on_instr_finish_lmac0_SHFT 12
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn2_cfg_init_sleep_instr_finish_lmac0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn2_cfg_init_sleep_instr_finish_lmac0_MASK 0x00000800                // bn2_cfg_init_sleep_instr_finish_lmac0[11]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn2_cfg_init_sleep_instr_finish_lmac0_SHFT 11
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn2_cfg_sleep_wlanon_instr_finish_lmac0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn2_cfg_sleep_wlanon_instr_finish_lmac0_MASK 0x00000400                // bn2_cfg_sleep_wlanon_instr_finish_lmac0[10]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn2_cfg_sleep_wlanon_instr_finish_lmac0_SHFT 10
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn2_cfg_wlanon_sleep_instr_finish_lmac0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn2_cfg_wlanon_sleep_instr_finish_lmac0_MASK 0x00000200                // bn2_cfg_wlanon_sleep_instr_finish_lmac0[9]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn2_cfg_wlanon_sleep_instr_finish_lmac0_SHFT 9
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn2_cfg_wlanon_on_instr_finish_lmac0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn2_cfg_wlanon_on_instr_finish_lmac0_MASK 0x00000100                // bn2_cfg_wlanon_on_instr_finish_lmac0[8]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn2_cfg_wlanon_on_instr_finish_lmac0_SHFT 8
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn1_cfg_init_sleep_instr_finish_lmac0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn1_cfg_init_sleep_instr_finish_lmac0_MASK 0x00000080                // bn1_cfg_init_sleep_instr_finish_lmac0[7]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn1_cfg_init_sleep_instr_finish_lmac0_SHFT 7
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn1_cfg_sleep_wlanon_instr_finish_lmac0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn1_cfg_sleep_wlanon_instr_finish_lmac0_MASK 0x00000040                // bn1_cfg_sleep_wlanon_instr_finish_lmac0[6]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn1_cfg_sleep_wlanon_instr_finish_lmac0_SHFT 6
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn1_cfg_wlanon_sleep_instr_finish_lmac0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn1_cfg_wlanon_sleep_instr_finish_lmac0_MASK 0x00000020                // bn1_cfg_wlanon_sleep_instr_finish_lmac0[5]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn1_cfg_wlanon_sleep_instr_finish_lmac0_SHFT 5
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn1_cfg_wlanon_on_instr_finish_lmac0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn1_cfg_wlanon_on_instr_finish_lmac0_MASK 0x00000010                // bn1_cfg_wlanon_on_instr_finish_lmac0[4]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn1_cfg_wlanon_on_instr_finish_lmac0_SHFT 4
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn0_cfg_init_sleep_instr_finish_lmac0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn0_cfg_init_sleep_instr_finish_lmac0_MASK 0x00000008                // bn0_cfg_init_sleep_instr_finish_lmac0[3]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn0_cfg_init_sleep_instr_finish_lmac0_SHFT 3
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn0_cfg_sleep_wlanon_instr_finish_lmac0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn0_cfg_sleep_wlanon_instr_finish_lmac0_MASK 0x00000004                // bn0_cfg_sleep_wlanon_instr_finish_lmac0[2]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn0_cfg_sleep_wlanon_instr_finish_lmac0_SHFT 2
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn0_cfg_wlanon_sleep_instr_finish_lmac0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn0_cfg_wlanon_sleep_instr_finish_lmac0_MASK 0x00000002                // bn0_cfg_wlanon_sleep_instr_finish_lmac0[1]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn0_cfg_wlanon_sleep_instr_finish_lmac0_SHFT 1
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn0_cfg_wlanon_on_instr_finish_lmac0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn0_cfg_wlanon_on_instr_finish_lmac0_MASK 0x00000001                // bn0_cfg_wlanon_on_instr_finish_lmac0[0]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC0_RO_bn0_cfg_wlanon_on_instr_finish_lmac0_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_MANUAL_CTRL_PHY0_RO (0x81021000 + 0x934)---

    bn0_cfg_wlanon_on_instr_finish_phy0[0] - (RO) read status
    bn0_cfg_wlanon_sleep_instr_finish_phy0[1] - (RO) read status
    bn0_cfg_sleep_wlanon_instr_finish_phy0[2] - (RO) read status
    bn0_cfg_init_sleep_instr_finish_phy0[3] - (RO) read status
    bn1_cfg_wlanon_on_instr_finish_phy0[4] - (RO) read status
    bn1_cfg_wlanon_sleep_instr_finish_phy0[5] - (RO) read status
    bn1_cfg_sleep_wlanon_instr_finish_phy0[6] - (RO) read status
    bn1_cfg_init_sleep_instr_finish_phy0[7] - (RO) read status
    bn2_cfg_wlanon_on_instr_finish_phy0[8] - (RO) read status
    bn2_cfg_wlanon_sleep_instr_finish_phy0[9] - (RO) read status
    bn2_cfg_sleep_wlanon_instr_finish_phy0[10] - (RO) read status
    bn2_cfg_init_sleep_instr_finish_phy0[11] - (RO) read status
    lit_cfg_wlanon_on_instr_finish_phy0[12] - (RO) read status
    lit_cfg_wlanon_sleep_instr_finish_phy0[13] - (RO) read status
    lit_cfg_sleep_wlanon_instr_finish_phy0[14] - (RO) read status
    lit_cfg_init_sleep_instr_finish_phy0[15] - (RO) read status
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_lit_cfg_init_sleep_instr_finish_phy0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_lit_cfg_init_sleep_instr_finish_phy0_MASK 0x00008000                // lit_cfg_init_sleep_instr_finish_phy0[15]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_lit_cfg_init_sleep_instr_finish_phy0_SHFT 15
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_lit_cfg_sleep_wlanon_instr_finish_phy0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_lit_cfg_sleep_wlanon_instr_finish_phy0_MASK 0x00004000                // lit_cfg_sleep_wlanon_instr_finish_phy0[14]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_lit_cfg_sleep_wlanon_instr_finish_phy0_SHFT 14
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_lit_cfg_wlanon_sleep_instr_finish_phy0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_lit_cfg_wlanon_sleep_instr_finish_phy0_MASK 0x00002000                // lit_cfg_wlanon_sleep_instr_finish_phy0[13]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_lit_cfg_wlanon_sleep_instr_finish_phy0_SHFT 13
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_lit_cfg_wlanon_on_instr_finish_phy0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_lit_cfg_wlanon_on_instr_finish_phy0_MASK 0x00001000                // lit_cfg_wlanon_on_instr_finish_phy0[12]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_lit_cfg_wlanon_on_instr_finish_phy0_SHFT 12
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn2_cfg_init_sleep_instr_finish_phy0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn2_cfg_init_sleep_instr_finish_phy0_MASK 0x00000800                // bn2_cfg_init_sleep_instr_finish_phy0[11]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn2_cfg_init_sleep_instr_finish_phy0_SHFT 11
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn2_cfg_sleep_wlanon_instr_finish_phy0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn2_cfg_sleep_wlanon_instr_finish_phy0_MASK 0x00000400                // bn2_cfg_sleep_wlanon_instr_finish_phy0[10]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn2_cfg_sleep_wlanon_instr_finish_phy0_SHFT 10
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn2_cfg_wlanon_sleep_instr_finish_phy0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn2_cfg_wlanon_sleep_instr_finish_phy0_MASK 0x00000200                // bn2_cfg_wlanon_sleep_instr_finish_phy0[9]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn2_cfg_wlanon_sleep_instr_finish_phy0_SHFT 9
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn2_cfg_wlanon_on_instr_finish_phy0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn2_cfg_wlanon_on_instr_finish_phy0_MASK 0x00000100                // bn2_cfg_wlanon_on_instr_finish_phy0[8]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn2_cfg_wlanon_on_instr_finish_phy0_SHFT 8
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn1_cfg_init_sleep_instr_finish_phy0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn1_cfg_init_sleep_instr_finish_phy0_MASK 0x00000080                // bn1_cfg_init_sleep_instr_finish_phy0[7]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn1_cfg_init_sleep_instr_finish_phy0_SHFT 7
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn1_cfg_sleep_wlanon_instr_finish_phy0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn1_cfg_sleep_wlanon_instr_finish_phy0_MASK 0x00000040                // bn1_cfg_sleep_wlanon_instr_finish_phy0[6]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn1_cfg_sleep_wlanon_instr_finish_phy0_SHFT 6
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn1_cfg_wlanon_sleep_instr_finish_phy0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn1_cfg_wlanon_sleep_instr_finish_phy0_MASK 0x00000020                // bn1_cfg_wlanon_sleep_instr_finish_phy0[5]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn1_cfg_wlanon_sleep_instr_finish_phy0_SHFT 5
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn1_cfg_wlanon_on_instr_finish_phy0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn1_cfg_wlanon_on_instr_finish_phy0_MASK 0x00000010                // bn1_cfg_wlanon_on_instr_finish_phy0[4]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn1_cfg_wlanon_on_instr_finish_phy0_SHFT 4
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn0_cfg_init_sleep_instr_finish_phy0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn0_cfg_init_sleep_instr_finish_phy0_MASK 0x00000008                // bn0_cfg_init_sleep_instr_finish_phy0[3]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn0_cfg_init_sleep_instr_finish_phy0_SHFT 3
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn0_cfg_sleep_wlanon_instr_finish_phy0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn0_cfg_sleep_wlanon_instr_finish_phy0_MASK 0x00000004                // bn0_cfg_sleep_wlanon_instr_finish_phy0[2]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn0_cfg_sleep_wlanon_instr_finish_phy0_SHFT 2
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn0_cfg_wlanon_sleep_instr_finish_phy0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn0_cfg_wlanon_sleep_instr_finish_phy0_MASK 0x00000002                // bn0_cfg_wlanon_sleep_instr_finish_phy0[1]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn0_cfg_wlanon_sleep_instr_finish_phy0_SHFT 1
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn0_cfg_wlanon_on_instr_finish_phy0_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn0_cfg_wlanon_on_instr_finish_phy0_MASK 0x00000001                // bn0_cfg_wlanon_on_instr_finish_phy0[0]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY0_RO_bn0_cfg_wlanon_on_instr_finish_phy0_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_MANUAL_CTRL_LMAC1_RO (0x81021000 + 0x938)---

    bn0_cfg_wlanon_on_instr_finish_lmac1[0] - (RO) read status
    bn0_cfg_wlanon_sleep_instr_finish_lmac1[1] - (RO) read status
    bn0_cfg_sleep_wlanon_instr_finish_lmac1[2] - (RO) read status
    bn0_cfg_init_sleep_instr_finish_lmac1[3] - (RO) read status
    bn1_cfg_wlanon_on_instr_finish_lmac1[4] - (RO) read status
    bn1_cfg_wlanon_sleep_instr_finish_lmac1[5] - (RO) read status
    bn1_cfg_sleep_wlanon_instr_finish_lmac1[6] - (RO) read status
    bn1_cfg_init_sleep_instr_finish_lmac1[7] - (RO) read status
    bn2_cfg_wlanon_on_instr_finish_lmac1[8] - (RO) read status
    bn2_cfg_wlanon_sleep_instr_finish_lmac1[9] - (RO) read status
    bn2_cfg_sleep_wlanon_instr_finish_lmac1[10] - (RO) read status
    bn2_cfg_init_sleep_instr_finish_lmac1[11] - (RO) read status
    lit_cfg_wlanon_on_instr_finish_lmac1[12] - (RO) read status
    lit_cfg_wlanon_sleep_instr_finish_lmac1[13] - (RO) read status
    lit_cfg_sleep_wlanon_instr_finish_lmac1[14] - (RO) read status
    lit_cfg_init_sleep_instr_finish_lmac1[15] - (RO) read status
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_lit_cfg_init_sleep_instr_finish_lmac1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_lit_cfg_init_sleep_instr_finish_lmac1_MASK 0x00008000                // lit_cfg_init_sleep_instr_finish_lmac1[15]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_lit_cfg_init_sleep_instr_finish_lmac1_SHFT 15
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_lit_cfg_sleep_wlanon_instr_finish_lmac1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_lit_cfg_sleep_wlanon_instr_finish_lmac1_MASK 0x00004000                // lit_cfg_sleep_wlanon_instr_finish_lmac1[14]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_lit_cfg_sleep_wlanon_instr_finish_lmac1_SHFT 14
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_lit_cfg_wlanon_sleep_instr_finish_lmac1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_lit_cfg_wlanon_sleep_instr_finish_lmac1_MASK 0x00002000                // lit_cfg_wlanon_sleep_instr_finish_lmac1[13]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_lit_cfg_wlanon_sleep_instr_finish_lmac1_SHFT 13
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_lit_cfg_wlanon_on_instr_finish_lmac1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_lit_cfg_wlanon_on_instr_finish_lmac1_MASK 0x00001000                // lit_cfg_wlanon_on_instr_finish_lmac1[12]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_lit_cfg_wlanon_on_instr_finish_lmac1_SHFT 12
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn2_cfg_init_sleep_instr_finish_lmac1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn2_cfg_init_sleep_instr_finish_lmac1_MASK 0x00000800                // bn2_cfg_init_sleep_instr_finish_lmac1[11]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn2_cfg_init_sleep_instr_finish_lmac1_SHFT 11
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn2_cfg_sleep_wlanon_instr_finish_lmac1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn2_cfg_sleep_wlanon_instr_finish_lmac1_MASK 0x00000400                // bn2_cfg_sleep_wlanon_instr_finish_lmac1[10]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn2_cfg_sleep_wlanon_instr_finish_lmac1_SHFT 10
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn2_cfg_wlanon_sleep_instr_finish_lmac1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn2_cfg_wlanon_sleep_instr_finish_lmac1_MASK 0x00000200                // bn2_cfg_wlanon_sleep_instr_finish_lmac1[9]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn2_cfg_wlanon_sleep_instr_finish_lmac1_SHFT 9
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn2_cfg_wlanon_on_instr_finish_lmac1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn2_cfg_wlanon_on_instr_finish_lmac1_MASK 0x00000100                // bn2_cfg_wlanon_on_instr_finish_lmac1[8]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn2_cfg_wlanon_on_instr_finish_lmac1_SHFT 8
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn1_cfg_init_sleep_instr_finish_lmac1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn1_cfg_init_sleep_instr_finish_lmac1_MASK 0x00000080                // bn1_cfg_init_sleep_instr_finish_lmac1[7]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn1_cfg_init_sleep_instr_finish_lmac1_SHFT 7
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn1_cfg_sleep_wlanon_instr_finish_lmac1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn1_cfg_sleep_wlanon_instr_finish_lmac1_MASK 0x00000040                // bn1_cfg_sleep_wlanon_instr_finish_lmac1[6]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn1_cfg_sleep_wlanon_instr_finish_lmac1_SHFT 6
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn1_cfg_wlanon_sleep_instr_finish_lmac1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn1_cfg_wlanon_sleep_instr_finish_lmac1_MASK 0x00000020                // bn1_cfg_wlanon_sleep_instr_finish_lmac1[5]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn1_cfg_wlanon_sleep_instr_finish_lmac1_SHFT 5
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn1_cfg_wlanon_on_instr_finish_lmac1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn1_cfg_wlanon_on_instr_finish_lmac1_MASK 0x00000010                // bn1_cfg_wlanon_on_instr_finish_lmac1[4]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn1_cfg_wlanon_on_instr_finish_lmac1_SHFT 4
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn0_cfg_init_sleep_instr_finish_lmac1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn0_cfg_init_sleep_instr_finish_lmac1_MASK 0x00000008                // bn0_cfg_init_sleep_instr_finish_lmac1[3]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn0_cfg_init_sleep_instr_finish_lmac1_SHFT 3
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn0_cfg_sleep_wlanon_instr_finish_lmac1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn0_cfg_sleep_wlanon_instr_finish_lmac1_MASK 0x00000004                // bn0_cfg_sleep_wlanon_instr_finish_lmac1[2]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn0_cfg_sleep_wlanon_instr_finish_lmac1_SHFT 2
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn0_cfg_wlanon_sleep_instr_finish_lmac1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn0_cfg_wlanon_sleep_instr_finish_lmac1_MASK 0x00000002                // bn0_cfg_wlanon_sleep_instr_finish_lmac1[1]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn0_cfg_wlanon_sleep_instr_finish_lmac1_SHFT 1
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn0_cfg_wlanon_on_instr_finish_lmac1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn0_cfg_wlanon_on_instr_finish_lmac1_MASK 0x00000001                // bn0_cfg_wlanon_on_instr_finish_lmac1[0]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC1_RO_bn0_cfg_wlanon_on_instr_finish_lmac1_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_MANUAL_CTRL_PHY1_RO (0x81021000 + 0x93C)---

    bn0_cfg_wlanon_on_instr_finish_phy1[0] - (RO) read status
    bn0_cfg_wlanon_sleep_instr_finish_phy1[1] - (RO) read status
    bn0_cfg_sleep_wlanon_instr_finish_phy1[2] - (RO) read status
    bn0_cfg_init_sleep_instr_finish_phy1[3] - (RO) read status
    bn1_cfg_wlanon_on_instr_finish_phy1[4] - (RO) read status
    bn1_cfg_wlanon_sleep_instr_finish_phy1[5] - (RO) read status
    bn1_cfg_sleep_wlanon_instr_finish_phy1[6] - (RO) read status
    bn1_cfg_init_sleep_instr_finish_phy1[7] - (RO) read status
    bn2_cfg_wlanon_on_instr_finish_phy1[8] - (RO) read status
    bn2_cfg_wlanon_sleep_instr_finish_phy1[9] - (RO) read status
    bn2_cfg_sleep_wlanon_instr_finish_phy1[10] - (RO) read status
    bn2_cfg_init_sleep_instr_finish_phy1[11] - (RO) read status
    lit_cfg_wlanon_on_instr_finish_phy1[12] - (RO) read status
    lit_cfg_wlanon_sleep_instr_finish_phy1[13] - (RO) read status
    lit_cfg_sleep_wlanon_instr_finish_phy1[14] - (RO) read status
    lit_cfg_init_sleep_instr_finish_phy1[15] - (RO) read status
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_lit_cfg_init_sleep_instr_finish_phy1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_lit_cfg_init_sleep_instr_finish_phy1_MASK 0x00008000                // lit_cfg_init_sleep_instr_finish_phy1[15]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_lit_cfg_init_sleep_instr_finish_phy1_SHFT 15
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_lit_cfg_sleep_wlanon_instr_finish_phy1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_lit_cfg_sleep_wlanon_instr_finish_phy1_MASK 0x00004000                // lit_cfg_sleep_wlanon_instr_finish_phy1[14]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_lit_cfg_sleep_wlanon_instr_finish_phy1_SHFT 14
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_lit_cfg_wlanon_sleep_instr_finish_phy1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_lit_cfg_wlanon_sleep_instr_finish_phy1_MASK 0x00002000                // lit_cfg_wlanon_sleep_instr_finish_phy1[13]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_lit_cfg_wlanon_sleep_instr_finish_phy1_SHFT 13
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_lit_cfg_wlanon_on_instr_finish_phy1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_lit_cfg_wlanon_on_instr_finish_phy1_MASK 0x00001000                // lit_cfg_wlanon_on_instr_finish_phy1[12]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_lit_cfg_wlanon_on_instr_finish_phy1_SHFT 12
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn2_cfg_init_sleep_instr_finish_phy1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn2_cfg_init_sleep_instr_finish_phy1_MASK 0x00000800                // bn2_cfg_init_sleep_instr_finish_phy1[11]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn2_cfg_init_sleep_instr_finish_phy1_SHFT 11
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn2_cfg_sleep_wlanon_instr_finish_phy1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn2_cfg_sleep_wlanon_instr_finish_phy1_MASK 0x00000400                // bn2_cfg_sleep_wlanon_instr_finish_phy1[10]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn2_cfg_sleep_wlanon_instr_finish_phy1_SHFT 10
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn2_cfg_wlanon_sleep_instr_finish_phy1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn2_cfg_wlanon_sleep_instr_finish_phy1_MASK 0x00000200                // bn2_cfg_wlanon_sleep_instr_finish_phy1[9]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn2_cfg_wlanon_sleep_instr_finish_phy1_SHFT 9
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn2_cfg_wlanon_on_instr_finish_phy1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn2_cfg_wlanon_on_instr_finish_phy1_MASK 0x00000100                // bn2_cfg_wlanon_on_instr_finish_phy1[8]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn2_cfg_wlanon_on_instr_finish_phy1_SHFT 8
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn1_cfg_init_sleep_instr_finish_phy1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn1_cfg_init_sleep_instr_finish_phy1_MASK 0x00000080                // bn1_cfg_init_sleep_instr_finish_phy1[7]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn1_cfg_init_sleep_instr_finish_phy1_SHFT 7
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn1_cfg_sleep_wlanon_instr_finish_phy1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn1_cfg_sleep_wlanon_instr_finish_phy1_MASK 0x00000040                // bn1_cfg_sleep_wlanon_instr_finish_phy1[6]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn1_cfg_sleep_wlanon_instr_finish_phy1_SHFT 6
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn1_cfg_wlanon_sleep_instr_finish_phy1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn1_cfg_wlanon_sleep_instr_finish_phy1_MASK 0x00000020                // bn1_cfg_wlanon_sleep_instr_finish_phy1[5]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn1_cfg_wlanon_sleep_instr_finish_phy1_SHFT 5
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn1_cfg_wlanon_on_instr_finish_phy1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn1_cfg_wlanon_on_instr_finish_phy1_MASK 0x00000010                // bn1_cfg_wlanon_on_instr_finish_phy1[4]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn1_cfg_wlanon_on_instr_finish_phy1_SHFT 4
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn0_cfg_init_sleep_instr_finish_phy1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn0_cfg_init_sleep_instr_finish_phy1_MASK 0x00000008                // bn0_cfg_init_sleep_instr_finish_phy1[3]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn0_cfg_init_sleep_instr_finish_phy1_SHFT 3
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn0_cfg_sleep_wlanon_instr_finish_phy1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn0_cfg_sleep_wlanon_instr_finish_phy1_MASK 0x00000004                // bn0_cfg_sleep_wlanon_instr_finish_phy1[2]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn0_cfg_sleep_wlanon_instr_finish_phy1_SHFT 2
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn0_cfg_wlanon_sleep_instr_finish_phy1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn0_cfg_wlanon_sleep_instr_finish_phy1_MASK 0x00000002                // bn0_cfg_wlanon_sleep_instr_finish_phy1[1]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn0_cfg_wlanon_sleep_instr_finish_phy1_SHFT 1
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn0_cfg_wlanon_on_instr_finish_phy1_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn0_cfg_wlanon_on_instr_finish_phy1_MASK 0x00000001                // bn0_cfg_wlanon_on_instr_finish_phy1[0]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY1_RO_bn0_cfg_wlanon_on_instr_finish_phy1_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_MANUAL_CTRL_LIT_RO (0x81021000 + 0x940)---

    bn0_cfg_wlanon_on_instr_finish_lit[0] - (RO) read status
    bn0_cfg_wlanon_sleep_instr_finish_lit[1] - (RO) read status
    bn0_cfg_sleep_wlanon_instr_finish_lit[2] - (RO) read status
    bn0_cfg_init_sleep_instr_finish_lit[3] - (RO) read status
    bn1_cfg_wlanon_on_instr_finish_lit[4] - (RO) read status
    bn1_cfg_wlanon_sleep_instr_finish_lit[5] - (RO) read status
    bn1_cfg_sleep_wlanon_instr_finish_lit[6] - (RO) read status
    bn1_cfg_init_sleep_instr_finish_lit[7] - (RO) read status
    bn2_cfg_wlanon_on_instr_finish_lit[8] - (RO) read status
    bn2_cfg_wlanon_sleep_instr_finish_lit[9] - (RO) read status
    bn2_cfg_sleep_wlanon_instr_finish_lit[10] - (RO) read status
    bn2_cfg_init_sleep_instr_finish_lit[11] - (RO) read status
    lit_cfg_wlanon_on_instr_finish_lit[12] - (RO) read status
    lit_cfg_wlanon_sleep_instr_finish_lit[13] - (RO) read status
    lit_cfg_sleep_wlanon_instr_finish_lit[14] - (RO) read status
    lit_cfg_init_sleep_instr_finish_lit[15] - (RO) read status
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_lit_cfg_init_sleep_instr_finish_lit_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_lit_cfg_init_sleep_instr_finish_lit_MASK 0x00008000                // lit_cfg_init_sleep_instr_finish_lit[15]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_lit_cfg_init_sleep_instr_finish_lit_SHFT 15
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_lit_cfg_sleep_wlanon_instr_finish_lit_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_lit_cfg_sleep_wlanon_instr_finish_lit_MASK 0x00004000                // lit_cfg_sleep_wlanon_instr_finish_lit[14]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_lit_cfg_sleep_wlanon_instr_finish_lit_SHFT 14
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_lit_cfg_wlanon_sleep_instr_finish_lit_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_lit_cfg_wlanon_sleep_instr_finish_lit_MASK 0x00002000                // lit_cfg_wlanon_sleep_instr_finish_lit[13]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_lit_cfg_wlanon_sleep_instr_finish_lit_SHFT 13
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_lit_cfg_wlanon_on_instr_finish_lit_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_lit_cfg_wlanon_on_instr_finish_lit_MASK 0x00001000                // lit_cfg_wlanon_on_instr_finish_lit[12]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_lit_cfg_wlanon_on_instr_finish_lit_SHFT 12
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn2_cfg_init_sleep_instr_finish_lit_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn2_cfg_init_sleep_instr_finish_lit_MASK 0x00000800                // bn2_cfg_init_sleep_instr_finish_lit[11]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn2_cfg_init_sleep_instr_finish_lit_SHFT 11
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn2_cfg_sleep_wlanon_instr_finish_lit_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn2_cfg_sleep_wlanon_instr_finish_lit_MASK 0x00000400                // bn2_cfg_sleep_wlanon_instr_finish_lit[10]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn2_cfg_sleep_wlanon_instr_finish_lit_SHFT 10
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn2_cfg_wlanon_sleep_instr_finish_lit_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn2_cfg_wlanon_sleep_instr_finish_lit_MASK 0x00000200                // bn2_cfg_wlanon_sleep_instr_finish_lit[9]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn2_cfg_wlanon_sleep_instr_finish_lit_SHFT 9
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn2_cfg_wlanon_on_instr_finish_lit_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn2_cfg_wlanon_on_instr_finish_lit_MASK 0x00000100                // bn2_cfg_wlanon_on_instr_finish_lit[8]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn2_cfg_wlanon_on_instr_finish_lit_SHFT 8
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn1_cfg_init_sleep_instr_finish_lit_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn1_cfg_init_sleep_instr_finish_lit_MASK 0x00000080                // bn1_cfg_init_sleep_instr_finish_lit[7]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn1_cfg_init_sleep_instr_finish_lit_SHFT 7
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn1_cfg_sleep_wlanon_instr_finish_lit_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn1_cfg_sleep_wlanon_instr_finish_lit_MASK 0x00000040                // bn1_cfg_sleep_wlanon_instr_finish_lit[6]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn1_cfg_sleep_wlanon_instr_finish_lit_SHFT 6
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn1_cfg_wlanon_sleep_instr_finish_lit_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn1_cfg_wlanon_sleep_instr_finish_lit_MASK 0x00000020                // bn1_cfg_wlanon_sleep_instr_finish_lit[5]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn1_cfg_wlanon_sleep_instr_finish_lit_SHFT 5
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn1_cfg_wlanon_on_instr_finish_lit_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn1_cfg_wlanon_on_instr_finish_lit_MASK 0x00000010                // bn1_cfg_wlanon_on_instr_finish_lit[4]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn1_cfg_wlanon_on_instr_finish_lit_SHFT 4
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn0_cfg_init_sleep_instr_finish_lit_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn0_cfg_init_sleep_instr_finish_lit_MASK 0x00000008                // bn0_cfg_init_sleep_instr_finish_lit[3]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn0_cfg_init_sleep_instr_finish_lit_SHFT 3
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn0_cfg_sleep_wlanon_instr_finish_lit_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn0_cfg_sleep_wlanon_instr_finish_lit_MASK 0x00000004                // bn0_cfg_sleep_wlanon_instr_finish_lit[2]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn0_cfg_sleep_wlanon_instr_finish_lit_SHFT 2
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn0_cfg_wlanon_sleep_instr_finish_lit_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn0_cfg_wlanon_sleep_instr_finish_lit_MASK 0x00000002                // bn0_cfg_wlanon_sleep_instr_finish_lit[1]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn0_cfg_wlanon_sleep_instr_finish_lit_SHFT 1
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn0_cfg_wlanon_on_instr_finish_lit_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn0_cfg_wlanon_on_instr_finish_lit_MASK 0x00000001                // bn0_cfg_wlanon_on_instr_finish_lit[0]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LIT_RO_bn0_cfg_wlanon_on_instr_finish_lit_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_MANUAL_CTRL_LMAC2 (0x81021000 + 0x944)---

    CR_CMDBT_MANUAL_MODE_SIGNAL_LMAC2[15..0] - (RW) reserved for manual control cmdbt trigger
    CR_CMDBT_MANUAL_MODE_LMAC2[31..16] - (RW)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_CR_CMDBT_MANUAL_MODE_LMAC2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_CR_CMDBT_MANUAL_MODE_LMAC2_MASK 0xFFFF0000                // CR_CMDBT_MANUAL_MODE_LMAC2[31..16]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_CR_CMDBT_MANUAL_MODE_LMAC2_SHFT 16
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_CR_CMDBT_MANUAL_MODE_SIGNAL_LMAC2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_CR_CMDBT_MANUAL_MODE_SIGNAL_LMAC2_MASK 0x0000FFFF                // CR_CMDBT_MANUAL_MODE_SIGNAL_LMAC2[15..0]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_CR_CMDBT_MANUAL_MODE_SIGNAL_LMAC2_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_MANUAL_CTRL_PHY2 (0x81021000 + 0x948)---

    CR_CMDBT_MANUAL_MODE_SIGNAL_PHY2[15..0] - (RW) reserved for manual control cmdbt trigger
    CR_CMDBT_MANUAL_MODE_PHY2[31..16] - (RW)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_CR_CMDBT_MANUAL_MODE_PHY2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_CR_CMDBT_MANUAL_MODE_PHY2_MASK 0xFFFF0000                // CR_CMDBT_MANUAL_MODE_PHY2[31..16]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_CR_CMDBT_MANUAL_MODE_PHY2_SHFT 16
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_CR_CMDBT_MANUAL_MODE_SIGNAL_PHY2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_CR_CMDBT_MANUAL_MODE_SIGNAL_PHY2_MASK 0x0000FFFF                // CR_CMDBT_MANUAL_MODE_SIGNAL_PHY2[15..0]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_CR_CMDBT_MANUAL_MODE_SIGNAL_PHY2_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_MANUAL_CTRL_LMACON (0x81021000 + 0x94C)---

    CR_CMDBT_MANUAL_MODE_SIGNAL_LMACON[15..0] - (RW) reserved for manual control cmdbt trigger
    CR_CMDBT_MANUAL_MODE_LMACON[31..16] - (RW)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_CR_CMDBT_MANUAL_MODE_LMACON_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_CR_CMDBT_MANUAL_MODE_LMACON_MASK 0xFFFF0000                // CR_CMDBT_MANUAL_MODE_LMACON[31..16]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_CR_CMDBT_MANUAL_MODE_LMACON_SHFT 16
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_CR_CMDBT_MANUAL_MODE_SIGNAL_LMACON_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_CR_CMDBT_MANUAL_MODE_SIGNAL_LMACON_MASK 0x0000FFFF                // CR_CMDBT_MANUAL_MODE_SIGNAL_LMACON[15..0]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_CR_CMDBT_MANUAL_MODE_SIGNAL_LMACON_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_MANUAL_CTRL_LMAC2_RO (0x81021000 + 0x950)---

    bn0_cfg_wlanon_on_instr_finish_lmac2[0] - (RO) read status
    bn0_cfg_wlanon_sleep_instr_finish_lmac2[1] - (RO) read status
    bn0_cfg_sleep_wlanon_instr_finish_lmac2[2] - (RO) read status
    bn0_cfg_init_sleep_instr_finish_lmac2[3] - (RO) read status
    bn1_cfg_wlanon_on_instr_finish_lmac2[4] - (RO) read status
    bn1_cfg_wlanon_sleep_instr_finish_lmac2[5] - (RO) read status
    bn1_cfg_sleep_wlanon_instr_finish_lmac2[6] - (RO) read status
    bn1_cfg_init_sleep_instr_finish_lmac2[7] - (RO) read status
    bn2_cfg_wlanon_on_instr_finish_lmac2[8] - (RO) read status
    bn2_cfg_wlanon_sleep_instr_finish_lmac2[9] - (RO) read status
    bn2_cfg_sleep_wlanon_instr_finish_lmac2[10] - (RO) read status
    bn2_cfg_init_sleep_instr_finish_lmac2[11] - (RO) read status
    lit_cfg_wlanon_on_instr_finish_lmac2[12] - (RO) read status
    lit_cfg_wlanon_sleep_instr_finish_lmac2[13] - (RO) read status
    lit_cfg_sleep_wlanon_instr_finish_lmac2[14] - (RO) read status
    lit_cfg_init_sleep_instr_finish_lmac2[15] - (RO) read status
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_lit_cfg_init_sleep_instr_finish_lmac2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_lit_cfg_init_sleep_instr_finish_lmac2_MASK 0x00008000                // lit_cfg_init_sleep_instr_finish_lmac2[15]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_lit_cfg_init_sleep_instr_finish_lmac2_SHFT 15
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_lit_cfg_sleep_wlanon_instr_finish_lmac2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_lit_cfg_sleep_wlanon_instr_finish_lmac2_MASK 0x00004000                // lit_cfg_sleep_wlanon_instr_finish_lmac2[14]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_lit_cfg_sleep_wlanon_instr_finish_lmac2_SHFT 14
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_lit_cfg_wlanon_sleep_instr_finish_lmac2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_lit_cfg_wlanon_sleep_instr_finish_lmac2_MASK 0x00002000                // lit_cfg_wlanon_sleep_instr_finish_lmac2[13]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_lit_cfg_wlanon_sleep_instr_finish_lmac2_SHFT 13
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_lit_cfg_wlanon_on_instr_finish_lmac2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_lit_cfg_wlanon_on_instr_finish_lmac2_MASK 0x00001000                // lit_cfg_wlanon_on_instr_finish_lmac2[12]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_lit_cfg_wlanon_on_instr_finish_lmac2_SHFT 12
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn2_cfg_init_sleep_instr_finish_lmac2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn2_cfg_init_sleep_instr_finish_lmac2_MASK 0x00000800                // bn2_cfg_init_sleep_instr_finish_lmac2[11]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn2_cfg_init_sleep_instr_finish_lmac2_SHFT 11
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn2_cfg_sleep_wlanon_instr_finish_lmac2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn2_cfg_sleep_wlanon_instr_finish_lmac2_MASK 0x00000400                // bn2_cfg_sleep_wlanon_instr_finish_lmac2[10]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn2_cfg_sleep_wlanon_instr_finish_lmac2_SHFT 10
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn2_cfg_wlanon_sleep_instr_finish_lmac2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn2_cfg_wlanon_sleep_instr_finish_lmac2_MASK 0x00000200                // bn2_cfg_wlanon_sleep_instr_finish_lmac2[9]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn2_cfg_wlanon_sleep_instr_finish_lmac2_SHFT 9
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn2_cfg_wlanon_on_instr_finish_lmac2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn2_cfg_wlanon_on_instr_finish_lmac2_MASK 0x00000100                // bn2_cfg_wlanon_on_instr_finish_lmac2[8]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn2_cfg_wlanon_on_instr_finish_lmac2_SHFT 8
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn1_cfg_init_sleep_instr_finish_lmac2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn1_cfg_init_sleep_instr_finish_lmac2_MASK 0x00000080                // bn1_cfg_init_sleep_instr_finish_lmac2[7]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn1_cfg_init_sleep_instr_finish_lmac2_SHFT 7
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn1_cfg_sleep_wlanon_instr_finish_lmac2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn1_cfg_sleep_wlanon_instr_finish_lmac2_MASK 0x00000040                // bn1_cfg_sleep_wlanon_instr_finish_lmac2[6]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn1_cfg_sleep_wlanon_instr_finish_lmac2_SHFT 6
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn1_cfg_wlanon_sleep_instr_finish_lmac2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn1_cfg_wlanon_sleep_instr_finish_lmac2_MASK 0x00000020                // bn1_cfg_wlanon_sleep_instr_finish_lmac2[5]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn1_cfg_wlanon_sleep_instr_finish_lmac2_SHFT 5
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn1_cfg_wlanon_on_instr_finish_lmac2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn1_cfg_wlanon_on_instr_finish_lmac2_MASK 0x00000010                // bn1_cfg_wlanon_on_instr_finish_lmac2[4]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn1_cfg_wlanon_on_instr_finish_lmac2_SHFT 4
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn0_cfg_init_sleep_instr_finish_lmac2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn0_cfg_init_sleep_instr_finish_lmac2_MASK 0x00000008                // bn0_cfg_init_sleep_instr_finish_lmac2[3]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn0_cfg_init_sleep_instr_finish_lmac2_SHFT 3
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn0_cfg_sleep_wlanon_instr_finish_lmac2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn0_cfg_sleep_wlanon_instr_finish_lmac2_MASK 0x00000004                // bn0_cfg_sleep_wlanon_instr_finish_lmac2[2]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn0_cfg_sleep_wlanon_instr_finish_lmac2_SHFT 2
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn0_cfg_wlanon_sleep_instr_finish_lmac2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn0_cfg_wlanon_sleep_instr_finish_lmac2_MASK 0x00000002                // bn0_cfg_wlanon_sleep_instr_finish_lmac2[1]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn0_cfg_wlanon_sleep_instr_finish_lmac2_SHFT 1
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn0_cfg_wlanon_on_instr_finish_lmac2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn0_cfg_wlanon_on_instr_finish_lmac2_MASK 0x00000001                // bn0_cfg_wlanon_on_instr_finish_lmac2[0]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMAC2_RO_bn0_cfg_wlanon_on_instr_finish_lmac2_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_MANUAL_CTRL_PHY2_RO (0x81021000 + 0x954)---

    bn0_cfg_wlanon_on_instr_finish_phy2[0] - (RO) read status
    bn0_cfg_wlanon_sleep_instr_finish_phy2[1] - (RO) read status
    bn0_cfg_sleep_wlanon_instr_finish_phy2[2] - (RO) read status
    bn0_cfg_init_sleep_instr_finish_phy2[3] - (RO) read status
    bn1_cfg_wlanon_on_instr_finish_phy2[4] - (RO) read status
    bn1_cfg_wlanon_sleep_instr_finish_phy2[5] - (RO) read status
    bn1_cfg_sleep_wlanon_instr_finish_phy2[6] - (RO) read status
    bn1_cfg_init_sleep_instr_finish_phy2[7] - (RO) read status
    bn2_cfg_wlanon_on_instr_finish_phy2[8] - (RO) read status
    bn2_cfg_wlanon_sleep_instr_finish_phy2[9] - (RO) read status
    bn2_cfg_sleep_wlanon_instr_finish_phy2[10] - (RO) read status
    bn2_cfg_init_sleep_instr_finish_phy2[11] - (RO) read status
    lit_cfg_wlanon_on_instr_finish_phy2[12] - (RO) read status
    lit_cfg_wlanon_sleep_instr_finish_phy2[13] - (RO) read status
    lit_cfg_sleep_wlanon_instr_finish_phy2[14] - (RO) read status
    lit_cfg_init_sleep_instr_finish_phy2[15] - (RO) read status
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_lit_cfg_init_sleep_instr_finish_phy2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_lit_cfg_init_sleep_instr_finish_phy2_MASK 0x00008000                // lit_cfg_init_sleep_instr_finish_phy2[15]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_lit_cfg_init_sleep_instr_finish_phy2_SHFT 15
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_lit_cfg_sleep_wlanon_instr_finish_phy2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_lit_cfg_sleep_wlanon_instr_finish_phy2_MASK 0x00004000                // lit_cfg_sleep_wlanon_instr_finish_phy2[14]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_lit_cfg_sleep_wlanon_instr_finish_phy2_SHFT 14
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_lit_cfg_wlanon_sleep_instr_finish_phy2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_lit_cfg_wlanon_sleep_instr_finish_phy2_MASK 0x00002000                // lit_cfg_wlanon_sleep_instr_finish_phy2[13]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_lit_cfg_wlanon_sleep_instr_finish_phy2_SHFT 13
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_lit_cfg_wlanon_on_instr_finish_phy2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_lit_cfg_wlanon_on_instr_finish_phy2_MASK 0x00001000                // lit_cfg_wlanon_on_instr_finish_phy2[12]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_lit_cfg_wlanon_on_instr_finish_phy2_SHFT 12
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn2_cfg_init_sleep_instr_finish_phy2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn2_cfg_init_sleep_instr_finish_phy2_MASK 0x00000800                // bn2_cfg_init_sleep_instr_finish_phy2[11]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn2_cfg_init_sleep_instr_finish_phy2_SHFT 11
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn2_cfg_sleep_wlanon_instr_finish_phy2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn2_cfg_sleep_wlanon_instr_finish_phy2_MASK 0x00000400                // bn2_cfg_sleep_wlanon_instr_finish_phy2[10]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn2_cfg_sleep_wlanon_instr_finish_phy2_SHFT 10
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn2_cfg_wlanon_sleep_instr_finish_phy2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn2_cfg_wlanon_sleep_instr_finish_phy2_MASK 0x00000200                // bn2_cfg_wlanon_sleep_instr_finish_phy2[9]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn2_cfg_wlanon_sleep_instr_finish_phy2_SHFT 9
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn2_cfg_wlanon_on_instr_finish_phy2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn2_cfg_wlanon_on_instr_finish_phy2_MASK 0x00000100                // bn2_cfg_wlanon_on_instr_finish_phy2[8]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn2_cfg_wlanon_on_instr_finish_phy2_SHFT 8
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn1_cfg_init_sleep_instr_finish_phy2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn1_cfg_init_sleep_instr_finish_phy2_MASK 0x00000080                // bn1_cfg_init_sleep_instr_finish_phy2[7]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn1_cfg_init_sleep_instr_finish_phy2_SHFT 7
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn1_cfg_sleep_wlanon_instr_finish_phy2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn1_cfg_sleep_wlanon_instr_finish_phy2_MASK 0x00000040                // bn1_cfg_sleep_wlanon_instr_finish_phy2[6]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn1_cfg_sleep_wlanon_instr_finish_phy2_SHFT 6
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn1_cfg_wlanon_sleep_instr_finish_phy2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn1_cfg_wlanon_sleep_instr_finish_phy2_MASK 0x00000020                // bn1_cfg_wlanon_sleep_instr_finish_phy2[5]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn1_cfg_wlanon_sleep_instr_finish_phy2_SHFT 5
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn1_cfg_wlanon_on_instr_finish_phy2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn1_cfg_wlanon_on_instr_finish_phy2_MASK 0x00000010                // bn1_cfg_wlanon_on_instr_finish_phy2[4]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn1_cfg_wlanon_on_instr_finish_phy2_SHFT 4
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn0_cfg_init_sleep_instr_finish_phy2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn0_cfg_init_sleep_instr_finish_phy2_MASK 0x00000008                // bn0_cfg_init_sleep_instr_finish_phy2[3]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn0_cfg_init_sleep_instr_finish_phy2_SHFT 3
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn0_cfg_sleep_wlanon_instr_finish_phy2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn0_cfg_sleep_wlanon_instr_finish_phy2_MASK 0x00000004                // bn0_cfg_sleep_wlanon_instr_finish_phy2[2]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn0_cfg_sleep_wlanon_instr_finish_phy2_SHFT 2
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn0_cfg_wlanon_sleep_instr_finish_phy2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn0_cfg_wlanon_sleep_instr_finish_phy2_MASK 0x00000002                // bn0_cfg_wlanon_sleep_instr_finish_phy2[1]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn0_cfg_wlanon_sleep_instr_finish_phy2_SHFT 1
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn0_cfg_wlanon_on_instr_finish_phy2_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn0_cfg_wlanon_on_instr_finish_phy2_MASK 0x00000001                // bn0_cfg_wlanon_on_instr_finish_phy2[0]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_PHY2_RO_bn0_cfg_wlanon_on_instr_finish_phy2_SHFT 0

/* =====================================================================================

  ---WF_CMDBT_MANUAL_CTRL_LMACON_RO (0x81021000 + 0x958)---

    bn0_cfg_wlanon_on_instr_finish_lmacon[0] - (RO) read status
    bn0_cfg_wlanon_sleep_instr_finish_lmacon[1] - (RO) read status
    bn0_cfg_sleep_wlanon_instr_finish_lmacon[2] - (RO) read status
    bn0_cfg_init_sleep_instr_finish_lmacon[3] - (RO) read status
    bn1_cfg_wlanon_on_instr_finish_lmacon[4] - (RO) read status
    bn1_cfg_wlanon_sleep_instr_finish_lmacon[5] - (RO) read status
    bn1_cfg_sleep_wlanon_instr_finish_lmacon[6] - (RO) read status
    bn1_cfg_init_sleep_instr_finish_lmacon[7] - (RO) read status
    bn2_cfg_wlanon_on_instr_finish_lmacon[8] - (RO) read status
    bn2_cfg_wlanon_sleep_instr_finish_lmacon[9] - (RO) read status
    bn2_cfg_sleep_wlanon_instr_finish_lmacon[10] - (RO) read status
    bn2_cfg_init_sleep_instr_finish_lmacon[11] - (RO) read status
    lit_cfg_wlanon_on_instr_finish_lmacon[12] - (RO) read status
    lit_cfg_wlanon_sleep_instr_finish_lmacon[13] - (RO) read status
    lit_cfg_sleep_wlanon_instr_finish_lmacon[14] - (RO) read status
    lit_cfg_init_sleep_instr_finish_lmacon[15] - (RO) read status
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_lit_cfg_init_sleep_instr_finish_lmacon_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_lit_cfg_init_sleep_instr_finish_lmacon_MASK 0x00008000                // lit_cfg_init_sleep_instr_finish_lmacon[15]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_lit_cfg_init_sleep_instr_finish_lmacon_SHFT 15
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_lit_cfg_sleep_wlanon_instr_finish_lmacon_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_lit_cfg_sleep_wlanon_instr_finish_lmacon_MASK 0x00004000                // lit_cfg_sleep_wlanon_instr_finish_lmacon[14]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_lit_cfg_sleep_wlanon_instr_finish_lmacon_SHFT 14
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_lit_cfg_wlanon_sleep_instr_finish_lmacon_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_lit_cfg_wlanon_sleep_instr_finish_lmacon_MASK 0x00002000                // lit_cfg_wlanon_sleep_instr_finish_lmacon[13]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_lit_cfg_wlanon_sleep_instr_finish_lmacon_SHFT 13
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_lit_cfg_wlanon_on_instr_finish_lmacon_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_lit_cfg_wlanon_on_instr_finish_lmacon_MASK 0x00001000                // lit_cfg_wlanon_on_instr_finish_lmacon[12]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_lit_cfg_wlanon_on_instr_finish_lmacon_SHFT 12
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn2_cfg_init_sleep_instr_finish_lmacon_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn2_cfg_init_sleep_instr_finish_lmacon_MASK 0x00000800                // bn2_cfg_init_sleep_instr_finish_lmacon[11]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn2_cfg_init_sleep_instr_finish_lmacon_SHFT 11
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn2_cfg_sleep_wlanon_instr_finish_lmacon_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn2_cfg_sleep_wlanon_instr_finish_lmacon_MASK 0x00000400                // bn2_cfg_sleep_wlanon_instr_finish_lmacon[10]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn2_cfg_sleep_wlanon_instr_finish_lmacon_SHFT 10
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn2_cfg_wlanon_sleep_instr_finish_lmacon_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn2_cfg_wlanon_sleep_instr_finish_lmacon_MASK 0x00000200                // bn2_cfg_wlanon_sleep_instr_finish_lmacon[9]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn2_cfg_wlanon_sleep_instr_finish_lmacon_SHFT 9
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn2_cfg_wlanon_on_instr_finish_lmacon_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn2_cfg_wlanon_on_instr_finish_lmacon_MASK 0x00000100                // bn2_cfg_wlanon_on_instr_finish_lmacon[8]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn2_cfg_wlanon_on_instr_finish_lmacon_SHFT 8
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn1_cfg_init_sleep_instr_finish_lmacon_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn1_cfg_init_sleep_instr_finish_lmacon_MASK 0x00000080                // bn1_cfg_init_sleep_instr_finish_lmacon[7]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn1_cfg_init_sleep_instr_finish_lmacon_SHFT 7
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn1_cfg_sleep_wlanon_instr_finish_lmacon_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn1_cfg_sleep_wlanon_instr_finish_lmacon_MASK 0x00000040                // bn1_cfg_sleep_wlanon_instr_finish_lmacon[6]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn1_cfg_sleep_wlanon_instr_finish_lmacon_SHFT 6
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn1_cfg_wlanon_sleep_instr_finish_lmacon_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn1_cfg_wlanon_sleep_instr_finish_lmacon_MASK 0x00000020                // bn1_cfg_wlanon_sleep_instr_finish_lmacon[5]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn1_cfg_wlanon_sleep_instr_finish_lmacon_SHFT 5
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn1_cfg_wlanon_on_instr_finish_lmacon_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn1_cfg_wlanon_on_instr_finish_lmacon_MASK 0x00000010                // bn1_cfg_wlanon_on_instr_finish_lmacon[4]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn1_cfg_wlanon_on_instr_finish_lmacon_SHFT 4
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn0_cfg_init_sleep_instr_finish_lmacon_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn0_cfg_init_sleep_instr_finish_lmacon_MASK 0x00000008                // bn0_cfg_init_sleep_instr_finish_lmacon[3]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn0_cfg_init_sleep_instr_finish_lmacon_SHFT 3
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn0_cfg_sleep_wlanon_instr_finish_lmacon_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn0_cfg_sleep_wlanon_instr_finish_lmacon_MASK 0x00000004                // bn0_cfg_sleep_wlanon_instr_finish_lmacon[2]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn0_cfg_sleep_wlanon_instr_finish_lmacon_SHFT 2
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn0_cfg_wlanon_sleep_instr_finish_lmacon_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn0_cfg_wlanon_sleep_instr_finish_lmacon_MASK 0x00000002                // bn0_cfg_wlanon_sleep_instr_finish_lmacon[1]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn0_cfg_wlanon_sleep_instr_finish_lmacon_SHFT 1
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn0_cfg_wlanon_on_instr_finish_lmacon_ADDR WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_ADDR
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn0_cfg_wlanon_on_instr_finish_lmacon_MASK 0x00000001                // bn0_cfg_wlanon_on_instr_finish_lmacon[0]
#define WF_TOP_CFG_ON_WF_CMDBT_MANUAL_CTRL_LMACON_RO_bn0_cfg_wlanon_on_instr_finish_lmacon_SHFT 0

/* =====================================================================================

  ---WF_TOP_RGU_SW_RST (0x81021000 + 0x960)---

    WF_TOP_RGU_SW_RST_B[0]       - (RW) Create this CR in Eagle due to memory glitch issue occur in Falcon
                                     After disguss, we create a SW CR reset to reset wf_top_rgu_on_reg & wf_top_rgu_von_reg when radio-off case or L0.5 reset case
                                     default = 1'b1 (no reset)
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_WF_TOP_RGU_SW_RST_WF_TOP_RGU_SW_RST_B_ADDR WF_TOP_CFG_ON_WF_TOP_RGU_SW_RST_ADDR
#define WF_TOP_CFG_ON_WF_TOP_RGU_SW_RST_WF_TOP_RGU_SW_RST_B_MASK 0x00000001                // WF_TOP_RGU_SW_RST_B[0]
#define WF_TOP_CFG_ON_WF_TOP_RGU_SW_RST_WF_TOP_RGU_SW_RST_B_SHFT 0

/* =====================================================================================

  ---DEBUG_FLAG0 (0x81021000 + 0xB00)---

    DEBUG_FLAG0[31..0]           - (RO) DEBUG_FLAG0

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG0_DEBUG_FLAG0_ADDR             WF_TOP_CFG_ON_DEBUG_FLAG0_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG0_DEBUG_FLAG0_MASK             0xFFFFFFFF                // DEBUG_FLAG0[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG0_DEBUG_FLAG0_SHFT             0

/* =====================================================================================

  ---DEBUG_FLAG1 (0x81021000 + 0xB04)---

    DEBUG_FLAG1[31..0]           - (RO) DEBUG_FLAG1

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG1_DEBUG_FLAG1_ADDR             WF_TOP_CFG_ON_DEBUG_FLAG1_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG1_DEBUG_FLAG1_MASK             0xFFFFFFFF                // DEBUG_FLAG1[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG1_DEBUG_FLAG1_SHFT             0

/* =====================================================================================

  ---DEBUG_FLAG2 (0x81021000 + 0xB08)---

    DEBUG_FLAG2[31..0]           - (RO) DEBUG_FLAG2

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG2_DEBUG_FLAG2_ADDR             WF_TOP_CFG_ON_DEBUG_FLAG2_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG2_DEBUG_FLAG2_MASK             0xFFFFFFFF                // DEBUG_FLAG2[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG2_DEBUG_FLAG2_SHFT             0

/* =====================================================================================

  ---DEBUG_FLAG3 (0x81021000 + 0xB0C)---

    DEBUG_FLAG3[31..0]           - (RO) DEBUG_FLAG3

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG3_DEBUG_FLAG3_ADDR             WF_TOP_CFG_ON_DEBUG_FLAG3_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG3_DEBUG_FLAG3_MASK             0xFFFFFFFF                // DEBUG_FLAG3[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG3_DEBUG_FLAG3_SHFT             0

/* =====================================================================================

  ---DEBUG_FLAG4 (0x81021000 + 0xB10)---

    DEBUG_FLAG4[31..0]           - (RO) DEBUG_FLAG4

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG4_DEBUG_FLAG4_ADDR             WF_TOP_CFG_ON_DEBUG_FLAG4_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG4_DEBUG_FLAG4_MASK             0xFFFFFFFF                // DEBUG_FLAG4[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG4_DEBUG_FLAG4_SHFT             0

/* =====================================================================================

  ---DEBUG_FLAG5 (0x81021000 + 0xB14)---

    DEBUG_FLAG5[31..0]           - (RO) DEBUG_FLAG5

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG5_DEBUG_FLAG5_ADDR             WF_TOP_CFG_ON_DEBUG_FLAG5_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG5_DEBUG_FLAG5_MASK             0xFFFFFFFF                // DEBUG_FLAG5[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG5_DEBUG_FLAG5_SHFT             0

/* =====================================================================================

  ---DEBUG_FLAG6 (0x81021000 + 0xB18)---

    DEBUG_FLAG6[31..0]           - (RO) DEBUG_FLAG6

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG6_DEBUG_FLAG6_ADDR             WF_TOP_CFG_ON_DEBUG_FLAG6_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG6_DEBUG_FLAG6_MASK             0xFFFFFFFF                // DEBUG_FLAG6[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG6_DEBUG_FLAG6_SHFT             0

/* =====================================================================================

  ---DEBUG_FLAG7 (0x81021000 + 0xB1C)---

    DEBUG_FLAG7[31..0]           - (RO) DEBUG_FLAG7

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG7_DEBUG_FLAG7_ADDR             WF_TOP_CFG_ON_DEBUG_FLAG7_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG7_DEBUG_FLAG7_MASK             0xFFFFFFFF                // DEBUG_FLAG7[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG7_DEBUG_FLAG7_SHFT             0

/* =====================================================================================

  ---DEBUG_FLAG8 (0x81021000 + 0xB20)---

    DEBUG_FLAG8[31..0]           - (RO) DEBUG_FLAG8

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG8_DEBUG_FLAG8_ADDR             WF_TOP_CFG_ON_DEBUG_FLAG8_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG8_DEBUG_FLAG8_MASK             0xFFFFFFFF                // DEBUG_FLAG8[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG8_DEBUG_FLAG8_SHFT             0

/* =====================================================================================

  ---DEBUG_FLAG9 (0x81021000 + 0xB24)---

    DEBUG_FLAG9[31..0]           - (RO) DEBUG_FLAG9

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG9_DEBUG_FLAG9_ADDR             WF_TOP_CFG_ON_DEBUG_FLAG9_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG9_DEBUG_FLAG9_MASK             0xFFFFFFFF                // DEBUG_FLAG9[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG9_DEBUG_FLAG9_SHFT             0

/* =====================================================================================

  ---DEBUG_FLAG10 (0x81021000 + 0xB28)---

    DEBUG_FLAG10[31..0]          - (RO) DEBUG_FLAG10

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG10_DEBUG_FLAG10_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG10_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG10_DEBUG_FLAG10_MASK           0xFFFFFFFF                // DEBUG_FLAG10[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG10_DEBUG_FLAG10_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG11 (0x81021000 + 0xB2C)---

    DEBUG_FLAG11[31..0]          - (RO) DEBUG_FLAG11

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG11_DEBUG_FLAG11_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG11_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG11_DEBUG_FLAG11_MASK           0xFFFFFFFF                // DEBUG_FLAG11[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG11_DEBUG_FLAG11_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG12 (0x81021000 + 0xB30)---

    DEBUG_FLAG12[31..0]          - (RO) DEBUG_FLAG12

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG12_DEBUG_FLAG12_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG12_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG12_DEBUG_FLAG12_MASK           0xFFFFFFFF                // DEBUG_FLAG12[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG12_DEBUG_FLAG12_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG13 (0x81021000 + 0xB34)---

    DEBUG_FLAG13[31..0]          - (RO) DEBUG_FLAG13

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG13_DEBUG_FLAG13_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG13_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG13_DEBUG_FLAG13_MASK           0xFFFFFFFF                // DEBUG_FLAG13[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG13_DEBUG_FLAG13_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG14 (0x81021000 + 0xB38)---

    DEBUG_FLAG14[31..0]          - (RO) DEBUG_FLAG14

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG14_DEBUG_FLAG14_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG14_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG14_DEBUG_FLAG14_MASK           0xFFFFFFFF                // DEBUG_FLAG14[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG14_DEBUG_FLAG14_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG15 (0x81021000 + 0xB3C)---

    DEBUG_FLAG15[31..0]          - (RO) DEBUG_FLAG15

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG15_DEBUG_FLAG15_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG15_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG15_DEBUG_FLAG15_MASK           0xFFFFFFFF                // DEBUG_FLAG15[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG15_DEBUG_FLAG15_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG16 (0x81021000 + 0xB40)---

    DEBUG_FLAG16[31..0]          - (RO) DEBUG_FLAG16

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG16_DEBUG_FLAG16_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG16_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG16_DEBUG_FLAG16_MASK           0xFFFFFFFF                // DEBUG_FLAG16[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG16_DEBUG_FLAG16_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG17 (0x81021000 + 0xB50)---

    DEBUG_FLAG17[31..0]          - (RO) DEBUG_FLAG17

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG17_DEBUG_FLAG17_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG17_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG17_DEBUG_FLAG17_MASK           0xFFFFFFFF                // DEBUG_FLAG17[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG17_DEBUG_FLAG17_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG18 (0x81021000 + 0xB54)---

    DEBUG_FLAG18[31..0]          - (RO) DEBUG_FLAG18

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG18_DEBUG_FLAG18_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG18_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG18_DEBUG_FLAG18_MASK           0xFFFFFFFF                // DEBUG_FLAG18[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG18_DEBUG_FLAG18_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG19 (0x81021000 + 0xB58)---

    DEBUG_FLAG19[31..0]          - (RO) DEBUG_FLAG19

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG19_DEBUG_FLAG19_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG19_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG19_DEBUG_FLAG19_MASK           0xFFFFFFFF                // DEBUG_FLAG19[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG19_DEBUG_FLAG19_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG20 (0x81021000 + 0xB5C)---

    DEBUG_FLAG20[31..0]          - (RO) DEBUG_FLAG20

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG20_DEBUG_FLAG20_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG20_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG20_DEBUG_FLAG20_MASK           0xFFFFFFFF                // DEBUG_FLAG20[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG20_DEBUG_FLAG20_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG21 (0x81021000 + 0xB60)---

    DEBUG_FLAG21[31..0]          - (RO) DEBUG_FLAG21

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG21_DEBUG_FLAG21_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG21_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG21_DEBUG_FLAG21_MASK           0xFFFFFFFF                // DEBUG_FLAG21[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG21_DEBUG_FLAG21_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG22 (0x81021000 + 0xB64)---

    DEBUG_FLAG22[31..0]          - (RO) DEBUG_FLAG22

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG22_DEBUG_FLAG22_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG22_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG22_DEBUG_FLAG22_MASK           0xFFFFFFFF                // DEBUG_FLAG22[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG22_DEBUG_FLAG22_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG23 (0x81021000 + 0xB68)---

    DEBUG_FLAG23[31..0]          - (RO) DEBUG_FLAG23

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG23_DEBUG_FLAG23_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG23_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG23_DEBUG_FLAG23_MASK           0xFFFFFFFF                // DEBUG_FLAG23[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG23_DEBUG_FLAG23_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG24 (0x81021000 + 0xB6C)---

    DEBUG_FLAG24[31..0]          - (RO) DEBUG_FLAG24

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG24_DEBUG_FLAG24_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG24_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG24_DEBUG_FLAG24_MASK           0xFFFFFFFF                // DEBUG_FLAG24[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG24_DEBUG_FLAG24_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG25 (0x81021000 + 0xB70)---

    DEBUG_FLAG25[31..0]          - (RO) DEBUG_FLAG25

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG25_DEBUG_FLAG25_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG25_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG25_DEBUG_FLAG25_MASK           0xFFFFFFFF                // DEBUG_FLAG25[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG25_DEBUG_FLAG25_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG26 (0x81021000 + 0xB74)---

    DEBUG_FLAG26[31..0]          - (RO) DEBUG_FLAG26

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG26_DEBUG_FLAG26_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG26_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG26_DEBUG_FLAG26_MASK           0xFFFFFFFF                // DEBUG_FLAG26[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG26_DEBUG_FLAG26_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG27 (0x81021000 + 0xB78)---

    DEBUG_FLAG27[31..0]          - (RO) DEBUG_FLAG27

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG27_DEBUG_FLAG27_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG27_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG27_DEBUG_FLAG27_MASK           0xFFFFFFFF                // DEBUG_FLAG27[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG27_DEBUG_FLAG27_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG28 (0x81021000 + 0xB7C)---

    DEBUG_FLAG28[31..0]          - (RO) DEBUG_FLAG28

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG28_DEBUG_FLAG28_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG28_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG28_DEBUG_FLAG28_MASK           0xFFFFFFFF                // DEBUG_FLAG28[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG28_DEBUG_FLAG28_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG29 (0x81021000 + 0xB80)---

    DEBUG_FLAG29[31..0]          - (RO) DEBUG_FLAG29

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG29_DEBUG_FLAG29_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG29_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG29_DEBUG_FLAG29_MASK           0xFFFFFFFF                // DEBUG_FLAG29[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG29_DEBUG_FLAG29_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG30 (0x81021000 + 0xB84)---

    DEBUG_FLAG30[31..0]          - (RO) DEBUG_FLAG30

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG30_DEBUG_FLAG30_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG30_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG30_DEBUG_FLAG30_MASK           0xFFFFFFFF                // DEBUG_FLAG30[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG30_DEBUG_FLAG30_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG31 (0x81021000 + 0xB88)---

    DEBUG_FLAG31[31..0]          - (RO) DEBUG_FLAG31

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG31_DEBUG_FLAG31_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG31_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG31_DEBUG_FLAG31_MASK           0xFFFFFFFF                // DEBUG_FLAG31[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG31_DEBUG_FLAG31_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG32 (0x81021000 + 0xB8C)---

    DEBUG_FLAG32[31..0]          - (RO) DEBUG_FLAG32

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG32_DEBUG_FLAG32_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG32_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG32_DEBUG_FLAG32_MASK           0xFFFFFFFF                // DEBUG_FLAG32[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG32_DEBUG_FLAG32_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG33 (0x81021000 + 0xB90)---

    DEBUG_FLAG33[31..0]          - (RO) DEBUG_FLAG33

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG33_DEBUG_FLAG33_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG33_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG33_DEBUG_FLAG33_MASK           0xFFFFFFFF                // DEBUG_FLAG33[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG33_DEBUG_FLAG33_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG34 (0x81021000 + 0xB94)---

    DEBUG_FLAG34[31..0]          - (RO) DEBUG_FLAG34

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG34_DEBUG_FLAG34_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG34_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG34_DEBUG_FLAG34_MASK           0xFFFFFFFF                // DEBUG_FLAG34[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG34_DEBUG_FLAG34_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG35 (0x81021000 + 0xB98)---

    DEBUG_FLAG35[31..0]          - (RO) DEBUG_FLAG35

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG35_DEBUG_FLAG35_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG35_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG35_DEBUG_FLAG35_MASK           0xFFFFFFFF                // DEBUG_FLAG35[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG35_DEBUG_FLAG35_SHFT           0

/* =====================================================================================

  ---DEBUG_FLAG36 (0x81021000 + 0xB9C)---

    DEBUG_FLAG36[31..0]          - (RO) DEBUG_FLAG36

 =====================================================================================*/
#define WF_TOP_CFG_ON_DEBUG_FLAG36_DEBUG_FLAG36_ADDR           WF_TOP_CFG_ON_DEBUG_FLAG36_ADDR
#define WF_TOP_CFG_ON_DEBUG_FLAG36_DEBUG_FLAG36_MASK           0xFFFFFFFF                // DEBUG_FLAG36[31..0]
#define WF_TOP_CFG_ON_DEBUG_FLAG36_DEBUG_FLAG36_SHFT           0

/* =====================================================================================

  ---AOC_DEBUG_FLAG0 (0x81021000 + 0xC00)---

    AOC_DEBUG_FLAG0[31..0]       - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG0_AOC_DEBUG_FLAG0_ADDR     WF_TOP_CFG_ON_AOC_DEBUG_FLAG0_ADDR
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG0_AOC_DEBUG_FLAG0_MASK     0xFFFFFFFF                // AOC_DEBUG_FLAG0[31..0]
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG0_AOC_DEBUG_FLAG0_SHFT     0

/* =====================================================================================

  ---AOC_DEBUG_FLAG1 (0x81021000 + 0xC04)---

    AOC_DEBUG_FLAG1[31..0]       - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG1_AOC_DEBUG_FLAG1_ADDR     WF_TOP_CFG_ON_AOC_DEBUG_FLAG1_ADDR
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG1_AOC_DEBUG_FLAG1_MASK     0xFFFFFFFF                // AOC_DEBUG_FLAG1[31..0]
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG1_AOC_DEBUG_FLAG1_SHFT     0

/* =====================================================================================

  ---AOC_DEBUG_FLAG2 (0x81021000 + 0xC08)---

    AOC_DEBUG_FLAG2[31..0]       - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG2_AOC_DEBUG_FLAG2_ADDR     WF_TOP_CFG_ON_AOC_DEBUG_FLAG2_ADDR
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG2_AOC_DEBUG_FLAG2_MASK     0xFFFFFFFF                // AOC_DEBUG_FLAG2[31..0]
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG2_AOC_DEBUG_FLAG2_SHFT     0

/* =====================================================================================

  ---AOC_DEBUG_FLAG3 (0x81021000 + 0xC0C)---

    AOC_DEBUG_FLAG3[31..0]       - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG3_AOC_DEBUG_FLAG3_ADDR     WF_TOP_CFG_ON_AOC_DEBUG_FLAG3_ADDR
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG3_AOC_DEBUG_FLAG3_MASK     0xFFFFFFFF                // AOC_DEBUG_FLAG3[31..0]
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG3_AOC_DEBUG_FLAG3_SHFT     0

/* =====================================================================================

  ---AOC_DEBUG_FLAG4 (0x81021000 + 0xC10)---

    AOC_DEBUG_FLAG4[31..0]       - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG4_AOC_DEBUG_FLAG4_ADDR     WF_TOP_CFG_ON_AOC_DEBUG_FLAG4_ADDR
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG4_AOC_DEBUG_FLAG4_MASK     0xFFFFFFFF                // AOC_DEBUG_FLAG4[31..0]
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG4_AOC_DEBUG_FLAG4_SHFT     0

/* =====================================================================================

  ---AOC_DEBUG_FLAG5 (0x81021000 + 0xC14)---

    AOC_DEBUG_FLAG5[31..0]       - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG5_AOC_DEBUG_FLAG5_ADDR     WF_TOP_CFG_ON_AOC_DEBUG_FLAG5_ADDR
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG5_AOC_DEBUG_FLAG5_MASK     0xFFFFFFFF                // AOC_DEBUG_FLAG5[31..0]
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG5_AOC_DEBUG_FLAG5_SHFT     0

/* =====================================================================================

  ---AOC_DEBUG_FLAG6 (0x81021000 + 0xC18)---

    AOC_DEBUG_FLAG6[31..0]       - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG6_AOC_DEBUG_FLAG6_ADDR     WF_TOP_CFG_ON_AOC_DEBUG_FLAG6_ADDR
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG6_AOC_DEBUG_FLAG6_MASK     0xFFFFFFFF                // AOC_DEBUG_FLAG6[31..0]
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG6_AOC_DEBUG_FLAG6_SHFT     0

/* =====================================================================================

  ---AOC_DEBUG_FLAG7 (0x81021000 + 0xC1C)---

    AOC_DEBUG_FLAG7[31..0]       - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG7_AOC_DEBUG_FLAG7_ADDR     WF_TOP_CFG_ON_AOC_DEBUG_FLAG7_ADDR
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG7_AOC_DEBUG_FLAG7_MASK     0xFFFFFFFF                // AOC_DEBUG_FLAG7[31..0]
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG7_AOC_DEBUG_FLAG7_SHFT     0

/* =====================================================================================

  ---AOC_DEBUG_FLAG8 (0x81021000 + 0xC20)---

    AOC_DEBUG_FLAG8[31..0]       - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG8_AOC_DEBUG_FLAG8_ADDR     WF_TOP_CFG_ON_AOC_DEBUG_FLAG8_ADDR
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG8_AOC_DEBUG_FLAG8_MASK     0xFFFFFFFF                // AOC_DEBUG_FLAG8[31..0]
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG8_AOC_DEBUG_FLAG8_SHFT     0

/* =====================================================================================

  ---AOC_DEBUG_FLAG9 (0x81021000 + 0xC24)---

    AOC_DEBUG_FLAG9[31..0]       - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG9_AOC_DEBUG_FLAG9_ADDR     WF_TOP_CFG_ON_AOC_DEBUG_FLAG9_ADDR
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG9_AOC_DEBUG_FLAG9_MASK     0xFFFFFFFF                // AOC_DEBUG_FLAG9[31..0]
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG9_AOC_DEBUG_FLAG9_SHFT     0

/* =====================================================================================

  ---AOC_DEBUG_FLAG10 (0x81021000 + 0xC28)---

    AOC_DEBUG_FLAG10[31..0]      - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG10_AOC_DEBUG_FLAG10_ADDR   WF_TOP_CFG_ON_AOC_DEBUG_FLAG10_ADDR
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG10_AOC_DEBUG_FLAG10_MASK   0xFFFFFFFF                // AOC_DEBUG_FLAG10[31..0]
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG10_AOC_DEBUG_FLAG10_SHFT   0

/* =====================================================================================

  ---AOC_DEBUG_FLAG11 (0x81021000 + 0xC2C)---

    AOC_DEBUG_FLAG11[31..0]      - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG11_AOC_DEBUG_FLAG11_ADDR   WF_TOP_CFG_ON_AOC_DEBUG_FLAG11_ADDR
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG11_AOC_DEBUG_FLAG11_MASK   0xFFFFFFFF                // AOC_DEBUG_FLAG11[31..0]
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG11_AOC_DEBUG_FLAG11_SHFT   0

/* =====================================================================================

  ---AOC_DEBUG_FLAG12 (0x81021000 + 0xC30)---

    AOC_DEBUG_FLAG12[31..0]      - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG12_AOC_DEBUG_FLAG12_ADDR   WF_TOP_CFG_ON_AOC_DEBUG_FLAG12_ADDR
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG12_AOC_DEBUG_FLAG12_MASK   0xFFFFFFFF                // AOC_DEBUG_FLAG12[31..0]
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG12_AOC_DEBUG_FLAG12_SHFT   0

/* =====================================================================================

  ---AOC_DEBUG_FLAG13 (0x81021000 + 0xC34)---

    AOC_DEBUG_FLAG13[31..0]      - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG13_AOC_DEBUG_FLAG13_ADDR   WF_TOP_CFG_ON_AOC_DEBUG_FLAG13_ADDR
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG13_AOC_DEBUG_FLAG13_MASK   0xFFFFFFFF                // AOC_DEBUG_FLAG13[31..0]
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG13_AOC_DEBUG_FLAG13_SHFT   0

/* =====================================================================================

  ---AOC_DEBUG_FLAG14 (0x81021000 + 0xC38)---

    AOC_DEBUG_FLAG14[31..0]      - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG14_AOC_DEBUG_FLAG14_ADDR   WF_TOP_CFG_ON_AOC_DEBUG_FLAG14_ADDR
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG14_AOC_DEBUG_FLAG14_MASK   0xFFFFFFFF                // AOC_DEBUG_FLAG14[31..0]
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG14_AOC_DEBUG_FLAG14_SHFT   0

/* =====================================================================================

  ---AOC_DEBUG_FLAG15 (0x81021000 + 0xC3C)---

    AOC_DEBUG_FLAG15[31..0]      - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG15_AOC_DEBUG_FLAG15_ADDR   WF_TOP_CFG_ON_AOC_DEBUG_FLAG15_ADDR
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG15_AOC_DEBUG_FLAG15_MASK   0xFFFFFFFF                // AOC_DEBUG_FLAG15[31..0]
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG15_AOC_DEBUG_FLAG15_SHFT   0

/* =====================================================================================

  ---AOC_DEBUG_FLAG_SEL (0x81021000 + 0xC40)---

    AOC_DEBUG_FLAG_SEL[31..0]    - (RW)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG_SEL_AOC_DEBUG_FLAG_SEL_ADDR WF_TOP_CFG_ON_AOC_DEBUG_FLAG_SEL_ADDR
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG_SEL_AOC_DEBUG_FLAG_SEL_MASK 0xFFFFFFFF                // AOC_DEBUG_FLAG_SEL[31..0]
#define WF_TOP_CFG_ON_AOC_DEBUG_FLAG_SEL_AOC_DEBUG_FLAG_SEL_SHFT 0

/* =====================================================================================

  ---MET_CFG_ON_EVENT_DBG_SEL (0x81021000 + 0xCF0)---

    CR_MET_CFG_ON_EVENT_DBG_SEL[7..0] - (RW)  xxx 
    CR_MET_CFG_ON_EVENT_DBG_EN[8] - (RW)  xxx 
    RESERVED9[15..9]             - (RO) Reserved bits
    RO_MET_CFG_ON_EVENT_DBG_DATA[31..16] - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_MET_CFG_ON_EVENT_DBG_SEL_RO_MET_CFG_ON_EVENT_DBG_DATA_ADDR WF_TOP_CFG_ON_MET_CFG_ON_EVENT_DBG_SEL_ADDR
#define WF_TOP_CFG_ON_MET_CFG_ON_EVENT_DBG_SEL_RO_MET_CFG_ON_EVENT_DBG_DATA_MASK 0xFFFF0000                // RO_MET_CFG_ON_EVENT_DBG_DATA[31..16]
#define WF_TOP_CFG_ON_MET_CFG_ON_EVENT_DBG_SEL_RO_MET_CFG_ON_EVENT_DBG_DATA_SHFT 16
#define WF_TOP_CFG_ON_MET_CFG_ON_EVENT_DBG_SEL_CR_MET_CFG_ON_EVENT_DBG_EN_ADDR WF_TOP_CFG_ON_MET_CFG_ON_EVENT_DBG_SEL_ADDR
#define WF_TOP_CFG_ON_MET_CFG_ON_EVENT_DBG_SEL_CR_MET_CFG_ON_EVENT_DBG_EN_MASK 0x00000100                // CR_MET_CFG_ON_EVENT_DBG_EN[8]
#define WF_TOP_CFG_ON_MET_CFG_ON_EVENT_DBG_SEL_CR_MET_CFG_ON_EVENT_DBG_EN_SHFT 8
#define WF_TOP_CFG_ON_MET_CFG_ON_EVENT_DBG_SEL_CR_MET_CFG_ON_EVENT_DBG_SEL_ADDR WF_TOP_CFG_ON_MET_CFG_ON_EVENT_DBG_SEL_ADDR
#define WF_TOP_CFG_ON_MET_CFG_ON_EVENT_DBG_SEL_CR_MET_CFG_ON_EVENT_DBG_SEL_MASK 0x000000FF                // CR_MET_CFG_ON_EVENT_DBG_SEL[7..0]
#define WF_TOP_CFG_ON_MET_CFG_ON_EVENT_DBG_SEL_CR_MET_CFG_ON_EVENT_DBG_SEL_SHFT 0

/* =====================================================================================

  ---APB_DECODER_CTL_0 (0x81021000 + 0xF00)---

    cr_apb_decoder_way_en[15..0] - (RW)  xxx 
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_APB_DECODER_CTL_0_cr_apb_decoder_way_en_ADDR WF_TOP_CFG_ON_APB_DECODER_CTL_0_ADDR
#define WF_TOP_CFG_ON_APB_DECODER_CTL_0_cr_apb_decoder_way_en_MASK 0x0000FFFF                // cr_apb_decoder_way_en[15..0]
#define WF_TOP_CFG_ON_APB_DECODER_CTL_0_cr_apb_decoder_way_en_SHFT 0

/* =====================================================================================

  ---APB_DECODER_STAT_0 (0x81021000 + 0xF04)---

    ro_apb_decoder_err_paddr[15..0] - (RO)  xxx 
    ro_apb_decoder_ctrl_update[16] - (RO)  xxx 
    ro_apb_decoder_dec_err[17]   - (RO)  xxx 
    ro_apb_decoder_err_psecure_b[18] - (RO)  xxx 
    ro_apb_decoder_err_pwrite[19] - (RO)  xxx 
    ro_apb_decoder_idle[20]      - (RO)  xxx 
    RESERVED21[31..21]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_APB_DECODER_STAT_0_ro_apb_decoder_idle_ADDR WF_TOP_CFG_ON_APB_DECODER_STAT_0_ADDR
#define WF_TOP_CFG_ON_APB_DECODER_STAT_0_ro_apb_decoder_idle_MASK 0x00100000                // ro_apb_decoder_idle[20]
#define WF_TOP_CFG_ON_APB_DECODER_STAT_0_ro_apb_decoder_idle_SHFT 20
#define WF_TOP_CFG_ON_APB_DECODER_STAT_0_ro_apb_decoder_err_pwrite_ADDR WF_TOP_CFG_ON_APB_DECODER_STAT_0_ADDR
#define WF_TOP_CFG_ON_APB_DECODER_STAT_0_ro_apb_decoder_err_pwrite_MASK 0x00080000                // ro_apb_decoder_err_pwrite[19]
#define WF_TOP_CFG_ON_APB_DECODER_STAT_0_ro_apb_decoder_err_pwrite_SHFT 19
#define WF_TOP_CFG_ON_APB_DECODER_STAT_0_ro_apb_decoder_err_psecure_b_ADDR WF_TOP_CFG_ON_APB_DECODER_STAT_0_ADDR
#define WF_TOP_CFG_ON_APB_DECODER_STAT_0_ro_apb_decoder_err_psecure_b_MASK 0x00040000                // ro_apb_decoder_err_psecure_b[18]
#define WF_TOP_CFG_ON_APB_DECODER_STAT_0_ro_apb_decoder_err_psecure_b_SHFT 18
#define WF_TOP_CFG_ON_APB_DECODER_STAT_0_ro_apb_decoder_dec_err_ADDR WF_TOP_CFG_ON_APB_DECODER_STAT_0_ADDR
#define WF_TOP_CFG_ON_APB_DECODER_STAT_0_ro_apb_decoder_dec_err_MASK 0x00020000                // ro_apb_decoder_dec_err[17]
#define WF_TOP_CFG_ON_APB_DECODER_STAT_0_ro_apb_decoder_dec_err_SHFT 17
#define WF_TOP_CFG_ON_APB_DECODER_STAT_0_ro_apb_decoder_ctrl_update_ADDR WF_TOP_CFG_ON_APB_DECODER_STAT_0_ADDR
#define WF_TOP_CFG_ON_APB_DECODER_STAT_0_ro_apb_decoder_ctrl_update_MASK 0x00010000                // ro_apb_decoder_ctrl_update[16]
#define WF_TOP_CFG_ON_APB_DECODER_STAT_0_ro_apb_decoder_ctrl_update_SHFT 16
#define WF_TOP_CFG_ON_APB_DECODER_STAT_0_ro_apb_decoder_err_paddr_ADDR WF_TOP_CFG_ON_APB_DECODER_STAT_0_ADDR
#define WF_TOP_CFG_ON_APB_DECODER_STAT_0_ro_apb_decoder_err_paddr_MASK 0x0000FFFF                // ro_apb_decoder_err_paddr[15..0]
#define WF_TOP_CFG_ON_APB_DECODER_STAT_0_ro_apb_decoder_err_paddr_SHFT 0

/* =====================================================================================

  ---APB_DECODER_BIG_CTL_0 (0x81021000 + 0xF08)---

    cr_apb_decoder_big_way_en[10..0] - (RW)  xxx 
    RESERVED11[31..11]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_APB_DECODER_BIG_CTL_0_cr_apb_decoder_big_way_en_ADDR WF_TOP_CFG_ON_APB_DECODER_BIG_CTL_0_ADDR
#define WF_TOP_CFG_ON_APB_DECODER_BIG_CTL_0_cr_apb_decoder_big_way_en_MASK 0x000007FF                // cr_apb_decoder_big_way_en[10..0]
#define WF_TOP_CFG_ON_APB_DECODER_BIG_CTL_0_cr_apb_decoder_big_way_en_SHFT 0

/* =====================================================================================

  ---APB_DECODER_BIG_STAT_0 (0x81021000 + 0xF0C)---

    ro_apb_decoder_big_err_paddr[19..0] - (RO)  xxx 
    ro_apb_decoder_big_ctrl_update[20] - (RO)  xxx 
    ro_apb_decoder_big_dec_err[21] - (RO)  xxx 
    ro_apb_decoder_big_err_psecure_b[22] - (RO)  xxx 
    ro_apb_decoder_big_err_pwrite[23] - (RO)  xxx 
    ro_apb_decoder_big_idle[24]  - (RO)  xxx 
    RESERVED25[31..25]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_APB_DECODER_BIG_STAT_0_ro_apb_decoder_big_idle_ADDR WF_TOP_CFG_ON_APB_DECODER_BIG_STAT_0_ADDR
#define WF_TOP_CFG_ON_APB_DECODER_BIG_STAT_0_ro_apb_decoder_big_idle_MASK 0x01000000                // ro_apb_decoder_big_idle[24]
#define WF_TOP_CFG_ON_APB_DECODER_BIG_STAT_0_ro_apb_decoder_big_idle_SHFT 24
#define WF_TOP_CFG_ON_APB_DECODER_BIG_STAT_0_ro_apb_decoder_big_err_pwrite_ADDR WF_TOP_CFG_ON_APB_DECODER_BIG_STAT_0_ADDR
#define WF_TOP_CFG_ON_APB_DECODER_BIG_STAT_0_ro_apb_decoder_big_err_pwrite_MASK 0x00800000                // ro_apb_decoder_big_err_pwrite[23]
#define WF_TOP_CFG_ON_APB_DECODER_BIG_STAT_0_ro_apb_decoder_big_err_pwrite_SHFT 23
#define WF_TOP_CFG_ON_APB_DECODER_BIG_STAT_0_ro_apb_decoder_big_err_psecure_b_ADDR WF_TOP_CFG_ON_APB_DECODER_BIG_STAT_0_ADDR
#define WF_TOP_CFG_ON_APB_DECODER_BIG_STAT_0_ro_apb_decoder_big_err_psecure_b_MASK 0x00400000                // ro_apb_decoder_big_err_psecure_b[22]
#define WF_TOP_CFG_ON_APB_DECODER_BIG_STAT_0_ro_apb_decoder_big_err_psecure_b_SHFT 22
#define WF_TOP_CFG_ON_APB_DECODER_BIG_STAT_0_ro_apb_decoder_big_dec_err_ADDR WF_TOP_CFG_ON_APB_DECODER_BIG_STAT_0_ADDR
#define WF_TOP_CFG_ON_APB_DECODER_BIG_STAT_0_ro_apb_decoder_big_dec_err_MASK 0x00200000                // ro_apb_decoder_big_dec_err[21]
#define WF_TOP_CFG_ON_APB_DECODER_BIG_STAT_0_ro_apb_decoder_big_dec_err_SHFT 21
#define WF_TOP_CFG_ON_APB_DECODER_BIG_STAT_0_ro_apb_decoder_big_ctrl_update_ADDR WF_TOP_CFG_ON_APB_DECODER_BIG_STAT_0_ADDR
#define WF_TOP_CFG_ON_APB_DECODER_BIG_STAT_0_ro_apb_decoder_big_ctrl_update_MASK 0x00100000                // ro_apb_decoder_big_ctrl_update[20]
#define WF_TOP_CFG_ON_APB_DECODER_BIG_STAT_0_ro_apb_decoder_big_ctrl_update_SHFT 20
#define WF_TOP_CFG_ON_APB_DECODER_BIG_STAT_0_ro_apb_decoder_big_err_paddr_ADDR WF_TOP_CFG_ON_APB_DECODER_BIG_STAT_0_ADDR
#define WF_TOP_CFG_ON_APB_DECODER_BIG_STAT_0_ro_apb_decoder_big_err_paddr_MASK 0x000FFFFF                // ro_apb_decoder_big_err_paddr[19..0]
#define WF_TOP_CFG_ON_APB_DECODER_BIG_STAT_0_ro_apb_decoder_big_err_paddr_SHFT 0

/* =====================================================================================

  ---APB_DECODER_AON_CTL_0 (0x81021000 + 0xF10)---

    cr_apb_decoder_aon_way_en[15..0] - (RW)  xxx 
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_APB_DECODER_AON_CTL_0_cr_apb_decoder_aon_way_en_ADDR WF_TOP_CFG_ON_APB_DECODER_AON_CTL_0_ADDR
#define WF_TOP_CFG_ON_APB_DECODER_AON_CTL_0_cr_apb_decoder_aon_way_en_MASK 0x0000FFFF                // cr_apb_decoder_aon_way_en[15..0]
#define WF_TOP_CFG_ON_APB_DECODER_AON_CTL_0_cr_apb_decoder_aon_way_en_SHFT 0

/* =====================================================================================

  ---APB_DECODER_AON_STAT_0 (0x81021000 + 0xF14)---

    ro_apb_decoder_aon_err_paddr[15..0] - (RO)  xxx 
    ro_apb_decoder_aon_ctrl_update[16] - (RO)  xxx 
    ro_apb_decoder_aon_dec_err[17] - (RO)  xxx 
    ro_apb_decoder_aon_err_psecure_b[18] - (RO)  xxx 
    ro_apb_decoder_aon_err_pwrite[19] - (RO)  xxx 
    ro_apb_decoder_aon_idle[20]  - (RO)  xxx 
    RESERVED21[31..21]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_ON_APB_DECODER_AON_STAT_0_ro_apb_decoder_aon_idle_ADDR WF_TOP_CFG_ON_APB_DECODER_AON_STAT_0_ADDR
#define WF_TOP_CFG_ON_APB_DECODER_AON_STAT_0_ro_apb_decoder_aon_idle_MASK 0x00100000                // ro_apb_decoder_aon_idle[20]
#define WF_TOP_CFG_ON_APB_DECODER_AON_STAT_0_ro_apb_decoder_aon_idle_SHFT 20
#define WF_TOP_CFG_ON_APB_DECODER_AON_STAT_0_ro_apb_decoder_aon_err_pwrite_ADDR WF_TOP_CFG_ON_APB_DECODER_AON_STAT_0_ADDR
#define WF_TOP_CFG_ON_APB_DECODER_AON_STAT_0_ro_apb_decoder_aon_err_pwrite_MASK 0x00080000                // ro_apb_decoder_aon_err_pwrite[19]
#define WF_TOP_CFG_ON_APB_DECODER_AON_STAT_0_ro_apb_decoder_aon_err_pwrite_SHFT 19
#define WF_TOP_CFG_ON_APB_DECODER_AON_STAT_0_ro_apb_decoder_aon_err_psecure_b_ADDR WF_TOP_CFG_ON_APB_DECODER_AON_STAT_0_ADDR
#define WF_TOP_CFG_ON_APB_DECODER_AON_STAT_0_ro_apb_decoder_aon_err_psecure_b_MASK 0x00040000                // ro_apb_decoder_aon_err_psecure_b[18]
#define WF_TOP_CFG_ON_APB_DECODER_AON_STAT_0_ro_apb_decoder_aon_err_psecure_b_SHFT 18
#define WF_TOP_CFG_ON_APB_DECODER_AON_STAT_0_ro_apb_decoder_aon_dec_err_ADDR WF_TOP_CFG_ON_APB_DECODER_AON_STAT_0_ADDR
#define WF_TOP_CFG_ON_APB_DECODER_AON_STAT_0_ro_apb_decoder_aon_dec_err_MASK 0x00020000                // ro_apb_decoder_aon_dec_err[17]
#define WF_TOP_CFG_ON_APB_DECODER_AON_STAT_0_ro_apb_decoder_aon_dec_err_SHFT 17
#define WF_TOP_CFG_ON_APB_DECODER_AON_STAT_0_ro_apb_decoder_aon_ctrl_update_ADDR WF_TOP_CFG_ON_APB_DECODER_AON_STAT_0_ADDR
#define WF_TOP_CFG_ON_APB_DECODER_AON_STAT_0_ro_apb_decoder_aon_ctrl_update_MASK 0x00010000                // ro_apb_decoder_aon_ctrl_update[16]
#define WF_TOP_CFG_ON_APB_DECODER_AON_STAT_0_ro_apb_decoder_aon_ctrl_update_SHFT 16
#define WF_TOP_CFG_ON_APB_DECODER_AON_STAT_0_ro_apb_decoder_aon_err_paddr_ADDR WF_TOP_CFG_ON_APB_DECODER_AON_STAT_0_ADDR
#define WF_TOP_CFG_ON_APB_DECODER_AON_STAT_0_ro_apb_decoder_aon_err_paddr_MASK 0x0000FFFF                // ro_apb_decoder_aon_err_paddr[15..0]
#define WF_TOP_CFG_ON_APB_DECODER_AON_STAT_0_ro_apb_decoder_aon_err_paddr_SHFT 0

/* =====================================================================================

  ---FPGA_RESERVE (0x81021000 + 0xFFC)---

    WF_FPGA[31..0]               - (RW)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_ON_FPGA_RESERVE_WF_FPGA_ADDR                WF_TOP_CFG_ON_FPGA_RESERVE_ADDR
#define WF_TOP_CFG_ON_FPGA_RESERVE_WF_FPGA_MASK                0xFFFFFFFF                // WF_FPGA[31..0]
#define WF_TOP_CFG_ON_FPGA_RESERVE_WF_FPGA_SHFT                0

#ifdef __cplusplus
}
#endif

#endif // __WF_TOP_CFG_ON_REGS_H__
