/* SPDX-License-Identifier: BSD-2-Clause */
/*
 * Copyright (c) 2021 MediaTek Inc.
 */

//[File]            : wf_rro_top.h
//[Revision time]   : Fri Aug 27 11:07:31 2021
//[Description]     : This file is auto generated by CODA
//[Copyright]       : Copyright (C) 2021 Mediatek Incorportion. All rights reserved.

#ifndef __WF_RRO_TOP_REGS_H__
#define __WF_RRO_TOP_REGS_H__

#include "hal_common.h"

#ifdef __cplusplus
extern "C" {
#endif


//****************************************************************************
//
//                     WF_RRO_TOP CR Definitions
//
//****************************************************************************

#define WF_RRO_TOP_BASE                                        0x820C2000

#define WF_RRO_TOP_GLOBAL_CONFG_ADDR                           (WF_RRO_TOP_BASE + 0x0) // 2000
#define WF_RRO_TOP_RST_ADDR                                    (WF_RRO_TOP_BASE + 0x4) // 2004
#define WF_RRO_TOP_BA_BITMAP_BASE_0_ADDR                       (WF_RRO_TOP_BASE + 0x8) // 2008
#define WF_RRO_TOP_BA_BITMAP_BASE_1_ADDR                       (WF_RRO_TOP_BASE + 0xC) // 200C
#define WF_RRO_TOP_BA_CTRL_ADDR                                (WF_RRO_TOP_BASE + 0x10) // 2010
#define WF_RRO_TOP_BA_STA_CFG_ADDR                             (WF_RRO_TOP_BASE + 0x14) // 2014
#define WF_RRO_TOP_UPDATE_WIN_ADDR                             (WF_RRO_TOP_BASE + 0x18) // 2018
#define WF_RRO_TOP_RRO_PROC_RING_0_ADDR                        (WF_RRO_TOP_BASE + 0x20) // 2020
#define WF_RRO_TOP_RRO_PROC_RING_1_ADDR                        (WF_RRO_TOP_BASE + 0x24) // 2024
#define WF_RRO_TOP_ADDR_ARRAY_BASE_0_ADDR                      (WF_RRO_TOP_BASE + 0x30) // 2030
#define WF_RRO_TOP_ADDR_ARRAY_BASE_1_ADDR                      (WF_RRO_TOP_BASE + 0x34) // 2034
#define WF_RRO_TOP_IND_CMD_SIGNATURE_BASE_0_ADDR               (WF_RRO_TOP_BASE + 0x38) // 2038
#define WF_RRO_TOP_IND_CMD_SIGNATURE_BASE_1_ADDR               (WF_RRO_TOP_BASE + 0x3C) // 203C
#define WF_RRO_TOP_IND_CMD_0_CTRL0_ADDR                        (WF_RRO_TOP_BASE + 0x40) // 2040
#define WF_RRO_TOP_IND_CMD_0_CTRL1_ADDR                        (WF_RRO_TOP_BASE + 0x44) // 2044
#define WF_RRO_TOP_IND_CMD_0_CTRL2_ADDR                        (WF_RRO_TOP_BASE + 0x48) // 2048
#define WF_RRO_TOP_IND_CMD_0_CTRL3_ADDR                        (WF_RRO_TOP_BASE + 0x4c) // 204C
#define WF_RRO_TOP_ACK_SN_CTRL_ADDR                            (WF_RRO_TOP_BASE + 0x50) // 2050
#define WF_RRO_TOP_PARTICULAR_SESSION_0_ADDR                   (WF_RRO_TOP_BASE + 0x60) // 2060
#define WF_RRO_TOP_TIMEOUT_CONF_0_ADDR                         (WF_RRO_TOP_BASE + 0x64) // 2064
#define WF_RRO_TOP_TIMEOUT_CONF_1_ADDR                         (WF_RRO_TOP_BASE + 0x68) // 2068
#define WF_RRO_TOP_TIMEOUT_CTRL_ADDR                           (WF_RRO_TOP_BASE + 0x6C) // 206C
#define WF_RRO_TOP_CACHE_LRU_INFO_ADDR                         (WF_RRO_TOP_BASE + 0x70) // 2070
#define WF_RRO_TOP_LRU_FW_LIST_ADDR                            (WF_RRO_TOP_BASE + 0x74) // 2074
#define WF_RRO_TOP_LRU_BW_LIST_ADDR                            (WF_RRO_TOP_BASE + 0x78) // 2078
#define WF_RRO_TOP_CACHE_INFO_0_ADDR                           (WF_RRO_TOP_BASE + 0x7C) // 207C
#define WF_RRO_TOP_CACHE_INFO_1_ADDR                           (WF_RRO_TOP_BASE + 0x80) // 2080
#define WF_RRO_TOP_CACHE_INFO_2_ADDR                           (WF_RRO_TOP_BASE + 0x84) // 2084
#define WF_RRO_TOP_CACHE_INFO_3_ADDR                           (WF_RRO_TOP_BASE + 0x88) // 2088
#define WF_RRO_TOP_BUF_RUN_OUT_CONF_0_ADDR                     (WF_RRO_TOP_BASE + 0x90) // 2090
#define WF_RRO_TOP_BUF_RUN_OUT_CONF_1_ADDR                     (WF_RRO_TOP_BASE + 0x94) // 2094
#define WF_RRO_TOP_SRAM_TEST_CTRL_ADDR                         (WF_RRO_TOP_BASE + 0xA0) // 20A0
#define WF_RRO_TOP_APB_SLV0_STS_ADDR                           (WF_RRO_TOP_BASE + 0xB0) // 20B0
#define WF_RRO_TOP_APB_SLV1_STS_ADDR                           (WF_RRO_TOP_BASE + 0xB4) // 20B4
#define WF_RRO_TOP_AXI_MST_CFG_ADDR                            (WF_RRO_TOP_BASE + 0xB8) // 20B8
#define WF_RRO_TOP_AXI_DEHANG_CTRL_ADDR                        (WF_RRO_TOP_BASE + 0xBC) // 20BC
#define WF_RRO_TOP_AXI_DEHANG_DBG_ADDR                         (WF_RRO_TOP_BASE + 0xC0) // 20C0
#define WF_RRO_TOP_AXI_SLPPROT_CTRL_ADDR                       (WF_RRO_TOP_BASE + 0xC4) // 20C4
#define WF_RRO_TOP_R2A_DBG_ADDR                                (WF_RRO_TOP_BASE + 0xC8) // 20C8
#define WF_RRO_TOP_MEM_MST_CFG_ADDR                            (WF_RRO_TOP_BASE + 0xD0) // 20D0
#define WF_RRO_TOP_DBG_RD_CTRL_ADDR                            (WF_RRO_TOP_BASE + 0xE0) // 20E0
#define WF_RRO_TOP_DBG_RDAT_DW0_ADDR                           (WF_RRO_TOP_BASE + 0xF0) // 20F0
#define WF_RRO_TOP_DBG_RDAT_DW1_ADDR                           (WF_RRO_TOP_BASE + 0xF4) // 20F4
#define WF_RRO_TOP_DBG_RDAT_DW2_ADDR                           (WF_RRO_TOP_BASE + 0xF8) // 20F8
#define WF_RRO_TOP_DBG_RDAT_DW3_ADDR                           (WF_RRO_TOP_BASE + 0xFC) // 20FC
#define WF_RRO_TOP_STATISTIC_0_ADDR                            (WF_RRO_TOP_BASE + 0x180) // 2180
#define WF_RRO_TOP_STATISTIC_1_ADDR                            (WF_RRO_TOP_BASE + 0x184) // 2184
#define WF_RRO_TOP_STATISTIC_2_ADDR                            (WF_RRO_TOP_BASE + 0x188) // 2188
#define WF_RRO_TOP_STATISTIC_3_ADDR                            (WF_RRO_TOP_BASE + 0x18C) // 218C
#define WF_RRO_TOP_STATISTIC_4_ADDR                            (WF_RRO_TOP_BASE + 0x190) // 2190
#define WF_RRO_TOP_STATISTIC_5_ADDR                            (WF_RRO_TOP_BASE + 0x194) // 2194
#define WF_RRO_TOP_STATISTIC_6_ADDR                            (WF_RRO_TOP_BASE + 0x198) // 2198
#define WF_RRO_TOP_STATISTIC_7_ADDR                            (WF_RRO_TOP_BASE + 0x19C) // 219C
#define WF_RRO_TOP_STATISTIC_8_ADDR                            (WF_RRO_TOP_BASE + 0x1A0) // 21A0
#define WF_RRO_TOP_STATISTIC_9_ADDR                            (WF_RRO_TOP_BASE + 0x1A4) // 21A4
#define WF_RRO_TOP_STATISTIC_10_ADDR                           (WF_RRO_TOP_BASE + 0x1A8) // 21A8
#define WF_RRO_TOP_STATISTIC_11_ADDR                           (WF_RRO_TOP_BASE + 0x1AC) // 21AC
#define WF_RRO_TOP_HOST_INT_STS_ADDR                           (WF_RRO_TOP_BASE + 0x200) // 2200
#define WF_RRO_TOP_HOST_INT_ENA_ADDR                           (WF_RRO_TOP_BASE + 0x204) // 2204
#define WF_RRO_TOP_MCU_INT_STS_ADDR                            (WF_RRO_TOP_BASE + 0x210) // 2210
#define WF_RRO_TOP_MCU_INT_ENA_ADDR                            (WF_RRO_TOP_BASE + 0x214) // 2214
#define WF_RRO_TOP_RRO_BUSY_STATUS_ADDR                        (WF_RRO_TOP_BASE + 0x220) // 2220
#define WF_RRO_TOP_RRO_BUSY_ENA_ADDR                           (WF_RRO_TOP_BASE + 0x224) // 2224
#define WF_RRO_TOP_DBG_FLAG_CTRL_ADDR                  (WF_RRO_TOP_BASE + 0x124)
#define WF_RRO_TOP_DBG_FLAG_OUTPUT_ADDR                (WF_RRO_TOP_BASE + 0x128)




/* =====================================================================================

  ---GLOBAL_CONFG (0x820C2000 + 0x0)---

    RRO_DISABLE[0]               - (RW) 0: enable rro function
                                     1: disable rro function, but still dispatch RX and do MDP RX drop
    RRO_DATA_BYP[1]              - (RW) 0: enable rro function
                                     1: disable rro function (include MDP drop)
    RRO_CACHE_INIT[2]            - (WO) Trigger RRO cache LRU link list initial
    RRO_SETBL_INIT[3]            - (WO) Trigger RRO ba session table initial
    RRO_CACHE_INIT_DONE[4]       - (RO) RRO cache LRU link list initial done
    RRO_SETBL_INIT_DONE[5]       - (RO) RRO ba session table link list initial done
    RESERVED6[7..6]              - (RO) Reserved bits
    RRO_RX_PRIORITY_MODE[9..8]   - (RW) 3: BAR > Buff-runout > RX > Timeout
                                     2: Round-Robin(Buff-runout, RX) > BAR > Timeout
                                     1: BAR > Timeout > Round-Robin(Buff-runout, RX)
                                     0: BAR > Round-Robin(Buff-runout, RX) > Timeout
    RESERVED10[31..10]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_GLOBAL_CONFG_RRO_RX_PRIORITY_MODE_ADDR      WF_RRO_TOP_GLOBAL_CONFG_ADDR
#define WF_RRO_TOP_GLOBAL_CONFG_RRO_RX_PRIORITY_MODE_MASK      0x00000300                // RRO_RX_PRIORITY_MODE[9..8]
#define WF_RRO_TOP_GLOBAL_CONFG_RRO_RX_PRIORITY_MODE_SHFT      8
#define WF_RRO_TOP_GLOBAL_CONFG_RRO_SETBL_INIT_DONE_ADDR       WF_RRO_TOP_GLOBAL_CONFG_ADDR
#define WF_RRO_TOP_GLOBAL_CONFG_RRO_SETBL_INIT_DONE_MASK       0x00000020                // RRO_SETBL_INIT_DONE[5]
#define WF_RRO_TOP_GLOBAL_CONFG_RRO_SETBL_INIT_DONE_SHFT       5
#define WF_RRO_TOP_GLOBAL_CONFG_RRO_CACHE_INIT_DONE_ADDR       WF_RRO_TOP_GLOBAL_CONFG_ADDR
#define WF_RRO_TOP_GLOBAL_CONFG_RRO_CACHE_INIT_DONE_MASK       0x00000010                // RRO_CACHE_INIT_DONE[4]
#define WF_RRO_TOP_GLOBAL_CONFG_RRO_CACHE_INIT_DONE_SHFT       4
#define WF_RRO_TOP_GLOBAL_CONFG_RRO_SETBL_INIT_ADDR            WF_RRO_TOP_GLOBAL_CONFG_ADDR
#define WF_RRO_TOP_GLOBAL_CONFG_RRO_SETBL_INIT_MASK            0x00000008                // RRO_SETBL_INIT[3]
#define WF_RRO_TOP_GLOBAL_CONFG_RRO_SETBL_INIT_SHFT            3
#define WF_RRO_TOP_GLOBAL_CONFG_RRO_CACHE_INIT_ADDR            WF_RRO_TOP_GLOBAL_CONFG_ADDR
#define WF_RRO_TOP_GLOBAL_CONFG_RRO_CACHE_INIT_MASK            0x00000004                // RRO_CACHE_INIT[2]
#define WF_RRO_TOP_GLOBAL_CONFG_RRO_CACHE_INIT_SHFT            2
#define WF_RRO_TOP_GLOBAL_CONFG_RRO_DATA_BYP_ADDR              WF_RRO_TOP_GLOBAL_CONFG_ADDR
#define WF_RRO_TOP_GLOBAL_CONFG_RRO_DATA_BYP_MASK              0x00000002                // RRO_DATA_BYP[1]
#define WF_RRO_TOP_GLOBAL_CONFG_RRO_DATA_BYP_SHFT              1
#define WF_RRO_TOP_GLOBAL_CONFG_RRO_DISABLE_ADDR               WF_RRO_TOP_GLOBAL_CONFG_ADDR
#define WF_RRO_TOP_GLOBAL_CONFG_RRO_DISABLE_MASK               0x00000001                // RRO_DISABLE[0]
#define WF_RRO_TOP_GLOBAL_CONFG_RRO_DISABLE_SHFT               0

/* =====================================================================================

  ---RST (0x820C2000 + 0x4)---

    SW_RST[0]                    - (RW) 0: deassert
                                     1: assert
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_RST_SW_RST_ADDR                             WF_RRO_TOP_RST_ADDR
#define WF_RRO_TOP_RST_SW_RST_MASK                             0x00000001                // SW_RST[0]
#define WF_RRO_TOP_RST_SW_RST_SHFT                             0

/* =====================================================================================

  ---BA_BITMAP_BASE_0 (0x820C2000 + 0x8)---

    BASE_LSB[31..0]              - (RW) The base address of BA bitmap

 =====================================================================================*/
#define WF_RRO_TOP_BA_BITMAP_BASE_0_BASE_LSB_ADDR              WF_RRO_TOP_BA_BITMAP_BASE_0_ADDR
#define WF_RRO_TOP_BA_BITMAP_BASE_0_BASE_LSB_MASK              0xFFFFFFFF                // BASE_LSB[31..0]
#define WF_RRO_TOP_BA_BITMAP_BASE_0_BASE_LSB_SHFT              0

/* =====================================================================================

  ---BA_BITMAP_BASE_1 (0x820C2000 + 0xC)---

    BASE_MSB[3..0]               - (RW) The base address of BA bitmap
    RESERVED4[31..4]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_BA_BITMAP_BASE_1_BASE_MSB_ADDR              WF_RRO_TOP_BA_BITMAP_BASE_1_ADDR
#define WF_RRO_TOP_BA_BITMAP_BASE_1_BASE_MSB_MASK              0x0000000F                // BASE_MSB[3..0]
#define WF_RRO_TOP_BA_BITMAP_BASE_1_BASE_MSB_SHFT              0

/* =====================================================================================

  ---BA_CTRL (0x820C2000 + 0x10)---

    MLD_ID[11..0]                - (RW) Multi-Link Device ID
    TID[15..12]                  - (RW) Traffic ID
    WIN_SZ[18..16]               - (RW) The window size of this BA session
                                     Only support 32, 64, 128, 256, 512, and 1024.
                                     0: 32, 1: 64, 2:128, 3: 256, 4: 512, 5: 1024
    RESERVED19[19]               - (RO) Reserved bits
    TO_SEL[22..20]               - (RW) To assign timeout seession to this BA session
    RESERVED23[27..23]           - (RO) Reserved bits
    UPD[28]                      - (RW) update timeout session
    FAIL[29]                     - (RO) It can only allocate BA when this session is not connect,
                                     if it can not allocate it will return 1, until next cmd is executed
                                     0 : Sucess
                                     1 : Fail
    CMD[30]                      - (RW) 0: Release BA
                                     1: Allocate BA
    EXEC[31]                     - (RC) Write 1 start execuation, read status
                                     0: BA_CTRL command is done
                                     1: BA_CTRL command is processing by RRO

 =====================================================================================*/
#define WF_RRO_TOP_BA_CTRL_EXEC_ADDR                           WF_RRO_TOP_BA_CTRL_ADDR
#define WF_RRO_TOP_BA_CTRL_EXEC_MASK                           0x80000000                // EXEC[31]
#define WF_RRO_TOP_BA_CTRL_EXEC_SHFT                           31
#define WF_RRO_TOP_BA_CTRL_CMD_ADDR                            WF_RRO_TOP_BA_CTRL_ADDR
#define WF_RRO_TOP_BA_CTRL_CMD_MASK                            0x40000000                // CMD[30]
#define WF_RRO_TOP_BA_CTRL_CMD_SHFT                            30
#define WF_RRO_TOP_BA_CTRL_FAIL_ADDR                           WF_RRO_TOP_BA_CTRL_ADDR
#define WF_RRO_TOP_BA_CTRL_FAIL_MASK                           0x20000000                // FAIL[29]
#define WF_RRO_TOP_BA_CTRL_FAIL_SHFT                           29
#define WF_RRO_TOP_BA_CTRL_UPD_ADDR                            WF_RRO_TOP_BA_CTRL_ADDR
#define WF_RRO_TOP_BA_CTRL_UPD_MASK                            0x10000000                // UPD[28]
#define WF_RRO_TOP_BA_CTRL_UPD_SHFT                            28
#define WF_RRO_TOP_BA_CTRL_TO_SEL_ADDR                         WF_RRO_TOP_BA_CTRL_ADDR
#define WF_RRO_TOP_BA_CTRL_TO_SEL_MASK                         0x00700000                // TO_SEL[22..20]
#define WF_RRO_TOP_BA_CTRL_TO_SEL_SHFT                         20
#define WF_RRO_TOP_BA_CTRL_WIN_SZ_ADDR                         WF_RRO_TOP_BA_CTRL_ADDR
#define WF_RRO_TOP_BA_CTRL_WIN_SZ_MASK                         0x00070000                // WIN_SZ[18..16]
#define WF_RRO_TOP_BA_CTRL_WIN_SZ_SHFT                         16
#define WF_RRO_TOP_BA_CTRL_TID_ADDR                            WF_RRO_TOP_BA_CTRL_ADDR
#define WF_RRO_TOP_BA_CTRL_TID_MASK                            0x0000F000                // TID[15..12]
#define WF_RRO_TOP_BA_CTRL_TID_SHFT                            12
#define WF_RRO_TOP_BA_CTRL_MLD_ID_ADDR                         WF_RRO_TOP_BA_CTRL_ADDR
#define WF_RRO_TOP_BA_CTRL_MLD_ID_MASK                         0x00000FFF                // MLD_ID[11..0]
#define WF_RRO_TOP_BA_CTRL_MLD_ID_SHFT                         0

/* =====================================================================================

  ---BA_STA_CFG (0x820C2000 + 0x14)---

    MAX_MLD_ID[11..0]            - (RW) Max number of Multi-Link Device ID
    MAX_TID[15..12]              - (RW) Max number of Traffic ID
    RETRY_LIMIT[23..16]          - (RW) allocate BA retry limit, if reach retry rise fail bit
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_BA_STA_CFG_RETRY_LIMIT_ADDR                 WF_RRO_TOP_BA_STA_CFG_ADDR
#define WF_RRO_TOP_BA_STA_CFG_RETRY_LIMIT_MASK                 0x00FF0000                // RETRY_LIMIT[23..16]
#define WF_RRO_TOP_BA_STA_CFG_RETRY_LIMIT_SHFT                 16
#define WF_RRO_TOP_BA_STA_CFG_MAX_TID_ADDR                     WF_RRO_TOP_BA_STA_CFG_ADDR
#define WF_RRO_TOP_BA_STA_CFG_MAX_TID_MASK                     0x0000F000                // MAX_TID[15..12]
#define WF_RRO_TOP_BA_STA_CFG_MAX_TID_SHFT                     12
#define WF_RRO_TOP_BA_STA_CFG_MAX_MLD_ID_ADDR                  WF_RRO_TOP_BA_STA_CFG_ADDR
#define WF_RRO_TOP_BA_STA_CFG_MAX_MLD_ID_MASK                  0x00000FFF                // MAX_MLD_ID[11..0]
#define WF_RRO_TOP_BA_STA_CFG_MAX_MLD_ID_SHFT                  0

/* =====================================================================================

  ---UPDATE_WIN (0x820C2000 + 0x18)---

    MLD_ID[11..0]                - (RW) Multi-Link Device ID
    TID[15..12]                  - (RW) Traffic ID
    START_SN[27..16]             - (RW) The start sequence of new window
    RESERVED28[30..28]           - (RO) Reserved bits
    EXEC[31]                     - (RW) 0: Update window is done
                                     1: Update window is not done

 =====================================================================================*/
#define WF_RRO_TOP_UPDATE_WIN_EXEC_ADDR                        WF_RRO_TOP_UPDATE_WIN_ADDR
#define WF_RRO_TOP_UPDATE_WIN_EXEC_MASK                        0x80000000                // EXEC[31]
#define WF_RRO_TOP_UPDATE_WIN_EXEC_SHFT                        31
#define WF_RRO_TOP_UPDATE_WIN_START_SN_ADDR                    WF_RRO_TOP_UPDATE_WIN_ADDR
#define WF_RRO_TOP_UPDATE_WIN_START_SN_MASK                    0x0FFF0000                // START_SN[27..16]
#define WF_RRO_TOP_UPDATE_WIN_START_SN_SHFT                    16
#define WF_RRO_TOP_UPDATE_WIN_TID_ADDR                         WF_RRO_TOP_UPDATE_WIN_ADDR
#define WF_RRO_TOP_UPDATE_WIN_TID_MASK                         0x0000F000                // TID[15..12]
#define WF_RRO_TOP_UPDATE_WIN_TID_SHFT                         12
#define WF_RRO_TOP_UPDATE_WIN_MLD_ID_ADDR                      WF_RRO_TOP_UPDATE_WIN_ADDR
#define WF_RRO_TOP_UPDATE_WIN_MLD_ID_MASK                      0x00000FFF                // MLD_ID[11..0]
#define WF_RRO_TOP_UPDATE_WIN_MLD_ID_SHFT                      0

/* =====================================================================================

  ---RRO_PROC_RING_0 (0x820C2000 + 0x20)---

    SRC_RING[3..0]               - (RW) The ring number that RRO needs to process (band 0)
    RESERVED4[15..4]             - (RO) Reserved bits
    MDP_DST_0_RING[19..16]       - (RW) The ring number of rx packets which RXD.rx_classify is 0 (Band 0), to AP
    RESERVED20[23..20]           - (RO) Reserved bits
    MDP_DST_1_RING[27..24]       - (RW) The ring number of rx packets which RXD.rx_classify is 4 (Band 0), to MD
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_RRO_PROC_RING_0_MDP_DST_1_RING_ADDR         WF_RRO_TOP_RRO_PROC_RING_0_ADDR
#define WF_RRO_TOP_RRO_PROC_RING_0_MDP_DST_1_RING_MASK         0x0F000000                // MDP_DST_1_RING[27..24]
#define WF_RRO_TOP_RRO_PROC_RING_0_MDP_DST_1_RING_SHFT         24
#define WF_RRO_TOP_RRO_PROC_RING_0_MDP_DST_0_RING_ADDR         WF_RRO_TOP_RRO_PROC_RING_0_ADDR
#define WF_RRO_TOP_RRO_PROC_RING_0_MDP_DST_0_RING_MASK         0x000F0000                // MDP_DST_0_RING[19..16]
#define WF_RRO_TOP_RRO_PROC_RING_0_MDP_DST_0_RING_SHFT         16
#define WF_RRO_TOP_RRO_PROC_RING_0_SRC_RING_ADDR               WF_RRO_TOP_RRO_PROC_RING_0_ADDR
#define WF_RRO_TOP_RRO_PROC_RING_0_SRC_RING_MASK               0x0000000F                // SRC_RING[3..0]
#define WF_RRO_TOP_RRO_PROC_RING_0_SRC_RING_SHFT               0

/* =====================================================================================

  ---RRO_PROC_RING_1 (0x820C2000 + 0x24)---

    SRC_RING[3..0]               - (RW) The ring number that RRO needs to process (band 1)
    RESERVED4[15..4]             - (RO) Reserved bits
    MDP_DST_0_RING[19..16]       - (RW) The ring number of rx packets which RXD.rx_classify is 0 (Band 1), to AP
    RESERVED20[23..20]           - (RO) Reserved bits
    MDP_DST_1_RING[27..24]       - (RW) The ring number of rx packets which RXD.rx_classify is 5 (Band 1), to MD
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_RRO_PROC_RING_1_MDP_DST_1_RING_ADDR         WF_RRO_TOP_RRO_PROC_RING_1_ADDR
#define WF_RRO_TOP_RRO_PROC_RING_1_MDP_DST_1_RING_MASK         0x0F000000                // MDP_DST_1_RING[27..24]
#define WF_RRO_TOP_RRO_PROC_RING_1_MDP_DST_1_RING_SHFT         24
#define WF_RRO_TOP_RRO_PROC_RING_1_MDP_DST_0_RING_ADDR         WF_RRO_TOP_RRO_PROC_RING_1_ADDR
#define WF_RRO_TOP_RRO_PROC_RING_1_MDP_DST_0_RING_MASK         0x000F0000                // MDP_DST_0_RING[19..16]
#define WF_RRO_TOP_RRO_PROC_RING_1_MDP_DST_0_RING_SHFT         16
#define WF_RRO_TOP_RRO_PROC_RING_1_SRC_RING_ADDR               WF_RRO_TOP_RRO_PROC_RING_1_ADDR
#define WF_RRO_TOP_RRO_PROC_RING_1_SRC_RING_MASK               0x0000000F                // SRC_RING[3..0]
#define WF_RRO_TOP_RRO_PROC_RING_1_SRC_RING_SHFT               0

/* =====================================================================================

  ---ADDR_ARRAY_BASE_0 (0x820C2000 + 0x30)---

    ADDR_ARRAY_BASE_0_LSB[31..0] - (RW) The base address of memory domain 0 address array

 =====================================================================================*/
#define WF_RRO_TOP_ADDR_ARRAY_BASE_0_ADDR_ARRAY_BASE_0_LSB_ADDR WF_RRO_TOP_ADDR_ARRAY_BASE_0_ADDR
#define WF_RRO_TOP_ADDR_ARRAY_BASE_0_ADDR_ARRAY_BASE_0_LSB_MASK 0xFFFFFFFF                // ADDR_ARRAY_BASE_0_LSB[31..0]
#define WF_RRO_TOP_ADDR_ARRAY_BASE_0_ADDR_ARRAY_BASE_0_LSB_SHFT 0

/* =====================================================================================

  ---ADDR_ARRAY_BASE_1 (0x820C2000 + 0x34)---

    ADDR_ARRAY_BASE_0_MSB[3..0]  - (RW) The base address of memory domain 0 address array
    RESERVED4[31..4]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_ADDR_ARRAY_BASE_1_ADDR_ARRAY_BASE_0_MSB_ADDR WF_RRO_TOP_ADDR_ARRAY_BASE_1_ADDR
#define WF_RRO_TOP_ADDR_ARRAY_BASE_1_ADDR_ARRAY_BASE_0_MSB_MASK 0x0000000F                // ADDR_ARRAY_BASE_0_MSB[3..0]
#define WF_RRO_TOP_ADDR_ARRAY_BASE_1_ADDR_ARRAY_BASE_0_MSB_SHFT 0

/* =====================================================================================

  ---IND_CMD_SIGNATURE_BASE_0 (0x820C2000 + 0x38)---

    BASE_LSB[31..0]              - (RW) RRO will write CR.IND_CMD_0_CTRL3 to this address after fulshing IND_CMD (BASE[31:0]).

 =====================================================================================*/
#define WF_RRO_TOP_IND_CMD_SIGNATURE_BASE_0_BASE_LSB_ADDR      WF_RRO_TOP_IND_CMD_SIGNATURE_BASE_0_ADDR
#define WF_RRO_TOP_IND_CMD_SIGNATURE_BASE_0_BASE_LSB_MASK      0xFFFFFFFF                // BASE_LSB[31..0]
#define WF_RRO_TOP_IND_CMD_SIGNATURE_BASE_0_BASE_LSB_SHFT      0

/* =====================================================================================

  ---IND_CMD_SIGNATURE_BASE_1 (0x820C2000 + 0x3C)---

    BASE_MSB[3..0]               - (RW) RRO will write CR.IND_CMD_0_CTRL3 to this address after fulshing IND_CMD (BASE[35:32]).
    RESERVED4[30..4]             - (RO) Reserved bits
    EN[31]                       - (RW) 0: disable IND_CMD signature writeback.
                                     1: enable IND_CMD signature writeback.

 =====================================================================================*/
#define WF_RRO_TOP_IND_CMD_SIGNATURE_BASE_1_EN_ADDR            WF_RRO_TOP_IND_CMD_SIGNATURE_BASE_1_ADDR
#define WF_RRO_TOP_IND_CMD_SIGNATURE_BASE_1_EN_MASK            0x80000000                // EN[31]
#define WF_RRO_TOP_IND_CMD_SIGNATURE_BASE_1_EN_SHFT            31
#define WF_RRO_TOP_IND_CMD_SIGNATURE_BASE_1_BASE_MSB_ADDR      WF_RRO_TOP_IND_CMD_SIGNATURE_BASE_1_ADDR
#define WF_RRO_TOP_IND_CMD_SIGNATURE_BASE_1_BASE_MSB_MASK      0x0000000F                // BASE_MSB[3..0]
#define WF_RRO_TOP_IND_CMD_SIGNATURE_BASE_1_BASE_MSB_SHFT      0

/* =====================================================================================

  ---IND_CMD_0_CTRL0 (0x820C2000 + 0x40)---

    BASE_LSB[31..0]              - (RW) The base address of memory domain 0 indicate command ring

 =====================================================================================*/
#define WF_RRO_TOP_IND_CMD_0_CTRL0_BASE_LSB_ADDR               WF_RRO_TOP_IND_CMD_0_CTRL0_ADDR
#define WF_RRO_TOP_IND_CMD_0_CTRL0_BASE_LSB_MASK               0xFFFFFFFF                // BASE_LSB[31..0]
#define WF_RRO_TOP_IND_CMD_0_CTRL0_BASE_LSB_SHFT               0

/* =====================================================================================

  ---IND_CMD_0_CTRL1 (0x820C2000 + 0x44)---

    MAX_CNT[11..0]               - (RW) The maximum number of indicate command ring 0
    RESERVED12[15..12]           - (RO) Reserved bits
    BASE_MSB[19..16]             - (RW) The base address of memory domain 0 indicate command ring
    RESERVED20[31..20]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_IND_CMD_0_CTRL1_BASE_MSB_ADDR               WF_RRO_TOP_IND_CMD_0_CTRL1_ADDR
#define WF_RRO_TOP_IND_CMD_0_CTRL1_BASE_MSB_MASK               0x000F0000                // BASE_MSB[19..16]
#define WF_RRO_TOP_IND_CMD_0_CTRL1_BASE_MSB_SHFT               16
#define WF_RRO_TOP_IND_CMD_0_CTRL1_MAX_CNT_ADDR                WF_RRO_TOP_IND_CMD_0_CTRL1_ADDR
#define WF_RRO_TOP_IND_CMD_0_CTRL1_MAX_CNT_MASK                0x00000FFF                // MAX_CNT[11..0]
#define WF_RRO_TOP_IND_CMD_0_CTRL1_MAX_CNT_SHFT                0

/* =====================================================================================

  ---IND_CMD_0_CTRL2 (0x820C2000 + 0x48)---

    CPU_IDX[11..0]               - (RW) The cpu index of indicate command ring 0
                                     This field is deprecated.
                                     The functionality is replaced with CR.ACK_SN_CTRL0.
    RESERVED12[31..12]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_IND_CMD_0_CTRL2_CPU_IDX_ADDR                WF_RRO_TOP_IND_CMD_0_CTRL2_ADDR
#define WF_RRO_TOP_IND_CMD_0_CTRL2_CPU_IDX_MASK                0x00000FFF                // CPU_IDX[11..0]
#define WF_RRO_TOP_IND_CMD_0_CTRL2_CPU_IDX_SHFT                0

/* =====================================================================================

  ---IND_CMD_0_CTRL3 (0x820C2000 + 0x4c)---

    DMA_IDX[11..0]               - (RW) The dma index of indicate command ring 0
    RESERVED12[27..12]           - (RO) Reserved bits
    MAGIC_CNT[30..28]            - (RW) The magic count of indicate command ring 0
    Reserve[31]                  - (RO) Reserve

 =====================================================================================*/
#define WF_RRO_TOP_IND_CMD_0_CTRL3_Reserve_ADDR                WF_RRO_TOP_IND_CMD_0_CTRL3_ADDR
#define WF_RRO_TOP_IND_CMD_0_CTRL3_Reserve_MASK                0x80000000                // Reserve[31]
#define WF_RRO_TOP_IND_CMD_0_CTRL3_Reserve_SHFT                31
#define WF_RRO_TOP_IND_CMD_0_CTRL3_MAGIC_CNT_ADDR              WF_RRO_TOP_IND_CMD_0_CTRL3_ADDR
#define WF_RRO_TOP_IND_CMD_0_CTRL3_MAGIC_CNT_MASK              0x70000000                // MAGIC_CNT[30..28]
#define WF_RRO_TOP_IND_CMD_0_CTRL3_MAGIC_CNT_SHFT              28
#define WF_RRO_TOP_IND_CMD_0_CTRL3_DMA_IDX_ADDR                WF_RRO_TOP_IND_CMD_0_CTRL3_ADDR
#define WF_RRO_TOP_IND_CMD_0_CTRL3_DMA_IDX_MASK                0x00000FFF                // DMA_IDX[11..0]
#define WF_RRO_TOP_IND_CMD_0_CTRL3_DMA_IDX_SHFT                0

/* =====================================================================================

  ---ACK_SN_CTRL (0x820C2000 + 0x50)---

    SESSION_ID[11..0]            - (RW) The session_id to update the ack_sn of this session.
    RESERVED12[15..12]           - (RO) Reserved bits
    ACK_SN[27..16]               - (RW) To update ack_sn of this session.
    RESERVED28[30..28]           - (RO) Reserved bits
    IS_LAST[31]                  - (RW) True: RRO will update IND_CMD.CPU_IDX.
                                     Flase: RRO will not update IND_CMD.CPU_IDX.

 =====================================================================================*/
#define WF_RRO_TOP_ACK_SN_CTRL_IS_LAST_ADDR                    WF_RRO_TOP_ACK_SN_CTRL_ADDR
#define WF_RRO_TOP_ACK_SN_CTRL_IS_LAST_MASK                    0x80000000                // IS_LAST[31]
#define WF_RRO_TOP_ACK_SN_CTRL_IS_LAST_SHFT                    31
#define WF_RRO_TOP_ACK_SN_CTRL_ACK_SN_ADDR                     WF_RRO_TOP_ACK_SN_CTRL_ADDR
#define WF_RRO_TOP_ACK_SN_CTRL_ACK_SN_MASK                     0x0FFF0000                // ACK_SN[27..16]
#define WF_RRO_TOP_ACK_SN_CTRL_ACK_SN_SHFT                     16
#define WF_RRO_TOP_ACK_SN_CTRL_SESSION_ID_ADDR                 WF_RRO_TOP_ACK_SN_CTRL_ADDR
#define WF_RRO_TOP_ACK_SN_CTRL_SESSION_ID_MASK                 0x00000FFF                // SESSION_ID[11..0]
#define WF_RRO_TOP_ACK_SN_CTRL_SESSION_ID_SHFT                 0

/* =====================================================================================

  ---PARTICULAR_SESSION_0 (0x820C2000 + 0x60)---

    START_SN[11..0]              - (RW) The start sequence of particular session 0
                                     Note: WIN_SZ is 1024, session id is 256.
    RESERVED12[15..12]           - (RO) Reserved bits
    ACK_SN[27..16]               - (RW) The ack sn of particular session.
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_PARTICULAR_SESSION_0_ACK_SN_ADDR            WF_RRO_TOP_PARTICULAR_SESSION_0_ADDR
#define WF_RRO_TOP_PARTICULAR_SESSION_0_ACK_SN_MASK            0x0FFF0000                // ACK_SN[27..16]
#define WF_RRO_TOP_PARTICULAR_SESSION_0_ACK_SN_SHFT            16
#define WF_RRO_TOP_PARTICULAR_SESSION_0_START_SN_ADDR          WF_RRO_TOP_PARTICULAR_SESSION_0_ADDR
#define WF_RRO_TOP_PARTICULAR_SESSION_0_START_SN_MASK          0x00000FFF                // START_SN[11..0]
#define WF_RRO_TOP_PARTICULAR_SESSION_0_START_SN_SHFT          0

/* =====================================================================================

  ---TIMEOUT_CONF_0 (0x820C2000 + 0x64)---

    TO_STEP_ONE_0[3..0]          - (RW) RRO will advance window in the session once if this timeout happens.
                                     0: Never Timeout
                                     else :  1TU * 2 ^ (TO_STEP_ONE -1)
                                     Note 1 :  1TU = 1024 us
                                     Note 2 : the max. step-one timeout time is 16384 TU (2^15)
    TO_FLUSH_ALL_0[6..4]         - (RW) RRO will flush all packet in the session if this timeout happens.
                                     0: Never do timeout step one, only do flush all, Timeout = 1024(us) * 2 ^ (TO_STEP_ONE -1)
                                     else : Both do step-one and flush all, Timeout = 1024(us) * 2 ^ (TO_STEP_ONE + TO_FLUSH -1)
                                     Note : The max. flush all timeout time is 32768 TU (2^16)
    RESERVED7[7]                 - (RO) Reserved bits
    TO_STEP_ONE_1[11..8]         - (RW) RRO will advance window in the session once if this timeout happens.
                                     0: Never Timeout
                                     else :  1TU * 2 ^ (TO_STEP_ONE -1)
                                     Note 1 :  1TU = 1024 us
                                     Note 2 : the max. step-one timeout time is 16384 TU (2^15)
    TO_FLUSH_ALL_1[14..12]       - (RW) RRO will flush all packet in the session if this timeout happens.
                                     0: Never do timeout step one, only do flush all, Timeout = 1024(us) * 2 ^ (TO_STEP_ONE -1)
                                     else : Both do step-one and flush all, Timeout = 1024(us) * 2 ^ (TO_STEP_ONE + TO_FLUSH -1)
                                     Note : The max. flush all timeout time is 32768 TU (2^16)
    RESERVED15[15]               - (RO) Reserved bits
    TO_STEP_ONE_2[19..16]        - (RW) RRO will advance window in the session once if this timeout happens.
                                     0: Never Timeout
                                     else :  1TU * 2 ^ (TO_STEP_ONE -1)
                                     Note 1 :  1TU = 1024 us
                                     Note 2 : the max. step-one timeout time is 16384 TU (2^15)
    TO_FLUSH_ALL_2[22..20]       - (RW) RRO will flush all packet in the session if this timeout happens.
                                     0: Never do timeout step one, only do flush all, Timeout = 1024(us) * 2 ^ (TO_STEP_ONE -1)
                                     else : Both do step-one and flush all, Timeout = 1024(us) * 2 ^ (TO_STEP_ONE + TO_FLUSH -1)
                                     Note : The max. flush all timeout time is 32768 TU (2^16)
    RESERVED23[23]               - (RO) Reserved bits
    TO_STEP_ONE_3[27..24]        - (RW) RRO will advance window in the session once if this timeout happens.
                                     0: Never Timeout
                                     else :  1TU * 2 ^ (TO_STEP_ONE -1)
                                     Note 1 :  1TU = 1024 us
                                     Note 2 : the max. step-one timeout time is 16384 TU (2^15)
    TO_FLUSH_ALL_3[30..28]       - (RW) RRO will flush all packet in the session if this timeout happens.
                                     0: Never do timeout step one, only do flush all, Timeout = 1024(us) * 2 ^ (TO_STEP_ONE -1)
                                     else : Both do step-one and flush all, Timeout = 1024(us) * 2 ^ (TO_STEP_ONE + TO_FLUSH -1)
                                     Note : The max. flush all timeout time is 32768 TU (2^16)
    RESERVED31[31]               - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_TIMEOUT_CONF_0_TO_FLUSH_ALL_3_ADDR          WF_RRO_TOP_TIMEOUT_CONF_0_ADDR
#define WF_RRO_TOP_TIMEOUT_CONF_0_TO_FLUSH_ALL_3_MASK          0x70000000                // TO_FLUSH_ALL_3[30..28]
#define WF_RRO_TOP_TIMEOUT_CONF_0_TO_FLUSH_ALL_3_SHFT          28
#define WF_RRO_TOP_TIMEOUT_CONF_0_TO_STEP_ONE_3_ADDR           WF_RRO_TOP_TIMEOUT_CONF_0_ADDR
#define WF_RRO_TOP_TIMEOUT_CONF_0_TO_STEP_ONE_3_MASK           0x0F000000                // TO_STEP_ONE_3[27..24]
#define WF_RRO_TOP_TIMEOUT_CONF_0_TO_STEP_ONE_3_SHFT           24
#define WF_RRO_TOP_TIMEOUT_CONF_0_TO_FLUSH_ALL_2_ADDR          WF_RRO_TOP_TIMEOUT_CONF_0_ADDR
#define WF_RRO_TOP_TIMEOUT_CONF_0_TO_FLUSH_ALL_2_MASK          0x00700000                // TO_FLUSH_ALL_2[22..20]
#define WF_RRO_TOP_TIMEOUT_CONF_0_TO_FLUSH_ALL_2_SHFT          20
#define WF_RRO_TOP_TIMEOUT_CONF_0_TO_STEP_ONE_2_ADDR           WF_RRO_TOP_TIMEOUT_CONF_0_ADDR
#define WF_RRO_TOP_TIMEOUT_CONF_0_TO_STEP_ONE_2_MASK           0x000F0000                // TO_STEP_ONE_2[19..16]
#define WF_RRO_TOP_TIMEOUT_CONF_0_TO_STEP_ONE_2_SHFT           16
#define WF_RRO_TOP_TIMEOUT_CONF_0_TO_FLUSH_ALL_1_ADDR          WF_RRO_TOP_TIMEOUT_CONF_0_ADDR
#define WF_RRO_TOP_TIMEOUT_CONF_0_TO_FLUSH_ALL_1_MASK          0x00007000                // TO_FLUSH_ALL_1[14..12]
#define WF_RRO_TOP_TIMEOUT_CONF_0_TO_FLUSH_ALL_1_SHFT          12
#define WF_RRO_TOP_TIMEOUT_CONF_0_TO_STEP_ONE_1_ADDR           WF_RRO_TOP_TIMEOUT_CONF_0_ADDR
#define WF_RRO_TOP_TIMEOUT_CONF_0_TO_STEP_ONE_1_MASK           0x00000F00                // TO_STEP_ONE_1[11..8]
#define WF_RRO_TOP_TIMEOUT_CONF_0_TO_STEP_ONE_1_SHFT           8
#define WF_RRO_TOP_TIMEOUT_CONF_0_TO_FLUSH_ALL_0_ADDR          WF_RRO_TOP_TIMEOUT_CONF_0_ADDR
#define WF_RRO_TOP_TIMEOUT_CONF_0_TO_FLUSH_ALL_0_MASK          0x00000070                // TO_FLUSH_ALL_0[6..4]
#define WF_RRO_TOP_TIMEOUT_CONF_0_TO_FLUSH_ALL_0_SHFT          4
#define WF_RRO_TOP_TIMEOUT_CONF_0_TO_STEP_ONE_0_ADDR           WF_RRO_TOP_TIMEOUT_CONF_0_ADDR
#define WF_RRO_TOP_TIMEOUT_CONF_0_TO_STEP_ONE_0_MASK           0x0000000F                // TO_STEP_ONE_0[3..0]
#define WF_RRO_TOP_TIMEOUT_CONF_0_TO_STEP_ONE_0_SHFT           0

/* =====================================================================================

  ---TIMEOUT_CONF_1 (0x820C2000 + 0x68)---

    TO_STEP_ONE_4[3..0]          - (RW) RRO will advance window in the session once if this timeout happens.
                                     0: Never Timeout
                                     else :  1TU * 2 ^ (TO_STEP_ONE -1)
                                     Note 1 :  1TU = 1024 us
                                     Note 2 : the max. step-one timeout time is 16384 TU (2^15)
    TO_FLUSH_ALL_4[6..4]         - (RW) RRO will flush all packet in the session if this timeout happens.
                                     0: Never do timeout step one, only do flush all, Timeout = 1024(us) * 2 ^ (TO_STEP_ONE -1)
                                     else : Both do step-one and flush all, Timeout = 1024(us) * 2 ^ (TO_STEP_ONE + TO_FLUSH -1)
                                     Note : The max. flush all timeout time is 32768 TU (2^16)
    RESERVED7[7]                 - (RO) Reserved bits
    TO_STEP_ONE_5[11..8]         - (RW) RRO will advance window in the session once if this timeout happens.
                                     0: Never Timeout
                                     else :  1TU * 2 ^ (TO_STEP_ONE -1)
                                     Note 1 :  1TU = 1024 us
                                     Note 2 : the max. step-one timeout time is 16384 TU (2^15)
    TO_FLUSH_ALL_5[14..12]       - (RW) RRO will flush all packet in the session if this timeout happens.
                                     0: Never do timeout step one, only do flush all, Timeout = 1024(us) * 2 ^ (TO_STEP_ONE -1)
                                     else : Both do step-one and flush all, Timeout = 1024(us) * 2 ^ (TO_STEP_ONE + TO_FLUSH -1)
                                     Note : The max. flush all timeout time is 32768 TU (2^16)
    RESERVED15[15]               - (RO) Reserved bits
    TO_STEP_ONE_6[19..16]        - (RW) RRO will advance window in the session once if this timeout happens.
                                     0: Never Timeout
                                     else :  1TU * 2 ^ (TO_STEP_ONE -1)
                                     Note 1 :  1TU = 1024 us
                                     Note 2 : the max. step-one timeout time is 16384 TU (2^15)
    TO_FLUSH_ALL_6[22..20]       - (RW) RRO will flush all packet in the session if this timeout happens.
                                     0: Never do timeout step one, only do flush all, Timeout = 1024(us) * 2 ^ (TO_STEP_ONE -1)
                                     else : Both do step-one and flush all, Timeout = 1024(us) * 2 ^ (TO_STEP_ONE + TO_FLUSH -1)
                                     Note : The max. flush all timeout time is 32768 TU (2^16)
    RESERVED23[23]               - (RO) Reserved bits
    TO_STEP_ONE_7[27..24]        - (RW) RRO will advance window in the session once if this timeout happens.
                                     0: Never Timeout
                                     else :  1TU * 2 ^ (TO_STEP_ONE -1)
                                     Note 1 :  1TU = 1024 us
                                     Note 2 : the max. step-one timeout time is 16384 TU (2^15)
    TO_FLUSH_ALL_7[30..28]       - (RW) RRO will flush all packet in the session if this timeout happens.
                                     0: Never do timeout step one, only do flush all, Timeout = 1024(us) * 2 ^ (TO_STEP_ONE -1)
                                     else : Both do step-one and flush all, Timeout = 1024(us) * 2 ^ (TO_STEP_ONE + TO_FLUSH -1)
                                     Note : The max. flush all timeout time is 32768 TU (2^16)
    RESERVED31[31]               - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_TIMEOUT_CONF_1_TO_FLUSH_ALL_7_ADDR          WF_RRO_TOP_TIMEOUT_CONF_1_ADDR
#define WF_RRO_TOP_TIMEOUT_CONF_1_TO_FLUSH_ALL_7_MASK          0x70000000                // TO_FLUSH_ALL_7[30..28]
#define WF_RRO_TOP_TIMEOUT_CONF_1_TO_FLUSH_ALL_7_SHFT          28
#define WF_RRO_TOP_TIMEOUT_CONF_1_TO_STEP_ONE_7_ADDR           WF_RRO_TOP_TIMEOUT_CONF_1_ADDR
#define WF_RRO_TOP_TIMEOUT_CONF_1_TO_STEP_ONE_7_MASK           0x0F000000                // TO_STEP_ONE_7[27..24]
#define WF_RRO_TOP_TIMEOUT_CONF_1_TO_STEP_ONE_7_SHFT           24
#define WF_RRO_TOP_TIMEOUT_CONF_1_TO_FLUSH_ALL_6_ADDR          WF_RRO_TOP_TIMEOUT_CONF_1_ADDR
#define WF_RRO_TOP_TIMEOUT_CONF_1_TO_FLUSH_ALL_6_MASK          0x00700000                // TO_FLUSH_ALL_6[22..20]
#define WF_RRO_TOP_TIMEOUT_CONF_1_TO_FLUSH_ALL_6_SHFT          20
#define WF_RRO_TOP_TIMEOUT_CONF_1_TO_STEP_ONE_6_ADDR           WF_RRO_TOP_TIMEOUT_CONF_1_ADDR
#define WF_RRO_TOP_TIMEOUT_CONF_1_TO_STEP_ONE_6_MASK           0x000F0000                // TO_STEP_ONE_6[19..16]
#define WF_RRO_TOP_TIMEOUT_CONF_1_TO_STEP_ONE_6_SHFT           16
#define WF_RRO_TOP_TIMEOUT_CONF_1_TO_FLUSH_ALL_5_ADDR          WF_RRO_TOP_TIMEOUT_CONF_1_ADDR
#define WF_RRO_TOP_TIMEOUT_CONF_1_TO_FLUSH_ALL_5_MASK          0x00007000                // TO_FLUSH_ALL_5[14..12]
#define WF_RRO_TOP_TIMEOUT_CONF_1_TO_FLUSH_ALL_5_SHFT          12
#define WF_RRO_TOP_TIMEOUT_CONF_1_TO_STEP_ONE_5_ADDR           WF_RRO_TOP_TIMEOUT_CONF_1_ADDR
#define WF_RRO_TOP_TIMEOUT_CONF_1_TO_STEP_ONE_5_MASK           0x00000F00                // TO_STEP_ONE_5[11..8]
#define WF_RRO_TOP_TIMEOUT_CONF_1_TO_STEP_ONE_5_SHFT           8
#define WF_RRO_TOP_TIMEOUT_CONF_1_TO_FLUSH_ALL_4_ADDR          WF_RRO_TOP_TIMEOUT_CONF_1_ADDR
#define WF_RRO_TOP_TIMEOUT_CONF_1_TO_FLUSH_ALL_4_MASK          0x00000070                // TO_FLUSH_ALL_4[6..4]
#define WF_RRO_TOP_TIMEOUT_CONF_1_TO_FLUSH_ALL_4_SHFT          4
#define WF_RRO_TOP_TIMEOUT_CONF_1_TO_STEP_ONE_4_ADDR           WF_RRO_TOP_TIMEOUT_CONF_1_ADDR
#define WF_RRO_TOP_TIMEOUT_CONF_1_TO_STEP_ONE_4_MASK           0x0000000F                // TO_STEP_ONE_4[3..0]
#define WF_RRO_TOP_TIMEOUT_CONF_1_TO_STEP_ONE_4_SHFT           0

/* =====================================================================================

  ---TIMEOUT_CTRL (0x820C2000 + 0x6C)---

    TO_ENA[0]                    - (RW) Enable Timeout function
                                     1 : enable
                                     0: disable
    TO_CHK_START[1]              - (RW) The manual mode to start check timeout
                                     Read 0 if timeout check is finish
    TO_OP_STATUS[2]              - (RO) Timeout ctrl hw status,
                                     1 : active
                                     0 : stand-by
    RESERVED3[3]                 - (RO) Reserved bits
    TO_SAMPLE_RATE[5..4]         - (RW) The sample rate of auto check timeout
                                     0 : 0.25 tu
                                     1 : 0.5 tu
                                     2 : 1 tu
                                     3 : 2 tu
    FORCE_TO_STEP[6]             - (RW) RRO do step-one for all STAs with with-in count
                                     0 : inactive
                                     1 : active
    FORCE_TO_FLUSH[7]            - (RW) RRO do flush for all STAs with with-in count
                                     0 : inactive
                                     1 : active
    RESERVED8[31..8]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_TIMEOUT_CTRL_FORCE_TO_FLUSH_ADDR            WF_RRO_TOP_TIMEOUT_CTRL_ADDR
#define WF_RRO_TOP_TIMEOUT_CTRL_FORCE_TO_FLUSH_MASK            0x00000080                // FORCE_TO_FLUSH[7]
#define WF_RRO_TOP_TIMEOUT_CTRL_FORCE_TO_FLUSH_SHFT            7
#define WF_RRO_TOP_TIMEOUT_CTRL_FORCE_TO_STEP_ADDR             WF_RRO_TOP_TIMEOUT_CTRL_ADDR
#define WF_RRO_TOP_TIMEOUT_CTRL_FORCE_TO_STEP_MASK             0x00000040                // FORCE_TO_STEP[6]
#define WF_RRO_TOP_TIMEOUT_CTRL_FORCE_TO_STEP_SHFT             6
#define WF_RRO_TOP_TIMEOUT_CTRL_TO_SAMPLE_RATE_ADDR            WF_RRO_TOP_TIMEOUT_CTRL_ADDR
#define WF_RRO_TOP_TIMEOUT_CTRL_TO_SAMPLE_RATE_MASK            0x00000030                // TO_SAMPLE_RATE[5..4]
#define WF_RRO_TOP_TIMEOUT_CTRL_TO_SAMPLE_RATE_SHFT            4
#define WF_RRO_TOP_TIMEOUT_CTRL_TO_OP_STATUS_ADDR              WF_RRO_TOP_TIMEOUT_CTRL_ADDR
#define WF_RRO_TOP_TIMEOUT_CTRL_TO_OP_STATUS_MASK              0x00000004                // TO_OP_STATUS[2]
#define WF_RRO_TOP_TIMEOUT_CTRL_TO_OP_STATUS_SHFT              2
#define WF_RRO_TOP_TIMEOUT_CTRL_TO_CHK_START_ADDR              WF_RRO_TOP_TIMEOUT_CTRL_ADDR
#define WF_RRO_TOP_TIMEOUT_CTRL_TO_CHK_START_MASK              0x00000002                // TO_CHK_START[1]
#define WF_RRO_TOP_TIMEOUT_CTRL_TO_CHK_START_SHFT              1
#define WF_RRO_TOP_TIMEOUT_CTRL_TO_ENA_ADDR                    WF_RRO_TOP_TIMEOUT_CTRL_ADDR
#define WF_RRO_TOP_TIMEOUT_CTRL_TO_ENA_MASK                    0x00000001                // TO_ENA[0]
#define WF_RRO_TOP_TIMEOUT_CTRL_TO_ENA_SHFT                    0

/* =====================================================================================

  ---CACHE_LRU_INFO (0x820C2000 + 0x70)---

    HEAD_ID[3..0]                - (RW) The head cache id of LRU list.
    TAIL_ID[7..4]                - (RW) The tail cache id of LRU list.
    RESERVED8[31..8]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_CACHE_LRU_INFO_TAIL_ID_ADDR                 WF_RRO_TOP_CACHE_LRU_INFO_ADDR
#define WF_RRO_TOP_CACHE_LRU_INFO_TAIL_ID_MASK                 0x000000F0                // TAIL_ID[7..4]
#define WF_RRO_TOP_CACHE_LRU_INFO_TAIL_ID_SHFT                 4
#define WF_RRO_TOP_CACHE_LRU_INFO_HEAD_ID_ADDR                 WF_RRO_TOP_CACHE_LRU_INFO_ADDR
#define WF_RRO_TOP_CACHE_LRU_INFO_HEAD_ID_MASK                 0x0000000F                // HEAD_ID[3..0]
#define WF_RRO_TOP_CACHE_LRU_INFO_HEAD_ID_SHFT                 0

/* =====================================================================================

  ---LRU_FW_LIST (0x820C2000 + 0x74)---

    IDX_0[3..0]                  - (RW) The next cache id of LRU list[0], 0xF means NULL.
    IDX_1[7..4]                  - (RW) The next cache id of LRU list[1], 0xF means NULL.
    IDX_2[11..8]                 - (RW) The next cache id of LRU list[2], 0xF means NULL.
    IDX_3[15..12]                - (RW) The next cache id of LRU list[3], 0xF means NULL.
    IDX_4[19..16]                - (RW) The next cache id of LRU list[4], 0xF means NULL.
    IDX_5[23..20]                - (RW) The next cache id of LRU list[5], 0xF means NULL.
    IDX_6[27..24]                - (RW) The next cache id of LRU list[6], 0xF means NULL.
    IDX_7[31..28]                - (RW) The next cache id of LRU list[7], 0xF means NULL.

 =====================================================================================*/
#define WF_RRO_TOP_LRU_FW_LIST_IDX_7_ADDR                      WF_RRO_TOP_LRU_FW_LIST_ADDR
#define WF_RRO_TOP_LRU_FW_LIST_IDX_7_MASK                      0xF0000000                // IDX_7[31..28]
#define WF_RRO_TOP_LRU_FW_LIST_IDX_7_SHFT                      28
#define WF_RRO_TOP_LRU_FW_LIST_IDX_6_ADDR                      WF_RRO_TOP_LRU_FW_LIST_ADDR
#define WF_RRO_TOP_LRU_FW_LIST_IDX_6_MASK                      0x0F000000                // IDX_6[27..24]
#define WF_RRO_TOP_LRU_FW_LIST_IDX_6_SHFT                      24
#define WF_RRO_TOP_LRU_FW_LIST_IDX_5_ADDR                      WF_RRO_TOP_LRU_FW_LIST_ADDR
#define WF_RRO_TOP_LRU_FW_LIST_IDX_5_MASK                      0x00F00000                // IDX_5[23..20]
#define WF_RRO_TOP_LRU_FW_LIST_IDX_5_SHFT                      20
#define WF_RRO_TOP_LRU_FW_LIST_IDX_4_ADDR                      WF_RRO_TOP_LRU_FW_LIST_ADDR
#define WF_RRO_TOP_LRU_FW_LIST_IDX_4_MASK                      0x000F0000                // IDX_4[19..16]
#define WF_RRO_TOP_LRU_FW_LIST_IDX_4_SHFT                      16
#define WF_RRO_TOP_LRU_FW_LIST_IDX_3_ADDR                      WF_RRO_TOP_LRU_FW_LIST_ADDR
#define WF_RRO_TOP_LRU_FW_LIST_IDX_3_MASK                      0x0000F000                // IDX_3[15..12]
#define WF_RRO_TOP_LRU_FW_LIST_IDX_3_SHFT                      12
#define WF_RRO_TOP_LRU_FW_LIST_IDX_2_ADDR                      WF_RRO_TOP_LRU_FW_LIST_ADDR
#define WF_RRO_TOP_LRU_FW_LIST_IDX_2_MASK                      0x00000F00                // IDX_2[11..8]
#define WF_RRO_TOP_LRU_FW_LIST_IDX_2_SHFT                      8
#define WF_RRO_TOP_LRU_FW_LIST_IDX_1_ADDR                      WF_RRO_TOP_LRU_FW_LIST_ADDR
#define WF_RRO_TOP_LRU_FW_LIST_IDX_1_MASK                      0x000000F0                // IDX_1[7..4]
#define WF_RRO_TOP_LRU_FW_LIST_IDX_1_SHFT                      4
#define WF_RRO_TOP_LRU_FW_LIST_IDX_0_ADDR                      WF_RRO_TOP_LRU_FW_LIST_ADDR
#define WF_RRO_TOP_LRU_FW_LIST_IDX_0_MASK                      0x0000000F                // IDX_0[3..0]
#define WF_RRO_TOP_LRU_FW_LIST_IDX_0_SHFT                      0

/* =====================================================================================

  ---LRU_BW_LIST (0x820C2000 + 0x78)---

    IDX_0[3..0]                  - (RW) The previous cache id of LRU list[0], 0xF means NULL.
    IDX_1[7..4]                  - (RW) The previous cache id of LRU list[1], 0xF means NULL.
    IDX_2[11..8]                 - (RW) The previous cache id of LRU list[2], 0xF means NULL.
    IDX_3[15..12]                - (RW) The previous cache id of LRU list[3], 0xF means NULL.
    IDX_4[19..16]                - (RW) The previous cache id of LRU list[4], 0xF means NULL.
    IDX_5[23..20]                - (RW) The previous cache id of LRU list[5], 0xF means NULL.
    IDX_6[27..24]                - (RW) The previous cache id of LRU list[6], 0xF means NULL.
    IDX_7[31..28]                - (RW) The previous cache id of LRU list[7], 0xF means NULL.

 =====================================================================================*/
#define WF_RRO_TOP_LRU_BW_LIST_IDX_7_ADDR                      WF_RRO_TOP_LRU_BW_LIST_ADDR
#define WF_RRO_TOP_LRU_BW_LIST_IDX_7_MASK                      0xF0000000                // IDX_7[31..28]
#define WF_RRO_TOP_LRU_BW_LIST_IDX_7_SHFT                      28
#define WF_RRO_TOP_LRU_BW_LIST_IDX_6_ADDR                      WF_RRO_TOP_LRU_BW_LIST_ADDR
#define WF_RRO_TOP_LRU_BW_LIST_IDX_6_MASK                      0x0F000000                // IDX_6[27..24]
#define WF_RRO_TOP_LRU_BW_LIST_IDX_6_SHFT                      24
#define WF_RRO_TOP_LRU_BW_LIST_IDX_5_ADDR                      WF_RRO_TOP_LRU_BW_LIST_ADDR
#define WF_RRO_TOP_LRU_BW_LIST_IDX_5_MASK                      0x00F00000                // IDX_5[23..20]
#define WF_RRO_TOP_LRU_BW_LIST_IDX_5_SHFT                      20
#define WF_RRO_TOP_LRU_BW_LIST_IDX_4_ADDR                      WF_RRO_TOP_LRU_BW_LIST_ADDR
#define WF_RRO_TOP_LRU_BW_LIST_IDX_4_MASK                      0x000F0000                // IDX_4[19..16]
#define WF_RRO_TOP_LRU_BW_LIST_IDX_4_SHFT                      16
#define WF_RRO_TOP_LRU_BW_LIST_IDX_3_ADDR                      WF_RRO_TOP_LRU_BW_LIST_ADDR
#define WF_RRO_TOP_LRU_BW_LIST_IDX_3_MASK                      0x0000F000                // IDX_3[15..12]
#define WF_RRO_TOP_LRU_BW_LIST_IDX_3_SHFT                      12
#define WF_RRO_TOP_LRU_BW_LIST_IDX_2_ADDR                      WF_RRO_TOP_LRU_BW_LIST_ADDR
#define WF_RRO_TOP_LRU_BW_LIST_IDX_2_MASK                      0x00000F00                // IDX_2[11..8]
#define WF_RRO_TOP_LRU_BW_LIST_IDX_2_SHFT                      8
#define WF_RRO_TOP_LRU_BW_LIST_IDX_1_ADDR                      WF_RRO_TOP_LRU_BW_LIST_ADDR
#define WF_RRO_TOP_LRU_BW_LIST_IDX_1_MASK                      0x000000F0                // IDX_1[7..4]
#define WF_RRO_TOP_LRU_BW_LIST_IDX_1_SHFT                      4
#define WF_RRO_TOP_LRU_BW_LIST_IDX_0_ADDR                      WF_RRO_TOP_LRU_BW_LIST_ADDR
#define WF_RRO_TOP_LRU_BW_LIST_IDX_0_MASK                      0x0000000F                // IDX_0[3..0]
#define WF_RRO_TOP_LRU_BW_LIST_IDX_0_SHFT                      0

/* =====================================================================================

  ---CACHE_INFO_0 (0x820C2000 + 0x7C)---

    TAG_0[11..0]                 - (RW) BA_BITMAP_CACHE[0].tag
    VALID_0[12]                  - (RW) BA_BITMAP_CACHE[0].valid
    RESERVED13[15..13]           - (RO) Reserved bits
    TAG_1[27..16]                - (RW) BA_BITMAP_CACHE[1].tag
    VALID_1[28]                  - (RW) BA_BITMAP_CACHE[1].valid
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_CACHE_INFO_0_VALID_1_ADDR                   WF_RRO_TOP_CACHE_INFO_0_ADDR
#define WF_RRO_TOP_CACHE_INFO_0_VALID_1_MASK                   0x10000000                // VALID_1[28]
#define WF_RRO_TOP_CACHE_INFO_0_VALID_1_SHFT                   28
#define WF_RRO_TOP_CACHE_INFO_0_TAG_1_ADDR                     WF_RRO_TOP_CACHE_INFO_0_ADDR
#define WF_RRO_TOP_CACHE_INFO_0_TAG_1_MASK                     0x0FFF0000                // TAG_1[27..16]
#define WF_RRO_TOP_CACHE_INFO_0_TAG_1_SHFT                     16
#define WF_RRO_TOP_CACHE_INFO_0_VALID_0_ADDR                   WF_RRO_TOP_CACHE_INFO_0_ADDR
#define WF_RRO_TOP_CACHE_INFO_0_VALID_0_MASK                   0x00001000                // VALID_0[12]
#define WF_RRO_TOP_CACHE_INFO_0_VALID_0_SHFT                   12
#define WF_RRO_TOP_CACHE_INFO_0_TAG_0_ADDR                     WF_RRO_TOP_CACHE_INFO_0_ADDR
#define WF_RRO_TOP_CACHE_INFO_0_TAG_0_MASK                     0x00000FFF                // TAG_0[11..0]
#define WF_RRO_TOP_CACHE_INFO_0_TAG_0_SHFT                     0

/* =====================================================================================

  ---CACHE_INFO_1 (0x820C2000 + 0x80)---

    TAG_2[11..0]                 - (RW) BA_BITMAP_CACHE[2].tag
    VALID_2[12]                  - (RW) BA_BITMAP_CACHE[2].valid
    RESERVED13[15..13]           - (RO) Reserved bits
    TAG_3[27..16]                - (RW) BA_BITMAP_CACHE[3].tag
    VALID_3[28]                  - (RW) BA_BITMAP_CACHE[3].valid
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_CACHE_INFO_1_VALID_3_ADDR                   WF_RRO_TOP_CACHE_INFO_1_ADDR
#define WF_RRO_TOP_CACHE_INFO_1_VALID_3_MASK                   0x10000000                // VALID_3[28]
#define WF_RRO_TOP_CACHE_INFO_1_VALID_3_SHFT                   28
#define WF_RRO_TOP_CACHE_INFO_1_TAG_3_ADDR                     WF_RRO_TOP_CACHE_INFO_1_ADDR
#define WF_RRO_TOP_CACHE_INFO_1_TAG_3_MASK                     0x0FFF0000                // TAG_3[27..16]
#define WF_RRO_TOP_CACHE_INFO_1_TAG_3_SHFT                     16
#define WF_RRO_TOP_CACHE_INFO_1_VALID_2_ADDR                   WF_RRO_TOP_CACHE_INFO_1_ADDR
#define WF_RRO_TOP_CACHE_INFO_1_VALID_2_MASK                   0x00001000                // VALID_2[12]
#define WF_RRO_TOP_CACHE_INFO_1_VALID_2_SHFT                   12
#define WF_RRO_TOP_CACHE_INFO_1_TAG_2_ADDR                     WF_RRO_TOP_CACHE_INFO_1_ADDR
#define WF_RRO_TOP_CACHE_INFO_1_TAG_2_MASK                     0x00000FFF                // TAG_2[11..0]
#define WF_RRO_TOP_CACHE_INFO_1_TAG_2_SHFT                     0

/* =====================================================================================

  ---CACHE_INFO_2 (0x820C2000 + 0x84)---

    TAG_4[11..0]                 - (RW) BA_BITMAP_CACHE[4].tag
    VALID_4[12]                  - (RW) BA_BITMAP_CACHE[4].valid
    RESERVED13[15..13]           - (RO) Reserved bits
    TAG_5[27..16]                - (RW) BA_BITMAP_CACHE[5].tag
    VALID_5[28]                  - (RW) BA_BITMAP_CACHE[5].valid
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_CACHE_INFO_2_VALID_5_ADDR                   WF_RRO_TOP_CACHE_INFO_2_ADDR
#define WF_RRO_TOP_CACHE_INFO_2_VALID_5_MASK                   0x10000000                // VALID_5[28]
#define WF_RRO_TOP_CACHE_INFO_2_VALID_5_SHFT                   28
#define WF_RRO_TOP_CACHE_INFO_2_TAG_5_ADDR                     WF_RRO_TOP_CACHE_INFO_2_ADDR
#define WF_RRO_TOP_CACHE_INFO_2_TAG_5_MASK                     0x0FFF0000                // TAG_5[27..16]
#define WF_RRO_TOP_CACHE_INFO_2_TAG_5_SHFT                     16
#define WF_RRO_TOP_CACHE_INFO_2_VALID_4_ADDR                   WF_RRO_TOP_CACHE_INFO_2_ADDR
#define WF_RRO_TOP_CACHE_INFO_2_VALID_4_MASK                   0x00001000                // VALID_4[12]
#define WF_RRO_TOP_CACHE_INFO_2_VALID_4_SHFT                   12
#define WF_RRO_TOP_CACHE_INFO_2_TAG_4_ADDR                     WF_RRO_TOP_CACHE_INFO_2_ADDR
#define WF_RRO_TOP_CACHE_INFO_2_TAG_4_MASK                     0x00000FFF                // TAG_4[11..0]
#define WF_RRO_TOP_CACHE_INFO_2_TAG_4_SHFT                     0

/* =====================================================================================

  ---CACHE_INFO_3 (0x820C2000 + 0x88)---

    TAG_6[11..0]                 - (RW) BA_BITMAP_CACHE[6].tag
    VALID_6[12]                  - (RW) BA_BITMAP_CACHE[6].valid
    RESERVED13[15..13]           - (RO) Reserved bits
    TAG_7[27..16]                - (RW) BA_BITMAP_CACHE[7].tag
    VALID_7[28]                  - (RW) BA_BITMAP_CACHE[7].valid
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_CACHE_INFO_3_VALID_7_ADDR                   WF_RRO_TOP_CACHE_INFO_3_ADDR
#define WF_RRO_TOP_CACHE_INFO_3_VALID_7_MASK                   0x10000000                // VALID_7[28]
#define WF_RRO_TOP_CACHE_INFO_3_VALID_7_SHFT                   28
#define WF_RRO_TOP_CACHE_INFO_3_TAG_7_ADDR                     WF_RRO_TOP_CACHE_INFO_3_ADDR
#define WF_RRO_TOP_CACHE_INFO_3_TAG_7_MASK                     0x0FFF0000                // TAG_7[27..16]
#define WF_RRO_TOP_CACHE_INFO_3_TAG_7_SHFT                     16
#define WF_RRO_TOP_CACHE_INFO_3_VALID_6_ADDR                   WF_RRO_TOP_CACHE_INFO_3_ADDR
#define WF_RRO_TOP_CACHE_INFO_3_VALID_6_MASK                   0x00001000                // VALID_6[12]
#define WF_RRO_TOP_CACHE_INFO_3_VALID_6_SHFT                   12
#define WF_RRO_TOP_CACHE_INFO_3_TAG_6_ADDR                     WF_RRO_TOP_CACHE_INFO_3_ADDR
#define WF_RRO_TOP_CACHE_INFO_3_TAG_6_MASK                     0x00000FFF                // TAG_6[11..0]
#define WF_RRO_TOP_CACHE_INFO_3_TAG_6_SHFT                     0

/* =====================================================================================

  ---BUF_RUN_OUT_CONF_0 (0x820C2000 + 0x90)---

    BUF_RO_ENA[0]                - (RW) Enable buffer run out function
                                     1 : enable
                                     0: disable
    BUF_RO_CHK_START[1]          - (RW) The manual mode to start check within count
                                     Read 0 if within count check is finish
    BUF_RO_OP_STATUS[2]          - (RO) buffer run out ctrl hw status,
                                     1 : active
                                     0 : stand-by
    RESERVED3[3]                 - (RO) Reserved bits
    STEP_N[15..4]                - (RW) RRO will add last_in_sn in selected session by CR.STEP_N.
    WITHIN_CNT_THRES[27..16]     - (RW) RRO will only select the session which it's within > CR.WITHIN_CNT_THRES.
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_BUF_RUN_OUT_CONF_0_WITHIN_CNT_THRES_ADDR    WF_RRO_TOP_BUF_RUN_OUT_CONF_0_ADDR
#define WF_RRO_TOP_BUF_RUN_OUT_CONF_0_WITHIN_CNT_THRES_MASK    0x0FFF0000                // WITHIN_CNT_THRES[27..16]
#define WF_RRO_TOP_BUF_RUN_OUT_CONF_0_WITHIN_CNT_THRES_SHFT    16
#define WF_RRO_TOP_BUF_RUN_OUT_CONF_0_STEP_N_ADDR              WF_RRO_TOP_BUF_RUN_OUT_CONF_0_ADDR
#define WF_RRO_TOP_BUF_RUN_OUT_CONF_0_STEP_N_MASK              0x0000FFF0                // STEP_N[15..4]
#define WF_RRO_TOP_BUF_RUN_OUT_CONF_0_STEP_N_SHFT              4
#define WF_RRO_TOP_BUF_RUN_OUT_CONF_0_BUF_RO_OP_STATUS_ADDR    WF_RRO_TOP_BUF_RUN_OUT_CONF_0_ADDR
#define WF_RRO_TOP_BUF_RUN_OUT_CONF_0_BUF_RO_OP_STATUS_MASK    0x00000004                // BUF_RO_OP_STATUS[2]
#define WF_RRO_TOP_BUF_RUN_OUT_CONF_0_BUF_RO_OP_STATUS_SHFT    2
#define WF_RRO_TOP_BUF_RUN_OUT_CONF_0_BUF_RO_CHK_START_ADDR    WF_RRO_TOP_BUF_RUN_OUT_CONF_0_ADDR
#define WF_RRO_TOP_BUF_RUN_OUT_CONF_0_BUF_RO_CHK_START_MASK    0x00000002                // BUF_RO_CHK_START[1]
#define WF_RRO_TOP_BUF_RUN_OUT_CONF_0_BUF_RO_CHK_START_SHFT    1
#define WF_RRO_TOP_BUF_RUN_OUT_CONF_0_BUF_RO_ENA_ADDR          WF_RRO_TOP_BUF_RUN_OUT_CONF_0_ADDR
#define WF_RRO_TOP_BUF_RUN_OUT_CONF_0_BUF_RO_ENA_MASK          0x00000001                // BUF_RO_ENA[0]
#define WF_RRO_TOP_BUF_RUN_OUT_CONF_0_BUF_RO_ENA_SHFT          0

/* =====================================================================================

  ---BUF_RUN_OUT_CONF_1 (0x820C2000 + 0x94)---

    BUF_RO_START_SE_ID[10..0]    - (RW) buffer run out ctrl start session id
    RESERVED11[31..11]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_BUF_RUN_OUT_CONF_1_BUF_RO_START_SE_ID_ADDR  WF_RRO_TOP_BUF_RUN_OUT_CONF_1_ADDR
#define WF_RRO_TOP_BUF_RUN_OUT_CONF_1_BUF_RO_START_SE_ID_MASK  0x000007FF                // BUF_RO_START_SE_ID[10..0]
#define WF_RRO_TOP_BUF_RUN_OUT_CONF_1_BUF_RO_START_SE_ID_SHFT  0

/* =====================================================================================

  ---SRAM_TEST_CTRL (0x820C2000 + 0xA0)---

    RAM_MBIST_BACKGROUND[15..0]  - (RW) RAM_MBIST_BACKGROUND
    RAM_MBIST_HDEN[16]           - (RW) RAM_MBIST_HDEN
    RAM_MBIST_AWT[17]            - (RW) RAM_MBIST_AWT
    RAM_MBIST_RSTB[18]           - (RW) RAM_MBIST_RSTB
    RAM_MBIST_MODE[19]           - (RW) RAM_MBIST_MODE
    RAM_MBIST_HOLDB[20]          - (RW) RAM_MBIST_HOLDB
    RAM_MBIST_DEBUG[21]          - (RW) RAM_MBIST_DEBUG
    RESERVED22[22]               - (RO) Reserved bits
    RAM_SLEEP_R[23]              - (RW) RAM_SLEEP_R
    RAM_SLEEP_W[24]              - (RW) RAM_SLEEP_W
    RAM_SLEEP_INV[25]            - (RW) RAM_SLEEP_INV
    RAM_SLEEP_TEST[26]           - (RW) RAM_SLEEP_TEST
    RESERVED27[31..27]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_SLEEP_TEST_ADDR          WF_RRO_TOP_SRAM_TEST_CTRL_ADDR
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_SLEEP_TEST_MASK          0x04000000                // RAM_SLEEP_TEST[26]
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_SLEEP_TEST_SHFT          26
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_SLEEP_INV_ADDR           WF_RRO_TOP_SRAM_TEST_CTRL_ADDR
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_SLEEP_INV_MASK           0x02000000                // RAM_SLEEP_INV[25]
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_SLEEP_INV_SHFT           25
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_SLEEP_W_ADDR             WF_RRO_TOP_SRAM_TEST_CTRL_ADDR
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_SLEEP_W_MASK             0x01000000                // RAM_SLEEP_W[24]
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_SLEEP_W_SHFT             24
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_SLEEP_R_ADDR             WF_RRO_TOP_SRAM_TEST_CTRL_ADDR
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_SLEEP_R_MASK             0x00800000                // RAM_SLEEP_R[23]
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_SLEEP_R_SHFT             23
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_MBIST_DEBUG_ADDR         WF_RRO_TOP_SRAM_TEST_CTRL_ADDR
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_MBIST_DEBUG_MASK         0x00200000                // RAM_MBIST_DEBUG[21]
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_MBIST_DEBUG_SHFT         21
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_MBIST_HOLDB_ADDR         WF_RRO_TOP_SRAM_TEST_CTRL_ADDR
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_MBIST_HOLDB_MASK         0x00100000                // RAM_MBIST_HOLDB[20]
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_MBIST_HOLDB_SHFT         20
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_MBIST_MODE_ADDR          WF_RRO_TOP_SRAM_TEST_CTRL_ADDR
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_MBIST_MODE_MASK          0x00080000                // RAM_MBIST_MODE[19]
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_MBIST_MODE_SHFT          19
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_MBIST_RSTB_ADDR          WF_RRO_TOP_SRAM_TEST_CTRL_ADDR
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_MBIST_RSTB_MASK          0x00040000                // RAM_MBIST_RSTB[18]
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_MBIST_RSTB_SHFT          18
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_MBIST_AWT_ADDR           WF_RRO_TOP_SRAM_TEST_CTRL_ADDR
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_MBIST_AWT_MASK           0x00020000                // RAM_MBIST_AWT[17]
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_MBIST_AWT_SHFT           17
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_MBIST_HDEN_ADDR          WF_RRO_TOP_SRAM_TEST_CTRL_ADDR
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_MBIST_HDEN_MASK          0x00010000                // RAM_MBIST_HDEN[16]
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_MBIST_HDEN_SHFT          16
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_MBIST_BACKGROUND_ADDR    WF_RRO_TOP_SRAM_TEST_CTRL_ADDR
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_MBIST_BACKGROUND_MASK    0x0000FFFF                // RAM_MBIST_BACKGROUND[15..0]
#define WF_RRO_TOP_SRAM_TEST_CTRL_RAM_MBIST_BACKGROUND_SHFT    0

/* =====================================================================================

  ---APB_SLV0_STS (0x820C2000 + 0xB0)---

    APB_VIO_ADDR[15..0]          - (RO) APB_VIO_ADDR
    APB_TX_IDLE[16]              - (RO) APB_TX_IDLE
    APB_VIO_RD[17]               - (RO) APB_VIO_RD
    APB_VIO_WR[18]               - (RO) APB_VIO_WR
    APB_VIO_TIMEOUT[19]          - (RO) APB_VIO_TIMEOUT
    ERR_FLAG_EN[20]              - (RW) ERR_FLAG_EN
    APB_TIMEOUT_EN[21]           - (RW) APB_TIMEOUT_EN
    RESERVED22[31..22]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_APB_SLV0_STS_APB_TIMEOUT_EN_ADDR            WF_RRO_TOP_APB_SLV0_STS_ADDR
#define WF_RRO_TOP_APB_SLV0_STS_APB_TIMEOUT_EN_MASK            0x00200000                // APB_TIMEOUT_EN[21]
#define WF_RRO_TOP_APB_SLV0_STS_APB_TIMEOUT_EN_SHFT            21
#define WF_RRO_TOP_APB_SLV0_STS_ERR_FLAG_EN_ADDR               WF_RRO_TOP_APB_SLV0_STS_ADDR
#define WF_RRO_TOP_APB_SLV0_STS_ERR_FLAG_EN_MASK               0x00100000                // ERR_FLAG_EN[20]
#define WF_RRO_TOP_APB_SLV0_STS_ERR_FLAG_EN_SHFT               20
#define WF_RRO_TOP_APB_SLV0_STS_APB_VIO_TIMEOUT_ADDR           WF_RRO_TOP_APB_SLV0_STS_ADDR
#define WF_RRO_TOP_APB_SLV0_STS_APB_VIO_TIMEOUT_MASK           0x00080000                // APB_VIO_TIMEOUT[19]
#define WF_RRO_TOP_APB_SLV0_STS_APB_VIO_TIMEOUT_SHFT           19
#define WF_RRO_TOP_APB_SLV0_STS_APB_VIO_WR_ADDR                WF_RRO_TOP_APB_SLV0_STS_ADDR
#define WF_RRO_TOP_APB_SLV0_STS_APB_VIO_WR_MASK                0x00040000                // APB_VIO_WR[18]
#define WF_RRO_TOP_APB_SLV0_STS_APB_VIO_WR_SHFT                18
#define WF_RRO_TOP_APB_SLV0_STS_APB_VIO_RD_ADDR                WF_RRO_TOP_APB_SLV0_STS_ADDR
#define WF_RRO_TOP_APB_SLV0_STS_APB_VIO_RD_MASK                0x00020000                // APB_VIO_RD[17]
#define WF_RRO_TOP_APB_SLV0_STS_APB_VIO_RD_SHFT                17
#define WF_RRO_TOP_APB_SLV0_STS_APB_TX_IDLE_ADDR               WF_RRO_TOP_APB_SLV0_STS_ADDR
#define WF_RRO_TOP_APB_SLV0_STS_APB_TX_IDLE_MASK               0x00010000                // APB_TX_IDLE[16]
#define WF_RRO_TOP_APB_SLV0_STS_APB_TX_IDLE_SHFT               16
#define WF_RRO_TOP_APB_SLV0_STS_APB_VIO_ADDR_ADDR              WF_RRO_TOP_APB_SLV0_STS_ADDR
#define WF_RRO_TOP_APB_SLV0_STS_APB_VIO_ADDR_MASK              0x0000FFFF                // APB_VIO_ADDR[15..0]
#define WF_RRO_TOP_APB_SLV0_STS_APB_VIO_ADDR_SHFT              0

/* =====================================================================================

  ---APB_SLV1_STS (0x820C2000 + 0xB4)---

    APB_VIO_ADDR[15..0]          - (RO) APB_VIO_ADDR
    APB_TX_IDLE[16]              - (RO) APB_TX_IDLE
    APB_VIO_RD[17]               - (RO) APB_VIO_RD
    APB_VIO_WR[18]               - (RO) APB_VIO_WR
    APB_VIO_TIMEOUT[19]          - (RO) APB_VIO_TIMEOUT
    ERR_FLAG_EN[20]              - (RW) ERR_FLAG_EN
    RESERVED21[31..21]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_APB_SLV1_STS_ERR_FLAG_EN_ADDR               WF_RRO_TOP_APB_SLV1_STS_ADDR
#define WF_RRO_TOP_APB_SLV1_STS_ERR_FLAG_EN_MASK               0x00100000                // ERR_FLAG_EN[20]
#define WF_RRO_TOP_APB_SLV1_STS_ERR_FLAG_EN_SHFT               20
#define WF_RRO_TOP_APB_SLV1_STS_APB_VIO_TIMEOUT_ADDR           WF_RRO_TOP_APB_SLV1_STS_ADDR
#define WF_RRO_TOP_APB_SLV1_STS_APB_VIO_TIMEOUT_MASK           0x00080000                // APB_VIO_TIMEOUT[19]
#define WF_RRO_TOP_APB_SLV1_STS_APB_VIO_TIMEOUT_SHFT           19
#define WF_RRO_TOP_APB_SLV1_STS_APB_VIO_WR_ADDR                WF_RRO_TOP_APB_SLV1_STS_ADDR
#define WF_RRO_TOP_APB_SLV1_STS_APB_VIO_WR_MASK                0x00040000                // APB_VIO_WR[18]
#define WF_RRO_TOP_APB_SLV1_STS_APB_VIO_WR_SHFT                18
#define WF_RRO_TOP_APB_SLV1_STS_APB_VIO_RD_ADDR                WF_RRO_TOP_APB_SLV1_STS_ADDR
#define WF_RRO_TOP_APB_SLV1_STS_APB_VIO_RD_MASK                0x00020000                // APB_VIO_RD[17]
#define WF_RRO_TOP_APB_SLV1_STS_APB_VIO_RD_SHFT                17
#define WF_RRO_TOP_APB_SLV1_STS_APB_TX_IDLE_ADDR               WF_RRO_TOP_APB_SLV1_STS_ADDR
#define WF_RRO_TOP_APB_SLV1_STS_APB_TX_IDLE_MASK               0x00010000                // APB_TX_IDLE[16]
#define WF_RRO_TOP_APB_SLV1_STS_APB_TX_IDLE_SHFT               16
#define WF_RRO_TOP_APB_SLV1_STS_APB_VIO_ADDR_ADDR              WF_RRO_TOP_APB_SLV1_STS_ADDR
#define WF_RRO_TOP_APB_SLV1_STS_APB_VIO_ADDR_MASK              0x0000FFFF                // APB_VIO_ADDR[15..0]
#define WF_RRO_TOP_APB_SLV1_STS_APB_VIO_ADDR_SHFT              0

/* =====================================================================================

  ---AXI_MST_CFG (0x820C2000 + 0xB8)---

    AXI_RD_OUTSTAND_NUM[3..0]    - (RW) axi read outstanding number
    AXI_WR_OUTSTAND_NUM[7..4]    - (RW) axi write outstanding number
    AXI_BURST_SIZE[9..8]         - (RW) axi burst_size
    AXI_CLKGATE_BYP[10]          - (RW) axi interface clock gating disable
    RESERVED11[11]               - (RO) Reserved bits
    DIDX_WAIT_BRSP_OK[12]        - (RW) wait didx bresp return to avoid to avoid race condition
    IND_WAIT_BRSP_OK[13]         - (RW) wait indicate commad bresp return to avoid didx race condition
    ElEM_WAIT_BRSP_OK[14]        - (RW) wait Address element bresp return to avoid indicate commad race condition
    BMP_WAIT_BRSP_OK[15]         - (RW) wait BA bitmap bresp return to avoid read after write race condition
    AXI_SLV_SYNC_SEL[17..16]     - (RW) axi frequecy bridge slave sync level select
    AXI_MST_SYNC_SEL[19..18]     - (RW) axi frequecy bridge master sync level select
    AXI_SAMPLE_SEL[20]           - (RW) axi frequecy bridge sample select
    AXI_SYNC_MODE[21]            - (RW) axi frequecy bridge sync mode
    AXI_ERR_FLAG_CLR[22]         - (RW) error flag clear
    AXI_ERR_DET_EN[23]           - (RW) axi timout error flag enable
    HW_PROT_DONE[24]             - (RO) force ready done
    HW_PROT_FORCE_R[25]          - (RO) force_axi_rready by HW
    HW_PROT_FORCE_W[26]          - (RO) force_axi_wvalid by HW
    HW_PROT_EN[27]               - (RO) protect en control by HW
    DUMMY[28]                    - (RW) Reserve
    AXI_SW_RST_RTN_IDLE[29]      - (RW) Enable AXI interface reset until sleepprot ready and force axi idle
    AXI_SW_RST_WAIT_RDY[30]      - (RW) Enable AXI interface reset until sleepprot ready
    AXI_SW_RST_EN[31]            - (RW) Enable AXI interface can be reset by rro logic reset

 =====================================================================================*/
#define WF_RRO_TOP_AXI_MST_CFG_AXI_SW_RST_EN_ADDR              WF_RRO_TOP_AXI_MST_CFG_ADDR
#define WF_RRO_TOP_AXI_MST_CFG_AXI_SW_RST_EN_MASK              0x80000000                // AXI_SW_RST_EN[31]
#define WF_RRO_TOP_AXI_MST_CFG_AXI_SW_RST_EN_SHFT              31
#define WF_RRO_TOP_AXI_MST_CFG_AXI_SW_RST_WAIT_RDY_ADDR        WF_RRO_TOP_AXI_MST_CFG_ADDR
#define WF_RRO_TOP_AXI_MST_CFG_AXI_SW_RST_WAIT_RDY_MASK        0x40000000                // AXI_SW_RST_WAIT_RDY[30]
#define WF_RRO_TOP_AXI_MST_CFG_AXI_SW_RST_WAIT_RDY_SHFT        30
#define WF_RRO_TOP_AXI_MST_CFG_AXI_SW_RST_RTN_IDLE_ADDR        WF_RRO_TOP_AXI_MST_CFG_ADDR
#define WF_RRO_TOP_AXI_MST_CFG_AXI_SW_RST_RTN_IDLE_MASK        0x20000000                // AXI_SW_RST_RTN_IDLE[29]
#define WF_RRO_TOP_AXI_MST_CFG_AXI_SW_RST_RTN_IDLE_SHFT        29
#define WF_RRO_TOP_AXI_MST_CFG_DUMMY_ADDR                      WF_RRO_TOP_AXI_MST_CFG_ADDR
#define WF_RRO_TOP_AXI_MST_CFG_DUMMY_MASK                      0x10000000                // DUMMY[28]
#define WF_RRO_TOP_AXI_MST_CFG_DUMMY_SHFT                      28
#define WF_RRO_TOP_AXI_MST_CFG_HW_PROT_EN_ADDR                 WF_RRO_TOP_AXI_MST_CFG_ADDR
#define WF_RRO_TOP_AXI_MST_CFG_HW_PROT_EN_MASK                 0x08000000                // HW_PROT_EN[27]
#define WF_RRO_TOP_AXI_MST_CFG_HW_PROT_EN_SHFT                 27
#define WF_RRO_TOP_AXI_MST_CFG_HW_PROT_FORCE_W_ADDR            WF_RRO_TOP_AXI_MST_CFG_ADDR
#define WF_RRO_TOP_AXI_MST_CFG_HW_PROT_FORCE_W_MASK            0x04000000                // HW_PROT_FORCE_W[26]
#define WF_RRO_TOP_AXI_MST_CFG_HW_PROT_FORCE_W_SHFT            26
#define WF_RRO_TOP_AXI_MST_CFG_HW_PROT_FORCE_R_ADDR            WF_RRO_TOP_AXI_MST_CFG_ADDR
#define WF_RRO_TOP_AXI_MST_CFG_HW_PROT_FORCE_R_MASK            0x02000000                // HW_PROT_FORCE_R[25]
#define WF_RRO_TOP_AXI_MST_CFG_HW_PROT_FORCE_R_SHFT            25
#define WF_RRO_TOP_AXI_MST_CFG_HW_PROT_DONE_ADDR               WF_RRO_TOP_AXI_MST_CFG_ADDR
#define WF_RRO_TOP_AXI_MST_CFG_HW_PROT_DONE_MASK               0x01000000                // HW_PROT_DONE[24]
#define WF_RRO_TOP_AXI_MST_CFG_HW_PROT_DONE_SHFT               24
#define WF_RRO_TOP_AXI_MST_CFG_AXI_ERR_DET_EN_ADDR             WF_RRO_TOP_AXI_MST_CFG_ADDR
#define WF_RRO_TOP_AXI_MST_CFG_AXI_ERR_DET_EN_MASK             0x00800000                // AXI_ERR_DET_EN[23]
#define WF_RRO_TOP_AXI_MST_CFG_AXI_ERR_DET_EN_SHFT             23
#define WF_RRO_TOP_AXI_MST_CFG_AXI_ERR_FLAG_CLR_ADDR           WF_RRO_TOP_AXI_MST_CFG_ADDR
#define WF_RRO_TOP_AXI_MST_CFG_AXI_ERR_FLAG_CLR_MASK           0x00400000                // AXI_ERR_FLAG_CLR[22]
#define WF_RRO_TOP_AXI_MST_CFG_AXI_ERR_FLAG_CLR_SHFT           22
#define WF_RRO_TOP_AXI_MST_CFG_AXI_SYNC_MODE_ADDR              WF_RRO_TOP_AXI_MST_CFG_ADDR
#define WF_RRO_TOP_AXI_MST_CFG_AXI_SYNC_MODE_MASK              0x00200000                // AXI_SYNC_MODE[21]
#define WF_RRO_TOP_AXI_MST_CFG_AXI_SYNC_MODE_SHFT              21
#define WF_RRO_TOP_AXI_MST_CFG_AXI_SAMPLE_SEL_ADDR             WF_RRO_TOP_AXI_MST_CFG_ADDR
#define WF_RRO_TOP_AXI_MST_CFG_AXI_SAMPLE_SEL_MASK             0x00100000                // AXI_SAMPLE_SEL[20]
#define WF_RRO_TOP_AXI_MST_CFG_AXI_SAMPLE_SEL_SHFT             20
#define WF_RRO_TOP_AXI_MST_CFG_AXI_MST_SYNC_SEL_ADDR           WF_RRO_TOP_AXI_MST_CFG_ADDR
#define WF_RRO_TOP_AXI_MST_CFG_AXI_MST_SYNC_SEL_MASK           0x000C0000                // AXI_MST_SYNC_SEL[19..18]
#define WF_RRO_TOP_AXI_MST_CFG_AXI_MST_SYNC_SEL_SHFT           18
#define WF_RRO_TOP_AXI_MST_CFG_AXI_SLV_SYNC_SEL_ADDR           WF_RRO_TOP_AXI_MST_CFG_ADDR
#define WF_RRO_TOP_AXI_MST_CFG_AXI_SLV_SYNC_SEL_MASK           0x00030000                // AXI_SLV_SYNC_SEL[17..16]
#define WF_RRO_TOP_AXI_MST_CFG_AXI_SLV_SYNC_SEL_SHFT           16
#define WF_RRO_TOP_AXI_MST_CFG_BMP_WAIT_BRSP_OK_ADDR           WF_RRO_TOP_AXI_MST_CFG_ADDR
#define WF_RRO_TOP_AXI_MST_CFG_BMP_WAIT_BRSP_OK_MASK           0x00008000                // BMP_WAIT_BRSP_OK[15]
#define WF_RRO_TOP_AXI_MST_CFG_BMP_WAIT_BRSP_OK_SHFT           15
#define WF_RRO_TOP_AXI_MST_CFG_ElEM_WAIT_BRSP_OK_ADDR          WF_RRO_TOP_AXI_MST_CFG_ADDR
#define WF_RRO_TOP_AXI_MST_CFG_ElEM_WAIT_BRSP_OK_MASK          0x00004000                // ElEM_WAIT_BRSP_OK[14]
#define WF_RRO_TOP_AXI_MST_CFG_ElEM_WAIT_BRSP_OK_SHFT          14
#define WF_RRO_TOP_AXI_MST_CFG_IND_WAIT_BRSP_OK_ADDR           WF_RRO_TOP_AXI_MST_CFG_ADDR
#define WF_RRO_TOP_AXI_MST_CFG_IND_WAIT_BRSP_OK_MASK           0x00002000                // IND_WAIT_BRSP_OK[13]
#define WF_RRO_TOP_AXI_MST_CFG_IND_WAIT_BRSP_OK_SHFT           13
#define WF_RRO_TOP_AXI_MST_CFG_DIDX_WAIT_BRSP_OK_ADDR          WF_RRO_TOP_AXI_MST_CFG_ADDR
#define WF_RRO_TOP_AXI_MST_CFG_DIDX_WAIT_BRSP_OK_MASK          0x00001000                // DIDX_WAIT_BRSP_OK[12]
#define WF_RRO_TOP_AXI_MST_CFG_DIDX_WAIT_BRSP_OK_SHFT          12
#define WF_RRO_TOP_AXI_MST_CFG_AXI_CLKGATE_BYP_ADDR            WF_RRO_TOP_AXI_MST_CFG_ADDR
#define WF_RRO_TOP_AXI_MST_CFG_AXI_CLKGATE_BYP_MASK            0x00000400                // AXI_CLKGATE_BYP[10]
#define WF_RRO_TOP_AXI_MST_CFG_AXI_CLKGATE_BYP_SHFT            10
#define WF_RRO_TOP_AXI_MST_CFG_AXI_BURST_SIZE_ADDR             WF_RRO_TOP_AXI_MST_CFG_ADDR
#define WF_RRO_TOP_AXI_MST_CFG_AXI_BURST_SIZE_MASK             0x00000300                // AXI_BURST_SIZE[9..8]
#define WF_RRO_TOP_AXI_MST_CFG_AXI_BURST_SIZE_SHFT             8
#define WF_RRO_TOP_AXI_MST_CFG_AXI_WR_OUTSTAND_NUM_ADDR        WF_RRO_TOP_AXI_MST_CFG_ADDR
#define WF_RRO_TOP_AXI_MST_CFG_AXI_WR_OUTSTAND_NUM_MASK        0x000000F0                // AXI_WR_OUTSTAND_NUM[7..4]
#define WF_RRO_TOP_AXI_MST_CFG_AXI_WR_OUTSTAND_NUM_SHFT        4
#define WF_RRO_TOP_AXI_MST_CFG_AXI_RD_OUTSTAND_NUM_ADDR        WF_RRO_TOP_AXI_MST_CFG_ADDR
#define WF_RRO_TOP_AXI_MST_CFG_AXI_RD_OUTSTAND_NUM_MASK        0x0000000F                // AXI_RD_OUTSTAND_NUM[3..0]
#define WF_RRO_TOP_AXI_MST_CFG_AXI_RD_OUTSTAND_NUM_SHFT        0

/* =====================================================================================

  ---AXI_DEHANG_CTRL (0x820C2000 + 0xBC)---

    AXI_TIMEOUT_CNT[7..0]        - (RW) axi timeout limit
    AXI_DEHANG_EN[8]             - (RW) axi auto-dehang enable
    AXI_TIMEOUT_CLR[9]           - (RW) clean timeout flag
    FORCE_AXI_RREADY[10]         - (RW) force axi read  channel idle
    FORCE_AXI_WVALID[11]         - (RW) force axi write channel idle
    RESERVED12[31..12]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_AXI_DEHANG_CTRL_FORCE_AXI_WVALID_ADDR       WF_RRO_TOP_AXI_DEHANG_CTRL_ADDR
#define WF_RRO_TOP_AXI_DEHANG_CTRL_FORCE_AXI_WVALID_MASK       0x00000800                // FORCE_AXI_WVALID[11]
#define WF_RRO_TOP_AXI_DEHANG_CTRL_FORCE_AXI_WVALID_SHFT       11
#define WF_RRO_TOP_AXI_DEHANG_CTRL_FORCE_AXI_RREADY_ADDR       WF_RRO_TOP_AXI_DEHANG_CTRL_ADDR
#define WF_RRO_TOP_AXI_DEHANG_CTRL_FORCE_AXI_RREADY_MASK       0x00000400                // FORCE_AXI_RREADY[10]
#define WF_RRO_TOP_AXI_DEHANG_CTRL_FORCE_AXI_RREADY_SHFT       10
#define WF_RRO_TOP_AXI_DEHANG_CTRL_AXI_TIMEOUT_CLR_ADDR        WF_RRO_TOP_AXI_DEHANG_CTRL_ADDR
#define WF_RRO_TOP_AXI_DEHANG_CTRL_AXI_TIMEOUT_CLR_MASK        0x00000200                // AXI_TIMEOUT_CLR[9]
#define WF_RRO_TOP_AXI_DEHANG_CTRL_AXI_TIMEOUT_CLR_SHFT        9
#define WF_RRO_TOP_AXI_DEHANG_CTRL_AXI_DEHANG_EN_ADDR          WF_RRO_TOP_AXI_DEHANG_CTRL_ADDR
#define WF_RRO_TOP_AXI_DEHANG_CTRL_AXI_DEHANG_EN_MASK          0x00000100                // AXI_DEHANG_EN[8]
#define WF_RRO_TOP_AXI_DEHANG_CTRL_AXI_DEHANG_EN_SHFT          8
#define WF_RRO_TOP_AXI_DEHANG_CTRL_AXI_TIMEOUT_CNT_ADDR        WF_RRO_TOP_AXI_DEHANG_CTRL_ADDR
#define WF_RRO_TOP_AXI_DEHANG_CTRL_AXI_TIMEOUT_CNT_MASK        0x000000FF                // AXI_TIMEOUT_CNT[7..0]
#define WF_RRO_TOP_AXI_DEHANG_CTRL_AXI_TIMEOUT_CNT_SHFT        0

/* =====================================================================================

  ---AXI_DEHANG_DBG (0x820C2000 + 0xC0)---

    TIMEOUT_REMAIN_R_OUTSTAND[3..0] - (RO) TIMEOUT_REMAIN_R_OUTSTAND
    TIMEOUT_REMAIN_RLEN[7..4]    - (RO) TIMEOUT_REMAIN_RLEN
    TIMEOUT_ARLEN[11..8]         - (RO) TIMEOUT_ARLEN
    TIMEOUT_ARID[15..12]         - (RO) TIMEOUT_ARID
    TIMEOUT_REMAIN_W_OUTSTAND[19..16] - (RO) TIMEOUT_REMAIN_W_OUTSTAND
    TIMEOUT_REMAIN_WLEN[23..20]  - (RO) TIMEOUT_REMAIN_WLEN
    TIMEOUT_AWLEN[27..24]        - (RO) TIMEOUT_AWLEN
    TIMEOUT_AWID[31..28]         - (RO) TIMEOUT_AWID

 =====================================================================================*/
#define WF_RRO_TOP_AXI_DEHANG_DBG_TIMEOUT_AWID_ADDR            WF_RRO_TOP_AXI_DEHANG_DBG_ADDR
#define WF_RRO_TOP_AXI_DEHANG_DBG_TIMEOUT_AWID_MASK            0xF0000000                // TIMEOUT_AWID[31..28]
#define WF_RRO_TOP_AXI_DEHANG_DBG_TIMEOUT_AWID_SHFT            28
#define WF_RRO_TOP_AXI_DEHANG_DBG_TIMEOUT_AWLEN_ADDR           WF_RRO_TOP_AXI_DEHANG_DBG_ADDR
#define WF_RRO_TOP_AXI_DEHANG_DBG_TIMEOUT_AWLEN_MASK           0x0F000000                // TIMEOUT_AWLEN[27..24]
#define WF_RRO_TOP_AXI_DEHANG_DBG_TIMEOUT_AWLEN_SHFT           24
#define WF_RRO_TOP_AXI_DEHANG_DBG_TIMEOUT_REMAIN_WLEN_ADDR     WF_RRO_TOP_AXI_DEHANG_DBG_ADDR
#define WF_RRO_TOP_AXI_DEHANG_DBG_TIMEOUT_REMAIN_WLEN_MASK     0x00F00000                // TIMEOUT_REMAIN_WLEN[23..20]
#define WF_RRO_TOP_AXI_DEHANG_DBG_TIMEOUT_REMAIN_WLEN_SHFT     20
#define WF_RRO_TOP_AXI_DEHANG_DBG_TIMEOUT_REMAIN_W_OUTSTAND_ADDR WF_RRO_TOP_AXI_DEHANG_DBG_ADDR
#define WF_RRO_TOP_AXI_DEHANG_DBG_TIMEOUT_REMAIN_W_OUTSTAND_MASK 0x000F0000                // TIMEOUT_REMAIN_W_OUTSTAND[19..16]
#define WF_RRO_TOP_AXI_DEHANG_DBG_TIMEOUT_REMAIN_W_OUTSTAND_SHFT 16
#define WF_RRO_TOP_AXI_DEHANG_DBG_TIMEOUT_ARID_ADDR            WF_RRO_TOP_AXI_DEHANG_DBG_ADDR
#define WF_RRO_TOP_AXI_DEHANG_DBG_TIMEOUT_ARID_MASK            0x0000F000                // TIMEOUT_ARID[15..12]
#define WF_RRO_TOP_AXI_DEHANG_DBG_TIMEOUT_ARID_SHFT            12
#define WF_RRO_TOP_AXI_DEHANG_DBG_TIMEOUT_ARLEN_ADDR           WF_RRO_TOP_AXI_DEHANG_DBG_ADDR
#define WF_RRO_TOP_AXI_DEHANG_DBG_TIMEOUT_ARLEN_MASK           0x00000F00                // TIMEOUT_ARLEN[11..8]
#define WF_RRO_TOP_AXI_DEHANG_DBG_TIMEOUT_ARLEN_SHFT           8
#define WF_RRO_TOP_AXI_DEHANG_DBG_TIMEOUT_REMAIN_RLEN_ADDR     WF_RRO_TOP_AXI_DEHANG_DBG_ADDR
#define WF_RRO_TOP_AXI_DEHANG_DBG_TIMEOUT_REMAIN_RLEN_MASK     0x000000F0                // TIMEOUT_REMAIN_RLEN[7..4]
#define WF_RRO_TOP_AXI_DEHANG_DBG_TIMEOUT_REMAIN_RLEN_SHFT     4
#define WF_RRO_TOP_AXI_DEHANG_DBG_TIMEOUT_REMAIN_R_OUTSTAND_ADDR WF_RRO_TOP_AXI_DEHANG_DBG_ADDR
#define WF_RRO_TOP_AXI_DEHANG_DBG_TIMEOUT_REMAIN_R_OUTSTAND_MASK 0x0000000F                // TIMEOUT_REMAIN_R_OUTSTAND[3..0]
#define WF_RRO_TOP_AXI_DEHANG_DBG_TIMEOUT_REMAIN_R_OUTSTAND_SHFT 0

/* =====================================================================================

  ---AXI_SLPPROT_CTRL (0x820C2000 + 0xC4)---

    PROT_EN[0]                   - (RW) PROT_EN
    PROT_RDY[1]                  - (RO) PROT_RDY
    PROT_IDLE[2]                 - (RO) PROT_IDLE
    AXI_IDLE[3]                  - (RO) AXI_IDLE
    AXI_IDLE_SYNC[4]             - (RO) AXI_IDLE_SYNC
    VIO_SLPPROT[5]               - (RO) VIO_SLPPROT
    RESERVED6[31..6]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_AXI_SLPPROT_CTRL_VIO_SLPPROT_ADDR           WF_RRO_TOP_AXI_SLPPROT_CTRL_ADDR
#define WF_RRO_TOP_AXI_SLPPROT_CTRL_VIO_SLPPROT_MASK           0x00000020                // VIO_SLPPROT[5]
#define WF_RRO_TOP_AXI_SLPPROT_CTRL_VIO_SLPPROT_SHFT           5
#define WF_RRO_TOP_AXI_SLPPROT_CTRL_AXI_IDLE_SYNC_ADDR         WF_RRO_TOP_AXI_SLPPROT_CTRL_ADDR
#define WF_RRO_TOP_AXI_SLPPROT_CTRL_AXI_IDLE_SYNC_MASK         0x00000010                // AXI_IDLE_SYNC[4]
#define WF_RRO_TOP_AXI_SLPPROT_CTRL_AXI_IDLE_SYNC_SHFT         4
#define WF_RRO_TOP_AXI_SLPPROT_CTRL_AXI_IDLE_ADDR              WF_RRO_TOP_AXI_SLPPROT_CTRL_ADDR
#define WF_RRO_TOP_AXI_SLPPROT_CTRL_AXI_IDLE_MASK              0x00000008                // AXI_IDLE[3]
#define WF_RRO_TOP_AXI_SLPPROT_CTRL_AXI_IDLE_SHFT              3
#define WF_RRO_TOP_AXI_SLPPROT_CTRL_PROT_IDLE_ADDR             WF_RRO_TOP_AXI_SLPPROT_CTRL_ADDR
#define WF_RRO_TOP_AXI_SLPPROT_CTRL_PROT_IDLE_MASK             0x00000004                // PROT_IDLE[2]
#define WF_RRO_TOP_AXI_SLPPROT_CTRL_PROT_IDLE_SHFT             2
#define WF_RRO_TOP_AXI_SLPPROT_CTRL_PROT_RDY_ADDR              WF_RRO_TOP_AXI_SLPPROT_CTRL_ADDR
#define WF_RRO_TOP_AXI_SLPPROT_CTRL_PROT_RDY_MASK              0x00000002                // PROT_RDY[1]
#define WF_RRO_TOP_AXI_SLPPROT_CTRL_PROT_RDY_SHFT              1
#define WF_RRO_TOP_AXI_SLPPROT_CTRL_PROT_EN_ADDR               WF_RRO_TOP_AXI_SLPPROT_CTRL_ADDR
#define WF_RRO_TOP_AXI_SLPPROT_CTRL_PROT_EN_MASK               0x00000001                // PROT_EN[0]
#define WF_RRO_TOP_AXI_SLPPROT_CTRL_PROT_EN_SHFT               0

/* =====================================================================================

  ---R2A_DBG (0x820C2000 + 0xC8)---

    R2A_AXI_BESP_ERROR_iNFO[7..0] - (RO) R2A_AXI_BESP_ERROR_iNFO
    R2A_AXI_BESP_ERROR[8]        - (RO) R2A_AXI_BESP_ERROR
    RESERVED9[15..9]             - (RO) Reserved bits
    R2A_AXI_RESP_ERROR_iNFO[23..16] - (RO) R2A_AXI_RESP_ERROR_iNFO
    R2A_AXI_RESP_ERROR[24]       - (RO) R2A_AXI_RESP_ERROR
    R2A_AXI_WR_ERR_DET_INT[25]   - (RO) R2A_AXI_WR_ERR_DET_INT
    R2A_AXI_RD_ERR_DET_INT[26]   - (RO) R2A_AXI_RD_ERR_DET_INT
    RESERVED27[31..27]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_R2A_DBG_R2A_AXI_RD_ERR_DET_INT_ADDR         WF_RRO_TOP_R2A_DBG_ADDR
#define WF_RRO_TOP_R2A_DBG_R2A_AXI_RD_ERR_DET_INT_MASK         0x04000000                // R2A_AXI_RD_ERR_DET_INT[26]
#define WF_RRO_TOP_R2A_DBG_R2A_AXI_RD_ERR_DET_INT_SHFT         26
#define WF_RRO_TOP_R2A_DBG_R2A_AXI_WR_ERR_DET_INT_ADDR         WF_RRO_TOP_R2A_DBG_ADDR
#define WF_RRO_TOP_R2A_DBG_R2A_AXI_WR_ERR_DET_INT_MASK         0x02000000                // R2A_AXI_WR_ERR_DET_INT[25]
#define WF_RRO_TOP_R2A_DBG_R2A_AXI_WR_ERR_DET_INT_SHFT         25
#define WF_RRO_TOP_R2A_DBG_R2A_AXI_RESP_ERROR_ADDR             WF_RRO_TOP_R2A_DBG_ADDR
#define WF_RRO_TOP_R2A_DBG_R2A_AXI_RESP_ERROR_MASK             0x01000000                // R2A_AXI_RESP_ERROR[24]
#define WF_RRO_TOP_R2A_DBG_R2A_AXI_RESP_ERROR_SHFT             24
#define WF_RRO_TOP_R2A_DBG_R2A_AXI_RESP_ERROR_iNFO_ADDR        WF_RRO_TOP_R2A_DBG_ADDR
#define WF_RRO_TOP_R2A_DBG_R2A_AXI_RESP_ERROR_iNFO_MASK        0x00FF0000                // R2A_AXI_RESP_ERROR_iNFO[23..16]
#define WF_RRO_TOP_R2A_DBG_R2A_AXI_RESP_ERROR_iNFO_SHFT        16
#define WF_RRO_TOP_R2A_DBG_R2A_AXI_BESP_ERROR_ADDR             WF_RRO_TOP_R2A_DBG_ADDR
#define WF_RRO_TOP_R2A_DBG_R2A_AXI_BESP_ERROR_MASK             0x00000100                // R2A_AXI_BESP_ERROR[8]
#define WF_RRO_TOP_R2A_DBG_R2A_AXI_BESP_ERROR_SHFT             8
#define WF_RRO_TOP_R2A_DBG_R2A_AXI_BESP_ERROR_iNFO_ADDR        WF_RRO_TOP_R2A_DBG_ADDR
#define WF_RRO_TOP_R2A_DBG_R2A_AXI_BESP_ERROR_iNFO_MASK        0x000000FF                // R2A_AXI_BESP_ERROR_iNFO[7..0]
#define WF_RRO_TOP_R2A_DBG_R2A_AXI_BESP_ERROR_iNFO_SHFT        0

/* =====================================================================================

  ---MEM_MST_CFG (0x820C2000 + 0xD0)---

    MMST_ERR_DET_ENA[0]          - (RW) memory master detect timeout enable
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_MEM_MST_CFG_MMST_ERR_DET_ENA_ADDR           WF_RRO_TOP_MEM_MST_CFG_ADDR
#define WF_RRO_TOP_MEM_MST_CFG_MMST_ERR_DET_ENA_MASK           0x00000001                // MMST_ERR_DET_ENA[0]
#define WF_RRO_TOP_MEM_MST_CFG_MMST_ERR_DET_ENA_SHFT           0

/* =====================================================================================

  ---DBG_RD_CTRL (0x820C2000 + 0xE0)---

    DBG_RD_ADDR[15..0]           - (RW) debug read address
    RESERVED16[30..16]           - (RO) Reserved bits
    DBG_RD_EXEC[31]              - (RW) execuate read address

 =====================================================================================*/
#define WF_RRO_TOP_DBG_RD_CTRL_DBG_RD_EXEC_ADDR                WF_RRO_TOP_DBG_RD_CTRL_ADDR
#define WF_RRO_TOP_DBG_RD_CTRL_DBG_RD_EXEC_MASK                0x80000000                // DBG_RD_EXEC[31]
#define WF_RRO_TOP_DBG_RD_CTRL_DBG_RD_EXEC_SHFT                31
#define WF_RRO_TOP_DBG_RD_CTRL_DBG_RD_ADDR_ADDR                WF_RRO_TOP_DBG_RD_CTRL_ADDR
#define WF_RRO_TOP_DBG_RD_CTRL_DBG_RD_ADDR_MASK                0x0000FFFF                // DBG_RD_ADDR[15..0]
#define WF_RRO_TOP_DBG_RD_CTRL_DBG_RD_ADDR_SHFT                0

/* =====================================================================================

  ---DBG_RDAT_DW0 (0x820C2000 + 0xF0)---

    DBG_RDAT_DW0[31..0]          - (RO) debug read data

 =====================================================================================*/
#define WF_RRO_TOP_DBG_RDAT_DW0_DBG_RDAT_DW0_ADDR              WF_RRO_TOP_DBG_RDAT_DW0_ADDR
#define WF_RRO_TOP_DBG_RDAT_DW0_DBG_RDAT_DW0_MASK              0xFFFFFFFF                // DBG_RDAT_DW0[31..0]
#define WF_RRO_TOP_DBG_RDAT_DW0_DBG_RDAT_DW0_SHFT              0

/* =====================================================================================

  ---DBG_RDAT_DW1 (0x820C2000 + 0xF4)---

    DBG_RDAT_DW1[31..0]          - (RO) debug read data

 =====================================================================================*/
#define WF_RRO_TOP_DBG_RDAT_DW1_DBG_RDAT_DW1_ADDR              WF_RRO_TOP_DBG_RDAT_DW1_ADDR
#define WF_RRO_TOP_DBG_RDAT_DW1_DBG_RDAT_DW1_MASK              0xFFFFFFFF                // DBG_RDAT_DW1[31..0]
#define WF_RRO_TOP_DBG_RDAT_DW1_DBG_RDAT_DW1_SHFT              0

/* =====================================================================================

  ---DBG_RDAT_DW2 (0x820C2000 + 0xF8)---

    DBG_RDAT_DW2[31..0]          - (RO) debug read data

 =====================================================================================*/
#define WF_RRO_TOP_DBG_RDAT_DW2_DBG_RDAT_DW2_ADDR              WF_RRO_TOP_DBG_RDAT_DW2_ADDR
#define WF_RRO_TOP_DBG_RDAT_DW2_DBG_RDAT_DW2_MASK              0xFFFFFFFF                // DBG_RDAT_DW2[31..0]
#define WF_RRO_TOP_DBG_RDAT_DW2_DBG_RDAT_DW2_SHFT              0

/* =====================================================================================

  ---DBG_RDAT_DW3 (0x820C2000 + 0xFC)---

    DBG_RDAT_DW3[31..0]          - (RO) debug read data

 =====================================================================================*/
#define WF_RRO_TOP_DBG_RDAT_DW3_DBG_RDAT_DW3_ADDR              WF_RRO_TOP_DBG_RDAT_DW3_ADDR
#define WF_RRO_TOP_DBG_RDAT_DW3_DBG_RDAT_DW3_MASK              0xFFFFFFFF                // DBG_RDAT_DW3[31..0]
#define WF_RRO_TOP_DBG_RDAT_DW3_DBG_RDAT_DW3_SHFT              0

/* =====================================================================================

  ---STATISTIC_0 (0x820C2000 + 0x180)---

    STEP_ONE_CNT[31..0]          - (RC) The STEP_ONE case counter

 =====================================================================================*/
#define WF_RRO_TOP_STATISTIC_0_STEP_ONE_CNT_ADDR               WF_RRO_TOP_STATISTIC_0_ADDR
#define WF_RRO_TOP_STATISTIC_0_STEP_ONE_CNT_MASK               0xFFFFFFFF                // STEP_ONE_CNT[31..0]
#define WF_RRO_TOP_STATISTIC_0_STEP_ONE_CNT_SHFT               0

/* =====================================================================================

  ---STATISTIC_1 (0x820C2000 + 0x184)---

    REPEAT_CNT[31..0]            - (RC) The REPEAT case counter

 =====================================================================================*/
#define WF_RRO_TOP_STATISTIC_1_REPEAT_CNT_ADDR                 WF_RRO_TOP_STATISTIC_1_ADDR
#define WF_RRO_TOP_STATISTIC_1_REPEAT_CNT_MASK                 0xFFFFFFFF                // REPEAT_CNT[31..0]
#define WF_RRO_TOP_STATISTIC_1_REPEAT_CNT_SHFT                 0

/* =====================================================================================

  ---STATISTIC_2 (0x820C2000 + 0x188)---

    OLDPKT_CNT[31..0]            - (RC) The OLDPKT case counter

 =====================================================================================*/
#define WF_RRO_TOP_STATISTIC_2_OLDPKT_CNT_ADDR                 WF_RRO_TOP_STATISTIC_2_ADDR
#define WF_RRO_TOP_STATISTIC_2_OLDPKT_CNT_MASK                 0xFFFFFFFF                // OLDPKT_CNT[31..0]
#define WF_RRO_TOP_STATISTIC_2_OLDPKT_CNT_SHFT                 0

/* =====================================================================================

  ---STATISTIC_3 (0x820C2000 + 0x18C)---

    WITHIN_CNT[31..0]            - (RC) The WITHIN case counter

 =====================================================================================*/
#define WF_RRO_TOP_STATISTIC_3_WITHIN_CNT_ADDR                 WF_RRO_TOP_STATISTIC_3_ADDR
#define WF_RRO_TOP_STATISTIC_3_WITHIN_CNT_MASK                 0xFFFFFFFF                // WITHIN_CNT[31..0]
#define WF_RRO_TOP_STATISTIC_3_WITHIN_CNT_SHFT                 0

/* =====================================================================================

  ---STATISTIC_4 (0x820C2000 + 0x190)---

    SURPASS_CNT[31..0]           - (RC) The SURPASS case counter

 =====================================================================================*/
#define WF_RRO_TOP_STATISTIC_4_SURPASS_CNT_ADDR                WF_RRO_TOP_STATISTIC_4_ADDR
#define WF_RRO_TOP_STATISTIC_4_SURPASS_CNT_MASK                0xFFFFFFFF                // SURPASS_CNT[31..0]
#define WF_RRO_TOP_STATISTIC_4_SURPASS_CNT_SHFT                0

/* =====================================================================================

  ---STATISTIC_5 (0x820C2000 + 0x194)---

    DBG_CNT0[31..0]              - (RC) DBG_CNT0

 =====================================================================================*/
#define WF_RRO_TOP_STATISTIC_5_DBG_CNT0_ADDR                   WF_RRO_TOP_STATISTIC_5_ADDR
#define WF_RRO_TOP_STATISTIC_5_DBG_CNT0_MASK                   0xFFFFFFFF                // DBG_CNT0[31..0]
#define WF_RRO_TOP_STATISTIC_5_DBG_CNT0_SHFT                   0

/* =====================================================================================

  ---STATISTIC_6 (0x820C2000 + 0x198)---

    DBG_CNT1[31..0]              - (RC) DBG_CNT1

 =====================================================================================*/
#define WF_RRO_TOP_STATISTIC_6_DBG_CNT1_ADDR                   WF_RRO_TOP_STATISTIC_6_ADDR
#define WF_RRO_TOP_STATISTIC_6_DBG_CNT1_MASK                   0xFFFFFFFF                // DBG_CNT1[31..0]
#define WF_RRO_TOP_STATISTIC_6_DBG_CNT1_SHFT                   0

/* =====================================================================================

  ---STATISTIC_7 (0x820C2000 + 0x19C)---

    DBG_CNT2[31..0]              - (RC) DBG_CNT2

 =====================================================================================*/
#define WF_RRO_TOP_STATISTIC_7_DBG_CNT2_ADDR                   WF_RRO_TOP_STATISTIC_7_ADDR
#define WF_RRO_TOP_STATISTIC_7_DBG_CNT2_MASK                   0xFFFFFFFF                // DBG_CNT2[31..0]
#define WF_RRO_TOP_STATISTIC_7_DBG_CNT2_SHFT                   0

/* =====================================================================================

  ---STATISTIC_8 (0x820C2000 + 0x1A0)---

    DBG_CNT3[31..0]              - (RC) DBG_CNT3

 =====================================================================================*/
#define WF_RRO_TOP_STATISTIC_8_DBG_CNT3_ADDR                   WF_RRO_TOP_STATISTIC_8_ADDR
#define WF_RRO_TOP_STATISTIC_8_DBG_CNT3_MASK                   0xFFFFFFFF                // DBG_CNT3[31..0]
#define WF_RRO_TOP_STATISTIC_8_DBG_CNT3_SHFT                   0

/* =====================================================================================

  ---STATISTIC_9 (0x820C2000 + 0x1A4)---

    DBG_CNT4[31..0]              - (RC) DBG_CNT4

 =====================================================================================*/
#define WF_RRO_TOP_STATISTIC_9_DBG_CNT4_ADDR                   WF_RRO_TOP_STATISTIC_9_ADDR
#define WF_RRO_TOP_STATISTIC_9_DBG_CNT4_MASK                   0xFFFFFFFF                // DBG_CNT4[31..0]
#define WF_RRO_TOP_STATISTIC_9_DBG_CNT4_SHFT                   0

/* =====================================================================================

  ---STATISTIC_10 (0x820C2000 + 0x1A8)---

    DBG_CNT5[31..0]              - (RC) DBG_CNT5

 =====================================================================================*/
#define WF_RRO_TOP_STATISTIC_10_DBG_CNT5_ADDR                  WF_RRO_TOP_STATISTIC_10_ADDR
#define WF_RRO_TOP_STATISTIC_10_DBG_CNT5_MASK                  0xFFFFFFFF                // DBG_CNT5[31..0]
#define WF_RRO_TOP_STATISTIC_10_DBG_CNT5_SHFT                  0

/* =====================================================================================

  ---STATISTIC_11 (0x820C2000 + 0x1AC)---

    DBG_CNT6[31..0]              - (RC) DBG_CNT6

 =====================================================================================*/
#define WF_RRO_TOP_STATISTIC_11_DBG_CNT6_ADDR                  WF_RRO_TOP_STATISTIC_11_ADDR
#define WF_RRO_TOP_STATISTIC_11_DBG_CNT6_MASK                  0xFFFFFFFF                // DBG_CNT6[31..0]
#define WF_RRO_TOP_STATISTIC_11_DBG_CNT6_SHFT                  0

/* =====================================================================================

  ---HOST_INT_STS (0x820C2000 + 0x200)---

    HOST_RRO_DONE_INT[0]         - (W1C) RRO write indicate command trigger host acces indicate command
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_HOST_INT_STS_HOST_RRO_DONE_INT_ADDR         WF_RRO_TOP_HOST_INT_STS_ADDR
#define WF_RRO_TOP_HOST_INT_STS_HOST_RRO_DONE_INT_MASK         0x00000001                // HOST_RRO_DONE_INT[0]
#define WF_RRO_TOP_HOST_INT_STS_HOST_RRO_DONE_INT_SHFT         0

/* =====================================================================================

  ---HOST_INT_ENA (0x820C2000 + 0x204)---

    HOST_RRO_DONE_ENA[0]         - (RW) enable RRO trigger interrupt
    RESERVED1[31..1]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_HOST_INT_ENA_HOST_RRO_DONE_ENA_ADDR         WF_RRO_TOP_HOST_INT_ENA_ADDR
#define WF_RRO_TOP_HOST_INT_ENA_HOST_RRO_DONE_ENA_MASK         0x00000001                // HOST_RRO_DONE_ENA[0]
#define WF_RRO_TOP_HOST_INT_ENA_HOST_RRO_DONE_ENA_SHFT         0

/* =====================================================================================

  ---MCU_INT_STS (0x820C2000 + 0x210)---

    MCU_RRO_DONE_INT[0]          - (W1C) RRO write indicate command infor mcu
    RESERVED1[15..1]             - (RO) Reserved bits
    AXI_W_TIMEOUT[16]            - (W1C) axi write bus timeout
    AXI_R_TIMEOUT[17]            - (W1C) axi read bus timeout
    RESERVED18[31..18]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_MCU_INT_STS_AXI_R_TIMEOUT_ADDR              WF_RRO_TOP_MCU_INT_STS_ADDR
#define WF_RRO_TOP_MCU_INT_STS_AXI_R_TIMEOUT_MASK              0x00020000                // AXI_R_TIMEOUT[17]
#define WF_RRO_TOP_MCU_INT_STS_AXI_R_TIMEOUT_SHFT              17
#define WF_RRO_TOP_MCU_INT_STS_AXI_W_TIMEOUT_ADDR              WF_RRO_TOP_MCU_INT_STS_ADDR
#define WF_RRO_TOP_MCU_INT_STS_AXI_W_TIMEOUT_MASK              0x00010000                // AXI_W_TIMEOUT[16]
#define WF_RRO_TOP_MCU_INT_STS_AXI_W_TIMEOUT_SHFT              16
#define WF_RRO_TOP_MCU_INT_STS_MCU_RRO_DONE_INT_ADDR           WF_RRO_TOP_MCU_INT_STS_ADDR
#define WF_RRO_TOP_MCU_INT_STS_MCU_RRO_DONE_INT_MASK           0x00000001                // MCU_RRO_DONE_INT[0]
#define WF_RRO_TOP_MCU_INT_STS_MCU_RRO_DONE_INT_SHFT           0

/* =====================================================================================

  ---MCU_INT_ENA (0x820C2000 + 0x214)---

    MCU_RRO_DONE_INT_ENA[0]      - (W1C) enable RRO write indicate command infor mcu
    RESERVED1[15..1]             - (RO) Reserved bits
    AXI_W_TIMEOUT_ENA[16]        - (W1C) axi write bus timeout enable
    AXI_R_TIMEOUT_ENA[17]        - (W1C) axi read bus timeout enable
    RESERVED18[31..18]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_MCU_INT_ENA_AXI_R_TIMEOUT_ENA_ADDR          WF_RRO_TOP_MCU_INT_ENA_ADDR
#define WF_RRO_TOP_MCU_INT_ENA_AXI_R_TIMEOUT_ENA_MASK          0x00020000                // AXI_R_TIMEOUT_ENA[17]
#define WF_RRO_TOP_MCU_INT_ENA_AXI_R_TIMEOUT_ENA_SHFT          17
#define WF_RRO_TOP_MCU_INT_ENA_AXI_W_TIMEOUT_ENA_ADDR          WF_RRO_TOP_MCU_INT_ENA_ADDR
#define WF_RRO_TOP_MCU_INT_ENA_AXI_W_TIMEOUT_ENA_MASK          0x00010000                // AXI_W_TIMEOUT_ENA[16]
#define WF_RRO_TOP_MCU_INT_ENA_AXI_W_TIMEOUT_ENA_SHFT          16
#define WF_RRO_TOP_MCU_INT_ENA_MCU_RRO_DONE_INT_ENA_ADDR       WF_RRO_TOP_MCU_INT_ENA_ADDR
#define WF_RRO_TOP_MCU_INT_ENA_MCU_RRO_DONE_INT_ENA_MASK       0x00000001                // MCU_RRO_DONE_INT_ENA[0]
#define WF_RRO_TOP_MCU_INT_ENA_MCU_RRO_DONE_INT_ENA_SHFT       0

/* =====================================================================================

  ---RRO_BUSY_STATUS (0x820C2000 + 0x220)---

    CR_CFG_BUST[0]               - (RO) CR_CFG_BUST
    BUF_RUNOUT_BUSY[1]           - (RO) BUF_RUNOUT_BUSY
    TIMEOUT_BUSY[2]              - (RO) TIMEOUT_BUSY
    IND_BUSY[3]                  - (RO) IND_BUSY
    RRO_ENG_BUSY[4]              - (RO) RRO_ENG_BUSY
    CACHE_BUSY[5]                - (RO) CACHE_BUSY
    SETBL_BUSY[6]                - (RO) SETBL_BUSY
    DISP_BUSY[7]                 - (RO) DISP_BUSY
    INT_APB_BUSY[8]              - (RO) INT_APB_BUSY
    EXT_APB_BUSY[9]              - (RO) EXT_APB_BUSY
    RESERVED10[30..10]           - (RO) Reserved bits
    WF_RRO_OSC_EN[31]            - (RO) WF_RRO_OSC_EN

 =====================================================================================*/
#define WF_RRO_TOP_RRO_BUSY_STATUS_WF_RRO_OSC_EN_ADDR          WF_RRO_TOP_RRO_BUSY_STATUS_ADDR
#define WF_RRO_TOP_RRO_BUSY_STATUS_WF_RRO_OSC_EN_MASK          0x80000000                // WF_RRO_OSC_EN[31]
#define WF_RRO_TOP_RRO_BUSY_STATUS_WF_RRO_OSC_EN_SHFT          31
#define WF_RRO_TOP_RRO_BUSY_STATUS_EXT_APB_BUSY_ADDR           WF_RRO_TOP_RRO_BUSY_STATUS_ADDR
#define WF_RRO_TOP_RRO_BUSY_STATUS_EXT_APB_BUSY_MASK           0x00000200                // EXT_APB_BUSY[9]
#define WF_RRO_TOP_RRO_BUSY_STATUS_EXT_APB_BUSY_SHFT           9
#define WF_RRO_TOP_RRO_BUSY_STATUS_INT_APB_BUSY_ADDR           WF_RRO_TOP_RRO_BUSY_STATUS_ADDR
#define WF_RRO_TOP_RRO_BUSY_STATUS_INT_APB_BUSY_MASK           0x00000100                // INT_APB_BUSY[8]
#define WF_RRO_TOP_RRO_BUSY_STATUS_INT_APB_BUSY_SHFT           8
#define WF_RRO_TOP_RRO_BUSY_STATUS_DISP_BUSY_ADDR              WF_RRO_TOP_RRO_BUSY_STATUS_ADDR
#define WF_RRO_TOP_RRO_BUSY_STATUS_DISP_BUSY_MASK              0x00000080                // DISP_BUSY[7]
#define WF_RRO_TOP_RRO_BUSY_STATUS_DISP_BUSY_SHFT              7
#define WF_RRO_TOP_RRO_BUSY_STATUS_SETBL_BUSY_ADDR             WF_RRO_TOP_RRO_BUSY_STATUS_ADDR
#define WF_RRO_TOP_RRO_BUSY_STATUS_SETBL_BUSY_MASK             0x00000040                // SETBL_BUSY[6]
#define WF_RRO_TOP_RRO_BUSY_STATUS_SETBL_BUSY_SHFT             6
#define WF_RRO_TOP_RRO_BUSY_STATUS_CACHE_BUSY_ADDR             WF_RRO_TOP_RRO_BUSY_STATUS_ADDR
#define WF_RRO_TOP_RRO_BUSY_STATUS_CACHE_BUSY_MASK             0x00000020                // CACHE_BUSY[5]
#define WF_RRO_TOP_RRO_BUSY_STATUS_CACHE_BUSY_SHFT             5
#define WF_RRO_TOP_RRO_BUSY_STATUS_RRO_ENG_BUSY_ADDR           WF_RRO_TOP_RRO_BUSY_STATUS_ADDR
#define WF_RRO_TOP_RRO_BUSY_STATUS_RRO_ENG_BUSY_MASK           0x00000010                // RRO_ENG_BUSY[4]
#define WF_RRO_TOP_RRO_BUSY_STATUS_RRO_ENG_BUSY_SHFT           4
#define WF_RRO_TOP_RRO_BUSY_STATUS_IND_BUSY_ADDR               WF_RRO_TOP_RRO_BUSY_STATUS_ADDR
#define WF_RRO_TOP_RRO_BUSY_STATUS_IND_BUSY_MASK               0x00000008                // IND_BUSY[3]
#define WF_RRO_TOP_RRO_BUSY_STATUS_IND_BUSY_SHFT               3
#define WF_RRO_TOP_RRO_BUSY_STATUS_TIMEOUT_BUSY_ADDR           WF_RRO_TOP_RRO_BUSY_STATUS_ADDR
#define WF_RRO_TOP_RRO_BUSY_STATUS_TIMEOUT_BUSY_MASK           0x00000004                // TIMEOUT_BUSY[2]
#define WF_RRO_TOP_RRO_BUSY_STATUS_TIMEOUT_BUSY_SHFT           2
#define WF_RRO_TOP_RRO_BUSY_STATUS_BUF_RUNOUT_BUSY_ADDR        WF_RRO_TOP_RRO_BUSY_STATUS_ADDR
#define WF_RRO_TOP_RRO_BUSY_STATUS_BUF_RUNOUT_BUSY_MASK        0x00000002                // BUF_RUNOUT_BUSY[1]
#define WF_RRO_TOP_RRO_BUSY_STATUS_BUF_RUNOUT_BUSY_SHFT        1
#define WF_RRO_TOP_RRO_BUSY_STATUS_CR_CFG_BUST_ADDR            WF_RRO_TOP_RRO_BUSY_STATUS_ADDR
#define WF_RRO_TOP_RRO_BUSY_STATUS_CR_CFG_BUST_MASK            0x00000001                // CR_CFG_BUST[0]
#define WF_RRO_TOP_RRO_BUSY_STATUS_CR_CFG_BUST_SHFT            0

/* =====================================================================================

  ---RRO_BUSY_ENA (0x820C2000 + 0x224)---

    CR_CFG_BUST_ENA[0]           - (RW) CR_CFG_BUST_ENA
    BUF_RUNOUT_BUSY_ENA[1]       - (RW) BUF_RUNOUT_BUSY_ENA
    TIMEOUT_BUSY_ENA[2]          - (RW) TIMEOUT_BUSY_ENA
    IND_BUSY_ENA[3]              - (RW) IND_BUSY_ENA
    RRO_ENG_BUSY_ENA[4]          - (RW) RRO_ENG_BUSY_ENA
    CACHE_BUSY_ENA[5]            - (RW) CACHE_BUSY_ENA
    SETBL_BUSY_ENA[6]            - (RW) SETBL_BUSY_ENA
    DISP_BUSY_ENA[7]             - (RW) DISP_BUSY_ENA
    INT_APB_BUSY_ENA[8]          - (RW) INT_APB_BUSY_ENA
    EXT_APB_BUSY_ENA[9]          - (RW) EXT_APB_BUSY_ENA
    RESERVED10[31..10]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_RRO_TOP_RRO_BUSY_ENA_EXT_APB_BUSY_ENA_ADDR          WF_RRO_TOP_RRO_BUSY_ENA_ADDR
#define WF_RRO_TOP_RRO_BUSY_ENA_EXT_APB_BUSY_ENA_MASK          0x00000200                // EXT_APB_BUSY_ENA[9]
#define WF_RRO_TOP_RRO_BUSY_ENA_EXT_APB_BUSY_ENA_SHFT          9
#define WF_RRO_TOP_RRO_BUSY_ENA_INT_APB_BUSY_ENA_ADDR          WF_RRO_TOP_RRO_BUSY_ENA_ADDR
#define WF_RRO_TOP_RRO_BUSY_ENA_INT_APB_BUSY_ENA_MASK          0x00000100                // INT_APB_BUSY_ENA[8]
#define WF_RRO_TOP_RRO_BUSY_ENA_INT_APB_BUSY_ENA_SHFT          8
#define WF_RRO_TOP_RRO_BUSY_ENA_DISP_BUSY_ENA_ADDR             WF_RRO_TOP_RRO_BUSY_ENA_ADDR
#define WF_RRO_TOP_RRO_BUSY_ENA_DISP_BUSY_ENA_MASK             0x00000080                // DISP_BUSY_ENA[7]
#define WF_RRO_TOP_RRO_BUSY_ENA_DISP_BUSY_ENA_SHFT             7
#define WF_RRO_TOP_RRO_BUSY_ENA_SETBL_BUSY_ENA_ADDR            WF_RRO_TOP_RRO_BUSY_ENA_ADDR
#define WF_RRO_TOP_RRO_BUSY_ENA_SETBL_BUSY_ENA_MASK            0x00000040                // SETBL_BUSY_ENA[6]
#define WF_RRO_TOP_RRO_BUSY_ENA_SETBL_BUSY_ENA_SHFT            6
#define WF_RRO_TOP_RRO_BUSY_ENA_CACHE_BUSY_ENA_ADDR            WF_RRO_TOP_RRO_BUSY_ENA_ADDR
#define WF_RRO_TOP_RRO_BUSY_ENA_CACHE_BUSY_ENA_MASK            0x00000020                // CACHE_BUSY_ENA[5]
#define WF_RRO_TOP_RRO_BUSY_ENA_CACHE_BUSY_ENA_SHFT            5
#define WF_RRO_TOP_RRO_BUSY_ENA_RRO_ENG_BUSY_ENA_ADDR          WF_RRO_TOP_RRO_BUSY_ENA_ADDR
#define WF_RRO_TOP_RRO_BUSY_ENA_RRO_ENG_BUSY_ENA_MASK          0x00000010                // RRO_ENG_BUSY_ENA[4]
#define WF_RRO_TOP_RRO_BUSY_ENA_RRO_ENG_BUSY_ENA_SHFT          4
#define WF_RRO_TOP_RRO_BUSY_ENA_IND_BUSY_ENA_ADDR              WF_RRO_TOP_RRO_BUSY_ENA_ADDR
#define WF_RRO_TOP_RRO_BUSY_ENA_IND_BUSY_ENA_MASK              0x00000008                // IND_BUSY_ENA[3]
#define WF_RRO_TOP_RRO_BUSY_ENA_IND_BUSY_ENA_SHFT              3
#define WF_RRO_TOP_RRO_BUSY_ENA_TIMEOUT_BUSY_ENA_ADDR          WF_RRO_TOP_RRO_BUSY_ENA_ADDR
#define WF_RRO_TOP_RRO_BUSY_ENA_TIMEOUT_BUSY_ENA_MASK          0x00000004                // TIMEOUT_BUSY_ENA[2]
#define WF_RRO_TOP_RRO_BUSY_ENA_TIMEOUT_BUSY_ENA_SHFT          2
#define WF_RRO_TOP_RRO_BUSY_ENA_BUF_RUNOUT_BUSY_ENA_ADDR       WF_RRO_TOP_RRO_BUSY_ENA_ADDR
#define WF_RRO_TOP_RRO_BUSY_ENA_BUF_RUNOUT_BUSY_ENA_MASK       0x00000002                // BUF_RUNOUT_BUSY_ENA[1]
#define WF_RRO_TOP_RRO_BUSY_ENA_BUF_RUNOUT_BUSY_ENA_SHFT       1
#define WF_RRO_TOP_RRO_BUSY_ENA_CR_CFG_BUST_ENA_ADDR           WF_RRO_TOP_RRO_BUSY_ENA_ADDR
#define WF_RRO_TOP_RRO_BUSY_ENA_CR_CFG_BUST_ENA_MASK           0x00000001                // CR_CFG_BUST_ENA[0]
#define WF_RRO_TOP_RRO_BUSY_ENA_CR_CFG_BUST_ENA_SHFT           0

#ifdef __cplusplus
}
#endif

#endif // __WF_RRO_TOP_REGS_H__
