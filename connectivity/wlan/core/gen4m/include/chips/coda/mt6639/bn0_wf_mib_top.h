/* SPDX-License-Identifier: BSD-2-Clause */
/*
 * Copyright (c) 2021 MediaTek Inc.
 */

//[File]            : bn0_wf_mib_top.h
//[Revision time]   : Tue Jun 22 15:56:09 2021
//[Description]     : This file is auto generated by CODA
//[Copyright]       : Copyright (C) 2021 Mediatek Incorportion. All rights reserved.

#ifndef __BN0_WF_MIB_TOP_REGS_H__
#define __BN0_WF_MIB_TOP_REGS_H__

#include "hal_common.h"

#ifdef __cplusplus
extern "C" {
#endif


//****************************************************************************
//
//                     BN0_WF_MIB_TOP CR Definitions
//
//****************************************************************************

#define BN0_WF_MIB_TOP_BASE                                    0x820ed000

#define BN0_WF_MIB_TOP_M0SCR0_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x000) // D000
#define BN0_WF_MIB_TOP_M0SCR1_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x004) // D004
#define BN0_WF_MIB_TOP_M0SCR2_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x008) // D008
#define BN0_WF_MIB_TOP_CTCR_ADDR                               (BN0_WF_MIB_TOP_BASE + 0x010) // D010
#define BN0_WF_MIB_TOP_MCR_ADDR                                (BN0_WF_MIB_TOP_BASE + 0x01C) // D01C
#define BN0_WF_MIB_TOP_M0SDR6_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x020) // D020
#define BN0_WF_MIB_TOP_M0SDR9_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x024) // D024
#define BN0_WF_MIB_TOP_MNCR_ADDR                               (BN0_WF_MIB_TOP_BASE + 0x028) // D028
#define BN0_WF_MIB_TOP_M0SDR18_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x030) // D030
#define BN0_WF_MIB_TOP_M0SDR59_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x034) // D034
#define BN0_WF_MIB_TOP_M2PTTCR_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x040) // D040
#define BN0_WF_MIB_TOP_M2PITCR_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x044) // D044
#define BN0_WF_MIB_TOP_M0SDR45_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x048) // D048
#define BN0_WF_MIB_TOP_M0SDR44_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x04C) // D04C
#define BN0_WF_MIB_TOP_MAR0_ADDR                               (BN0_WF_MIB_TOP_BASE + 0x050) // D050
#define BN0_WF_MIB_TOP_MAR1_ADDR                               (BN0_WF_MIB_TOP_BASE + 0x054) // D054
#define BN0_WF_MIB_TOP_MAR2_ADDR                               (BN0_WF_MIB_TOP_BASE + 0x058) // D058
#define BN0_WF_MIB_TOP_MAR3_ADDR                               (BN0_WF_MIB_TOP_BASE + 0x05C) // D05C
#define BN0_WF_MIB_TOP_M0SDR46_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x060) // D060
#define BN0_WF_MIB_TOP_M0SDR47_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x064) // D064
#define BN0_WF_MIB_TOP_M0SDR48_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x068) // D068
#define BN0_WF_MIB_TOP_TXOPC0_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x070) // D070
#define BN0_WF_MIB_TOP_TXOPC1_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x074) // D074
#define BN0_WF_MIB_TOP_TXOPC2_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x078) // D078
#define BN0_WF_MIB_TOP_M0SDR27_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x080) // D080
#define BN0_WF_MIB_TOP_M0SDR28_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x084) // D084
#define BN0_WF_MIB_TOP_M0SDR66_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x08C) // D08C
#define BN0_WF_MIB_TOP_M0CABT0_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x090) // D090
#define BN0_WF_MIB_TOP_M0CABT1_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x094) // D094
#define BN0_WF_MIB_TOP_M0TABT0_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x0A0) // D0A0
#define BN0_WF_MIB_TOP_M0TABT1_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x0A4) // D0A4
#define BN0_WF_MIB_TOP_M0TABT2_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x0A8) // D0A8
#define BN0_WF_MIB_TOP_M0TABT3_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x0AC) // D0AC
#define BN0_WF_MIB_TOP_TRARC0_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x0B0) // D0B0
#define BN0_WF_MIB_TOP_TRARC1_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x0B4) // D0B4
#define BN0_WF_MIB_TOP_TRARC2_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x0B8) // D0B8
#define BN0_WF_MIB_TOP_TRARC3_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x0BC) // D0BC
#define BN0_WF_MIB_TOP_TRARC4_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x0C0) // D0C0
#define BN0_WF_MIB_TOP_TRARC5_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x0C4) // D0C4
#define BN0_WF_MIB_TOP_TRARC6_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x0C8) // D0C8
#define BN0_WF_MIB_TOP_TRARC7_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x0CC) // D0CC
#define BN0_WF_MIB_TOP_MMCR_ADDR                               (BN0_WF_MIB_TOP_BASE + 0x0F0) // D0F0
#define BN0_WF_MIB_TOP_MVCR_ADDR                               (BN0_WF_MIB_TOP_BASE + 0x3FC) // D3FC
#define BN0_WF_MIB_TOP_BTOCR_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x400) // D400
#define BN0_WF_MIB_TOP_BTBCR_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x450) // D450
#define BN0_WF_MIB_TOP_BTMRCR_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x4A0) // D4A0
#define BN0_WF_MIB_TOP_BTDRCR_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x4F0) // D4F0
#define BN0_WF_MIB_TOP_BTCCR_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x540) // D540
#define BN0_WF_MIB_TOP_BTDCR_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x590) // D590
#define BN0_WF_MIB_TOP_BTCR_ADDR                               (BN0_WF_MIB_TOP_BASE + 0x5A0) // D5A0
#define BN0_WF_MIB_TOP_BTFCR_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x5B0) // D5B0
#define BN0_WF_MIB_TOP_BFTCR_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x5C0) // D5C0
#define BN0_WF_MIB_TOP_BFTFCR_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x5D0) // D5D0
#define BN0_WF_MIB_TOP_BTSCR0_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x5E0) // D5E0
#define BN0_WF_MIB_TOP_BTSCR1_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x5F0) // D5F0
#define BN0_WF_MIB_TOP_BTSCR2_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x600) // D600
#define BN0_WF_MIB_TOP_BTSCR3_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x610) // D610
#define BN0_WF_MIB_TOP_BTSCR4_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x620) // D620
#define BN0_WF_MIB_TOP_BTBMTCR_ADDR                            (BN0_WF_MIB_TOP_BASE + 0x630) // D630
#define BN0_WF_MIB_TOP_ATCR_ADDR                               (BN0_WF_MIB_TOP_BASE + 0x640) // D640
#define BN0_WF_MIB_TOP_ATRCR_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x650) // D650
#define BN0_WF_MIB_TOP_ATDCR_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x660) // D660
#define BN0_WF_MIB_TOP_TSCR0_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x670) // D670
#define BN0_WF_MIB_TOP_TSCR1_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x674) // D674
#define BN0_WF_MIB_TOP_TSCR2_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x678) // D678
#define BN0_WF_MIB_TOP_TSCR3_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x67C) // D67C
#define BN0_WF_MIB_TOP_TSCR4_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x680) // D680
#define BN0_WF_MIB_TOP_TSCR7_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x68C) // D68C
#define BN0_WF_MIB_TOP_SRC0_ADDR                               (BN0_WF_MIB_TOP_BASE + 0x694) // D694
#define BN0_WF_MIB_TOP_SRC1_ADDR                               (BN0_WF_MIB_TOP_BASE + 0x698) // D698
#define BN0_WF_MIB_TOP_TSCR12_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x6A8) // D6A8
#define BN0_WF_MIB_TOP_TBCR0_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x6AC) // D6AC
#define BN0_WF_MIB_TOP_TBCR1_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x6B0) // D6B0
#define BN0_WF_MIB_TOP_TBCR2_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x6B4) // D6B4
#define BN0_WF_MIB_TOP_TBCR3_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x6B8) // D6B8
#define BN0_WF_MIB_TOP_TBCR4_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x6BC) // D6BC
#define BN0_WF_MIB_TOP_TSCR13_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x6C0) // D6C0
#define BN0_WF_MIB_TOP_TSCR14_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x6C4) // D6C4
#define BN0_WF_MIB_TOP_TSCR15_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x6C8) // D6C8
#define BN0_WF_MIB_TOP_TSCR16_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x6CC) // D6CC
#define BN0_WF_MIB_TOP_TSCR17_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x6D0) // D6D0
#define BN0_WF_MIB_TOP_RVSR0_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x6D4) // D6D4
#define BN0_WF_MIB_TOP_RVSR1_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x6D8) // D6D8
#define BN0_WF_MIB_TOP_TDRCR0_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x6DC) // D6DC
#define BN0_WF_MIB_TOP_TDRCR1_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x6E0) // D6E0
#define BN0_WF_MIB_TOP_TDRCR2_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x6E4) // D6E4
#define BN0_WF_MIB_TOP_TDRCR3_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x6E8) // D6E8
#define BN0_WF_MIB_TOP_TDRCR4_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x6EC) // D6EC
#define BN0_WF_MIB_TOP_RUTCR_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x6F0) // D6F0
#define BN0_WF_MIB_TOP_BTSCR5_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x73C) // D73C
#define BN0_WF_MIB_TOP_BTSCR6_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x74C) // D74C
#define BN0_WF_MIB_TOP_RSCR0_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x75C) // D75C
#define BN0_WF_MIB_TOP_RSCR1_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x760) // D760
#define BN0_WF_MIB_TOP_M0NSS1MCS0_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x764) // D764
#define BN0_WF_MIB_TOP_M0NSS1MCS0_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x768) // D768
#define BN0_WF_MIB_TOP_M0NSS1MCS1_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x76C) // D76C
#define BN0_WF_MIB_TOP_M0NSS1MCS1_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x770) // D770
#define BN0_WF_MIB_TOP_M0NSS1MCS2_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x774) // D774
#define BN0_WF_MIB_TOP_M0NSS1MCS2_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x778) // D778
#define BN0_WF_MIB_TOP_M0NSS1MCS3_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x77C) // D77C
#define BN0_WF_MIB_TOP_M0NSS1MCS3_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x780) // D780
#define BN0_WF_MIB_TOP_M0NSS1MCS4_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x784) // D784
#define BN0_WF_MIB_TOP_M0NSS1MCS4_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x788) // D788
#define BN0_WF_MIB_TOP_M0NSS1MCS5_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x78C) // D78C
#define BN0_WF_MIB_TOP_M0NSS1MCS5_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x790) // D790
#define BN0_WF_MIB_TOP_M0NSS1MCS6_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x794) // D794
#define BN0_WF_MIB_TOP_M0NSS1MCS6_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x798) // D798
#define BN0_WF_MIB_TOP_M0NSS1MCS7_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x79C) // D79C
#define BN0_WF_MIB_TOP_M0NSS1MCS7_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x7A0) // D7A0
#define BN0_WF_MIB_TOP_M0NSS1MCS8_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x7A4) // D7A4
#define BN0_WF_MIB_TOP_M0NSS1MCS8_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x7A8) // D7A8
#define BN0_WF_MIB_TOP_M0NSS1MCS9_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x7AC) // D7AC
#define BN0_WF_MIB_TOP_M0NSS1MCS9_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x7B0) // D7B0
#define BN0_WF_MIB_TOP_M0NSS2MCS0_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x7B4) // D7B4
#define BN0_WF_MIB_TOP_M0NSS2MCS0_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x7B8) // D7B8
#define BN0_WF_MIB_TOP_M0NSS2MCS1_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x7BC) // D7BC
#define BN0_WF_MIB_TOP_M0NSS2MCS1_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x7C0) // D7C0
#define BN0_WF_MIB_TOP_M0NSS2MCS2_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x7C4) // D7C4
#define BN0_WF_MIB_TOP_M0NSS2MCS2_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x7C8) // D7C8
#define BN0_WF_MIB_TOP_M0NSS2MCS3_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x7CC) // D7CC
#define BN0_WF_MIB_TOP_M0NSS2MCS3_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x7D0) // D7D0
#define BN0_WF_MIB_TOP_M0NSS2MCS4_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x7D4) // D7D4
#define BN0_WF_MIB_TOP_M0NSS2MCS4_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x7D8) // D7D8
#define BN0_WF_MIB_TOP_M0NSS2MCS5_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x7DC) // D7DC
#define BN0_WF_MIB_TOP_M0NSS2MCS5_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x7E0) // D7E0
#define BN0_WF_MIB_TOP_M0NSS2MCS6_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x7E4) // D7E4
#define BN0_WF_MIB_TOP_M0NSS2MCS6_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x7E8) // D7E8
#define BN0_WF_MIB_TOP_M0NSS2MCS7_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x7EC) // D7EC
#define BN0_WF_MIB_TOP_M0NSS2MCS7_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x7F0) // D7F0
#define BN0_WF_MIB_TOP_M0NSS2MCS8_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x7F4) // D7F4
#define BN0_WF_MIB_TOP_M0NSS2MCS8_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x7F8) // D7F8
#define BN0_WF_MIB_TOP_M0NSS2MCS9_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x7FC) // D7FC
#define BN0_WF_MIB_TOP_M0NSS2MCS9_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x800) // D800
#define BN0_WF_MIB_TOP_M0NSS3MCS0_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x804) // D804
#define BN0_WF_MIB_TOP_M0NSS3MCS0_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x808) // D808
#define BN0_WF_MIB_TOP_M0NSS3MCS1_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x80C) // D80C
#define BN0_WF_MIB_TOP_M0NSS3MCS1_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x810) // D810
#define BN0_WF_MIB_TOP_M0NSS3MCS2_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x814) // D814
#define BN0_WF_MIB_TOP_M0NSS3MCS2_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x818) // D818
#define BN0_WF_MIB_TOP_M0NSS3MCS3_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x81C) // D81C
#define BN0_WF_MIB_TOP_M0NSS3MCS3_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x820) // D820
#define BN0_WF_MIB_TOP_M0NSS3MCS4_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x824) // D824
#define BN0_WF_MIB_TOP_M0NSS3MCS4_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x828) // D828
#define BN0_WF_MIB_TOP_M0NSS3MCS5_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x82C) // D82C
#define BN0_WF_MIB_TOP_M0NSS3MCS5_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x830) // D830
#define BN0_WF_MIB_TOP_M0NSS3MCS6_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x834) // D834
#define BN0_WF_MIB_TOP_M0NSS3MCS6_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x838) // D838
#define BN0_WF_MIB_TOP_M0NSS3MCS7_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x83C) // D83C
#define BN0_WF_MIB_TOP_M0NSS3MCS7_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x840) // D840
#define BN0_WF_MIB_TOP_M0NSS3MCS8_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x844) // D844
#define BN0_WF_MIB_TOP_M0NSS3MCS8_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x848) // D848
#define BN0_WF_MIB_TOP_M0NSS3MCS9_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x84C) // D84C
#define BN0_WF_MIB_TOP_M0NSS3MCS9_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x850) // D850
#define BN0_WF_MIB_TOP_M0NSS4MCS0_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x854) // D854
#define BN0_WF_MIB_TOP_M0NSS4MCS0_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x858) // D858
#define BN0_WF_MIB_TOP_M0NSS4MCS1_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x85C) // D85C
#define BN0_WF_MIB_TOP_M0NSS4MCS1_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x860) // D860
#define BN0_WF_MIB_TOP_M0NSS4MCS2_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x864) // D864
#define BN0_WF_MIB_TOP_M0NSS4MCS2_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x868) // D868
#define BN0_WF_MIB_TOP_M0NSS4MCS3_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x86C) // D86C
#define BN0_WF_MIB_TOP_M0NSS4MCS3_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x870) // D870
#define BN0_WF_MIB_TOP_M0NSS4MCS4_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x874) // D874
#define BN0_WF_MIB_TOP_M0NSS4MCS4_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x878) // D878
#define BN0_WF_MIB_TOP_M0NSS4MCS5_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x87C) // D87C
#define BN0_WF_MIB_TOP_M0NSS4MCS5_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x880) // D880
#define BN0_WF_MIB_TOP_M0NSS4MCS6_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x884) // D884
#define BN0_WF_MIB_TOP_M0NSS4MCS6_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x888) // D888
#define BN0_WF_MIB_TOP_M0NSS4MCS7_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x88C) // D88C
#define BN0_WF_MIB_TOP_M0NSS4MCS7_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x890) // D890
#define BN0_WF_MIB_TOP_M0NSS4MCS8_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x894) // D894
#define BN0_WF_MIB_TOP_M0NSS4MCS8_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x898) // D898
#define BN0_WF_MIB_TOP_M0NSS4MCS9_0_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x89C) // D89C
#define BN0_WF_MIB_TOP_M0NSS4MCS9_1_ADDR                       (BN0_WF_MIB_TOP_BASE + 0x8A0) // D8A0
#define BN0_WF_MIB_TOP_RSCR2_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x8A4) // D8A4
#define BN0_WF_MIB_TOP_RSCR3_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x8A8) // D8A8
#define BN0_WF_MIB_TOP_RSCR4_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x8AC) // D8AC
#define BN0_WF_MIB_TOP_RSCR5_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x8B0) // D8B0
#define BN0_WF_MIB_TOP_RSCR6_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x8B4) // D8B4
#define BN0_WF_MIB_TOP_RSCR7_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x8B8) // D8B8
#define BN0_WF_MIB_TOP_RSCR8_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x8BC) // D8BC
#define BN0_WF_MIB_TOP_RSCR9_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x8C0) // D8C0
#define BN0_WF_MIB_TOP_RSCR10_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x8C4) // D8C4
#define BN0_WF_MIB_TOP_RSCR11_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x8C8) // D8C8
#define BN0_WF_MIB_TOP_RSCR12_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x8CC) // D8CC
#define BN0_WF_MIB_TOP_RSCR13_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x8D0) // D8D0
#define BN0_WF_MIB_TOP_RSCR14_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x8D4) // D8D4
#define BN0_WF_MIB_TOP_RSCR15_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x8D8) // D8D8
#define BN0_WF_MIB_TOP_RSCR16_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x8DC) // D8DC
#define BN0_WF_MIB_TOP_RSCR17_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x8E0) // D8E0
#define BN0_WF_MIB_TOP_RSCR18_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x8E4) // D8E4
#define BN0_WF_MIB_TOP_RSCR19_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x8E8) // D8E8
#define BN0_WF_MIB_TOP_RSCR20_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x8EC) // D8EC
#define BN0_WF_MIB_TOP_RSCR21_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x8F0) // D8F0
#define BN0_WF_MIB_TOP_RSCR22_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x8F4) // D8F4
#define BN0_WF_MIB_TOP_RSCR23_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x8F8) // D8F8
#define BN0_WF_MIB_TOP_RSCR24_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x8FC) // D8FC
#define BN0_WF_MIB_TOP_RSCR25_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x900) // D900
#define BN0_WF_MIB_TOP_RSCR26_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x904) // D904
#define BN0_WF_MIB_TOP_RSCR27_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x908) // D908
#define BN0_WF_MIB_TOP_RSCR28_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x90C) // D90C
#define BN0_WF_MIB_TOP_RSCR29_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x910) // D910
#define BN0_WF_MIB_TOP_RSCR30_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x914) // D914
#define BN0_WF_MIB_TOP_RSCR31_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x918) // D918
#define BN0_WF_MIB_TOP_RSCR32_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x91C) // D91C
#define BN0_WF_MIB_TOP_RSCR33_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x920) // D920
#define BN0_WF_MIB_TOP_RSCR34_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x924) // D924
#define BN0_WF_MIB_TOP_RSCR35_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x928) // D928
#define BN0_WF_MIB_TOP_RSCR36_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x92C) // D92C
#define BN0_WF_MIB_TOP_RSCR37_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x930) // D930
#define BN0_WF_MIB_TOP_RSCR39_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x934) // D934
#define BN0_WF_MIB_TOP_RSCR40_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x938) // D938
#define BN0_WF_MIB_TOP_RSCR41_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x93C) // D93C
#define BN0_WF_MIB_TOP_SRVCR0_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x940) // D940
#define BN0_WF_MIB_TOP_SRVCR1_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x944) // D944
#define BN0_WF_MIB_TOP_SRCPVCR0_ADDR                           (BN0_WF_MIB_TOP_BASE + 0x948) // D948
#define BN0_WF_MIB_TOP_SRCPVCR1_ADDR                           (BN0_WF_MIB_TOP_BASE + 0x94C) // D94C
#define BN0_WF_MIB_TOP_SRTRCR_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x950) // D950
#define BN0_WF_MIB_TOP_OPCR0_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x954) // D954
#define BN0_WF_MIB_TOP_OPCR1_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x958) // D958
#define BN0_WF_MIB_TOP_BSCR0_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x95C) // D95C
#define BN0_WF_MIB_TOP_BSCR1_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x960) // D960
#define BN0_WF_MIB_TOP_BSCR3_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x968) // D968
#define BN0_WF_MIB_TOP_BSCR4_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x96C) // D96C
#define BN0_WF_MIB_TOP_BSCR5_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x970) // D970
#define BN0_WF_MIB_TOP_BSCR6_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x974) // D974
#define BN0_WF_MIB_TOP_BSCR7_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x978) // D978
#define BN0_WF_MIB_TOP_BSCR8_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x97C) // D97C
#define BN0_WF_MIB_TOP_BSCR9_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x980) // D980
#define BN0_WF_MIB_TOP_BSCR10_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x984) // D984
#define BN0_WF_MIB_TOP_BSCR11_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x988) // D988
#define BN0_WF_MIB_TOP_BSCR12_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x98C) // D98C
#define BN0_WF_MIB_TOP_BSCR13_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x990) // D990
#define BN0_WF_MIB_TOP_BSCR14_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x994) // D994
#define BN0_WF_MIB_TOP_BSCR15_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x998) // D998
#define BN0_WF_MIB_TOP_BSCR16_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x99C) // D99C
#define BN0_WF_MIB_TOP_BSCR17_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x9A0) // D9A0
#define BN0_WF_MIB_TOP_BSCR18_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x9A4) // D9A4
#define BN0_WF_MIB_TOP_BSCR19_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x9A8) // D9A8
#define BN0_WF_MIB_TOP_TSCR18_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x9AC) // D9AC
#define BN0_WF_MIB_TOP_RSCR38_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x9B0) // D9B0
#define BN0_WF_MIB_TOP_TRDR0_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x9B4) // D9B4
#define BN0_WF_MIB_TOP_TRDR1_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x9B8) // D9B8
#define BN0_WF_MIB_TOP_TRDR2_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x9BC) // D9BC
#define BN0_WF_MIB_TOP_TRDR3_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x9C0) // D9C0
#define BN0_WF_MIB_TOP_TRDR4_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x9C4) // D9C4
#define BN0_WF_MIB_TOP_TRDR5_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x9C8) // D9C8
#define BN0_WF_MIB_TOP_TRDR6_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x9CC) // D9CC
#define BN0_WF_MIB_TOP_TRDR7_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x9D0) // D9D0
#define BN0_WF_MIB_TOP_TRDR8_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x9D4) // D9D4
#define BN0_WF_MIB_TOP_TRDR9_ADDR                              (BN0_WF_MIB_TOP_BASE + 0x9D8) // D9D8
#define BN0_WF_MIB_TOP_TRDR10_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x9DC) // D9DC
#define BN0_WF_MIB_TOP_TRDR11_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x9E0) // D9E0
#define BN0_WF_MIB_TOP_TRDR12_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x9E4) // D9E4
#define BN0_WF_MIB_TOP_TRDR13_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x9E8) // D9E8
#define BN0_WF_MIB_TOP_TRDR14_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x9EC) // D9EC
#define BN0_WF_MIB_TOP_TRDR15_ADDR                             (BN0_WF_MIB_TOP_BASE + 0x9F0) // D9F0
#define BN0_WF_MIB_TOP_MSR0_ADDR                               (BN0_WF_MIB_TOP_BASE + 0x9F4) // D9F4
#define BN0_WF_MIB_TOP_MSR1_ADDR                               (BN0_WF_MIB_TOP_BASE + 0x9F8) // D9F8
#define BN0_WF_MIB_TOP_MSR2_ADDR                               (BN0_WF_MIB_TOP_BASE + 0x9FC) // D9FC
#define BN0_WF_MIB_TOP_MCTR5_ADDR                              (BN0_WF_MIB_TOP_BASE + 0xA00) // DA00
#define BN0_WF_MIB_TOP_MCTR6_ADDR                              (BN0_WF_MIB_TOP_BASE + 0xA04) // DA04
#define BN0_WF_MIB_TOP_MCTR0_ADDR                              (BN0_WF_MIB_TOP_BASE + 0xA08) // DA08
#define BN0_WF_MIB_TOP_MCTR1_ADDR                              (BN0_WF_MIB_TOP_BASE + 0xA0C) // DA0C
#define BN0_WF_MIB_TOP_MCTR2_ADDR                              (BN0_WF_MIB_TOP_BASE + 0xA10) // DA10
#define BN0_WF_MIB_TOP_MCTR3_ADDR                              (BN0_WF_MIB_TOP_BASE + 0xA14) // DA14
#define BN0_WF_MIB_TOP_MCTR4_ADDR                              (BN0_WF_MIB_TOP_BASE + 0xA18) // DA18
#define BN0_WF_MIB_TOP_MCS2TR0_ADDR                            (BN0_WF_MIB_TOP_BASE + 0xA1C) // DA1C
#define BN0_WF_MIB_TOP_MCS2TR1_ADDR                            (BN0_WF_MIB_TOP_BASE + 0xA20) // DA20
#define BN0_WF_MIB_TOP_MCS2TR2_ADDR                            (BN0_WF_MIB_TOP_BASE + 0xA24) // DA24
#define BN0_WF_MIB_TOP_MCS2TR3_ADDR                            (BN0_WF_MIB_TOP_BASE + 0xA28) // DA28
#define BN0_WF_MIB_TOP_MCS2TR4_ADDR                            (BN0_WF_MIB_TOP_BASE + 0xA2C) // DA2C
#define BN0_WF_MIB_TOP_MCS2TR5_ADDR                            (BN0_WF_MIB_TOP_BASE + 0xA30) // DA30
#define BN0_WF_MIB_TOP_MCS2TR6_ADDR                            (BN0_WF_MIB_TOP_BASE + 0xA34) // DA34
#define BN0_WF_MIB_TOP_MCS2TR7_ADDR                            (BN0_WF_MIB_TOP_BASE + 0xA38) // DA38
#define BN0_WF_MIB_TOP_MCS2TR8_ADDR                            (BN0_WF_MIB_TOP_BASE + 0xA3C) // DA3C
#define BN0_WF_MIB_TOP_MCS2TR9_ADDR                            (BN0_WF_MIB_TOP_BASE + 0xA40) // DA40
#define BN0_WF_MIB_TOP_MCS2TR10_ADDR                           (BN0_WF_MIB_TOP_BASE + 0xA44) // DA44
#define BN0_WF_MIB_TOP_MCS2TR11_ADDR                           (BN0_WF_MIB_TOP_BASE + 0xA48) // DA48
#define BN0_WF_MIB_TOP_MCS2TR12_ADDR                           (BN0_WF_MIB_TOP_BASE + 0xA4C) // DA4C
#define BN0_WF_MIB_TOP_MCS2TR13_ADDR                           (BN0_WF_MIB_TOP_BASE + 0xA50) // DA50
#define BN0_WF_MIB_TOP_MCS2TR14_ADDR                           (BN0_WF_MIB_TOP_BASE + 0xA54) // DA54
#define BN0_WF_MIB_TOP_MCS2TR15_ADDR                           (BN0_WF_MIB_TOP_BASE + 0xA58) // DA58




/* =====================================================================================

  ---M0SCR0 (0x820ed000 + 0x000)---

    RESERVED0[2..0]              - (RO) Reserved bits
    CHANNEL_IDLE_COUNT_EN[3]     - (RW) Enable Channel idle count
    RESERVED4[10..4]             - (RO) Reserved bits
    PSCCA_TIME_EN[13..11]        - (RW) Enable PSCCA time count
    CCA_NAV_TX_TIME_EN[16..14]   - (RW) Enable CCA NAV TX time count
    RESERVED17[17]               - (RO) Reserved bits
    ARB_TX_RWP_COUNT_EN[18]      - (RW) Enable ARB TX remaining windows count
    RESERVED19[24..19]           - (RO) Reserved bits
    OFDM_CCK_MDRDY_TIME_EN[27..25] - (RW) Enable OFDM CCK MDRDY time count
    PED_TIME_EN[30..28]          - (RW) Enable Primary ED time count
    MIB_COUNTER_RD_CONTROL[31]   - (RW) Control the read clear function for all MIB counters, including.

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SCR0_MIB_COUNTER_RD_CONTROL_ADDR      BN0_WF_MIB_TOP_M0SCR0_ADDR
#define BN0_WF_MIB_TOP_M0SCR0_MIB_COUNTER_RD_CONTROL_MASK      0x80000000                // MIB_COUNTER_RD_CONTROL[31]
#define BN0_WF_MIB_TOP_M0SCR0_MIB_COUNTER_RD_CONTROL_SHFT      31
#define BN0_WF_MIB_TOP_M0SCR0_PED_TIME_EN_ADDR                 BN0_WF_MIB_TOP_M0SCR0_ADDR
#define BN0_WF_MIB_TOP_M0SCR0_PED_TIME_EN_MASK                 0x70000000                // PED_TIME_EN[30..28]
#define BN0_WF_MIB_TOP_M0SCR0_PED_TIME_EN_SHFT                 28
#define BN0_WF_MIB_TOP_M0SCR0_OFDM_CCK_MDRDY_TIME_EN_ADDR      BN0_WF_MIB_TOP_M0SCR0_ADDR
#define BN0_WF_MIB_TOP_M0SCR0_OFDM_CCK_MDRDY_TIME_EN_MASK      0x0E000000                // OFDM_CCK_MDRDY_TIME_EN[27..25]
#define BN0_WF_MIB_TOP_M0SCR0_OFDM_CCK_MDRDY_TIME_EN_SHFT      25
#define BN0_WF_MIB_TOP_M0SCR0_ARB_TX_RWP_COUNT_EN_ADDR         BN0_WF_MIB_TOP_M0SCR0_ADDR
#define BN0_WF_MIB_TOP_M0SCR0_ARB_TX_RWP_COUNT_EN_MASK         0x00040000                // ARB_TX_RWP_COUNT_EN[18]
#define BN0_WF_MIB_TOP_M0SCR0_ARB_TX_RWP_COUNT_EN_SHFT         18
#define BN0_WF_MIB_TOP_M0SCR0_CCA_NAV_TX_TIME_EN_ADDR          BN0_WF_MIB_TOP_M0SCR0_ADDR
#define BN0_WF_MIB_TOP_M0SCR0_CCA_NAV_TX_TIME_EN_MASK          0x0001C000                // CCA_NAV_TX_TIME_EN[16..14]
#define BN0_WF_MIB_TOP_M0SCR0_CCA_NAV_TX_TIME_EN_SHFT          14
#define BN0_WF_MIB_TOP_M0SCR0_PSCCA_TIME_EN_ADDR               BN0_WF_MIB_TOP_M0SCR0_ADDR
#define BN0_WF_MIB_TOP_M0SCR0_PSCCA_TIME_EN_MASK               0x00003800                // PSCCA_TIME_EN[13..11]
#define BN0_WF_MIB_TOP_M0SCR0_PSCCA_TIME_EN_SHFT               11
#define BN0_WF_MIB_TOP_M0SCR0_CHANNEL_IDLE_COUNT_EN_ADDR       BN0_WF_MIB_TOP_M0SCR0_ADDR
#define BN0_WF_MIB_TOP_M0SCR0_CHANNEL_IDLE_COUNT_EN_MASK       0x00000008                // CHANNEL_IDLE_COUNT_EN[3]
#define BN0_WF_MIB_TOP_M0SCR0_CHANNEL_IDLE_COUNT_EN_SHFT       3

/* =====================================================================================

  ---M0SCR1 (0x820ed000 + 0x004)---

    RESERVED0[3..0]              - (RO) Reserved bits
    MAC2PHY_TIME_EN[4]           - (RW) Enable MAC2PHY TX/idle time count
    RESERVED5[7..5]              - (RO) Reserved bits
    TXDUR_EN[8]                  - (RW) Enable TXDUR count
    RXDUR_EN[9]                  - (RW) Enable RXDUR count
    RESERVED10[13..10]           - (RO) Reserved bits
    TXOP_STATUS_COUNT_EN[14]     - (RW) Enable TXOP Status Counters
    EIFS_SLOT_COUNT_EN[15]       - (RW) Enable EIFS SLOT Counters
    NON_ED_EN[16]                - (RW) Invert the primary ED source
    RESERVED17[18..17]           - (RO) Reserved bits
    MOZART_ED_TRIG_COUNT_EN[19]  - (RW) Enable Energy detection trigger counter
    TX_TIME_COUNT_EN[20]         - (RW) Enable transmission time counter
    OPPO_PS_RX_DIS_COUNT_EN[21]  - (RW) Enable OPPO power save counter
    OPPO_PS_RX_DIS_TIME_COUNT_EN[22] - (RW) Enable OPPO power save time counter
    OPPO_SX_OFF_COUNT_EN[23]     - (RW) Enable SX power off counter
    RESERVED24[26..24]           - (RO) Reserved bits
    EIFS_OFDM_COUNT_EN[27]       - (RW) Enable EIFS OFDM Counters
    EIFS_CCK_COUNT_EN[28]        - (RW) Enable EIFS CCK Counters
    RESERVED29[31..29]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SCR1_EIFS_CCK_COUNT_EN_ADDR           BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_EIFS_CCK_COUNT_EN_MASK           0x10000000                // EIFS_CCK_COUNT_EN[28]
#define BN0_WF_MIB_TOP_M0SCR1_EIFS_CCK_COUNT_EN_SHFT           28
#define BN0_WF_MIB_TOP_M0SCR1_EIFS_OFDM_COUNT_EN_ADDR          BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_EIFS_OFDM_COUNT_EN_MASK          0x08000000                // EIFS_OFDM_COUNT_EN[27]
#define BN0_WF_MIB_TOP_M0SCR1_EIFS_OFDM_COUNT_EN_SHFT          27
#define BN0_WF_MIB_TOP_M0SCR1_OPPO_SX_OFF_COUNT_EN_ADDR        BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_OPPO_SX_OFF_COUNT_EN_MASK        0x00800000                // OPPO_SX_OFF_COUNT_EN[23]
#define BN0_WF_MIB_TOP_M0SCR1_OPPO_SX_OFF_COUNT_EN_SHFT        23
#define BN0_WF_MIB_TOP_M0SCR1_OPPO_PS_RX_DIS_TIME_COUNT_EN_ADDR BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_OPPO_PS_RX_DIS_TIME_COUNT_EN_MASK 0x00400000                // OPPO_PS_RX_DIS_TIME_COUNT_EN[22]
#define BN0_WF_MIB_TOP_M0SCR1_OPPO_PS_RX_DIS_TIME_COUNT_EN_SHFT 22
#define BN0_WF_MIB_TOP_M0SCR1_OPPO_PS_RX_DIS_COUNT_EN_ADDR     BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_OPPO_PS_RX_DIS_COUNT_EN_MASK     0x00200000                // OPPO_PS_RX_DIS_COUNT_EN[21]
#define BN0_WF_MIB_TOP_M0SCR1_OPPO_PS_RX_DIS_COUNT_EN_SHFT     21
#define BN0_WF_MIB_TOP_M0SCR1_TX_TIME_COUNT_EN_ADDR            BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_TX_TIME_COUNT_EN_MASK            0x00100000                // TX_TIME_COUNT_EN[20]
#define BN0_WF_MIB_TOP_M0SCR1_TX_TIME_COUNT_EN_SHFT            20
#define BN0_WF_MIB_TOP_M0SCR1_MOZART_ED_TRIG_COUNT_EN_ADDR     BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_MOZART_ED_TRIG_COUNT_EN_MASK     0x00080000                // MOZART_ED_TRIG_COUNT_EN[19]
#define BN0_WF_MIB_TOP_M0SCR1_MOZART_ED_TRIG_COUNT_EN_SHFT     19
#define BN0_WF_MIB_TOP_M0SCR1_NON_ED_EN_ADDR                   BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_NON_ED_EN_MASK                   0x00010000                // NON_ED_EN[16]
#define BN0_WF_MIB_TOP_M0SCR1_NON_ED_EN_SHFT                   16
#define BN0_WF_MIB_TOP_M0SCR1_EIFS_SLOT_COUNT_EN_ADDR          BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_EIFS_SLOT_COUNT_EN_MASK          0x00008000                // EIFS_SLOT_COUNT_EN[15]
#define BN0_WF_MIB_TOP_M0SCR1_EIFS_SLOT_COUNT_EN_SHFT          15
#define BN0_WF_MIB_TOP_M0SCR1_TXOP_STATUS_COUNT_EN_ADDR        BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_TXOP_STATUS_COUNT_EN_MASK        0x00004000                // TXOP_STATUS_COUNT_EN[14]
#define BN0_WF_MIB_TOP_M0SCR1_TXOP_STATUS_COUNT_EN_SHFT        14
#define BN0_WF_MIB_TOP_M0SCR1_RXDUR_EN_ADDR                    BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_RXDUR_EN_MASK                    0x00000200                // RXDUR_EN[9]
#define BN0_WF_MIB_TOP_M0SCR1_RXDUR_EN_SHFT                    9
#define BN0_WF_MIB_TOP_M0SCR1_TXDUR_EN_ADDR                    BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_TXDUR_EN_MASK                    0x00000100                // TXDUR_EN[8]
#define BN0_WF_MIB_TOP_M0SCR1_TXDUR_EN_SHFT                    8
#define BN0_WF_MIB_TOP_M0SCR1_MAC2PHY_TIME_EN_ADDR             BN0_WF_MIB_TOP_M0SCR1_ADDR
#define BN0_WF_MIB_TOP_M0SCR1_MAC2PHY_TIME_EN_MASK             0x00000010                // MAC2PHY_TIME_EN[4]
#define BN0_WF_MIB_TOP_M0SCR1_MAC2PHY_TIME_EN_SHFT             4

/* =====================================================================================

  ---M0SCR2 (0x820ed000 + 0x008)---

    NAV_SOURCE[1..0]             - (RW) select source for NAV, the setting is applied to CCA_NAV_TX_TIME and NAV_TIME
    OFDM_NON_GREEN_MDRDY_SOURCE[5..2] - (RW) select source of OFDM_LG_MIXED_VHT_MDRDY_TIME
    RESERVED6[11..6]             - (RO) Reserved bits
    ARB_TXCMD_UL_TXOK_COUNT_EN[12] - (RW) Enable ARB TXCMD uplink packet TX ok count
    RESERVED13[15..13]           - (RO) Reserved bits
    MIB_UC2ME_DATA_NSS[19..16]   - (RW) RX UC2ME data NSS count by BSSIDx for MIB counter
    RESERVED20[31..20]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SCR2_MIB_UC2ME_DATA_NSS_ADDR          BN0_WF_MIB_TOP_M0SCR2_ADDR
#define BN0_WF_MIB_TOP_M0SCR2_MIB_UC2ME_DATA_NSS_MASK          0x000F0000                // MIB_UC2ME_DATA_NSS[19..16]
#define BN0_WF_MIB_TOP_M0SCR2_MIB_UC2ME_DATA_NSS_SHFT          16
#define BN0_WF_MIB_TOP_M0SCR2_ARB_TXCMD_UL_TXOK_COUNT_EN_ADDR  BN0_WF_MIB_TOP_M0SCR2_ADDR
#define BN0_WF_MIB_TOP_M0SCR2_ARB_TXCMD_UL_TXOK_COUNT_EN_MASK  0x00001000                // ARB_TXCMD_UL_TXOK_COUNT_EN[12]
#define BN0_WF_MIB_TOP_M0SCR2_ARB_TXCMD_UL_TXOK_COUNT_EN_SHFT  12
#define BN0_WF_MIB_TOP_M0SCR2_OFDM_NON_GREEN_MDRDY_SOURCE_ADDR BN0_WF_MIB_TOP_M0SCR2_ADDR
#define BN0_WF_MIB_TOP_M0SCR2_OFDM_NON_GREEN_MDRDY_SOURCE_MASK 0x0000003C                // OFDM_NON_GREEN_MDRDY_SOURCE[5..2]
#define BN0_WF_MIB_TOP_M0SCR2_OFDM_NON_GREEN_MDRDY_SOURCE_SHFT 2
#define BN0_WF_MIB_TOP_M0SCR2_NAV_SOURCE_ADDR                  BN0_WF_MIB_TOP_M0SCR2_ADDR
#define BN0_WF_MIB_TOP_M0SCR2_NAV_SOURCE_MASK                  0x00000003                // NAV_SOURCE[1..0]
#define BN0_WF_MIB_TOP_M0SCR2_NAV_SOURCE_SHFT                  0

/* =====================================================================================

  ---CTCR (0x820ed000 + 0x010)---

    S20BW_CS_ED_SEL[1..0]        - (RW) select secondary CS or ED Sources for S_20BW_CCA_TIME
    S40BW_CS_ED_SEL[3..2]        - (RW) select secondary CS or ED Sources for S_40BW_CCA_TIME
    RESERVED4[5..4]              - (RO) Reserved bits
    PRIM_CS_ED_SEL[7..6]         - (RW) select primary CS or ED Sources for P_CCA_TIME
    SEC20_CS_ED_SEL[9..8]        - (RW) select Secondary CS or ED Sources: 20MHzfor S_CCA_TIME
    SEC40_CS_ED_SEL[11..10]      - (RW) select Secondary CS or ED Sources: 40MHz for S_CCA_TIME
    SEC80_CS_ED_SEL[13..12]      - (RW) select Secondary CS or ED Sources: 80MHz for S_CCA_TIME
    SEC160_CS_ED_SEL[15..14]     - (RW) select Secondary CS or ED Sources: 160MHz for S_CCA_TIME
    S80BW_CS_ED_SEL[17..16]      - (RW) select secondary CS or ED Sources for S_80BW_CCA_TIME
    S160BW_CS_ED_SEL[19..18]     - (RW) select secondary CS or ED Sources for S_160BW_CCA_TIME
    RESERVED20[21..20]           - (RO) Reserved bits
    CS_ED_SEL_0[23..22]          - (RW) select primary/secondary CS or ED Sources for CCA_TIME
    CS_ED_SEL_1[25..24]          - (RW) select primary/secondary CS or ED Sources for CCA_TIME
    CS_ED_SEL_2[27..26]          - (RW) select primary/secondary CS or ED Sources for CCA_TIME
    CS_ED_SEL_3[29..28]          - (RW) select primary/secondary CS or ED Sources for CCA_TIME
    CS_ED_SEL_4[31..30]          - (RW) select primary/secondary CS or ED Sources for CCA_TIME

 =====================================================================================*/
#define BN0_WF_MIB_TOP_CTCR_CS_ED_SEL_4_ADDR                   BN0_WF_MIB_TOP_CTCR_ADDR
#define BN0_WF_MIB_TOP_CTCR_CS_ED_SEL_4_MASK                   0xC0000000                // CS_ED_SEL_4[31..30]
#define BN0_WF_MIB_TOP_CTCR_CS_ED_SEL_4_SHFT                   30
#define BN0_WF_MIB_TOP_CTCR_CS_ED_SEL_3_ADDR                   BN0_WF_MIB_TOP_CTCR_ADDR
#define BN0_WF_MIB_TOP_CTCR_CS_ED_SEL_3_MASK                   0x30000000                // CS_ED_SEL_3[29..28]
#define BN0_WF_MIB_TOP_CTCR_CS_ED_SEL_3_SHFT                   28
#define BN0_WF_MIB_TOP_CTCR_CS_ED_SEL_2_ADDR                   BN0_WF_MIB_TOP_CTCR_ADDR
#define BN0_WF_MIB_TOP_CTCR_CS_ED_SEL_2_MASK                   0x0C000000                // CS_ED_SEL_2[27..26]
#define BN0_WF_MIB_TOP_CTCR_CS_ED_SEL_2_SHFT                   26
#define BN0_WF_MIB_TOP_CTCR_CS_ED_SEL_1_ADDR                   BN0_WF_MIB_TOP_CTCR_ADDR
#define BN0_WF_MIB_TOP_CTCR_CS_ED_SEL_1_MASK                   0x03000000                // CS_ED_SEL_1[25..24]
#define BN0_WF_MIB_TOP_CTCR_CS_ED_SEL_1_SHFT                   24
#define BN0_WF_MIB_TOP_CTCR_CS_ED_SEL_0_ADDR                   BN0_WF_MIB_TOP_CTCR_ADDR
#define BN0_WF_MIB_TOP_CTCR_CS_ED_SEL_0_MASK                   0x00C00000                // CS_ED_SEL_0[23..22]
#define BN0_WF_MIB_TOP_CTCR_CS_ED_SEL_0_SHFT                   22
#define BN0_WF_MIB_TOP_CTCR_S160BW_CS_ED_SEL_ADDR              BN0_WF_MIB_TOP_CTCR_ADDR
#define BN0_WF_MIB_TOP_CTCR_S160BW_CS_ED_SEL_MASK              0x000C0000                // S160BW_CS_ED_SEL[19..18]
#define BN0_WF_MIB_TOP_CTCR_S160BW_CS_ED_SEL_SHFT              18
#define BN0_WF_MIB_TOP_CTCR_S80BW_CS_ED_SEL_ADDR               BN0_WF_MIB_TOP_CTCR_ADDR
#define BN0_WF_MIB_TOP_CTCR_S80BW_CS_ED_SEL_MASK               0x00030000                // S80BW_CS_ED_SEL[17..16]
#define BN0_WF_MIB_TOP_CTCR_S80BW_CS_ED_SEL_SHFT               16
#define BN0_WF_MIB_TOP_CTCR_SEC160_CS_ED_SEL_ADDR              BN0_WF_MIB_TOP_CTCR_ADDR
#define BN0_WF_MIB_TOP_CTCR_SEC160_CS_ED_SEL_MASK              0x0000C000                // SEC160_CS_ED_SEL[15..14]
#define BN0_WF_MIB_TOP_CTCR_SEC160_CS_ED_SEL_SHFT              14
#define BN0_WF_MIB_TOP_CTCR_SEC80_CS_ED_SEL_ADDR               BN0_WF_MIB_TOP_CTCR_ADDR
#define BN0_WF_MIB_TOP_CTCR_SEC80_CS_ED_SEL_MASK               0x00003000                // SEC80_CS_ED_SEL[13..12]
#define BN0_WF_MIB_TOP_CTCR_SEC80_CS_ED_SEL_SHFT               12
#define BN0_WF_MIB_TOP_CTCR_SEC40_CS_ED_SEL_ADDR               BN0_WF_MIB_TOP_CTCR_ADDR
#define BN0_WF_MIB_TOP_CTCR_SEC40_CS_ED_SEL_MASK               0x00000C00                // SEC40_CS_ED_SEL[11..10]
#define BN0_WF_MIB_TOP_CTCR_SEC40_CS_ED_SEL_SHFT               10
#define BN0_WF_MIB_TOP_CTCR_SEC20_CS_ED_SEL_ADDR               BN0_WF_MIB_TOP_CTCR_ADDR
#define BN0_WF_MIB_TOP_CTCR_SEC20_CS_ED_SEL_MASK               0x00000300                // SEC20_CS_ED_SEL[9..8]
#define BN0_WF_MIB_TOP_CTCR_SEC20_CS_ED_SEL_SHFT               8
#define BN0_WF_MIB_TOP_CTCR_PRIM_CS_ED_SEL_ADDR                BN0_WF_MIB_TOP_CTCR_ADDR
#define BN0_WF_MIB_TOP_CTCR_PRIM_CS_ED_SEL_MASK                0x000000C0                // PRIM_CS_ED_SEL[7..6]
#define BN0_WF_MIB_TOP_CTCR_PRIM_CS_ED_SEL_SHFT                6
#define BN0_WF_MIB_TOP_CTCR_S40BW_CS_ED_SEL_ADDR               BN0_WF_MIB_TOP_CTCR_ADDR
#define BN0_WF_MIB_TOP_CTCR_S40BW_CS_ED_SEL_MASK               0x0000000C                // S40BW_CS_ED_SEL[3..2]
#define BN0_WF_MIB_TOP_CTCR_S40BW_CS_ED_SEL_SHFT               2
#define BN0_WF_MIB_TOP_CTCR_S20BW_CS_ED_SEL_ADDR               BN0_WF_MIB_TOP_CTCR_ADDR
#define BN0_WF_MIB_TOP_CTCR_S20BW_CS_ED_SEL_MASK               0x00000003                // S20BW_CS_ED_SEL[1..0]
#define BN0_WF_MIB_TOP_CTCR_S20BW_CS_ED_SEL_SHFT               0

/* =====================================================================================

  ---MCR (0x820ed000 + 0x01C)---

    MBSS_2_BSS0[0]               - (RW) recognize MBSS(bssid = 0x11-0x1F) as BSS0(bssid0) and sums its counter to BSS0 (BSS-only counters get affected)
                                     *If This counters have MBSS part, this function is not applied
    RESERVED1[4..1]              - (RO) Reserved bits
    TRX_ARNG_MODE[6..5]          - (RW) There are 16 AGG Range Counters that are shared for TX and RX Aggregation, which supports 3 modes:
                                      2'b00: RX AGG disabled
                                      2'b01: TX AGG uses 8 counters and RX AGG uses 8 counters
                                      2'b10: TX AGG disabled
    RESERVED7[31..7]             - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCR_TRX_ARNG_MODE_ADDR                  BN0_WF_MIB_TOP_MCR_ADDR
#define BN0_WF_MIB_TOP_MCR_TRX_ARNG_MODE_MASK                  0x00000060                // TRX_ARNG_MODE[6..5]
#define BN0_WF_MIB_TOP_MCR_TRX_ARNG_MODE_SHFT                  5
#define BN0_WF_MIB_TOP_MCR_MBSS_2_BSS0_ADDR                    BN0_WF_MIB_TOP_MCR_ADDR
#define BN0_WF_MIB_TOP_MCR_MBSS_2_BSS0_MASK                    0x00000001                // MBSS_2_BSS0[0]
#define BN0_WF_MIB_TOP_MCR_MBSS_2_BSS0_SHFT                    0

/* =====================================================================================

  ---M0SDR6 (0x820ed000 + 0x020)---

    CHANNEL_IDLE_COUNT[15..0]    - (RW) This counter will be added 1 at every slot boundary if the channel is idle.
                                     Enable when CHANNEL_IDLE_COUNT_EN = 1
                                     (unit: slot)
    EIFS_SLOT_COUNT[31..16]      - (RW) This counter will be added 1 at every slot boundary if the backoff counter was blocked by EIFS period.
                                     Enable when EIFS_SLOT_COUNT_EN = 1
                                     (unit: slot)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR6_EIFS_SLOT_COUNT_ADDR             BN0_WF_MIB_TOP_M0SDR6_ADDR
#define BN0_WF_MIB_TOP_M0SDR6_EIFS_SLOT_COUNT_MASK             0xFFFF0000                // EIFS_SLOT_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0SDR6_EIFS_SLOT_COUNT_SHFT             16
#define BN0_WF_MIB_TOP_M0SDR6_CHANNEL_IDLE_COUNT_ADDR          BN0_WF_MIB_TOP_M0SDR6_ADDR
#define BN0_WF_MIB_TOP_M0SDR6_CHANNEL_IDLE_COUNT_MASK          0x0000FFFF                // CHANNEL_IDLE_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR6_CHANNEL_IDLE_COUNT_SHFT          0

/* =====================================================================================

  ---M0SDR9 (0x820ed000 + 0x024)---

    CCA_NAV_TX_TIME[23..0]       - (RW) This is used for Measurement. (channel busy time), PRIM_CCA | NAV | TX_TIME
                                     Enable when CCA_NAV_TX_TIME_EN = target BSS
                                     The source of NAV is selected by NAV_SOURCE
                                     (unit: 1.024us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR9_CCA_NAV_TX_TIME_ADDR             BN0_WF_MIB_TOP_M0SDR9_ADDR
#define BN0_WF_MIB_TOP_M0SDR9_CCA_NAV_TX_TIME_MASK             0x00FFFFFF                // CCA_NAV_TX_TIME[23..0]
#define BN0_WF_MIB_TOP_M0SDR9_CCA_NAV_TX_TIME_SHFT             0

/* =====================================================================================

  ---MNCR (0x820ed000 + 0x028)---

    NAV_TIME[23..0]              - (RW) This counter is increased when NAV is not zero
                                     The source of NAV is selected by NAV_SOURCE
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MNCR_NAV_TIME_ADDR                      BN0_WF_MIB_TOP_MNCR_ADDR
#define BN0_WF_MIB_TOP_MNCR_NAV_TIME_MASK                      0x00FFFFFF                // NAV_TIME[23..0]
#define BN0_WF_MIB_TOP_MNCR_NAV_TIME_SHFT                      0

/* =====================================================================================

  ---M0SDR18 (0x820ed000 + 0x030)---

    P_ED_TIME[23..0]             - (RW) This counter measures primary ED. This counter is saturated mode.
                                     Enable when PED_TIME_EN = target BSS
                                     The source is selected by NON_ED_EN
                                     (unit: 1.024us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR18_P_ED_TIME_ADDR                  BN0_WF_MIB_TOP_M0SDR18_ADDR
#define BN0_WF_MIB_TOP_M0SDR18_P_ED_TIME_MASK                  0x00FFFFFF                // P_ED_TIME[23..0]
#define BN0_WF_MIB_TOP_M0SDR18_P_ED_TIME_SHFT                  0

/* =====================================================================================

  ---M0SDR59 (0x820ed000 + 0x034)---

    EIFS_OFDM_COUNT[15..0]       - (RW) EIFS CCK count in unit of OFDM EIFS occurrence. This counter will be added 1 at every OFDM EIFS occurrence.
                                     Enable when EIFS_OFDM_COUNT_EN = 1
                                     (unit: event)
    EIFS_CCK_COUNT[31..16]       - (RW) EIFS CCK count in unit of CCK EIFS occurrence. This counter will be added 1 at every CCK EIFS occurrence.
                                     Enable when EIFS_CCK_COUNT_EN = 1
                                     (unit: event)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR59_EIFS_CCK_COUNT_ADDR             BN0_WF_MIB_TOP_M0SDR59_ADDR
#define BN0_WF_MIB_TOP_M0SDR59_EIFS_CCK_COUNT_MASK             0xFFFF0000                // EIFS_CCK_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0SDR59_EIFS_CCK_COUNT_SHFT             16
#define BN0_WF_MIB_TOP_M0SDR59_EIFS_OFDM_COUNT_ADDR            BN0_WF_MIB_TOP_M0SDR59_ADDR
#define BN0_WF_MIB_TOP_M0SDR59_EIFS_OFDM_COUNT_MASK            0x0000FFFF                // EIFS_OFDM_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR59_EIFS_OFDM_COUNT_SHFT            0

/* =====================================================================================

  ---M2PTTCR (0x820ed000 + 0x040)---

    MAC2PHY_TX_TIME[23..0]       - (RW) mac2phy_tx assert time for ap background scan
                                     Enable when MAC2PHY_TX_TIME_EN = 1
                                     (unit: 1us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M2PTTCR_MAC2PHY_TX_TIME_ADDR            BN0_WF_MIB_TOP_M2PTTCR_ADDR
#define BN0_WF_MIB_TOP_M2PTTCR_MAC2PHY_TX_TIME_MASK            0x00FFFFFF                // MAC2PHY_TX_TIME[23..0]
#define BN0_WF_MIB_TOP_M2PTTCR_MAC2PHY_TX_TIME_SHFT            0

/* =====================================================================================

  ---M2PITCR (0x820ed000 + 0x044)---

    MAC2PHY_IDLE_TIME[23..0]     - (RW) mac2phy idle time, this counter is increased when both mac2phy_tx & mac2phy_rx is not rose
                                     (unit: 1us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M2PITCR_MAC2PHY_IDLE_TIME_ADDR          BN0_WF_MIB_TOP_M2PITCR_ADDR
#define BN0_WF_MIB_TOP_M2PITCR_MAC2PHY_IDLE_TIME_MASK          0x00FFFFFF                // MAC2PHY_IDLE_TIME[23..0]
#define BN0_WF_MIB_TOP_M2PITCR_MAC2PHY_IDLE_TIME_SHFT          0

/* =====================================================================================

  ---M0SDR45 (0x820ed000 + 0x048)---

    TX_TIME_COUNT[15..0]         - (RW) This counter is started on transmission state, used for measurement.
                                     Enable when TX_TIME_COUNT_EN = 1
                                     (unit: 1us)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR45_TX_TIME_COUNT_ADDR              BN0_WF_MIB_TOP_M0SDR45_ADDR
#define BN0_WF_MIB_TOP_M0SDR45_TX_TIME_COUNT_MASK              0x0000FFFF                // TX_TIME_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR45_TX_TIME_COUNT_SHFT              0

/* =====================================================================================

  ---M0SDR44 (0x820ed000 + 0x04C)---

    ED_LISTEN_ABOVE_COUNT[15..0] - (RW) This counter is started on listen state with energy >= threshold, used for measurement.
                                     Enable when MOZART_ED_TRIG_COUNT_EN = 1
                                     (unit: 1us)
    ED_LISTEN_BELOW_COUNT[31..16] - (RW) This counter is started on listen state with energy < threshold, used for measurement.
                                     Enable when MOZART_ED_TRIG_COUNT_EN = 1
                                     (unit: 1us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR44_ED_LISTEN_BELOW_COUNT_ADDR      BN0_WF_MIB_TOP_M0SDR44_ADDR
#define BN0_WF_MIB_TOP_M0SDR44_ED_LISTEN_BELOW_COUNT_MASK      0xFFFF0000                // ED_LISTEN_BELOW_COUNT[31..16]
#define BN0_WF_MIB_TOP_M0SDR44_ED_LISTEN_BELOW_COUNT_SHFT      16
#define BN0_WF_MIB_TOP_M0SDR44_ED_LISTEN_ABOVE_COUNT_ADDR      BN0_WF_MIB_TOP_M0SDR44_ADDR
#define BN0_WF_MIB_TOP_M0SDR44_ED_LISTEN_ABOVE_COUNT_MASK      0x0000FFFF                // ED_LISTEN_ABOVE_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR44_ED_LISTEN_ABOVE_COUNT_SHFT      0

/* =====================================================================================

  ---MAR0 (0x820ed000 + 0x050)---

    TXDUR_AIRTIME[23..0]         - (RW) TX duration airtime (FES airtime)
                                     Enable when TXDUR_EN = 1
                                     (unit: 1.024us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MAR0_TXDUR_AIRTIME_ADDR                 BN0_WF_MIB_TOP_MAR0_ADDR
#define BN0_WF_MIB_TOP_MAR0_TXDUR_AIRTIME_MASK                 0x00FFFFFF                // TXDUR_AIRTIME[23..0]
#define BN0_WF_MIB_TOP_MAR0_TXDUR_AIRTIME_SHFT                 0

/* =====================================================================================

  ---MAR1 (0x820ed000 + 0x054)---

    TXDUR_BACKOFF_TIME[23..0]    - (RW) TX duration backoff time
                                     Enable when TXDUR_EN = 1
                                     (unit: 1.024us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MAR1_TXDUR_BACKOFF_TIME_ADDR            BN0_WF_MIB_TOP_MAR1_ADDR
#define BN0_WF_MIB_TOP_MAR1_TXDUR_BACKOFF_TIME_MASK            0x00FFFFFF                // TXDUR_BACKOFF_TIME[23..0]
#define BN0_WF_MIB_TOP_MAR1_TXDUR_BACKOFF_TIME_SHFT            0

/* =====================================================================================

  ---MAR2 (0x820ed000 + 0x058)---

    RXDUR_AIRTIME[23..0]         - (RW) RX duration airtime (FES airtime)
                                     Enable when RXDUR_EN = 1
                                     (unit: 1.024us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MAR2_RXDUR_AIRTIME_ADDR                 BN0_WF_MIB_TOP_MAR2_ADDR
#define BN0_WF_MIB_TOP_MAR2_RXDUR_AIRTIME_MASK                 0x00FFFFFF                // RXDUR_AIRTIME[23..0]
#define BN0_WF_MIB_TOP_MAR2_RXDUR_AIRTIME_SHFT                 0

/* =====================================================================================

  ---MAR3 (0x820ed000 + 0x05C)---

    RXDUR_BACKOFF_TIME[23..0]    - (RW) RX duration backoff time
                                     Enable when RXDUR_EN = 1
                                     (unit: 1.024us)
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MAR3_RXDUR_BACKOFF_TIME_ADDR            BN0_WF_MIB_TOP_MAR3_ADDR
#define BN0_WF_MIB_TOP_MAR3_RXDUR_BACKOFF_TIME_MASK            0x00FFFFFF                // RXDUR_BACKOFF_TIME[23..0]
#define BN0_WF_MIB_TOP_MAR3_RXDUR_BACKOFF_TIME_SHFT            0

/* =====================================================================================

  ---M0SDR46 (0x820ed000 + 0x060)---

    OPPO_PS_RX_DIS_COUNT[15..0]  - (RW) This counter is increased when PPDUs dropped by the oppo_ps_rx_dis mechanism
                                     Enable when OPPO_PS_RX_DIS_COUNT_EN = 1
                                     (unit : PPDU)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR46_OPPO_PS_RX_DIS_COUNT_ADDR       BN0_WF_MIB_TOP_M0SDR46_ADDR
#define BN0_WF_MIB_TOP_M0SDR46_OPPO_PS_RX_DIS_COUNT_MASK       0x0000FFFF                // OPPO_PS_RX_DIS_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR46_OPPO_PS_RX_DIS_COUNT_SHFT       0

/* =====================================================================================

  ---M0SDR47 (0x820ed000 + 0x064)---

    OPPO_PS_RX_DIS_TIME_COUNT[25..0] - (RW) This counter is in unit of us. This counter is start on oppo_ps_rx_dis state, used for measurement
                                     Enable when OPPO_PS_RX_DIS_TIME_COUNT_EN = 1
                                     (unit : 1us)
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR47_OPPO_PS_RX_DIS_TIME_COUNT_ADDR  BN0_WF_MIB_TOP_M0SDR47_ADDR
#define BN0_WF_MIB_TOP_M0SDR47_OPPO_PS_RX_DIS_TIME_COUNT_MASK  0x03FFFFFF                // OPPO_PS_RX_DIS_TIME_COUNT[25..0]
#define BN0_WF_MIB_TOP_M0SDR47_OPPO_PS_RX_DIS_TIME_COUNT_SHFT  0

/* =====================================================================================

  ---M0SDR48 (0x820ed000 + 0x068)---

    OPPO_SX_OFF_COUNT[15..0]     - (RW) This counter is increased when SX power off (OPPO_PS_WINDOW terminate)
                                     Enable when OPPO_SX_OFF_COUNT_EN = 1
                                     (unit : event)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR48_OPPO_SX_OFF_COUNT_ADDR          BN0_WF_MIB_TOP_M0SDR48_ADDR
#define BN0_WF_MIB_TOP_M0SDR48_OPPO_SX_OFF_COUNT_MASK          0x0000FFFF                // OPPO_SX_OFF_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR48_OPPO_SX_OFF_COUNT_SHFT          0

/* =====================================================================================

  ---TXOPC0 (0x820ed000 + 0x070)---

    TXOP_INIT_COUNT[15..0]       - (RW) This counter counts when PPDU is TXOP initiator
                                     Enable when TXOP_STATUS_COUNT_EN = 1
                                     (unit : PPDU)
    TXOP_BURST_COUNT[31..16]     - (RW) This counter counts when PPDU is burst TX during TXOP
                                     Enable when TXOP_STATUS_COUNT_EN = 1
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TXOPC0_TXOP_BURST_COUNT_ADDR            BN0_WF_MIB_TOP_TXOPC0_ADDR
#define BN0_WF_MIB_TOP_TXOPC0_TXOP_BURST_COUNT_MASK            0xFFFF0000                // TXOP_BURST_COUNT[31..16]
#define BN0_WF_MIB_TOP_TXOPC0_TXOP_BURST_COUNT_SHFT            16
#define BN0_WF_MIB_TOP_TXOPC0_TXOP_INIT_COUNT_ADDR             BN0_WF_MIB_TOP_TXOPC0_ADDR
#define BN0_WF_MIB_TOP_TXOPC0_TXOP_INIT_COUNT_MASK             0x0000FFFF                // TXOP_INIT_COUNT[15..0]
#define BN0_WF_MIB_TOP_TXOPC0_TXOP_INIT_COUNT_SHFT             0

/* =====================================================================================

  ---TXOPC1 (0x820ed000 + 0x074)---

    TXOP_EXCEED_COUNT[15..0]     - (RW) This counter counts when PPDU TX time exceed TXOP
                                     Enable when TXOP_STATUS_COUNT_EN = 1
                                     (unit : PPDU)
    TXOP_TXV_TOUT_COUNT[31..16]  - (RW) This counter counts when PPDU is TX vector timeout
                                     Enable when TXOP_STATUS_COUNT_EN = 1
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TXOPC1_TXOP_TXV_TOUT_COUNT_ADDR         BN0_WF_MIB_TOP_TXOPC1_ADDR
#define BN0_WF_MIB_TOP_TXOPC1_TXOP_TXV_TOUT_COUNT_MASK         0xFFFF0000                // TXOP_TXV_TOUT_COUNT[31..16]
#define BN0_WF_MIB_TOP_TXOPC1_TXOP_TXV_TOUT_COUNT_SHFT         16
#define BN0_WF_MIB_TOP_TXOPC1_TXOP_EXCEED_COUNT_ADDR           BN0_WF_MIB_TOP_TXOPC1_ADDR
#define BN0_WF_MIB_TOP_TXOPC1_TXOP_EXCEED_COUNT_MASK           0x0000FFFF                // TXOP_EXCEED_COUNT[15..0]
#define BN0_WF_MIB_TOP_TXOPC1_TXOP_EXCEED_COUNT_SHFT           0

/* =====================================================================================

  ---TXOPC2 (0x820ed000 + 0x078)---

    TXOP_TRUNC_COUNT[15..0]      - (RW) This counter counts when TXOP truncation
                                     Enable when TXOP_STATUS_COUNT_EN = 1
                                     (unit : PPDU)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TXOPC2_TXOP_TRUNC_COUNT_ADDR            BN0_WF_MIB_TOP_TXOPC2_ADDR
#define BN0_WF_MIB_TOP_TXOPC2_TXOP_TRUNC_COUNT_MASK            0x0000FFFF                // TXOP_TRUNC_COUNT[15..0]
#define BN0_WF_MIB_TOP_TXOPC2_TXOP_TRUNC_COUNT_SHFT            0

/* =====================================================================================

  ---M0SDR27 (0x820ed000 + 0x080)---

    ARB_TX_RWP_FAIL_COUNT[15..0] - (RW) This counter is increased when remaining windows protected package not send
                                     (unit : PPDU)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR27_ARB_TX_RWP_FAIL_COUNT_ADDR      BN0_WF_MIB_TOP_M0SDR27_ADDR
#define BN0_WF_MIB_TOP_M0SDR27_ARB_TX_RWP_FAIL_COUNT_MASK      0x0000FFFF                // ARB_TX_RWP_FAIL_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR27_ARB_TX_RWP_FAIL_COUNT_SHFT      0

/* =====================================================================================

  ---M0SDR28 (0x820ed000 + 0x084)---

    ARB_TX_RWP_NEED_COUNT[15..0] - (RW) This counter is increased when remaining windows protected package should send
                                     (unit : PPDU)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR28_ARB_TX_RWP_NEED_COUNT_ADDR      BN0_WF_MIB_TOP_M0SDR28_ADDR
#define BN0_WF_MIB_TOP_M0SDR28_ARB_TX_RWP_NEED_COUNT_MASK      0x0000FFFF                // ARB_TX_RWP_NEED_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR28_ARB_TX_RWP_NEED_COUNT_SHFT      0

/* =====================================================================================

  ---M0SDR66 (0x820ed000 + 0x08C)---

    ARB_TXCMD_UL_TXOK_COUNT[15..0] - (RW) This counter is increased when TXCMD ul packet sent for all AC queue
                                     (unit : PPDU)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0SDR66_ARB_TXCMD_UL_TXOK_COUNT_ADDR    BN0_WF_MIB_TOP_M0SDR66_ADDR
#define BN0_WF_MIB_TOP_M0SDR66_ARB_TXCMD_UL_TXOK_COUNT_MASK    0x0000FFFF                // ARB_TXCMD_UL_TXOK_COUNT[15..0]
#define BN0_WF_MIB_TOP_M0SDR66_ARB_TXCMD_UL_TXOK_COUNT_SHFT    0

/* =====================================================================================

  ---M0CABT0 (0x820ed000 + 0x090)---

    TX_ABORT_SRC_SEL_0[6..0]     - (RW) Select the source of TX Abort from AGG, TMAC and ARB HW modules
    TX_ABORT_EN_0[7]             - (RW) Enable or disable TX Abort Counting
    TX_ABORT_SRC_SEL_1[14..8]    - (RW) the same as of TX_ABORT_SRC_SEL_0
    TX_ABORT_EN_1[15]            - (RW) Enable or disable TX Abort Counting
    TX_ABORT_SRC_SEL_2[22..16]   - (RW) the same as of TX_ABORT_SRC_SEL_0
    TX_ABORT_EN_2[23]            - (RW) Enable or disable TX Abort Counting
    TX_ABORT_SRC_SEL_3[30..24]   - (RW) the same as of TX_ABORT_SRC_SEL_0
    TX_ABORT_EN_3[31]            - (RW) Enable or disable TX Abort Counting

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_EN_3_ADDR              BN0_WF_MIB_TOP_M0CABT0_ADDR
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_EN_3_MASK              0x80000000                // TX_ABORT_EN_3[31]
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_EN_3_SHFT              31
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_SRC_SEL_3_ADDR         BN0_WF_MIB_TOP_M0CABT0_ADDR
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_SRC_SEL_3_MASK         0x7F000000                // TX_ABORT_SRC_SEL_3[30..24]
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_SRC_SEL_3_SHFT         24
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_EN_2_ADDR              BN0_WF_MIB_TOP_M0CABT0_ADDR
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_EN_2_MASK              0x00800000                // TX_ABORT_EN_2[23]
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_EN_2_SHFT              23
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_SRC_SEL_2_ADDR         BN0_WF_MIB_TOP_M0CABT0_ADDR
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_SRC_SEL_2_MASK         0x007F0000                // TX_ABORT_SRC_SEL_2[22..16]
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_SRC_SEL_2_SHFT         16
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_EN_1_ADDR              BN0_WF_MIB_TOP_M0CABT0_ADDR
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_EN_1_MASK              0x00008000                // TX_ABORT_EN_1[15]
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_EN_1_SHFT              15
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_SRC_SEL_1_ADDR         BN0_WF_MIB_TOP_M0CABT0_ADDR
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_SRC_SEL_1_MASK         0x00007F00                // TX_ABORT_SRC_SEL_1[14..8]
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_SRC_SEL_1_SHFT         8
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_EN_0_ADDR              BN0_WF_MIB_TOP_M0CABT0_ADDR
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_EN_0_MASK              0x00000080                // TX_ABORT_EN_0[7]
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_EN_0_SHFT              7
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_SRC_SEL_0_ADDR         BN0_WF_MIB_TOP_M0CABT0_ADDR
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_SRC_SEL_0_MASK         0x0000007F                // TX_ABORT_SRC_SEL_0[6..0]
#define BN0_WF_MIB_TOP_M0CABT0_TX_ABORT_SRC_SEL_0_SHFT         0

/* =====================================================================================

  ---M0CABT1 (0x820ed000 + 0x094)---

    TX_ABORT_SRC_SEL_4[6..0]     - (RW) the same as of TX_ABORT_SRC_SEL_0
    TX_ABORT_EN_4[7]             - (RW) Enable or disable TX Abort Counting
    TX_ABORT_SRC_SEL_5[14..8]    - (RW) the same as of TX_ABORT_SRC_SEL_0
    TX_ABORT_EN_5[15]            - (RW) Enable or disable TX Abort Counting
    TX_ABORT_SRC_SEL_6[22..16]   - (RW) the same as of TX_ABORT_SRC_SEL_0
    TX_ABORT_EN_6[23]            - (RW) Enable or disable TX Abort Counting
    TX_ABORT_SRC_SEL_7[30..24]   - (RW) the same as of TX_ABORT_SRC_SEL_0
    TX_ABORT_EN_7[31]            - (RW) Enable or disable TX Abort Counting

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_EN_7_ADDR              BN0_WF_MIB_TOP_M0CABT1_ADDR
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_EN_7_MASK              0x80000000                // TX_ABORT_EN_7[31]
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_EN_7_SHFT              31
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_SRC_SEL_7_ADDR         BN0_WF_MIB_TOP_M0CABT1_ADDR
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_SRC_SEL_7_MASK         0x7F000000                // TX_ABORT_SRC_SEL_7[30..24]
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_SRC_SEL_7_SHFT         24
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_EN_6_ADDR              BN0_WF_MIB_TOP_M0CABT1_ADDR
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_EN_6_MASK              0x00800000                // TX_ABORT_EN_6[23]
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_EN_6_SHFT              23
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_SRC_SEL_6_ADDR         BN0_WF_MIB_TOP_M0CABT1_ADDR
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_SRC_SEL_6_MASK         0x007F0000                // TX_ABORT_SRC_SEL_6[22..16]
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_SRC_SEL_6_SHFT         16
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_EN_5_ADDR              BN0_WF_MIB_TOP_M0CABT1_ADDR
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_EN_5_MASK              0x00008000                // TX_ABORT_EN_5[15]
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_EN_5_SHFT              15
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_SRC_SEL_5_ADDR         BN0_WF_MIB_TOP_M0CABT1_ADDR
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_SRC_SEL_5_MASK         0x00007F00                // TX_ABORT_SRC_SEL_5[14..8]
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_SRC_SEL_5_SHFT         8
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_EN_4_ADDR              BN0_WF_MIB_TOP_M0CABT1_ADDR
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_EN_4_MASK              0x00000080                // TX_ABORT_EN_4[7]
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_EN_4_SHFT              7
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_SRC_SEL_4_ADDR         BN0_WF_MIB_TOP_M0CABT1_ADDR
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_SRC_SEL_4_MASK         0x0000007F                // TX_ABORT_SRC_SEL_4[6..0]
#define BN0_WF_MIB_TOP_M0CABT1_TX_ABORT_SRC_SEL_4_SHFT         0

/* =====================================================================================

  ---M0TABT0 (0x820ed000 + 0x0A0)---

    TX_ABORT_COUNTER_0[15..0]    - (RW) This counter is increased when the abort source selected by CABT0[7:0] occurs
                                     (unit : event)
    TX_ABORT_COUNTER_1[31..16]   - (RW) This counter is increased when the abort source selected by CABT0[15:8] occurs
                                     (unit : event)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0TABT0_TX_ABORT_COUNTER_1_ADDR         BN0_WF_MIB_TOP_M0TABT0_ADDR
#define BN0_WF_MIB_TOP_M0TABT0_TX_ABORT_COUNTER_1_MASK         0xFFFF0000                // TX_ABORT_COUNTER_1[31..16]
#define BN0_WF_MIB_TOP_M0TABT0_TX_ABORT_COUNTER_1_SHFT         16
#define BN0_WF_MIB_TOP_M0TABT0_TX_ABORT_COUNTER_0_ADDR         BN0_WF_MIB_TOP_M0TABT0_ADDR
#define BN0_WF_MIB_TOP_M0TABT0_TX_ABORT_COUNTER_0_MASK         0x0000FFFF                // TX_ABORT_COUNTER_0[15..0]
#define BN0_WF_MIB_TOP_M0TABT0_TX_ABORT_COUNTER_0_SHFT         0

/* =====================================================================================

  ---M0TABT1 (0x820ed000 + 0x0A4)---

    TX_ABORT_COUNTER_2[15..0]    - (RW) This counter is increased when the abort source selected by CABT0[23:16] occurs
                                     (unit : event)
    TX_ABORT_COUNTER_3[31..16]   - (RW) This counter is increased when the abort source selected by CABT0[31:24] occurs
                                     (unit : event)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0TABT1_TX_ABORT_COUNTER_3_ADDR         BN0_WF_MIB_TOP_M0TABT1_ADDR
#define BN0_WF_MIB_TOP_M0TABT1_TX_ABORT_COUNTER_3_MASK         0xFFFF0000                // TX_ABORT_COUNTER_3[31..16]
#define BN0_WF_MIB_TOP_M0TABT1_TX_ABORT_COUNTER_3_SHFT         16
#define BN0_WF_MIB_TOP_M0TABT1_TX_ABORT_COUNTER_2_ADDR         BN0_WF_MIB_TOP_M0TABT1_ADDR
#define BN0_WF_MIB_TOP_M0TABT1_TX_ABORT_COUNTER_2_MASK         0x0000FFFF                // TX_ABORT_COUNTER_2[15..0]
#define BN0_WF_MIB_TOP_M0TABT1_TX_ABORT_COUNTER_2_SHFT         0

/* =====================================================================================

  ---M0TABT2 (0x820ed000 + 0x0A8)---

    TX_ABORT_COUNTER_4[15..0]    - (RW) This counter is increased when the abort source selected by CABT1[7:0] occurs
                                     (unit : event)
    TX_ABORT_COUNTER_5[31..16]   - (RW) This counter is increased when the abort source selected by CABT1[15:8] occurs
                                     (unit : event)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0TABT2_TX_ABORT_COUNTER_5_ADDR         BN0_WF_MIB_TOP_M0TABT2_ADDR
#define BN0_WF_MIB_TOP_M0TABT2_TX_ABORT_COUNTER_5_MASK         0xFFFF0000                // TX_ABORT_COUNTER_5[31..16]
#define BN0_WF_MIB_TOP_M0TABT2_TX_ABORT_COUNTER_5_SHFT         16
#define BN0_WF_MIB_TOP_M0TABT2_TX_ABORT_COUNTER_4_ADDR         BN0_WF_MIB_TOP_M0TABT2_ADDR
#define BN0_WF_MIB_TOP_M0TABT2_TX_ABORT_COUNTER_4_MASK         0x0000FFFF                // TX_ABORT_COUNTER_4[15..0]
#define BN0_WF_MIB_TOP_M0TABT2_TX_ABORT_COUNTER_4_SHFT         0

/* =====================================================================================

  ---M0TABT3 (0x820ed000 + 0x0AC)---

    TX_ABORT_COUNTER_6[15..0]    - (RW) This counter is increased when the abort source selected by CABT1[23:16] occurs
                                     (unit : event)
    TX_ABORT_COUNTER_7[31..16]   - (RW) This counter is increased when the abort source selected by CABT1[31:24] occurs
                                     (unit : event)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0TABT3_TX_ABORT_COUNTER_7_ADDR         BN0_WF_MIB_TOP_M0TABT3_ADDR
#define BN0_WF_MIB_TOP_M0TABT3_TX_ABORT_COUNTER_7_MASK         0xFFFF0000                // TX_ABORT_COUNTER_7[31..16]
#define BN0_WF_MIB_TOP_M0TABT3_TX_ABORT_COUNTER_7_SHFT         16
#define BN0_WF_MIB_TOP_M0TABT3_TX_ABORT_COUNTER_6_ADDR         BN0_WF_MIB_TOP_M0TABT3_ADDR
#define BN0_WF_MIB_TOP_M0TABT3_TX_ABORT_COUNTER_6_MASK         0x0000FFFF                // TX_ABORT_COUNTER_6[15..0]
#define BN0_WF_MIB_TOP_M0TABT3_TX_ABORT_COUNTER_6_SHFT         0

/* =====================================================================================

  ---TRARC0 (0x820ed000 + 0x0B0)---

    AGG_RANG_SEL_0[9..0]         - (RW) when TRX_ARNG_MODE = 2'b01,
                                       increase TRX_AGG_RANGE0_COUNT  when AGG_RANGE_SEL_0  >= TX_AGG_COUNT
                                       increase TRX_AGG_RANGE1_COUNT  when AGG_RANGE_SEL_1  >= TX_AGG_COUNT > AGG_RANGE_SEL_0
                                       increase TRX_AGG_RANGE2_COUNT  when AGG_RANGE_SEL_2  >= TX_AGG_COUNT > AGG_RANGE_SEL_1
                                       increase TRX_AGG_RANGE3_COUNT  when AGG_RANGE_SEL_3  >= TX_AGG_COUNT > AGG_RANGE_SEL_2
                                       increase TRX_AGG_RANGE4_COUNT  when AGG_RANGE_SEL_4  >= TX_AGG_COUNT > AGG_RANGE_SEL_3
                                       increase TRX_AGG_RANGE5_COUNT  when AGG_RANGE_SEL_5  >= TX_AGG_COUNT > AGG_RANGE_SEL_4
                                       increase TRX_AGG_RANGE6_COUNT  when AGG_RANGE_SEL_6  >= TX_AGG_COUNT > AGG_RANGE_SEL_5
                                       increase TRX_AGG_RANGE7_COUNT  when                                            TX_AGG_COUNT > AGG_RANGE_SEL_6

                                       increase TRX_AGG_RANGE8_COUNT   when AGG_RANGE_SEL_8   >= RX_AGG_COUNT
                                       increase TRX_AGG_RANGE9_COUNT   when AGG_RANGE_SEL_9   >= RX_AGG_COUNT > AGG_RANGE_SEL_8
                                       increase TRX_AGG_RANGE10_COUNT when AGG_RANGE_SEL_10 >= RX_AGG_COUNT > AGG_RANGE_SEL_9
                                       increase TRX_AGG_RANGE11_COUNT when AGG_RANGE_SEL_11 >= RX_AGG_COUNT > AGG_RANGE_SEL_10
                                       increase TRX_AGG_RANGE12_COUNT when AGG_RANGE_SEL_12 >= RX_AGG_COUNT > AGG_RANGE_SEL_11
                                       increase TRX_AGG_RANGE13_COUNT when AGG_RANGE_SEL_13 >= RX_AGG_COUNT > AGG_RANGE_SEL_12
                                       increase TRX_AGG_RANGE14_COUNT when AGG_RANGE_SEL_14 >= RX_AGG_COUNT > AGG_RANGE_SEL_13
                                       increase TRX_AGG_RANGE15_COUNT when                                             RX_AGG_COUNT > AGG_RANGE_SEL_14

                                       Note: AGG_RANGE_SEL_7 is not used

                                     when TRX_ARNG_MODE = 2'b00 or 2'b10:
                                       increase TRX_AGG_RANGE0_COUNT  when AGG_RANGE_SEL_0  >= TRX_AGG_COUNT
                                       increase TRX_AGG_RANGE1_COUNT  when AGG_RANGE_SEL_1  >= TRX_AGG_COUNT > AGG_RANGE_SEL_0
                                       increase TRX_AGG_RANGE2_COUNT  when AGG_RANGE_SEL_2  >= TRX_AGG_COUNT > AGG_RANGE_SEL_1
                                       increase TRX_AGG_RANGE3_COUNT  when AGG_RANGE_SEL_3  >= TRX_AGG_COUNT > AGG_RANGE_SEL_2
                                       increase TRX_AGG_RANGE4_COUNT  when AGG_RANGE_SEL_4  >= TRX_AGG_COUNT > AGG_RANGE_SEL_3
                                       increase TRX_AGG_RANGE5_COUNT  when AGG_RANGE_SEL_5  >= TRX_AGG_COUNT > AGG_RANGE_SEL_4
                                       increase TRX_AGG_RANGE6_COUNT  when AGG_RANGE_SEL_6  >= TRX_AGG_COUNT > AGG_RANGE_SEL_5
                                       increase TRX_AGG_RANGE7_COUNT  when AGG_RANGE_SEL_7  >= TRX_AGG_COUNT > AGG_RANGE_SEL_6
                                       increase TRX_AGG_RANGE8_COUNT  when AGG_RANGE_SEL_8  >= TRX_AGG_COUNT > AGG_RANGE_SEL_7
                                       increase TRX_AGG_RANGE9_COUNT  when AGG_RANGE_SEL_9  >= TRX_AGG_COUNT > AGG_RANGE_SEL_8
                                       increase TRX_AGG_RANGE10_COUNT when AGG_RANGE_SEL_10 >= TRX_AGG_COUNT > AGG_RANGE_SEL_9
                                       increase TRX_AGG_RANGE11_COUNT when AGG_RANGE_SEL_11 >= TRX_AGG_COUNT > AGG_RANGE_SEL_10
                                       increase TRX_AGG_RANGE12_COUNT when AGG_RANGE_SEL_12 >= TRX_AGG_COUNT > AGG_RANGE_SEL_11
                                       increase TRX_AGG_RANGE13_COUNT when AGG_RANGE_SEL_13 >= TRX_AGG_COUNT > AGG_RANGE_SEL_12
                                       increase TRX_AGG_RANGE14_COUNT when AGG_RANGE_SEL_14 >= TRX_AGG_COUNT > AGG_RANGE_SEL_13
                                       increase TRX_AGG_RANGE15_COUNT when                                             TRX_AGG_COUNT > AGG_RANGE_SEL_14
    RESERVED10[15..10]           - (RO) Reserved bits
    AGG_RANG_SEL_1[25..16]       - (RW) the same as AGG_RANGE_SEL_0
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TRARC0_AGG_RANG_SEL_1_ADDR              BN0_WF_MIB_TOP_TRARC0_ADDR
#define BN0_WF_MIB_TOP_TRARC0_AGG_RANG_SEL_1_MASK              0x03FF0000                // AGG_RANG_SEL_1[25..16]
#define BN0_WF_MIB_TOP_TRARC0_AGG_RANG_SEL_1_SHFT              16
#define BN0_WF_MIB_TOP_TRARC0_AGG_RANG_SEL_0_ADDR              BN0_WF_MIB_TOP_TRARC0_ADDR
#define BN0_WF_MIB_TOP_TRARC0_AGG_RANG_SEL_0_MASK              0x000003FF                // AGG_RANG_SEL_0[9..0]
#define BN0_WF_MIB_TOP_TRARC0_AGG_RANG_SEL_0_SHFT              0

/* =====================================================================================

  ---TRARC1 (0x820ed000 + 0x0B4)---

    AGG_RANG_SEL_2[9..0]         - (RW) the same as AGG_RANGE_SEL_0
    RESERVED10[15..10]           - (RO) Reserved bits
    AGG_RANG_SEL_3[25..16]       - (RW) the same as AGG_RANGE_SEL_0
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TRARC1_AGG_RANG_SEL_3_ADDR              BN0_WF_MIB_TOP_TRARC1_ADDR
#define BN0_WF_MIB_TOP_TRARC1_AGG_RANG_SEL_3_MASK              0x03FF0000                // AGG_RANG_SEL_3[25..16]
#define BN0_WF_MIB_TOP_TRARC1_AGG_RANG_SEL_3_SHFT              16
#define BN0_WF_MIB_TOP_TRARC1_AGG_RANG_SEL_2_ADDR              BN0_WF_MIB_TOP_TRARC1_ADDR
#define BN0_WF_MIB_TOP_TRARC1_AGG_RANG_SEL_2_MASK              0x000003FF                // AGG_RANG_SEL_2[9..0]
#define BN0_WF_MIB_TOP_TRARC1_AGG_RANG_SEL_2_SHFT              0

/* =====================================================================================

  ---TRARC2 (0x820ed000 + 0x0B8)---

    AGG_RANG_SEL_4[9..0]         - (RW) the same as AGG_RANGE_SEL_0
    RESERVED10[15..10]           - (RO) Reserved bits
    AGG_RANG_SEL_5[25..16]       - (RW) the same as AGG_RANGE_SEL_0
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TRARC2_AGG_RANG_SEL_5_ADDR              BN0_WF_MIB_TOP_TRARC2_ADDR
#define BN0_WF_MIB_TOP_TRARC2_AGG_RANG_SEL_5_MASK              0x03FF0000                // AGG_RANG_SEL_5[25..16]
#define BN0_WF_MIB_TOP_TRARC2_AGG_RANG_SEL_5_SHFT              16
#define BN0_WF_MIB_TOP_TRARC2_AGG_RANG_SEL_4_ADDR              BN0_WF_MIB_TOP_TRARC2_ADDR
#define BN0_WF_MIB_TOP_TRARC2_AGG_RANG_SEL_4_MASK              0x000003FF                // AGG_RANG_SEL_4[9..0]
#define BN0_WF_MIB_TOP_TRARC2_AGG_RANG_SEL_4_SHFT              0

/* =====================================================================================

  ---TRARC3 (0x820ed000 + 0x0BC)---

    AGG_RANG_SEL_6[9..0]         - (RW) the same as AGG_RANGE_SEL_0
    RESERVED10[15..10]           - (RO) Reserved bits
    AGG_RANG_SEL_7[25..16]       - (RW) the same as AGG_RANGE_SEL_0
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TRARC3_AGG_RANG_SEL_7_ADDR              BN0_WF_MIB_TOP_TRARC3_ADDR
#define BN0_WF_MIB_TOP_TRARC3_AGG_RANG_SEL_7_MASK              0x03FF0000                // AGG_RANG_SEL_7[25..16]
#define BN0_WF_MIB_TOP_TRARC3_AGG_RANG_SEL_7_SHFT              16
#define BN0_WF_MIB_TOP_TRARC3_AGG_RANG_SEL_6_ADDR              BN0_WF_MIB_TOP_TRARC3_ADDR
#define BN0_WF_MIB_TOP_TRARC3_AGG_RANG_SEL_6_MASK              0x000003FF                // AGG_RANG_SEL_6[9..0]
#define BN0_WF_MIB_TOP_TRARC3_AGG_RANG_SEL_6_SHFT              0

/* =====================================================================================

  ---TRARC4 (0x820ed000 + 0x0C0)---

    AGG_RANG_SEL_8[9..0]         - (RW) the same as AGG_RANGE_SEL_0
    RESERVED10[15..10]           - (RO) Reserved bits
    AGG_RANG_SEL_9[25..16]       - (RW) the same as AGG_RANGE_SEL_0
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TRARC4_AGG_RANG_SEL_9_ADDR              BN0_WF_MIB_TOP_TRARC4_ADDR
#define BN0_WF_MIB_TOP_TRARC4_AGG_RANG_SEL_9_MASK              0x03FF0000                // AGG_RANG_SEL_9[25..16]
#define BN0_WF_MIB_TOP_TRARC4_AGG_RANG_SEL_9_SHFT              16
#define BN0_WF_MIB_TOP_TRARC4_AGG_RANG_SEL_8_ADDR              BN0_WF_MIB_TOP_TRARC4_ADDR
#define BN0_WF_MIB_TOP_TRARC4_AGG_RANG_SEL_8_MASK              0x000003FF                // AGG_RANG_SEL_8[9..0]
#define BN0_WF_MIB_TOP_TRARC4_AGG_RANG_SEL_8_SHFT              0

/* =====================================================================================

  ---TRARC5 (0x820ed000 + 0x0C4)---

    AGG_RANG_SEL_10[9..0]        - (RW) the same as AGG_RANGE_SEL_0
    RESERVED10[15..10]           - (RO) Reserved bits
    AGG_RANG_SEL_11[25..16]      - (RW) the same as AGG_RANGE_SEL_0
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TRARC5_AGG_RANG_SEL_11_ADDR             BN0_WF_MIB_TOP_TRARC5_ADDR
#define BN0_WF_MIB_TOP_TRARC5_AGG_RANG_SEL_11_MASK             0x03FF0000                // AGG_RANG_SEL_11[25..16]
#define BN0_WF_MIB_TOP_TRARC5_AGG_RANG_SEL_11_SHFT             16
#define BN0_WF_MIB_TOP_TRARC5_AGG_RANG_SEL_10_ADDR             BN0_WF_MIB_TOP_TRARC5_ADDR
#define BN0_WF_MIB_TOP_TRARC5_AGG_RANG_SEL_10_MASK             0x000003FF                // AGG_RANG_SEL_10[9..0]
#define BN0_WF_MIB_TOP_TRARC5_AGG_RANG_SEL_10_SHFT             0

/* =====================================================================================

  ---TRARC6 (0x820ed000 + 0x0C8)---

    AGG_RANG_SEL_12[9..0]        - (RW) the same as AGG_RANGE_SEL_0
    RESERVED10[15..10]           - (RO) Reserved bits
    AGG_RANG_SEL_13[25..16]      - (RW) the same as AGG_RANGE_SEL_0
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TRARC6_AGG_RANG_SEL_13_ADDR             BN0_WF_MIB_TOP_TRARC6_ADDR
#define BN0_WF_MIB_TOP_TRARC6_AGG_RANG_SEL_13_MASK             0x03FF0000                // AGG_RANG_SEL_13[25..16]
#define BN0_WF_MIB_TOP_TRARC6_AGG_RANG_SEL_13_SHFT             16
#define BN0_WF_MIB_TOP_TRARC6_AGG_RANG_SEL_12_ADDR             BN0_WF_MIB_TOP_TRARC6_ADDR
#define BN0_WF_MIB_TOP_TRARC6_AGG_RANG_SEL_12_MASK             0x000003FF                // AGG_RANG_SEL_12[9..0]
#define BN0_WF_MIB_TOP_TRARC6_AGG_RANG_SEL_12_SHFT             0

/* =====================================================================================

  ---TRARC7 (0x820ed000 + 0x0CC)---

    AGG_RANG_SEL_14[9..0]        - (RW) the same as AGG_RANGE_SEL_0
    RESERVED10[31..10]           - (RO) Reserved bits

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TRARC7_AGG_RANG_SEL_14_ADDR             BN0_WF_MIB_TOP_TRARC7_ADDR
#define BN0_WF_MIB_TOP_TRARC7_AGG_RANG_SEL_14_MASK             0x000003FF                // AGG_RANG_SEL_14[9..0]
#define BN0_WF_MIB_TOP_TRARC7_AGG_RANG_SEL_14_SHFT             0

/* =====================================================================================

  ---MMCR (0x820ed000 + 0x0F0)---

    RESET[0]                     - (WC) Reset all counter in memory, MIB clears this bit when it is finished
    RESERVED1[30..1]             - (RO) Reserved bits
    MODE[31]                     - (RW) Control the read clear function for memory based MIB counter (starting from offset 0x400)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MMCR_MODE_ADDR                          BN0_WF_MIB_TOP_MMCR_ADDR
#define BN0_WF_MIB_TOP_MMCR_MODE_MASK                          0x80000000                // MODE[31]
#define BN0_WF_MIB_TOP_MMCR_MODE_SHFT                          31
#define BN0_WF_MIB_TOP_MMCR_RESET_ADDR                         BN0_WF_MIB_TOP_MMCR_ADDR
#define BN0_WF_MIB_TOP_MMCR_RESET_MASK                         0x00000001                // RESET[0]
#define BN0_WF_MIB_TOP_MMCR_RESET_SHFT                         0

/* =====================================================================================

  ---MVCR (0x820ed000 + 0x3FC)---

    VERSION_CODE[31..0]          - (RO) YYYYMMDD

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MVCR_VERSION_CODE_ADDR                  BN0_WF_MIB_TOP_MVCR_ADDR
#define BN0_WF_MIB_TOP_MVCR_VERSION_CODE_MASK                  0xFFFFFFFF                // VERSION_CODE[31..0]
#define BN0_WF_MIB_TOP_MVCR_VERSION_CODE_SHFT                  0

/* =====================================================================================

  ---BTOCR (0x820ed000 + 0x400)---

    TX_OK_COUNTn[31..0]          - (RW) This counter is increased for an ACKed MPDU with an individual address in the address 1 field or an MPDU with a multicast address in the address 1 field I successfully transmitted.
                                     Total set = # of BSSID+MBSSID
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BTOCR_TX_OK_COUNTn_ADDR                 BN0_WF_MIB_TOP_BTOCR_ADDR
#define BN0_WF_MIB_TOP_BTOCR_TX_OK_COUNTn_MASK                 0xFFFFFFFF                // TX_OK_COUNTn[31..0]
#define BN0_WF_MIB_TOP_BTOCR_TX_OK_COUNTn_SHFT                 0

/* =====================================================================================

  ---BTBCR (0x820ed000 + 0x450)---

    TX_BYTE_COUNTn[31..0]        - (RW) This counter is increased for each successfully transmitted MPDU (802.11 payload).
                                     Total set = # of BSSID+MBSSID
                                     (unit : byte)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BTBCR_TX_BYTE_COUNTn_ADDR               BN0_WF_MIB_TOP_BTBCR_ADDR
#define BN0_WF_MIB_TOP_BTBCR_TX_BYTE_COUNTn_MASK               0xFFFFFFFF                // TX_BYTE_COUNTn[31..0]
#define BN0_WF_MIB_TOP_BTBCR_TX_BYTE_COUNTn_SHFT               0

/* =====================================================================================

  ---BTMRCR (0x820ed000 + 0x4A0)---

    TX_MGNT_RETRY_COUNTn[31..0]  - (RW) This counter is increased for each retry of management frame after one or more retransmissions (count only 1 time)
                                     Total set = # of BSSID+MBSSID
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BTMRCR_TX_MGNT_RETRY_COUNTn_ADDR        BN0_WF_MIB_TOP_BTMRCR_ADDR
#define BN0_WF_MIB_TOP_BTMRCR_TX_MGNT_RETRY_COUNTn_MASK        0xFFFFFFFF                // TX_MGNT_RETRY_COUNTn[31..0]
#define BN0_WF_MIB_TOP_BTMRCR_TX_MGNT_RETRY_COUNTn_SHFT        0

/* =====================================================================================

  ---BTDRCR (0x820ed000 + 0x4F0)---

    TX_DATA_RETRY_COUNT2n[31..0] - (RW) This counter is increased for each retry of data frame after one or more retransmissions (count only 1 time)
                                     Total set = # of BSSID+MBSSID
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BTDRCR_TX_DATA_RETRY_COUNT2n_ADDR       BN0_WF_MIB_TOP_BTDRCR_ADDR
#define BN0_WF_MIB_TOP_BTDRCR_TX_DATA_RETRY_COUNT2n_MASK       0xFFFFFFFF                // TX_DATA_RETRY_COUNT2n[31..0]
#define BN0_WF_MIB_TOP_BTDRCR_TX_DATA_RETRY_COUNT2n_SHFT       0

/* =====================================================================================

  ---BTCCR (0x820ed000 + 0x540)---

    TX_CTRL_COUNTn[31..0]        - (RW) This counter is increased for each successfully transmitted control frame (HW generates only)
                                     Total set = # of BSSID+MBSSID
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BTCCR_TX_CTRL_COUNTn_ADDR               BN0_WF_MIB_TOP_BTCCR_ADDR
#define BN0_WF_MIB_TOP_BTCCR_TX_CTRL_COUNTn_MASK               0xFFFFFFFF                // TX_CTRL_COUNTn[31..0]
#define BN0_WF_MIB_TOP_BTCCR_TX_CTRL_COUNTn_SHFT               0

/* =====================================================================================

  ---BTDCR (0x820ed000 + 0x590)---

    TX_DATA_COUNTn[31..0]        - (RW) This counter is increased for an ACKed MPDU with an individual address in the address 1 field or an MPDU with a multicast address in the address 1 field I successfully transmitted (do not include MMPDU/NULL frame).
                                     Total set = # of BSSID
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BTDCR_TX_DATA_COUNTn_ADDR               BN0_WF_MIB_TOP_BTDCR_ADDR
#define BN0_WF_MIB_TOP_BTDCR_TX_DATA_COUNTn_MASK               0xFFFFFFFF                // TX_DATA_COUNTn[31..0]
#define BN0_WF_MIB_TOP_BTDCR_TX_DATA_COUNTn_SHFT               0

/* =====================================================================================

  ---BTCR (0x820ed000 + 0x5A0)---

    TX_COUNTn[31..0]             - (RW) This counter is increased for each successfully transmitted frame.
                                     Total set = # of BSSID
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BTCR_TX_COUNTn_ADDR                     BN0_WF_MIB_TOP_BTCR_ADDR
#define BN0_WF_MIB_TOP_BTCR_TX_COUNTn_MASK                     0xFFFFFFFF                // TX_COUNTn[31..0]
#define BN0_WF_MIB_TOP_BTCR_TX_COUNTn_SHFT                     0

/* =====================================================================================

  ---BTFCR (0x820ed000 + 0x5B0)---

    TX_FAIL_COUNTn[31..0]        - (RW) This counter is increased for each transmitted frame failed to get a ACK
                                     Total set = # of BSSID
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BTFCR_TX_FAIL_COUNTn_ADDR               BN0_WF_MIB_TOP_BTFCR_ADDR
#define BN0_WF_MIB_TOP_BTFCR_TX_FAIL_COUNTn_MASK               0xFFFFFFFF                // TX_FAIL_COUNTn[31..0]
#define BN0_WF_MIB_TOP_BTFCR_TX_FAIL_COUNTn_SHFT               0

/* =====================================================================================

  ---BFTCR (0x820ed000 + 0x5C0)---

    TX_COUNTn[31..0]             - (RW) This counter is increased for each successfully transmitted frame (in FDD RW mode)
                                     Total set = # of BSSID
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BFTCR_TX_COUNTn_ADDR                    BN0_WF_MIB_TOP_BFTCR_ADDR
#define BN0_WF_MIB_TOP_BFTCR_TX_COUNTn_MASK                    0xFFFFFFFF                // TX_COUNTn[31..0]
#define BN0_WF_MIB_TOP_BFTCR_TX_COUNTn_SHFT                    0

/* =====================================================================================

  ---BFTFCR (0x820ed000 + 0x5D0)---

    TX_FAIL_COUNTn[31..0]        - (RW) This counter is increased for each transmitted frame failed to get a ACK (in FDD RW mode)
                                     Total set = # of BSSID
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BFTFCR_TX_FAIL_COUNTn_ADDR              BN0_WF_MIB_TOP_BFTFCR_ADDR
#define BN0_WF_MIB_TOP_BFTFCR_TX_FAIL_COUNTn_MASK              0xFFFFFFFF                // TX_FAIL_COUNTn[31..0]
#define BN0_WF_MIB_TOP_BFTFCR_TX_FAIL_COUNTn_SHFT              0

/* =====================================================================================

  ---BTSCR0 (0x820ed000 + 0x5E0)---

    BAMISSCOUNTn[31..0]          - (RW) This counter is increased when the expected BA is not received in response to an Implicit BAR frame.
                                     Total set = # of BSSID
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BTSCR0_BAMISSCOUNTn_ADDR                BN0_WF_MIB_TOP_BTSCR0_ADDR
#define BN0_WF_MIB_TOP_BTSCR0_BAMISSCOUNTn_MASK                0xFFFFFFFF                // BAMISSCOUNTn[31..0]
#define BN0_WF_MIB_TOP_BTSCR0_BAMISSCOUNTn_SHFT                0

/* =====================================================================================

  ---BTSCR1 (0x820ed000 + 0x5F0)---

    ACKFAILCOUNTn[31..0]         - (RW) This counter is increased when an ACK or BA is not received when expected.
                                     Total set = # of BSSID
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BTSCR1_ACKFAILCOUNTn_ADDR               BN0_WF_MIB_TOP_BTSCR1_ADDR
#define BN0_WF_MIB_TOP_BTSCR1_ACKFAILCOUNTn_MASK               0xFFFFFFFF                // ACKFAILCOUNTn[31..0]
#define BN0_WF_MIB_TOP_BTSCR1_ACKFAILCOUNTn_SHFT               0

/* =====================================================================================

  ---BTSCR2 (0x820ed000 + 0x600)---

    FRAMERETRYCOUNTn[31..0]      - (RW) This counter is increased when an MPDU is successfully transmitted after 1 or more retransmissions.
                                     Total set = # of BSSID
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BTSCR2_FRAMERETRYCOUNTn_ADDR            BN0_WF_MIB_TOP_BTSCR2_ADDR
#define BN0_WF_MIB_TOP_BTSCR2_FRAMERETRYCOUNTn_MASK            0xFFFFFFFF                // FRAMERETRYCOUNTn[31..0]
#define BN0_WF_MIB_TOP_BTSCR2_FRAMERETRYCOUNTn_SHFT            0

/* =====================================================================================

  ---BTSCR3 (0x820ed000 + 0x610)---

    FRAMERETRY2COUNTn[31..0]     - (RW) This counter is increased when an MPDU is successfully transmitted after 2 or more retransmissions.
                                     Total set = # of BSSID
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BTSCR3_FRAMERETRY2COUNTn_ADDR           BN0_WF_MIB_TOP_BTSCR3_ADDR
#define BN0_WF_MIB_TOP_BTSCR3_FRAMERETRY2COUNTn_MASK           0xFFFFFFFF                // FRAMERETRY2COUNTn[31..0]
#define BN0_WF_MIB_TOP_BTSCR3_FRAMERETRY2COUNTn_SHFT           0

/* =====================================================================================

  ---BTSCR4 (0x820ed000 + 0x620)---

    FRAMERETRY3COUNTn[31..0]     - (RW) This counter is increased when an MPDU is successfully transmitted after 3 or more retransmissions.
                                     Total set = # of BSSID
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BTSCR4_FRAMERETRY3COUNTn_ADDR           BN0_WF_MIB_TOP_BTSCR4_ADDR
#define BN0_WF_MIB_TOP_BTSCR4_FRAMERETRY3COUNTn_MASK           0xFFFFFFFF                // FRAMERETRY3COUNTn[31..0]
#define BN0_WF_MIB_TOP_BTSCR4_FRAMERETRY3COUNTn_SHFT           0

/* =====================================================================================

  ---BTBMTCR (0x820ed000 + 0x630)---

    BSS_TB_MPDU_TX_COUNT[31..0]  - (RW) This counter is increased when an MPDU is successfully transmitted in a trigger based mode
                                     Total set = # of BSSID
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BTBMTCR_BSS_TB_MPDU_TX_COUNT_ADDR       BN0_WF_MIB_TOP_BTBMTCR_ADDR
#define BN0_WF_MIB_TOP_BTBMTCR_BSS_TB_MPDU_TX_COUNT_MASK       0xFFFFFFFF                // BSS_TB_MPDU_TX_COUNT[31..0]
#define BN0_WF_MIB_TOP_BTBMTCR_BSS_TB_MPDU_TX_COUNT_SHFT       0

/* =====================================================================================

  ---ATCR (0x820ed000 + 0x640)---

    TX_COUNT_ACn[31..0]          - (RW) This counter is increased for each successfully transmitted frame
                                     Total set = # of AC
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_ATCR_TX_COUNT_ACn_ADDR                  BN0_WF_MIB_TOP_ATCR_ADDR
#define BN0_WF_MIB_TOP_ATCR_TX_COUNT_ACn_MASK                  0xFFFFFFFF                // TX_COUNT_ACn[31..0]
#define BN0_WF_MIB_TOP_ATCR_TX_COUNT_ACn_SHFT                  0

/* =====================================================================================

  ---ATRCR (0x820ed000 + 0x650)---

    TX_RETRY_COUNT_ACn[31..0]    - (RW) This counter is increased for each retry of frame after retransmissions
                                     Total set = # of AC
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_ATRCR_TX_RETRY_COUNT_ACn_ADDR           BN0_WF_MIB_TOP_ATRCR_ADDR
#define BN0_WF_MIB_TOP_ATRCR_TX_RETRY_COUNT_ACn_MASK           0xFFFFFFFF                // TX_RETRY_COUNT_ACn[31..0]
#define BN0_WF_MIB_TOP_ATRCR_TX_RETRY_COUNT_ACn_SHFT           0

/* =====================================================================================

  ---ATDCR (0x820ed000 + 0x660)---

    TX_DROP_COUNT_ACn[31..0]     - (RW) This counter is increased for the dropped MPDU (count only 1 time)
                                     Total set = # of AC
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_ATDCR_TX_DROP_COUNT_ACn_ADDR            BN0_WF_MIB_TOP_ATDCR_ADDR
#define BN0_WF_MIB_TOP_ATDCR_TX_DROP_COUNT_ACn_MASK            0xFFFFFFFF                // TX_DROP_COUNT_ACn[31..0]
#define BN0_WF_MIB_TOP_ATDCR_TX_DROP_COUNT_ACn_SHFT            0

/* =====================================================================================

  ---TSCR0 (0x820ed000 + 0x670)---

    AMPDU_COUNT[31..0]           - (RW) This counter is increased when transmitting A-MPDU
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TSCR0_AMPDU_COUNT_ADDR                  BN0_WF_MIB_TOP_TSCR0_ADDR
#define BN0_WF_MIB_TOP_TSCR0_AMPDU_COUNT_MASK                  0xFFFFFFFF                // AMPDU_COUNT[31..0]
#define BN0_WF_MIB_TOP_TSCR0_AMPDU_COUNT_SHFT                  0

/* =====================================================================================

  ---TSCR1 (0x820ed000 + 0x674)---

    BA_COUNT[31..0]              - (RW) This counter is increased when RX get the BA of A-MPDU occurs
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TSCR1_BA_COUNT_ADDR                     BN0_WF_MIB_TOP_TSCR1_ADDR
#define BN0_WF_MIB_TOP_TSCR1_BA_COUNT_MASK                     0xFFFFFFFF                // BA_COUNT[31..0]
#define BN0_WF_MIB_TOP_TSCR1_BA_COUNT_SHFT                     0

/* =====================================================================================

  ---TSCR2 (0x820ed000 + 0x678)---

    AMPDU_EARLYSTOP_COUNT[31..0] - (RW) This counter is increased when # of MPDU in A-MPDU is not aggregated to the BA window size.
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TSCR2_AMPDU_EARLYSTOP_COUNT_ADDR        BN0_WF_MIB_TOP_TSCR2_ADDR
#define BN0_WF_MIB_TOP_TSCR2_AMPDU_EARLYSTOP_COUNT_MASK        0xFFFFFFFF                // AMPDU_EARLYSTOP_COUNT[31..0]
#define BN0_WF_MIB_TOP_TSCR2_AMPDU_EARLYSTOP_COUNT_SHFT        0

/* =====================================================================================

  ---TSCR3 (0x820ed000 + 0x67C)---

    AMPDU_MPDU_COUNT[31..0]      - (RW) This counter counts all MPDUs in A-MPDU which is successfully transmitted
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TSCR3_AMPDU_MPDU_COUNT_ADDR             BN0_WF_MIB_TOP_TSCR3_ADDR
#define BN0_WF_MIB_TOP_TSCR3_AMPDU_MPDU_COUNT_MASK             0xFFFFFFFF                // AMPDU_MPDU_COUNT[31..0]
#define BN0_WF_MIB_TOP_TSCR3_AMPDU_MPDU_COUNT_SHFT             0

/* =====================================================================================

  ---TSCR4 (0x820ed000 + 0x680)---

    AMPDU_ACKED_COUNT[31..0]     - (RW) This counter counts all MPDUs in A-MPDU which is successfully transmitted and got a ACK
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TSCR4_AMPDU_ACKED_COUNT_ADDR            BN0_WF_MIB_TOP_TSCR4_ADDR
#define BN0_WF_MIB_TOP_TSCR4_AMPDU_ACKED_COUNT_MASK            0xFFFFFFFF                // AMPDU_ACKED_COUNT[31..0]
#define BN0_WF_MIB_TOP_TSCR4_AMPDU_ACKED_COUNT_SHFT            0

/* =====================================================================================

  ---TSCR7 (0x820ed000 + 0x68C)---

    SU_TX_OK_COUNT[31..0]        - (RW) This counter is increased for an ACKed MPDU with an individual address in the address 1 field or an MPDU with a multicast address in the address 1 field is successfully transmitted in SU mode
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TSCR7_SU_TX_OK_COUNT_ADDR               BN0_WF_MIB_TOP_TSCR7_ADDR
#define BN0_WF_MIB_TOP_TSCR7_SU_TX_OK_COUNT_MASK               0xFFFFFFFF                // SU_TX_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_TSCR7_SU_TX_OK_COUNT_SHFT               0

/* =====================================================================================

  ---SRC0 (0x820ed000 + 0x694)---

    SR_AMPDU_MPDU_COUNT[31..0]   - (RW) This counter counts all MPDUs in A-MPDU which is successfully transmitted during Spatial Reuse window
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_SRC0_SR_AMPDU_MPDU_COUNT_ADDR           BN0_WF_MIB_TOP_SRC0_ADDR
#define BN0_WF_MIB_TOP_SRC0_SR_AMPDU_MPDU_COUNT_MASK           0xFFFFFFFF                // SR_AMPDU_MPDU_COUNT[31..0]
#define BN0_WF_MIB_TOP_SRC0_SR_AMPDU_MPDU_COUNT_SHFT           0

/* =====================================================================================

  ---SRC1 (0x820ed000 + 0x698)---

    SR_AMPDU_MPDU_ACKED_COUNT[31..0] - (RW) This counter counts all MPDUs in A-MPDU which is successfully transmitted and got a ACK during Spatial Reuse window
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_SRC1_SR_AMPDU_MPDU_ACKED_COUNT_ADDR     BN0_WF_MIB_TOP_SRC1_ADDR
#define BN0_WF_MIB_TOP_SRC1_SR_AMPDU_MPDU_ACKED_COUNT_MASK     0xFFFFFFFF                // SR_AMPDU_MPDU_ACKED_COUNT[31..0]
#define BN0_WF_MIB_TOP_SRC1_SR_AMPDU_MPDU_ACKED_COUNT_SHFT     0

/* =====================================================================================

  ---TSCR12 (0x820ed000 + 0x6A8)---

    DBNSS_COUNT[31..0]           - (RW) This counter is increased when using double number of space stream
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TSCR12_DBNSS_COUNT_ADDR                 BN0_WF_MIB_TOP_TSCR12_ADDR
#define BN0_WF_MIB_TOP_TSCR12_DBNSS_COUNT_MASK                 0xFFFFFFFF                // DBNSS_COUNT[31..0]
#define BN0_WF_MIB_TOP_TSCR12_DBNSS_COUNT_SHFT                 0

/* =====================================================================================

  ---TBCR0 (0x820ed000 + 0x6AC)---

    TX_20MHZ_CNT[31..0]          - (RW) This counter is increased when transmitting PPDU with 20 MHz bandwidth
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TBCR0_TX_20MHZ_CNT_ADDR                 BN0_WF_MIB_TOP_TBCR0_ADDR
#define BN0_WF_MIB_TOP_TBCR0_TX_20MHZ_CNT_MASK                 0xFFFFFFFF                // TX_20MHZ_CNT[31..0]
#define BN0_WF_MIB_TOP_TBCR0_TX_20MHZ_CNT_SHFT                 0

/* =====================================================================================

  ---TBCR1 (0x820ed000 + 0x6B0)---

    TX_40MHZ_CNT[31..0]          - (RW) This counter is increased when transmitting PPDU with 40 MHz bandwidth
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TBCR1_TX_40MHZ_CNT_ADDR                 BN0_WF_MIB_TOP_TBCR1_ADDR
#define BN0_WF_MIB_TOP_TBCR1_TX_40MHZ_CNT_MASK                 0xFFFFFFFF                // TX_40MHZ_CNT[31..0]
#define BN0_WF_MIB_TOP_TBCR1_TX_40MHZ_CNT_SHFT                 0

/* =====================================================================================

  ---TBCR2 (0x820ed000 + 0x6B4)---

    TX_80MHZ_CNT[31..0]          - (RW) This counter is increased when transmitting PPDU with 80 MHz bandwidth
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TBCR2_TX_80MHZ_CNT_ADDR                 BN0_WF_MIB_TOP_TBCR2_ADDR
#define BN0_WF_MIB_TOP_TBCR2_TX_80MHZ_CNT_MASK                 0xFFFFFFFF                // TX_80MHZ_CNT[31..0]
#define BN0_WF_MIB_TOP_TBCR2_TX_80MHZ_CNT_SHFT                 0

/* =====================================================================================

  ---TBCR3 (0x820ed000 + 0x6B8)---

    TX_160MHZ_CNT[31..0]         - (RW) This counter is increased when transmitting PPDU with 160 MHz bandwidth
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TBCR3_TX_160MHZ_CNT_ADDR                BN0_WF_MIB_TOP_TBCR3_ADDR
#define BN0_WF_MIB_TOP_TBCR3_TX_160MHZ_CNT_MASK                0xFFFFFFFF                // TX_160MHZ_CNT[31..0]
#define BN0_WF_MIB_TOP_TBCR3_TX_160MHZ_CNT_SHFT                0

/* =====================================================================================

  ---TBCR4 (0x820ed000 + 0x6BC)---

    TX_320MHZ_CNT[31..0]         - (RW) This counter is increased when transmitting PPDU with 320 MHz bandwidth
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TBCR4_TX_320MHZ_CNT_ADDR                BN0_WF_MIB_TOP_TBCR4_ADDR
#define BN0_WF_MIB_TOP_TBCR4_TX_320MHZ_CNT_MASK                0xFFFFFFFF                // TX_320MHZ_CNT[31..0]
#define BN0_WF_MIB_TOP_TBCR4_TX_320MHZ_CNT_SHFT                0

/* =====================================================================================

  ---TSCR13 (0x820ed000 + 0x6C0)---

    COANT_BF_SEQ_DROP_COUNT[31..0] - (RW) Co-ANT BF seq drop counter
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TSCR13_COANT_BF_SEQ_DROP_COUNT_ADDR     BN0_WF_MIB_TOP_TSCR13_ADDR
#define BN0_WF_MIB_TOP_TSCR13_COANT_BF_SEQ_DROP_COUNT_MASK     0xFFFFFFFF                // COANT_BF_SEQ_DROP_COUNT[31..0]
#define BN0_WF_MIB_TOP_TSCR13_COANT_BF_SEQ_DROP_COUNT_SHFT     0

/* =====================================================================================

  ---TSCR14 (0x820ed000 + 0x6C4)---

    COANT_HW_FB_TX_DIM_COUNT[31..0] - (RW) Co-ANT HW fallback TX dimension counter
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TSCR14_COANT_HW_FB_TX_DIM_COUNT_ADDR    BN0_WF_MIB_TOP_TSCR14_ADDR
#define BN0_WF_MIB_TOP_TSCR14_COANT_HW_FB_TX_DIM_COUNT_MASK    0xFFFFFFFF                // COANT_HW_FB_TX_DIM_COUNT[31..0]
#define BN0_WF_MIB_TOP_TSCR14_COANT_HW_FB_TX_DIM_COUNT_SHFT    0

/* =====================================================================================

  ---TSCR15 (0x820ed000 + 0x6C8)---

    MPDU_RETRY_DROP_COUNT[31..0] - (RW) This counter is increased when the MPDU Retry limit is reached
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TSCR15_MPDU_RETRY_DROP_COUNT_ADDR       BN0_WF_MIB_TOP_TSCR15_ADDR
#define BN0_WF_MIB_TOP_TSCR15_MPDU_RETRY_DROP_COUNT_MASK       0xFFFFFFFF                // MPDU_RETRY_DROP_COUNT[31..0]
#define BN0_WF_MIB_TOP_TSCR15_MPDU_RETRY_DROP_COUNT_SHFT       0

/* =====================================================================================

  ---TSCR16 (0x820ed000 + 0x6CC)---

    RTS_DROP_COUNT[31..0]        - (RW) This counter is increased when the RTS Retry limit is reached
                                     (unit : MPDU or PPDU, which is selected by AGG.ACR6.RTS_FAIL_DROP_MODE)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TSCR16_RTS_DROP_COUNT_ADDR              BN0_WF_MIB_TOP_TSCR16_ADDR
#define BN0_WF_MIB_TOP_TSCR16_RTS_DROP_COUNT_MASK              0xFFFFFFFF                // RTS_DROP_COUNT[31..0]
#define BN0_WF_MIB_TOP_TSCR16_RTS_DROP_COUNT_SHFT              0

/* =====================================================================================

  ---TSCR17 (0x820ed000 + 0x6D0)---

    LTO_DROP_COUNT[31..0]        - (RW) This counter is increased when the Life Time Out limit is reached
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TSCR17_LTO_DROP_COUNT_ADDR              BN0_WF_MIB_TOP_TSCR17_ADDR
#define BN0_WF_MIB_TOP_TSCR17_LTO_DROP_COUNT_MASK              0xFFFFFFFF                // LTO_DROP_COUNT[31..0]
#define BN0_WF_MIB_TOP_TSCR17_LTO_DROP_COUNT_SHFT              0

/* =====================================================================================

  ---RVSR0 (0x820ed000 + 0x6D4)---

    VEC_MISS_COUNT[31..0]        - (RW) This counter is increased when RX queue and vector queue mismatch.
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RVSR0_VEC_MISS_COUNT_ADDR               BN0_WF_MIB_TOP_RVSR0_ADDR
#define BN0_WF_MIB_TOP_RVSR0_VEC_MISS_COUNT_MASK               0xFFFFFFFF                // VEC_MISS_COUNT[31..0]
#define BN0_WF_MIB_TOP_RVSR0_VEC_MISS_COUNT_SHFT               0

/* =====================================================================================

  ---RVSR1 (0x820ed000 + 0x6D8)---

    VEC_DROP_COUNT[31..0]        - (RW) This counter is increased when a vector was dropped by vector queue overflow.
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RVSR1_VEC_DROP_COUNT_ADDR               BN0_WF_MIB_TOP_RVSR1_ADDR
#define BN0_WF_MIB_TOP_RVSR1_VEC_DROP_COUNT_MASK               0xFFFFFFFF                // VEC_DROP_COUNT[31..0]
#define BN0_WF_MIB_TOP_RVSR1_VEC_DROP_COUNT_SHFT               0

/* =====================================================================================

  ---TDRCR0 (0x820ed000 + 0x6DC)---

    TX_DDLMT_RNG0_COUNT[31..0]   - (RW) Separate reference time (in unit of us) to 5 ranges to count dummy delimiter insertion result
                                     range0: count = 0 ref. time
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TDRCR0_TX_DDLMT_RNG0_COUNT_ADDR         BN0_WF_MIB_TOP_TDRCR0_ADDR
#define BN0_WF_MIB_TOP_TDRCR0_TX_DDLMT_RNG0_COUNT_MASK         0xFFFFFFFF                // TX_DDLMT_RNG0_COUNT[31..0]
#define BN0_WF_MIB_TOP_TDRCR0_TX_DDLMT_RNG0_COUNT_SHFT         0

/* =====================================================================================

  ---TDRCR1 (0x820ed000 + 0x6E0)---

    TX_DDLMT_RNG1_COUNT[31..0]   - (RW) Separate reference time (in unit of us) to 5 ranges to count dummy delimiter insertion result
                                     range1: 0 < count < 1/4 ref. time
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TDRCR1_TX_DDLMT_RNG1_COUNT_ADDR         BN0_WF_MIB_TOP_TDRCR1_ADDR
#define BN0_WF_MIB_TOP_TDRCR1_TX_DDLMT_RNG1_COUNT_MASK         0xFFFFFFFF                // TX_DDLMT_RNG1_COUNT[31..0]
#define BN0_WF_MIB_TOP_TDRCR1_TX_DDLMT_RNG1_COUNT_SHFT         0

/* =====================================================================================

  ---TDRCR2 (0x820ed000 + 0x6E4)---

    TX_DDLMT_RNG2_COUNT[31..0]   - (RW) Separate reference time (in unit of us) to 5 ranges to count dummy delimiter insertion result
                                     range2: 1/4 <= count < 1/2 ref. time
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TDRCR2_TX_DDLMT_RNG2_COUNT_ADDR         BN0_WF_MIB_TOP_TDRCR2_ADDR
#define BN0_WF_MIB_TOP_TDRCR2_TX_DDLMT_RNG2_COUNT_MASK         0xFFFFFFFF                // TX_DDLMT_RNG2_COUNT[31..0]
#define BN0_WF_MIB_TOP_TDRCR2_TX_DDLMT_RNG2_COUNT_SHFT         0

/* =====================================================================================

  ---TDRCR3 (0x820ed000 + 0x6E8)---

    TX_DDLMT_RNG3_COUNT[31..0]   - (RW) Separate reference time (in unit of us) to 5 ranges to count dummy delimiter insertion result
                                     range3: 1/2 <= count < 3/4 ref. time
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TDRCR3_TX_DDLMT_RNG3_COUNT_ADDR         BN0_WF_MIB_TOP_TDRCR3_ADDR
#define BN0_WF_MIB_TOP_TDRCR3_TX_DDLMT_RNG3_COUNT_MASK         0xFFFFFFFF                // TX_DDLMT_RNG3_COUNT[31..0]
#define BN0_WF_MIB_TOP_TDRCR3_TX_DDLMT_RNG3_COUNT_SHFT         0

/* =====================================================================================

  ---TDRCR4 (0x820ed000 + 0x6EC)---

    TX_DDLMT_RNG4_COUNT[31..0]   - (RW) Separate reference time (in unit of us) to 5 ranges to count dummy delimiter insertion result
                                     range4: 3/4 <= count < 1 ref. time
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TDRCR4_TX_DDLMT_RNG4_COUNT_ADDR         BN0_WF_MIB_TOP_TDRCR4_ADDR
#define BN0_WF_MIB_TOP_TDRCR4_TX_DDLMT_RNG4_COUNT_MASK         0xFFFFFFFF                // TX_DDLMT_RNG4_COUNT[31..0]
#define BN0_WF_MIB_TOP_TDRCR4_TX_DDLMT_RNG4_COUNT_SHFT         0

/* =====================================================================================

  ---RUTCR (0x820ed000 + 0x6F0)---

    RU_TX_COUNTn[31..0]          - (RW) Per RU TX counter, this counter is increased when transmitting with HE_TB_MODE & BW <= 40MHz
                                     Total set = # of RU
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RUTCR_RU_TX_COUNTn_ADDR                 BN0_WF_MIB_TOP_RUTCR_ADDR
#define BN0_WF_MIB_TOP_RUTCR_RU_TX_COUNTn_MASK                 0xFFFFFFFF                // RU_TX_COUNTn[31..0]
#define BN0_WF_MIB_TOP_RUTCR_RU_TX_COUNTn_SHFT                 0

/* =====================================================================================

  ---BTSCR5 (0x820ed000 + 0x73C)---

    RTSTXCOUNTn[31..0]           - (RW) This counter is increased when RTS is successfully transmitted
                                     Total set = # of BSSID
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BTSCR5_RTSTXCOUNTn_ADDR                 BN0_WF_MIB_TOP_BTSCR5_ADDR
#define BN0_WF_MIB_TOP_BTSCR5_RTSTXCOUNTn_MASK                 0xFFFFFFFF                // RTSTXCOUNTn[31..0]
#define BN0_WF_MIB_TOP_BTSCR5_RTSTXCOUNTn_SHFT                 0

/* =====================================================================================

  ---BTSCR6 (0x820ed000 + 0x74C)---

    RTSRETRYCOUNTn[31..0]        - (RW) This counter is increased when a CTS is not received, or 2nd CTS is failed to receive in Dual CTS mode in response to an RTS.
                                     Total set = # of BSSID
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BTSCR6_RTSRETRYCOUNTn_ADDR              BN0_WF_MIB_TOP_BTSCR6_ADDR
#define BN0_WF_MIB_TOP_BTSCR6_RTSRETRYCOUNTn_MASK              0xFFFFFFFF                // RTSRETRYCOUNTn[31..0]
#define BN0_WF_MIB_TOP_BTSCR6_RTSRETRYCOUNTn_SHFT              0

/* =====================================================================================

  ---RSCR0 (0x820ed000 + 0x75C)---

    RX_FCS_OK_CNT[31..0]         - (RW) This counter is increased when receiving frame with FCS ok
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR0_RX_FCS_OK_CNT_ADDR                BN0_WF_MIB_TOP_RSCR0_ADDR
#define BN0_WF_MIB_TOP_RSCR0_RX_FCS_OK_CNT_MASK                0xFFFFFFFF                // RX_FCS_OK_CNT[31..0]
#define BN0_WF_MIB_TOP_RSCR0_RX_FCS_OK_CNT_SHFT                0

/* =====================================================================================

  ---RSCR1 (0x820ed000 + 0x760)---

    RX_FCS_ERROR_COUNT[31..0]    - (RW) This counter is increased when receiving frame with FCS error
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR1_RX_FCS_ERROR_COUNT_ADDR           BN0_WF_MIB_TOP_RSCR1_ADDR
#define BN0_WF_MIB_TOP_RSCR1_RX_FCS_ERROR_COUNT_MASK           0xFFFFFFFF                // RX_FCS_ERROR_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR1_RX_FCS_ERROR_COUNT_SHFT           0

/* =====================================================================================

  ---M0NSS1MCS0_0 (0x820ed000 + 0x764)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 1 and MCS =0

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS0_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS1MCS0_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS0_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS0_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS1MCS0_1 (0x820ed000 + 0x768)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 1 and MCS =0

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS0_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS1MCS0_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS0_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS0_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS1MCS1_0 (0x820ed000 + 0x76C)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 1 and MCS =1

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS1_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS1MCS1_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS1_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS1_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS1MCS1_1 (0x820ed000 + 0x770)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 1 and MCS =1

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS1_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS1MCS1_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS1_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS1_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS1MCS2_0 (0x820ed000 + 0x774)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 1 and MCS =2

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS2_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS1MCS2_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS2_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS2_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS1MCS2_1 (0x820ed000 + 0x778)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 1 and MCS =2

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS2_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS1MCS2_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS2_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS2_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS1MCS3_0 (0x820ed000 + 0x77C)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 1 and MCS =3

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS3_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS1MCS3_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS3_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS3_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS1MCS3_1 (0x820ed000 + 0x780)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 1 and MCS =3

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS3_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS1MCS3_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS3_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS3_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS1MCS4_0 (0x820ed000 + 0x784)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 1 and MCS =4

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS4_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS1MCS4_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS4_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS4_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS1MCS4_1 (0x820ed000 + 0x788)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 1 and MCS =4

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS4_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS1MCS4_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS4_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS4_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS1MCS5_0 (0x820ed000 + 0x78C)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 1 and MCS =5

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS5_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS1MCS5_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS5_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS5_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS1MCS5_1 (0x820ed000 + 0x790)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 1 and MCS =5

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS5_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS1MCS5_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS5_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS5_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS1MCS6_0 (0x820ed000 + 0x794)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 1 and MCS =6

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS6_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS1MCS6_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS6_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS6_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS1MCS6_1 (0x820ed000 + 0x798)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 1 and MCS =6

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS6_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS1MCS6_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS6_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS6_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS1MCS7_0 (0x820ed000 + 0x79C)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 1 and MCS =7

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS7_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS1MCS7_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS7_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS7_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS1MCS7_1 (0x820ed000 + 0x7A0)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 1 and MCS =7

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS7_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS1MCS7_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS7_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS7_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS1MCS8_0 (0x820ed000 + 0x7A4)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 1 and MCS =8

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS8_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS1MCS8_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS8_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS8_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS1MCS8_1 (0x820ed000 + 0x7A8)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 1 and MCS =8

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS8_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS1MCS8_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS8_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS8_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS1MCS9_0 (0x820ed000 + 0x7AC)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 1 and MCS =9

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS9_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS1MCS9_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS9_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS9_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS1MCS9_1 (0x820ed000 + 0x7B0)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 1 and MCS =9

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS1MCS9_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS1MCS9_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS1MCS9_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS1MCS9_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS2MCS0_0 (0x820ed000 + 0x7B4)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 2 and MCS =0

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS0_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS2MCS0_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS0_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS0_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS2MCS0_1 (0x820ed000 + 0x7B8)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 2 and MCS =0

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS0_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS2MCS0_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS0_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS0_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS2MCS1_0 (0x820ed000 + 0x7BC)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 2 and MCS =1

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS1_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS2MCS1_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS1_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS1_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS2MCS1_1 (0x820ed000 + 0x7C0)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 2 and MCS =1

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS1_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS2MCS1_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS1_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS1_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS2MCS2_0 (0x820ed000 + 0x7C4)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 2 and MCS =2

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS2_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS2MCS2_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS2_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS2_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS2MCS2_1 (0x820ed000 + 0x7C8)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 2 and MCS =2

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS2_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS2MCS2_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS2_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS2_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS2MCS3_0 (0x820ed000 + 0x7CC)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 2 and MCS =3

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS3_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS2MCS3_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS3_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS3_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS2MCS3_1 (0x820ed000 + 0x7D0)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 2 and MCS =3

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS3_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS2MCS3_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS3_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS3_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS2MCS4_0 (0x820ed000 + 0x7D4)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 2 and MCS =4

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS4_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS2MCS4_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS4_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS4_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS2MCS4_1 (0x820ed000 + 0x7D8)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 2 and MCS =4

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS4_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS2MCS4_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS4_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS4_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS2MCS5_0 (0x820ed000 + 0x7DC)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 2 and MCS =5

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS5_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS2MCS5_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS5_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS5_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS2MCS5_1 (0x820ed000 + 0x7E0)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 2 and MCS =5

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS5_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS2MCS5_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS5_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS5_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS2MCS6_0 (0x820ed000 + 0x7E4)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 2 and MCS =6

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS6_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS2MCS6_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS6_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS6_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS2MCS6_1 (0x820ed000 + 0x7E8)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 2 and MCS =6

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS6_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS2MCS6_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS6_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS6_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS2MCS7_0 (0x820ed000 + 0x7EC)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 2 and MCS =7

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS7_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS2MCS7_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS7_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS7_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS2MCS7_1 (0x820ed000 + 0x7F0)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 2 and MCS =7

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS7_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS2MCS7_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS7_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS7_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS2MCS8_0 (0x820ed000 + 0x7F4)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 2 and MCS =8

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS8_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS2MCS8_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS8_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS8_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS2MCS8_1 (0x820ed000 + 0x7F8)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 2 and MCS =8

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS8_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS2MCS8_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS8_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS8_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS2MCS9_0 (0x820ed000 + 0x7FC)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 2 and MCS =9

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS9_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS2MCS9_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS9_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS9_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS2MCS9_1 (0x820ed000 + 0x800)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 2 and MCS =9

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS2MCS9_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS2MCS9_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS2MCS9_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS2MCS9_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS3MCS0_0 (0x820ed000 + 0x804)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 3 and MCS =0

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS0_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS3MCS0_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS0_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS0_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS3MCS0_1 (0x820ed000 + 0x808)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 3 and MCS =0

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS0_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS3MCS0_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS0_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS0_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS3MCS1_0 (0x820ed000 + 0x80C)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 3 and MCS =1

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS1_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS3MCS1_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS1_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS1_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS3MCS1_1 (0x820ed000 + 0x810)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 3 and MCS =1

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS1_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS3MCS1_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS1_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS1_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS3MCS2_0 (0x820ed000 + 0x814)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 3 and MCS =2

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS2_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS3MCS2_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS2_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS2_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS3MCS2_1 (0x820ed000 + 0x818)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 3 and MCS =2

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS2_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS3MCS2_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS2_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS2_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS3MCS3_0 (0x820ed000 + 0x81C)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 3 and MCS =3

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS3_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS3MCS3_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS3_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS3_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS3MCS3_1 (0x820ed000 + 0x820)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 3 and MCS =3

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS3_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS3MCS3_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS3_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS3_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS3MCS4_0 (0x820ed000 + 0x824)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 3 and MCS =4

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS4_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS3MCS4_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS4_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS4_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS3MCS4_1 (0x820ed000 + 0x828)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 3 and MCS =4

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS4_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS3MCS4_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS4_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS4_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS3MCS5_0 (0x820ed000 + 0x82C)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 3 and MCS =5

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS5_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS3MCS5_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS5_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS5_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS3MCS5_1 (0x820ed000 + 0x830)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 3 and MCS =5

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS5_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS3MCS5_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS5_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS5_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS3MCS6_0 (0x820ed000 + 0x834)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 3 and MCS =6

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS6_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS3MCS6_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS6_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS6_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS3MCS6_1 (0x820ed000 + 0x838)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 3 and MCS =6

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS6_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS3MCS6_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS6_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS6_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS3MCS7_0 (0x820ed000 + 0x83C)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 3 and MCS =7

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS7_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS3MCS7_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS7_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS7_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS3MCS7_1 (0x820ed000 + 0x840)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 3 and MCS =7

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS7_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS3MCS7_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS7_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS7_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS3MCS8_0 (0x820ed000 + 0x844)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 3 and MCS =8

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS8_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS3MCS8_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS8_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS8_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS3MCS8_1 (0x820ed000 + 0x848)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 3 and MCS =8

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS8_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS3MCS8_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS8_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS8_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS3MCS9_0 (0x820ed000 + 0x84C)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 3 and MCS =9

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS9_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS3MCS9_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS9_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS9_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS3MCS9_1 (0x820ed000 + 0x850)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 3 and MCS =9

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS3MCS9_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS3MCS9_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS3MCS9_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS3MCS9_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS4MCS0_0 (0x820ed000 + 0x854)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 4 and MCS =0

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS0_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS4MCS0_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS0_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS0_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS4MCS0_1 (0x820ed000 + 0x858)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 4 and MCS =0

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS0_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS4MCS0_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS0_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS0_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS4MCS1_0 (0x820ed000 + 0x85C)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 4 and MCS =1

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS1_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS4MCS1_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS1_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS1_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS4MCS1_1 (0x820ed000 + 0x860)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 4 and MCS =1

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS1_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS4MCS1_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS1_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS1_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS4MCS2_0 (0x820ed000 + 0x864)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 4 and MCS =2

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS2_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS4MCS2_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS2_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS2_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS4MCS2_1 (0x820ed000 + 0x868)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 4 and MCS =2

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS2_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS4MCS2_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS2_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS2_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS4MCS3_0 (0x820ed000 + 0x86C)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 4 and MCS =3

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS3_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS4MCS3_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS3_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS3_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS4MCS3_1 (0x820ed000 + 0x870)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 4 and MCS =3

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS3_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS4MCS3_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS3_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS3_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS4MCS4_0 (0x820ed000 + 0x874)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 4 and MCS =4

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS4_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS4MCS4_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS4_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS4_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS4MCS4_1 (0x820ed000 + 0x878)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 4 and MCS =4

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS4_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS4MCS4_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS4_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS4_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS4MCS5_0 (0x820ed000 + 0x87C)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 4 and MCS =5

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS5_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS4MCS5_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS5_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS5_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS4MCS5_1 (0x820ed000 + 0x880)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 4 and MCS =5

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS5_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS4MCS5_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS5_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS5_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS4MCS6_0 (0x820ed000 + 0x884)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 4 and MCS =6

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS6_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS4MCS6_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS6_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS6_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS4MCS6_1 (0x820ed000 + 0x888)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 4 and MCS =6

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS6_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS4MCS6_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS6_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS6_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS4MCS7_0 (0x820ed000 + 0x88C)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 4 and MCS =7

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS7_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS4MCS7_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS7_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS7_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS4MCS7_1 (0x820ed000 + 0x890)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 4 and MCS =7

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS7_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS4MCS7_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS7_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS7_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS4MCS8_0 (0x820ed000 + 0x894)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 4 and MCS =8

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS8_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS4MCS8_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS8_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS8_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS4MCS8_1 (0x820ed000 + 0x898)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 4 and MCS =8

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS8_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS4MCS8_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS8_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS8_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---M0NSS4MCS9_0 (0x820ed000 + 0x89C)---

    FCS_OK_COUNT[31..0]          - (RW) This counter is increased when RX VHT MU with FCS OK and NSS = 4 and MCS =9

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS9_0_FCS_OK_COUNT_ADDR          BN0_WF_MIB_TOP_M0NSS4MCS9_0_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS9_0_FCS_OK_COUNT_MASK          0xFFFFFFFF                // FCS_OK_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS9_0_FCS_OK_COUNT_SHFT          0

/* =====================================================================================

  ---M0NSS4MCS9_1 (0x820ed000 + 0x8A0)---

    FCS_ERR_COUNT[31..0]         - (RW) This counter is increased when RX VHT MU with FCS ERROR and NSS = 4 and MCS =9

 =====================================================================================*/
#define BN0_WF_MIB_TOP_M0NSS4MCS9_1_FCS_ERR_COUNT_ADDR         BN0_WF_MIB_TOP_M0NSS4MCS9_1_ADDR
#define BN0_WF_MIB_TOP_M0NSS4MCS9_1_FCS_ERR_COUNT_MASK         0xFFFFFFFF                // FCS_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_M0NSS4MCS9_1_FCS_ERR_COUNT_SHFT         0

/* =====================================================================================

  ---RSCR2 (0x820ed000 + 0x8A4)---

    UC2ME_DATA_NSS_BSSID0_COUNT[31..0] - (RW) Uc2Me Data frame and over RMAC CR Nss Counter, Nss is selected by MIB.M0SCR2.MIB_UC2ME_DATA_NSS
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR2_UC2ME_DATA_NSS_BSSID0_COUNT_ADDR  BN0_WF_MIB_TOP_RSCR2_ADDR
#define BN0_WF_MIB_TOP_RSCR2_UC2ME_DATA_NSS_BSSID0_COUNT_MASK  0xFFFFFFFF                // UC2ME_DATA_NSS_BSSID0_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR2_UC2ME_DATA_NSS_BSSID0_COUNT_SHFT  0

/* =====================================================================================

  ---RSCR3 (0x820ed000 + 0x8A8)---

    UC2ME_DATA_NSS_BSSID1_COUNT[31..0] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR3_UC2ME_DATA_NSS_BSSID1_COUNT_ADDR  BN0_WF_MIB_TOP_RSCR3_ADDR
#define BN0_WF_MIB_TOP_RSCR3_UC2ME_DATA_NSS_BSSID1_COUNT_MASK  0xFFFFFFFF                // UC2ME_DATA_NSS_BSSID1_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR3_UC2ME_DATA_NSS_BSSID1_COUNT_SHFT  0

/* =====================================================================================

  ---RSCR4 (0x820ed000 + 0x8AC)---

    UC2ME_DATA_NSS_BSSID2_COUNT[31..0] - (RW) Uc2Me Data frame and over RMAC CR Nss Counter, Nss is selected by MIB.M0SCR2.MIB_UC2ME_DATA_NSS
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR4_UC2ME_DATA_NSS_BSSID2_COUNT_ADDR  BN0_WF_MIB_TOP_RSCR4_ADDR
#define BN0_WF_MIB_TOP_RSCR4_UC2ME_DATA_NSS_BSSID2_COUNT_MASK  0xFFFFFFFF                // UC2ME_DATA_NSS_BSSID2_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR4_UC2ME_DATA_NSS_BSSID2_COUNT_SHFT  0

/* =====================================================================================

  ---RSCR5 (0x820ed000 + 0x8B0)---

    UC2ME_DATA_NSS_BSSID3_COUNT[31..0] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR5_UC2ME_DATA_NSS_BSSID3_COUNT_ADDR  BN0_WF_MIB_TOP_RSCR5_ADDR
#define BN0_WF_MIB_TOP_RSCR5_UC2ME_DATA_NSS_BSSID3_COUNT_MASK  0xFFFFFFFF                // UC2ME_DATA_NSS_BSSID3_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR5_UC2ME_DATA_NSS_BSSID3_COUNT_SHFT  0

/* =====================================================================================

  ---RSCR6 (0x820ed000 + 0x8B4)---

    RX_DUP_DROP_BSSID0_COUNT[31..0] - (RW) RX Duplicate Drop count
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR6_RX_DUP_DROP_BSSID0_COUNT_ADDR     BN0_WF_MIB_TOP_RSCR6_ADDR
#define BN0_WF_MIB_TOP_RSCR6_RX_DUP_DROP_BSSID0_COUNT_MASK     0xFFFFFFFF                // RX_DUP_DROP_BSSID0_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR6_RX_DUP_DROP_BSSID0_COUNT_SHFT     0

/* =====================================================================================

  ---RSCR7 (0x820ed000 + 0x8B8)---

    RX_DUP_DROP_BSSID1_COUNT[31..0] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR7_RX_DUP_DROP_BSSID1_COUNT_ADDR     BN0_WF_MIB_TOP_RSCR7_ADDR
#define BN0_WF_MIB_TOP_RSCR7_RX_DUP_DROP_BSSID1_COUNT_MASK     0xFFFFFFFF                // RX_DUP_DROP_BSSID1_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR7_RX_DUP_DROP_BSSID1_COUNT_SHFT     0

/* =====================================================================================

  ---RSCR8 (0x820ed000 + 0x8BC)---

    RX_DUP_DROP_BSSID2_COUNT[31..0] - (RW) RX Duplicate Drop count
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR8_RX_DUP_DROP_BSSID2_COUNT_ADDR     BN0_WF_MIB_TOP_RSCR8_ADDR
#define BN0_WF_MIB_TOP_RSCR8_RX_DUP_DROP_BSSID2_COUNT_MASK     0xFFFFFFFF                // RX_DUP_DROP_BSSID2_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR8_RX_DUP_DROP_BSSID2_COUNT_SHFT     0

/* =====================================================================================

  ---RSCR9 (0x820ed000 + 0x8C0)---

    RX_DUP_DROP_BSSID3_COUNT[31..0] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR9_RX_DUP_DROP_BSSID3_COUNT_ADDR     BN0_WF_MIB_TOP_RSCR9_ADDR
#define BN0_WF_MIB_TOP_RSCR9_RX_DUP_DROP_BSSID3_COUNT_MASK     0xFFFFFFFF                // RX_DUP_DROP_BSSID3_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR9_RX_DUP_DROP_BSSID3_COUNT_SHFT     0

/* =====================================================================================

  ---RSCR10 (0x820ed000 + 0x8C4)---

    RX_PARTIAL_BCN_COUNT0[31..0] - (RW) This counter is increased when receiving partial beacon
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR10_RX_PARTIAL_BCN_COUNT0_ADDR       BN0_WF_MIB_TOP_RSCR10_ADDR
#define BN0_WF_MIB_TOP_RSCR10_RX_PARTIAL_BCN_COUNT0_MASK       0xFFFFFFFF                // RX_PARTIAL_BCN_COUNT0[31..0]
#define BN0_WF_MIB_TOP_RSCR10_RX_PARTIAL_BCN_COUNT0_SHFT       0

/* =====================================================================================

  ---RSCR11 (0x820ed000 + 0x8C8)---

    RX_PARTIAL_BCN_COUNT1[31..0] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR11_RX_PARTIAL_BCN_COUNT1_ADDR       BN0_WF_MIB_TOP_RSCR11_ADDR
#define BN0_WF_MIB_TOP_RSCR11_RX_PARTIAL_BCN_COUNT1_MASK       0xFFFFFFFF                // RX_PARTIAL_BCN_COUNT1[31..0]
#define BN0_WF_MIB_TOP_RSCR11_RX_PARTIAL_BCN_COUNT1_SHFT       0

/* =====================================================================================

  ---RSCR12 (0x820ed000 + 0x8CC)---

    RX_PARTIAL_BCN_COUNT2[31..0] - (RW) This counter is increased when receiving partial beacon
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR12_RX_PARTIAL_BCN_COUNT2_ADDR       BN0_WF_MIB_TOP_RSCR12_ADDR
#define BN0_WF_MIB_TOP_RSCR12_RX_PARTIAL_BCN_COUNT2_MASK       0xFFFFFFFF                // RX_PARTIAL_BCN_COUNT2[31..0]
#define BN0_WF_MIB_TOP_RSCR12_RX_PARTIAL_BCN_COUNT2_SHFT       0

/* =====================================================================================

  ---RSCR13 (0x820ed000 + 0x8D0)---

    RX_PARTIAL_BCN_COUNT3[31..0] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR13_RX_PARTIAL_BCN_COUNT3_ADDR       BN0_WF_MIB_TOP_RSCR13_ADDR
#define BN0_WF_MIB_TOP_RSCR13_RX_PARTIAL_BCN_COUNT3_MASK       0xFFFFFFFF                // RX_PARTIAL_BCN_COUNT3[31..0]
#define BN0_WF_MIB_TOP_RSCR13_RX_PARTIAL_BCN_COUNT3_SHFT       0

/* =====================================================================================

  ---RSCR14 (0x820ed000 + 0x8D4)---

    DTIM0_UPDATE_CHK_FAIL_COUNT[31..0] - (RW) This counter is increased when update DTIM check fail
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR14_DTIM0_UPDATE_CHK_FAIL_COUNT_ADDR BN0_WF_MIB_TOP_RSCR14_ADDR
#define BN0_WF_MIB_TOP_RSCR14_DTIM0_UPDATE_CHK_FAIL_COUNT_MASK 0xFFFFFFFF                // DTIM0_UPDATE_CHK_FAIL_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR14_DTIM0_UPDATE_CHK_FAIL_COUNT_SHFT 0

/* =====================================================================================

  ---RSCR15 (0x820ed000 + 0x8D8)---

    DTIM1_UPDATE_CHK_FAIL_COUNT[31..0] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR15_DTIM1_UPDATE_CHK_FAIL_COUNT_ADDR BN0_WF_MIB_TOP_RSCR15_ADDR
#define BN0_WF_MIB_TOP_RSCR15_DTIM1_UPDATE_CHK_FAIL_COUNT_MASK 0xFFFFFFFF                // DTIM1_UPDATE_CHK_FAIL_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR15_DTIM1_UPDATE_CHK_FAIL_COUNT_SHFT 0

/* =====================================================================================

  ---RSCR16 (0x820ed000 + 0x8DC)---

    DTIM2_UPDATE_CHK_FAIL_COUNT[31..0] - (RW) This counter is increased when update DTIM check fail
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR16_DTIM2_UPDATE_CHK_FAIL_COUNT_ADDR BN0_WF_MIB_TOP_RSCR16_ADDR
#define BN0_WF_MIB_TOP_RSCR16_DTIM2_UPDATE_CHK_FAIL_COUNT_MASK 0xFFFFFFFF                // DTIM2_UPDATE_CHK_FAIL_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR16_DTIM2_UPDATE_CHK_FAIL_COUNT_SHFT 0

/* =====================================================================================

  ---RSCR17 (0x820ed000 + 0x8E0)---

    DTIM3_UPDATE_CHK_FAIL_COUNT[31..0] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR17_DTIM3_UPDATE_CHK_FAIL_COUNT_ADDR BN0_WF_MIB_TOP_RSCR17_ADDR
#define BN0_WF_MIB_TOP_RSCR17_DTIM3_UPDATE_CHK_FAIL_COUNT_MASK 0xFFFFFFFF                // DTIM3_UPDATE_CHK_FAIL_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR17_DTIM3_UPDATE_CHK_FAIL_COUNT_SHFT 0

/* =====================================================================================

  ---RSCR18 (0x820ed000 + 0x8E4)---

    RX_TSF_UP_BSSID0_COUNT[31..0] - (RW) RX TSF Update count
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR18_RX_TSF_UP_BSSID0_COUNT_ADDR      BN0_WF_MIB_TOP_RSCR18_ADDR
#define BN0_WF_MIB_TOP_RSCR18_RX_TSF_UP_BSSID0_COUNT_MASK      0xFFFFFFFF                // RX_TSF_UP_BSSID0_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR18_RX_TSF_UP_BSSID0_COUNT_SHFT      0

/* =====================================================================================

  ---RSCR19 (0x820ed000 + 0x8E8)---

    RX_TSF_UP_BSSID1_COUNT[31..0] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR19_RX_TSF_UP_BSSID1_COUNT_ADDR      BN0_WF_MIB_TOP_RSCR19_ADDR
#define BN0_WF_MIB_TOP_RSCR19_RX_TSF_UP_BSSID1_COUNT_MASK      0xFFFFFFFF                // RX_TSF_UP_BSSID1_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR19_RX_TSF_UP_BSSID1_COUNT_SHFT      0

/* =====================================================================================

  ---RSCR20 (0x820ed000 + 0x8EC)---

    RX_TSF_UP_BSSID2_COUNT[31..0] - (RW) RX TSF Update count
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR20_RX_TSF_UP_BSSID2_COUNT_ADDR      BN0_WF_MIB_TOP_RSCR20_ADDR
#define BN0_WF_MIB_TOP_RSCR20_RX_TSF_UP_BSSID2_COUNT_MASK      0xFFFFFFFF                // RX_TSF_UP_BSSID2_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR20_RX_TSF_UP_BSSID2_COUNT_SHFT      0

/* =====================================================================================

  ---RSCR21 (0x820ed000 + 0x8F0)---

    RX_TSF_UP_BSSID3_COUNT[31..0] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR21_RX_TSF_UP_BSSID3_COUNT_ADDR      BN0_WF_MIB_TOP_RSCR21_ADDR
#define BN0_WF_MIB_TOP_RSCR21_RX_TSF_UP_BSSID3_COUNT_MASK      0xFFFFFFFF                // RX_TSF_UP_BSSID3_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR21_RX_TSF_UP_BSSID3_COUNT_SHFT      0

/* =====================================================================================

  ---RSCR22 (0x820ed000 + 0x8F4)---

    RX_BTIM_UP_BSSID0_COUNT[31..0] - (RW) RX BTIM TSF Update count
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR22_RX_BTIM_UP_BSSID0_COUNT_ADDR     BN0_WF_MIB_TOP_RSCR22_ADDR
#define BN0_WF_MIB_TOP_RSCR22_RX_BTIM_UP_BSSID0_COUNT_MASK     0xFFFFFFFF                // RX_BTIM_UP_BSSID0_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR22_RX_BTIM_UP_BSSID0_COUNT_SHFT     0

/* =====================================================================================

  ---RSCR23 (0x820ed000 + 0x8F8)---

    RX_BTIM_UP_BSSID1_COUNT[31..0] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR23_RX_BTIM_UP_BSSID1_COUNT_ADDR     BN0_WF_MIB_TOP_RSCR23_ADDR
#define BN0_WF_MIB_TOP_RSCR23_RX_BTIM_UP_BSSID1_COUNT_MASK     0xFFFFFFFF                // RX_BTIM_UP_BSSID1_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR23_RX_BTIM_UP_BSSID1_COUNT_SHFT     0

/* =====================================================================================

  ---RSCR24 (0x820ed000 + 0x8FC)---

    RX_BTIM_UP_BSSID2_COUNT[31..0] - (RW) RX BTIM TSF Update count
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR24_RX_BTIM_UP_BSSID2_COUNT_ADDR     BN0_WF_MIB_TOP_RSCR24_ADDR
#define BN0_WF_MIB_TOP_RSCR24_RX_BTIM_UP_BSSID2_COUNT_MASK     0xFFFFFFFF                // RX_BTIM_UP_BSSID2_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR24_RX_BTIM_UP_BSSID2_COUNT_SHFT     0

/* =====================================================================================

  ---RSCR25 (0x820ed000 + 0x900)---

    RX_BTIM_UP_BSSID3_COUNT[31..0] - (RW) same as the below register

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR25_RX_BTIM_UP_BSSID3_COUNT_ADDR     BN0_WF_MIB_TOP_RSCR25_ADDR
#define BN0_WF_MIB_TOP_RSCR25_RX_BTIM_UP_BSSID3_COUNT_MASK     0xFFFFFFFF                // RX_BTIM_UP_BSSID3_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR25_RX_BTIM_UP_BSSID3_COUNT_SHFT     0

/* =====================================================================================

  ---RSCR26 (0x820ed000 + 0x904)---

    RX_MDRDY_COUNT[31..0]        - (RW) This counter is increased for each MDRDY rising edge occurs.
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR26_RX_MDRDY_COUNT_ADDR              BN0_WF_MIB_TOP_RSCR26_ADDR
#define BN0_WF_MIB_TOP_RSCR26_RX_MDRDY_COUNT_MASK              0xFFFFFFFF                // RX_MDRDY_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR26_RX_MDRDY_COUNT_SHFT              0

/* =====================================================================================

  ---RSCR27 (0x820ed000 + 0x908)---

    RX_AMPDU_COUNT[31..0]        - (RW) This counter is increased when receiving a A-MPDU with a unicast to me address
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR27_RX_AMPDU_COUNT_ADDR              BN0_WF_MIB_TOP_RSCR27_ADDR
#define BN0_WF_MIB_TOP_RSCR27_RX_AMPDU_COUNT_MASK              0xFFFFFFFF                // RX_AMPDU_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR27_RX_AMPDU_COUNT_SHFT              0

/* =====================================================================================

  ---RSCR28 (0x820ed000 + 0x90C)---

    RX_TOTBYTE_COUNT[31..0]      - (RW) This counter counts PPDU length when receiving a A-MPDU with a unicast to me address
                                     (unit : byte)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR28_RX_TOTBYTE_COUNT_ADDR            BN0_WF_MIB_TOP_RSCR28_ADDR
#define BN0_WF_MIB_TOP_RSCR28_RX_TOTBYTE_COUNT_MASK            0xFFFFFFFF                // RX_TOTBYTE_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR28_RX_TOTBYTE_COUNT_SHFT            0

/* =====================================================================================

  ---RSCR29 (0x820ed000 + 0x910)---

    RX_VALIDSF_COUNT[31..0]      - (RW) This counter is increased for each MPDU in A-MPDU sub frame when receiving a A-MPDU with a unicast to me address
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR29_RX_VALIDSF_COUNT_ADDR            BN0_WF_MIB_TOP_RSCR29_ADDR
#define BN0_WF_MIB_TOP_RSCR29_RX_VALIDSF_COUNT_MASK            0xFFFFFFFF                // RX_VALIDSF_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR29_RX_VALIDSF_COUNT_SHFT            0

/* =====================================================================================

  ---RSCR30 (0x820ed000 + 0x914)---

    RX_VALIDBYTE_COUNT[31..0]    - (RW) This counter counts all MPDU length in A-MPDU sub frame when receiving a A-MPDU with a unicast to me address
                                     (unit : byte)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR30_RX_VALIDBYTE_COUNT_ADDR          BN0_WF_MIB_TOP_RSCR30_ADDR
#define BN0_WF_MIB_TOP_RSCR30_RX_VALIDBYTE_COUNT_MASK          0xFFFFFFFF                // RX_VALIDBYTE_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR30_RX_VALIDBYTE_COUNT_SHFT          0

/* =====================================================================================

  ---RSCR31 (0x820ed000 + 0x918)---

    RX_MPDU_COUNT[31..0]         - (RW) This counter is increased for each successfully received MPDU and passed the RX filter.
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR31_RX_MPDU_COUNT_ADDR               BN0_WF_MIB_TOP_RSCR31_ADDR
#define BN0_WF_MIB_TOP_RSCR31_RX_MPDU_COUNT_MASK               0xFFFFFFFF                // RX_MPDU_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR31_RX_MPDU_COUNT_SHFT               0

/* =====================================================================================

  ---RSCR32 (0x820ed000 + 0x91C)---

    RX_NON_NO_DATA_COUNT[31..0]  - (RW) For dynamic silence window function used. To increase need to meet second RxV is received completely, and rmac_dsw_rx_data is asserted (refer to DSW SRS).
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR32_RX_NON_NO_DATA_COUNT_ADDR        BN0_WF_MIB_TOP_RSCR32_ADDR
#define BN0_WF_MIB_TOP_RSCR32_RX_NON_NO_DATA_COUNT_MASK        0xFFFFFFFF                // RX_NON_NO_DATA_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR32_RX_NON_NO_DATA_COUNT_SHFT        0

/* =====================================================================================

  ---RSCR33 (0x820ed000 + 0x920)---

    RX_FIFO_FULL_COUNT[31..0]    - (RW) Counter of the number of the packets which pass RX filter but is dropped due to FIFO full.
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR33_RX_FIFO_FULL_COUNT_ADDR          BN0_WF_MIB_TOP_RSCR33_ADDR
#define BN0_WF_MIB_TOP_RSCR33_RX_FIFO_FULL_COUNT_MASK          0xFFFFFFFF                // RX_FIFO_FULL_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR33_RX_FIFO_FULL_COUNT_SHFT          0

/* =====================================================================================

  ---RSCR34 (0x820ed000 + 0x924)---

    RX_OUT_OF_RANGE_COUNT[31..0] - (RW) 1. a MPDU passed RX filter and encounter its PPDU length > PPDU max threshold (RMAC.CR.MAXMIN_LEN) or
                                     2. a MPDU passed RX filter and encounter its PPDU length < PPDU min threshold (RMAC.CR.MAXMIN_LEN) and not a NDP
                                     3. a MPDU passed RX filter and encounter its MPDU length > MPDU max threshold (RMAC.CR.MISC)
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR34_RX_OUT_OF_RANGE_COUNT_ADDR       BN0_WF_MIB_TOP_RSCR34_ADDR
#define BN0_WF_MIB_TOP_RSCR34_RX_OUT_OF_RANGE_COUNT_MASK       0xFFFFFFFF                // RX_OUT_OF_RANGE_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR34_RX_OUT_OF_RANGE_COUNT_SHFT       0

/* =====================================================================================

  ---RSCR35 (0x820ed000 + 0x928)---

    DELIMITER_FAIL_COUNT[31..0]  - (RW) This counter is increased when an A-MPDU delimiter has CRC error when this is the first CRC error in the received A-MPDU or when the previous delimiter has been decoded correctly.
                                     (unit : delimiter)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR35_DELIMITER_FAIL_COUNT_ADDR        BN0_WF_MIB_TOP_RSCR35_ADDR
#define BN0_WF_MIB_TOP_RSCR35_DELIMITER_FAIL_COUNT_MASK        0xFFFFFFFF                // DELIMITER_FAIL_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR35_DELIMITER_FAIL_COUNT_SHFT        0

/* =====================================================================================

  ---RSCR36 (0x820ed000 + 0x92C)---

    RX_LEN_MISMATCH[31..0]       - (RW) This counter is increased when PHY/MAC RX length mismatch condition occurs
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR36_RX_LEN_MISMATCH_ADDR             BN0_WF_MIB_TOP_RSCR36_ADDR
#define BN0_WF_MIB_TOP_RSCR36_RX_LEN_MISMATCH_MASK             0xFFFFFFFF                // RX_LEN_MISMATCH[31..0]
#define BN0_WF_MIB_TOP_RSCR36_RX_LEN_MISMATCH_SHFT             0

/* =====================================================================================

  ---RSCR37 (0x820ed000 + 0x930)---

    PHY_MIB_COUNT0[31..0]        - (RW) This counter is increased when PHY MIB counter0 indicated +1
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR37_PHY_MIB_COUNT0_ADDR              BN0_WF_MIB_TOP_RSCR37_ADDR
#define BN0_WF_MIB_TOP_RSCR37_PHY_MIB_COUNT0_MASK              0xFFFFFFFF                // PHY_MIB_COUNT0[31..0]
#define BN0_WF_MIB_TOP_RSCR37_PHY_MIB_COUNT0_SHFT              0

/* =====================================================================================

  ---RSCR39 (0x820ed000 + 0x934)---

    RX_A1_SEARCH_COUNT[31..0]    - (RW) This counter is increased when MPDU tiggers the event of RX search on A1 address
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR39_RX_A1_SEARCH_COUNT_ADDR          BN0_WF_MIB_TOP_RSCR39_ADDR
#define BN0_WF_MIB_TOP_RSCR39_RX_A1_SEARCH_COUNT_MASK          0xFFFFFFFF                // RX_A1_SEARCH_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR39_RX_A1_SEARCH_COUNT_SHFT          0

/* =====================================================================================

  ---RSCR40 (0x820ed000 + 0x938)---

    RX_DROP_MPDU_COUNT[31..0]    - (RW) This counter is increased when MPDU is dropped by RX filter or other RX error, it does not include the MPDUs dropped by PPDU error
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR40_RX_DROP_MPDU_COUNT_ADDR          BN0_WF_MIB_TOP_RSCR40_ADDR
#define BN0_WF_MIB_TOP_RSCR40_RX_DROP_MPDU_COUNT_MASK          0xFFFFFFFF                // RX_DROP_MPDU_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR40_RX_DROP_MPDU_COUNT_SHFT          0

/* =====================================================================================

  ---RSCR41 (0x820ed000 + 0x93C)---

    RX_UNWANTED_COUNT[31..0]     - (RW) This counter is increased when MPDU is labeled as a un-wanted MPDU and dropped by DMA
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR41_RX_UNWANTED_COUNT_ADDR           BN0_WF_MIB_TOP_RSCR41_ADDR
#define BN0_WF_MIB_TOP_RSCR41_RX_UNWANTED_COUNT_MASK           0xFFFFFFFF                // RX_UNWANTED_COUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR41_RX_UNWANTED_COUNT_SHFT           0

/* =====================================================================================

  ---SRVCR0 (0x820ed000 + 0x940)---

    NONSRG_VLD_COUNT[31..0]      - (RW) PPDU hits NONSRG condition in SR and RCPI satisfies the SR threshold
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_SRVCR0_NONSRG_VLD_COUNT_ADDR            BN0_WF_MIB_TOP_SRVCR0_ADDR
#define BN0_WF_MIB_TOP_SRVCR0_NONSRG_VLD_COUNT_MASK            0xFFFFFFFF                // NONSRG_VLD_COUNT[31..0]
#define BN0_WF_MIB_TOP_SRVCR0_NONSRG_VLD_COUNT_SHFT            0

/* =====================================================================================

  ---SRVCR1 (0x820ed000 + 0x944)---

    SRG_VLD_COUNT[31..0]         - (RW) PPDU hits SRG condition in SR and RCPI satisfies the SR threshold
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_SRVCR1_SRG_VLD_COUNT_ADDR               BN0_WF_MIB_TOP_SRVCR1_ADDR
#define BN0_WF_MIB_TOP_SRVCR1_SRG_VLD_COUNT_MASK               0xFFFFFFFF                // SRG_VLD_COUNT[31..0]
#define BN0_WF_MIB_TOP_SRVCR1_SRG_VLD_COUNT_SHFT               0

/* =====================================================================================

  ---SRCPVCR0 (0x820ed000 + 0x948)---

    NONSRG_PPDUVLD_COUNT[31..0]  - (RW) PPDU hits NONSRG condition in SR and RCPI do NOT satisfy the SR threshold
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_SRCPVCR0_NONSRG_PPDUVLD_COUNT_ADDR      BN0_WF_MIB_TOP_SRCPVCR0_ADDR
#define BN0_WF_MIB_TOP_SRCPVCR0_NONSRG_PPDUVLD_COUNT_MASK      0xFFFFFFFF                // NONSRG_PPDUVLD_COUNT[31..0]
#define BN0_WF_MIB_TOP_SRCPVCR0_NONSRG_PPDUVLD_COUNT_SHFT      0

/* =====================================================================================

  ---SRCPVCR1 (0x820ed000 + 0x94C)---

    SRG_PPDUVLD_COUNT[31..0]     - (RW) PPDU hits SRG condition in SR and RCPI do NOT satisfy the SR threshold
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_SRCPVCR1_SRG_PPDUVLD_COUNT_ADDR         BN0_WF_MIB_TOP_SRCPVCR1_ADDR
#define BN0_WF_MIB_TOP_SRCPVCR1_SRG_PPDUVLD_COUNT_MASK         0xFFFFFFFF                // SRG_PPDUVLD_COUNT[31..0]
#define BN0_WF_MIB_TOP_SRCPVCR1_SRG_PPDUVLD_COUNT_SHFT         0

/* =====================================================================================

  ---SRTRCR (0x820ed000 + 0x950)---

    SRT_R_COUNT[31..0]           - (RW) SR RCPI table full replace count
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_SRTRCR_SRT_R_COUNT_ADDR                 BN0_WF_MIB_TOP_SRTRCR_ADDR
#define BN0_WF_MIB_TOP_SRTRCR_SRT_R_COUNT_MASK                 0xFFFFFFFF                // SRT_R_COUNT[31..0]
#define BN0_WF_MIB_TOP_SRTRCR_SRT_R_COUNT_SHFT                 0

/* =====================================================================================

  ---OPCR0 (0x820ed000 + 0x954)---

    INTRABSS_PPDU_COUNT[31..0]   - (RW) Intra PPDU counter
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_OPCR0_INTRABSS_PPDU_COUNT_ADDR          BN0_WF_MIB_TOP_OPCR0_ADDR
#define BN0_WF_MIB_TOP_OPCR0_INTRABSS_PPDU_COUNT_MASK          0xFFFFFFFF                // INTRABSS_PPDU_COUNT[31..0]
#define BN0_WF_MIB_TOP_OPCR0_INTRABSS_PPDU_COUNT_SHFT          0

/* =====================================================================================

  ---OPCR1 (0x820ed000 + 0x958)---

    INTERBSS_PPDU_COUNT[31..0]   - (RW) Inter PPDU counter
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_OPCR1_INTERBSS_PPDU_COUNT_ADDR          BN0_WF_MIB_TOP_OPCR1_ADDR
#define BN0_WF_MIB_TOP_OPCR1_INTERBSS_PPDU_COUNT_MASK          0xFFFFFFFF                // INTERBSS_PPDU_COUNT[31..0]
#define BN0_WF_MIB_TOP_OPCR1_INTERBSS_PPDU_COUNT_SHFT          0

/* =====================================================================================

  ---BSCR0 (0x820ed000 + 0x95C)---

    EBF_TX_COUNT[31..0]          - (RW) TX Explicit Beamforming Apply Counter
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSCR0_EBF_TX_COUNT_ADDR                 BN0_WF_MIB_TOP_BSCR0_ADDR
#define BN0_WF_MIB_TOP_BSCR0_EBF_TX_COUNT_MASK                 0xFFFFFFFF                // EBF_TX_COUNT[31..0]
#define BN0_WF_MIB_TOP_BSCR0_EBF_TX_COUNT_SHFT                 0

/* =====================================================================================

  ---BSCR1 (0x820ed000 + 0x960)---

    IBF_TX_COUNT[31..0]          - (RW) TX Implicit Beamforming Apply Counter
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSCR1_IBF_TX_COUNT_ADDR                 BN0_WF_MIB_TOP_BSCR1_ADDR
#define BN0_WF_MIB_TOP_BSCR1_IBF_TX_COUNT_MASK                 0xFFFFFFFF                // IBF_TX_COUNT[31..0]
#define BN0_WF_MIB_TOP_BSCR1_IBF_TX_COUNT_SHFT                 0

/* =====================================================================================

  ---BSCR3 (0x820ed000 + 0x968)---

    RX_BF_HTFBK_COUNT[31..0]     - (RW) BFer RX Feedback Statistic Counter0 (RX HT BRP count)
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSCR3_RX_BF_HTFBK_COUNT_ADDR            BN0_WF_MIB_TOP_BSCR3_ADDR
#define BN0_WF_MIB_TOP_BSCR3_RX_BF_HTFBK_COUNT_MASK            0xFFFFFFFF                // RX_BF_HTFBK_COUNT[31..0]
#define BN0_WF_MIB_TOP_BSCR3_RX_BF_HTFBK_COUNT_SHFT            0

/* =====================================================================================

  ---BSCR4 (0x820ed000 + 0x96C)---

    RX_BF_VHTFBK_COUNT[31..0]    - (RW) BFer RX Feedback Statistic Counter1 (RX VHT BRP count)
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSCR4_RX_BF_VHTFBK_COUNT_ADDR           BN0_WF_MIB_TOP_BSCR4_ADDR
#define BN0_WF_MIB_TOP_BSCR4_RX_BF_VHTFBK_COUNT_MASK           0xFFFFFFFF                // RX_BF_VHTFBK_COUNT[31..0]
#define BN0_WF_MIB_TOP_BSCR4_RX_BF_VHTFBK_COUNT_SHFT           0

/* =====================================================================================

  ---BSCR5 (0x820ed000 + 0x970)---

    RX_BF_HEFBK_COUNT[31..0]     - (RW) BFer RX Feedback Statistic Counter2 (RX HE BRP count)
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSCR5_RX_BF_HEFBK_COUNT_ADDR            BN0_WF_MIB_TOP_BSCR5_ADDR
#define BN0_WF_MIB_TOP_BSCR5_RX_BF_HEFBK_COUNT_MASK            0xFFFFFFFF                // RX_BF_HEFBK_COUNT[31..0]
#define BN0_WF_MIB_TOP_BSCR5_RX_BF_HEFBK_COUNT_SHFT            0

/* =====================================================================================

  ---BSCR6 (0x820ed000 + 0x974)---

    RX_BF_EHTFBK_COUNT[31..0]    - (RW) BFer RX Feedback Statistic Counter2 (RX EHT BRP count)
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSCR6_RX_BF_EHTFBK_COUNT_ADDR           BN0_WF_MIB_TOP_BSCR6_ADDR
#define BN0_WF_MIB_TOP_BSCR6_RX_BF_EHTFBK_COUNT_MASK           0xFFFFFFFF                // RX_BF_EHTFBK_COUNT[31..0]
#define BN0_WF_MIB_TOP_BSCR6_RX_BF_EHTFBK_COUNT_SHFT           0

/* =====================================================================================

  ---BSCR7 (0x820ed000 + 0x978)---

    BFEE_TXFBK_TRI[31..0]        - (RW) Number of TxBF feedback triggered (NDPA Count)
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSCR7_BFEE_TXFBK_TRI_ADDR               BN0_WF_MIB_TOP_BSCR7_ADDR
#define BN0_WF_MIB_TOP_BSCR7_BFEE_TXFBK_TRI_MASK               0xFFFFFFFF                // BFEE_TXFBK_TRI[31..0]
#define BN0_WF_MIB_TOP_BSCR7_BFEE_TXFBK_TRI_SHFT               0

/* =====================================================================================

  ---BSCR8 (0x820ed000 + 0x97C)---

    BFEE_TXFBK_BFPOLL_TRI[31..0] - (RW) Number of HE TriggerFrame RBP packet received.
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSCR8_BFEE_TXFBK_BFPOLL_TRI_ADDR        BN0_WF_MIB_TOP_BSCR8_ADDR
#define BN0_WF_MIB_TOP_BSCR8_BFEE_TXFBK_BFPOLL_TRI_MASK        0xFFFFFFFF                // BFEE_TXFBK_BFPOLL_TRI[31..0]
#define BN0_WF_MIB_TOP_BSCR8_BFEE_TXFBK_BFPOLL_TRI_SHFT        0

/* =====================================================================================

  ---BSCR9 (0x820ed000 + 0x980)---

    BFEE_RX_NDP_COUNT[31..0]     - (RW) Number of NDP packet received.
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSCR9_BFEE_RX_NDP_COUNT_ADDR            BN0_WF_MIB_TOP_BSCR9_ADDR
#define BN0_WF_MIB_TOP_BSCR9_BFEE_RX_NDP_COUNT_MASK            0xFFFFFFFF                // BFEE_RX_NDP_COUNT[31..0]
#define BN0_WF_MIB_TOP_BSCR9_BFEE_RX_NDP_COUNT_SHFT            0

/* =====================================================================================

  ---BSCR10 (0x820ed000 + 0x984)---

    BFEE_RX_FBKCQI_COUNT[31..0]  - (RW) Number of TxBF feedback CQI Report count
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSCR10_BFEE_RX_FBKCQI_COUNT_ADDR        BN0_WF_MIB_TOP_BSCR10_ADDR
#define BN0_WF_MIB_TOP_BSCR10_BFEE_RX_FBKCQI_COUNT_MASK        0xFFFFFFFF                // BFEE_RX_FBKCQI_COUNT[31..0]
#define BN0_WF_MIB_TOP_BSCR10_BFEE_RX_FBKCQI_COUNT_SHFT        0

/* =====================================================================================

  ---BSCR11 (0x820ed000 + 0x988)---

    RX_BF_EBF_UPT_COUNT[31..0]   - (RW) BFer RX Feedback Statistic Counter5
                                     Display received number of FBK frame from BFee MAC configured in RXBF_MAC_ADDR5.
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSCR11_RX_BF_EBF_UPT_COUNT_ADDR         BN0_WF_MIB_TOP_BSCR11_ADDR
#define BN0_WF_MIB_TOP_BSCR11_RX_BF_EBF_UPT_COUNT_MASK         0xFFFFFFFF                // RX_BF_EBF_UPT_COUNT[31..0]
#define BN0_WF_MIB_TOP_BSCR11_RX_BF_EBF_UPT_COUNT_SHFT         0

/* =====================================================================================

  ---BSCR12 (0x820ed000 + 0x98C)---

    RX_BF_IBF_UPT_COUNT[31..0]   - (RW) BFer RX Feedback Statistic Counter4
                                     Display received number of FBK frame from BFee MAC configured in RXBF_MAC_ADDR4.
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSCR12_RX_BF_IBF_UPT_COUNT_ADDR         BN0_WF_MIB_TOP_BSCR12_ADDR
#define BN0_WF_MIB_TOP_BSCR12_RX_BF_IBF_UPT_COUNT_MASK         0xFFFFFFFF                // RX_BF_IBF_UPT_COUNT[31..0]
#define BN0_WF_MIB_TOP_BSCR12_RX_BF_IBF_UPT_COUNT_SHFT         0

/* =====================================================================================

  ---BSCR13 (0x820ed000 + 0x990)---

    BFEE_TB_LEN_ERR_COUNT[31..0] - (RW) Number of HE TxBF feedback TF length check error count
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSCR13_BFEE_TB_LEN_ERR_COUNT_ADDR       BN0_WF_MIB_TOP_BSCR13_ADDR
#define BN0_WF_MIB_TOP_BSCR13_BFEE_TB_LEN_ERR_COUNT_MASK       0xFFFFFFFF                // BFEE_TB_LEN_ERR_COUNT[31..0]
#define BN0_WF_MIB_TOP_BSCR13_BFEE_TB_LEN_ERR_COUNT_SHFT       0

/* =====================================================================================

  ---BSCR14 (0x820ed000 + 0x994)---

    BFEE_SP_ABORT_COUNT[31..0]   - (RW) Number of TxBF feedback aborted due to exceptional case
                                     (1. A2 compare fail; 2. FBK invalid; 3. RXNDP TO; 4. BBRDY TO; 5. WTBL invalid)
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSCR14_BFEE_SP_ABORT_COUNT_ADDR         BN0_WF_MIB_TOP_BSCR14_ADDR
#define BN0_WF_MIB_TOP_BSCR14_BFEE_SP_ABORT_COUNT_MASK         0xFFFFFFFF                // BFEE_SP_ABORT_COUNT[31..0]
#define BN0_WF_MIB_TOP_BSCR14_BFEE_SP_ABORT_COUNT_SHFT         0

/* =====================================================================================

  ---BSCR15 (0x820ed000 + 0x998)---

    BFEE_TMAC_ABORT_COUNT[31..0] - (RW) Number of TxBF feedback aborted due to TMAC Abort
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSCR15_BFEE_TMAC_ABORT_COUNT_ADDR       BN0_WF_MIB_TOP_BSCR15_ADDR
#define BN0_WF_MIB_TOP_BSCR15_BFEE_TMAC_ABORT_COUNT_MASK       0xFFFFFFFF                // BFEE_TMAC_ABORT_COUNT[31..0]
#define BN0_WF_MIB_TOP_BSCR15_BFEE_TMAC_ABORT_COUNT_SHFT       0

/* =====================================================================================

  ---BSCR16 (0x820ed000 + 0x99C)---

    BFEE_TXFBK_MUTE[31..0]       - (RW) Number of TxBF feedback aborted due to WTBL response control.
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSCR16_BFEE_TXFBK_MUTE_ADDR             BN0_WF_MIB_TOP_BSCR16_ADDR
#define BN0_WF_MIB_TOP_BSCR16_BFEE_TXFBK_MUTE_MASK             0xFFFFFFFF                // BFEE_TXFBK_MUTE[31..0]
#define BN0_WF_MIB_TOP_BSCR16_BFEE_TXFBK_MUTE_SHFT             0

/* =====================================================================================

  ---BSCR17 (0x820ed000 + 0x9A0)---

    BFEE_TXFBK_CPL[31..0]        - (RW) Number of successful TxBF feedback frame transmitted (TX Feedback Report Count)
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSCR17_BFEE_TXFBK_CPL_ADDR              BN0_WF_MIB_TOP_BSCR17_ADDR
#define BN0_WF_MIB_TOP_BSCR17_BFEE_TXFBK_CPL_MASK              0xFFFFFFFF                // BFEE_TXFBK_CPL[31..0]
#define BN0_WF_MIB_TOP_BSCR17_BFEE_TXFBK_CPL_SHFT              0

/* =====================================================================================

  ---BSCR18 (0x820ed000 + 0x9A4)---

    BFEE_COANT_BLKTX_COUNT[31..0] - (RW) Co-ANT BFEE Block TX counter
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSCR18_BFEE_COANT_BLKTX_COUNT_ADDR      BN0_WF_MIB_TOP_BSCR18_ADDR
#define BN0_WF_MIB_TOP_BSCR18_BFEE_COANT_BLKTX_COUNT_MASK      0xFFFFFFFF                // BFEE_COANT_BLKTX_COUNT[31..0]
#define BN0_WF_MIB_TOP_BSCR18_BFEE_COANT_BLKTX_COUNT_SHFT      0

/* =====================================================================================

  ---BSCR19 (0x820ed000 + 0x9A8)---

    BFEE_FBK_SEG_COUNT[31..0]    - (RW) Number of TxBF feedback segment report count
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_BSCR19_BFEE_FBK_SEG_COUNT_ADDR          BN0_WF_MIB_TOP_BSCR19_ADDR
#define BN0_WF_MIB_TOP_BSCR19_BFEE_FBK_SEG_COUNT_MASK          0xFFFFFFFF                // BFEE_FBK_SEG_COUNT[31..0]
#define BN0_WF_MIB_TOP_BSCR19_BFEE_FBK_SEG_COUNT_SHFT          0

/* =====================================================================================

  ---TSCR18 (0x820ed000 + 0x9AC)---

    BEACONTXCOUNT[31..0]         - (RW) This counter is increased for a beacon transmitted successfully.
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TSCR18_BEACONTXCOUNT_ADDR               BN0_WF_MIB_TOP_TSCR18_ADDR
#define BN0_WF_MIB_TOP_TSCR18_BEACONTXCOUNT_MASK               0xFFFFFFFF                // BEACONTXCOUNT[31..0]
#define BN0_WF_MIB_TOP_TSCR18_BEACONTXCOUNT_SHFT               0

/* =====================================================================================

  ---RSCR38 (0x820ed000 + 0x9B0)---

    BEACONRXCOUNT[31..0]         - (RW) This counter is increased for a beacon received successfully.
                                     (unit : MPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_RSCR38_BEACONRXCOUNT_ADDR               BN0_WF_MIB_TOP_RSCR38_ADDR
#define BN0_WF_MIB_TOP_RSCR38_BEACONRXCOUNT_MASK               0xFFFFFFFF                // BEACONRXCOUNT[31..0]
#define BN0_WF_MIB_TOP_RSCR38_BEACONRXCOUNT_SHFT               0

/* =====================================================================================

  ---TRDR0 (0x820ed000 + 0x9B4)---

    TRX_AGG_RANGE0_CNT[31..0]    - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 0(MIB.M0ARNGn.AGG_RANGE_SEL_0) of CR setting
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TRDR0_TRX_AGG_RANGE0_CNT_ADDR           BN0_WF_MIB_TOP_TRDR0_ADDR
#define BN0_WF_MIB_TOP_TRDR0_TRX_AGG_RANGE0_CNT_MASK           0xFFFFFFFF                // TRX_AGG_RANGE0_CNT[31..0]
#define BN0_WF_MIB_TOP_TRDR0_TRX_AGG_RANGE0_CNT_SHFT           0

/* =====================================================================================

  ---TRDR1 (0x820ed000 + 0x9B8)---

    TRX_AGG_RANGE1_CNT[31..0]    - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 1(MIB.M0ARNGn.AGG_RANGE_SEL_1) of CR setting
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TRDR1_TRX_AGG_RANGE1_CNT_ADDR           BN0_WF_MIB_TOP_TRDR1_ADDR
#define BN0_WF_MIB_TOP_TRDR1_TRX_AGG_RANGE1_CNT_MASK           0xFFFFFFFF                // TRX_AGG_RANGE1_CNT[31..0]
#define BN0_WF_MIB_TOP_TRDR1_TRX_AGG_RANGE1_CNT_SHFT           0

/* =====================================================================================

  ---TRDR2 (0x820ed000 + 0x9BC)---

    TRX_AGG_RANGE2_CNT[31..0]    - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 2(MIB.M0ARNGn.AGG_RANGE_SEL_2) of CR setting
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TRDR2_TRX_AGG_RANGE2_CNT_ADDR           BN0_WF_MIB_TOP_TRDR2_ADDR
#define BN0_WF_MIB_TOP_TRDR2_TRX_AGG_RANGE2_CNT_MASK           0xFFFFFFFF                // TRX_AGG_RANGE2_CNT[31..0]
#define BN0_WF_MIB_TOP_TRDR2_TRX_AGG_RANGE2_CNT_SHFT           0

/* =====================================================================================

  ---TRDR3 (0x820ed000 + 0x9C0)---

    TRX_AGG_RANGE3_CNT[31..0]    - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 3(MIB.M0ARNGn.AGG_RANGE_SEL_3) of CR setting
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TRDR3_TRX_AGG_RANGE3_CNT_ADDR           BN0_WF_MIB_TOP_TRDR3_ADDR
#define BN0_WF_MIB_TOP_TRDR3_TRX_AGG_RANGE3_CNT_MASK           0xFFFFFFFF                // TRX_AGG_RANGE3_CNT[31..0]
#define BN0_WF_MIB_TOP_TRDR3_TRX_AGG_RANGE3_CNT_SHFT           0

/* =====================================================================================

  ---TRDR4 (0x820ed000 + 0x9C4)---

    TRX_AGG_RANGE4_CNT[31..0]    - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 4(MIB.M0ARNGn.AGG_RANGE_SEL_4) of CR setting
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TRDR4_TRX_AGG_RANGE4_CNT_ADDR           BN0_WF_MIB_TOP_TRDR4_ADDR
#define BN0_WF_MIB_TOP_TRDR4_TRX_AGG_RANGE4_CNT_MASK           0xFFFFFFFF                // TRX_AGG_RANGE4_CNT[31..0]
#define BN0_WF_MIB_TOP_TRDR4_TRX_AGG_RANGE4_CNT_SHFT           0

/* =====================================================================================

  ---TRDR5 (0x820ed000 + 0x9C8)---

    TRX_AGG_RANGE5_CNT[31..0]    - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 5(MIB.M0ARNGn.AGG_RANGE_SEL_5) of CR setting
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TRDR5_TRX_AGG_RANGE5_CNT_ADDR           BN0_WF_MIB_TOP_TRDR5_ADDR
#define BN0_WF_MIB_TOP_TRDR5_TRX_AGG_RANGE5_CNT_MASK           0xFFFFFFFF                // TRX_AGG_RANGE5_CNT[31..0]
#define BN0_WF_MIB_TOP_TRDR5_TRX_AGG_RANGE5_CNT_SHFT           0

/* =====================================================================================

  ---TRDR6 (0x820ed000 + 0x9CC)---

    TRX_AGG_RANGE6_CNT[31..0]    - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 6(MIB.M0ARNGn.AGG_RANGE_SEL_6) of CR setting
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TRDR6_TRX_AGG_RANGE6_CNT_ADDR           BN0_WF_MIB_TOP_TRDR6_ADDR
#define BN0_WF_MIB_TOP_TRDR6_TRX_AGG_RANGE6_CNT_MASK           0xFFFFFFFF                // TRX_AGG_RANGE6_CNT[31..0]
#define BN0_WF_MIB_TOP_TRDR6_TRX_AGG_RANGE6_CNT_SHFT           0

/* =====================================================================================

  ---TRDR7 (0x820ed000 + 0x9D0)---

    TRX_AGG_RANGE7_CNT[31..0]    - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 7(MIB.M0ARNGn.AGG_RANGE_SEL_7) of CR setting
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TRDR7_TRX_AGG_RANGE7_CNT_ADDR           BN0_WF_MIB_TOP_TRDR7_ADDR
#define BN0_WF_MIB_TOP_TRDR7_TRX_AGG_RANGE7_CNT_MASK           0xFFFFFFFF                // TRX_AGG_RANGE7_CNT[31..0]
#define BN0_WF_MIB_TOP_TRDR7_TRX_AGG_RANGE7_CNT_SHFT           0

/* =====================================================================================

  ---TRDR8 (0x820ed000 + 0x9D4)---

    TRX_AGG_RANGE8_CNT[31..0]    - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 8(MIB.M0ARNGn.AGG_RANGE_SEL_8) of CR setting
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TRDR8_TRX_AGG_RANGE8_CNT_ADDR           BN0_WF_MIB_TOP_TRDR8_ADDR
#define BN0_WF_MIB_TOP_TRDR8_TRX_AGG_RANGE8_CNT_MASK           0xFFFFFFFF                // TRX_AGG_RANGE8_CNT[31..0]
#define BN0_WF_MIB_TOP_TRDR8_TRX_AGG_RANGE8_CNT_SHFT           0

/* =====================================================================================

  ---TRDR9 (0x820ed000 + 0x9D8)---

    TRX_AGG_RANGE9_CNT[31..0]    - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 9(MIB.M0ARNGn.AGG_RANGE_SEL_9) of CR setting
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TRDR9_TRX_AGG_RANGE9_CNT_ADDR           BN0_WF_MIB_TOP_TRDR9_ADDR
#define BN0_WF_MIB_TOP_TRDR9_TRX_AGG_RANGE9_CNT_MASK           0xFFFFFFFF                // TRX_AGG_RANGE9_CNT[31..0]
#define BN0_WF_MIB_TOP_TRDR9_TRX_AGG_RANGE9_CNT_SHFT           0

/* =====================================================================================

  ---TRDR10 (0x820ed000 + 0x9DC)---

    TRX_AGG_RANGE10_CNT[31..0]   - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 10(MIB.M0ARNGn.AGG_RANGE_SEL_10) of CR setting
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TRDR10_TRX_AGG_RANGE10_CNT_ADDR         BN0_WF_MIB_TOP_TRDR10_ADDR
#define BN0_WF_MIB_TOP_TRDR10_TRX_AGG_RANGE10_CNT_MASK         0xFFFFFFFF                // TRX_AGG_RANGE10_CNT[31..0]
#define BN0_WF_MIB_TOP_TRDR10_TRX_AGG_RANGE10_CNT_SHFT         0

/* =====================================================================================

  ---TRDR11 (0x820ed000 + 0x9E0)---

    TRX_AGG_RANGE11_CNT[31..0]   - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 11(MIB.M0ARNGn.AGG_RANGE_SEL_11) of CR setting
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TRDR11_TRX_AGG_RANGE11_CNT_ADDR         BN0_WF_MIB_TOP_TRDR11_ADDR
#define BN0_WF_MIB_TOP_TRDR11_TRX_AGG_RANGE11_CNT_MASK         0xFFFFFFFF                // TRX_AGG_RANGE11_CNT[31..0]
#define BN0_WF_MIB_TOP_TRDR11_TRX_AGG_RANGE11_CNT_SHFT         0

/* =====================================================================================

  ---TRDR12 (0x820ed000 + 0x9E4)---

    TRX_AGG_RANGE12_CNT[31..0]   - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 12(MIB.M0ARNGn.AGG_RANGE_SEL_12) of CR setting
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TRDR12_TRX_AGG_RANGE12_CNT_ADDR         BN0_WF_MIB_TOP_TRDR12_ADDR
#define BN0_WF_MIB_TOP_TRDR12_TRX_AGG_RANGE12_CNT_MASK         0xFFFFFFFF                // TRX_AGG_RANGE12_CNT[31..0]
#define BN0_WF_MIB_TOP_TRDR12_TRX_AGG_RANGE12_CNT_SHFT         0

/* =====================================================================================

  ---TRDR13 (0x820ed000 + 0x9E8)---

    TRX_AGG_RANGE13_CNT[31..0]   - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 13(MIB.M0ARNGn.AGG_RANGE_SEL_13) of CR setting
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TRDR13_TRX_AGG_RANGE13_CNT_ADDR         BN0_WF_MIB_TOP_TRDR13_ADDR
#define BN0_WF_MIB_TOP_TRDR13_TRX_AGG_RANGE13_CNT_MASK         0xFFFFFFFF                // TRX_AGG_RANGE13_CNT[31..0]
#define BN0_WF_MIB_TOP_TRDR13_TRX_AGG_RANGE13_CNT_SHFT         0

/* =====================================================================================

  ---TRDR14 (0x820ed000 + 0x9EC)---

    TRX_AGG_RANGE14_CNT[31..0]   - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 14(MIB.M0ARNGn.AGG_RANGE_SEL_14) of CR setting
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TRDR14_TRX_AGG_RANGE14_CNT_ADDR         BN0_WF_MIB_TOP_TRDR14_ADDR
#define BN0_WF_MIB_TOP_TRDR14_TRX_AGG_RANGE14_CNT_MASK         0xFFFFFFFF                // TRX_AGG_RANGE14_CNT[31..0]
#define BN0_WF_MIB_TOP_TRDR14_TRX_AGG_RANGE14_CNT_SHFT         0

/* =====================================================================================

  ---TRDR15 (0x820ed000 + 0x9F0)---

    TRX_AGG_RANGE15_CNT[31..0]   - (RW) PPDU(A-MPDU) count which Aggregate Size in the range 15(MIB.M0ARNGn.AGG_RANGE_SEL_15) of CR setting
                                     (unit : PPDU)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_TRDR15_TRX_AGG_RANGE15_CNT_ADDR         BN0_WF_MIB_TOP_TRDR15_ADDR
#define BN0_WF_MIB_TOP_TRDR15_TRX_AGG_RANGE15_CNT_MASK         0xFFFFFFFF                // TRX_AGG_RANGE15_CNT[31..0]
#define BN0_WF_MIB_TOP_TRDR15_TRX_AGG_RANGE15_CNT_SHFT         0

/* =====================================================================================

  ---MSR0 (0x820ed000 + 0x9F4)---

    CCK_MDRDY_TIME[31..0]        - (RW) This counter is started on CCK mode when MDRDY is active and stopped on falling edge of MDRDY, used for Measurement. This counter is saturated mode.
                                     Enable when OFDM_CCK_MDRDY_TIME_EN = target BSS
                                     (unit: 1.024us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MSR0_CCK_MDRDY_TIME_ADDR                BN0_WF_MIB_TOP_MSR0_ADDR
#define BN0_WF_MIB_TOP_MSR0_CCK_MDRDY_TIME_MASK                0xFFFFFFFF                // CCK_MDRDY_TIME[31..0]
#define BN0_WF_MIB_TOP_MSR0_CCK_MDRDY_TIME_SHFT                0

/* =====================================================================================

  ---MSR1 (0x820ed000 + 0x9F8)---

    OFDM_LG_MIXED_VHT_MDRDY_TIME[31..0] - (RW) This counter is started on OFDM mode(non-GREEN) when MDRDY is active and stopped on falling edge of MDRDY, used for Measurement. This counter is saturated mode.
                                     Enable when OFDM_CCK_MDRDY_TIME_EN = target BSS
                                     The tagrget modulcation is selected by OFDM_NON_GREEN_MDRDY_SOURCE, and the LG_OFDM and HT_MIXED is counted which cannot be turned off
                                     (unit: 1.024us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MSR1_OFDM_LG_MIXED_VHT_MDRDY_TIME_ADDR  BN0_WF_MIB_TOP_MSR1_ADDR
#define BN0_WF_MIB_TOP_MSR1_OFDM_LG_MIXED_VHT_MDRDY_TIME_MASK  0xFFFFFFFF                // OFDM_LG_MIXED_VHT_MDRDY_TIME[31..0]
#define BN0_WF_MIB_TOP_MSR1_OFDM_LG_MIXED_VHT_MDRDY_TIME_SHFT  0

/* =====================================================================================

  ---MSR2 (0x820ed000 + 0x9FC)---

    OFDM_GREEN_MDRDY_TIME[31..0] - (RW) This counter is started on OFDM GREEN mode when MDRDY is active and stopped on falling edge of MDRDY, used for Measurement. This counter is saturated mode.
                                     Enable when OFDM_CCK_MDRDY_TIME_EN = target BSS
                                     (unit: 1.024us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MSR2_OFDM_GREEN_MDRDY_TIME_ADDR         BN0_WF_MIB_TOP_MSR2_ADDR
#define BN0_WF_MIB_TOP_MSR2_OFDM_GREEN_MDRDY_TIME_MASK         0xFFFFFFFF                // OFDM_GREEN_MDRDY_TIME[31..0]
#define BN0_WF_MIB_TOP_MSR2_OFDM_GREEN_MDRDY_TIME_SHFT         0

/* =====================================================================================

  ---MCTR5 (0x820ed000 + 0xA00)---

    P_CCA_TIME[31..0]            - (RW) This counter measures primary CCA. Primary CCA is from (MDRDY|pED). (primary channel busy time) This counter is saturated mode.
                                     Enable when PSCCA_TIME_EN = target BSS
                                     The target source is selected by PRIM_CS_ED_SEL
                                     (unit: 1us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCTR5_P_CCA_TIME_ADDR                   BN0_WF_MIB_TOP_MCTR5_ADDR
#define BN0_WF_MIB_TOP_MCTR5_P_CCA_TIME_MASK                   0xFFFFFFFF                // P_CCA_TIME[31..0]
#define BN0_WF_MIB_TOP_MCTR5_P_CCA_TIME_SHFT                   0

/* =====================================================================================

  ---MCTR6 (0x820ed000 + 0xA04)---

    S_CCA_TIME[31..0]            - (RW) This counter measures secondary CCA. Secondary CCA is from ((MDRDY&>=target BW)|sED).
                                     (Secondary channel busy time, 20/40/80/160MHz) This counter is saturated mode.
                                     Enable when PSCCA_TIME_EN = target BSS
                                     The target source is selected by SEC_CS_ED_SEL
                                     (unit: 1us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCTR6_S_CCA_TIME_ADDR                   BN0_WF_MIB_TOP_MCTR6_ADDR
#define BN0_WF_MIB_TOP_MCTR6_S_CCA_TIME_MASK                   0xFFFFFFFF                // S_CCA_TIME[31..0]
#define BN0_WF_MIB_TOP_MCTR6_S_CCA_TIME_SHFT                   0

/* =====================================================================================

  ---MCTR0 (0x820ed000 + 0xA08)---

    CCA_TIME[31..0]              - (RW) This counter measures primary/secondary ED or CS CCA
                                     The source is selected by CS_ED_SEL
                                     (unit: 1us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCTR0_CCA_TIME_ADDR                     BN0_WF_MIB_TOP_MCTR0_ADDR
#define BN0_WF_MIB_TOP_MCTR0_CCA_TIME_MASK                     0xFFFFFFFF                // CCA_TIME[31..0]
#define BN0_WF_MIB_TOP_MCTR0_CCA_TIME_SHFT                     0

/* =====================================================================================

  ---MCTR1 (0x820ed000 + 0xA0C)---

    S_20BW_CCA_TIME[31..0]       - (RW) This counter measures secondary ED or CS CCA
                                     The source is selected by S20BW_CS_ED_SEL
                                     (unit: 1us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCTR1_S_20BW_CCA_TIME_ADDR              BN0_WF_MIB_TOP_MCTR1_ADDR
#define BN0_WF_MIB_TOP_MCTR1_S_20BW_CCA_TIME_MASK              0xFFFFFFFF                // S_20BW_CCA_TIME[31..0]
#define BN0_WF_MIB_TOP_MCTR1_S_20BW_CCA_TIME_SHFT              0

/* =====================================================================================

  ---MCTR2 (0x820ed000 + 0xA10)---

    S_40BW_CCA_TIME[31..0]       - (RW) This counter measures secondary ED or CS CAA
                                     The source is selected by S40BW_CS_ED_SEL
                                     (unit: 1us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCTR2_S_40BW_CCA_TIME_ADDR              BN0_WF_MIB_TOP_MCTR2_ADDR
#define BN0_WF_MIB_TOP_MCTR2_S_40BW_CCA_TIME_MASK              0xFFFFFFFF                // S_40BW_CCA_TIME[31..0]
#define BN0_WF_MIB_TOP_MCTR2_S_40BW_CCA_TIME_SHFT              0

/* =====================================================================================

  ---MCTR3 (0x820ed000 + 0xA14)---

    S_80BW_CCA_TIME[31..0]       - (RW) This counter measures secondary ED or CS CCA
                                     The source is selected by S80BW_CS_ED_SEL
                                     (unit: 1us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCTR3_S_80BW_CCA_TIME_ADDR              BN0_WF_MIB_TOP_MCTR3_ADDR
#define BN0_WF_MIB_TOP_MCTR3_S_80BW_CCA_TIME_MASK              0xFFFFFFFF                // S_80BW_CCA_TIME[31..0]
#define BN0_WF_MIB_TOP_MCTR3_S_80BW_CCA_TIME_SHFT              0

/* =====================================================================================

  ---MCTR4 (0x820ed000 + 0xA18)---

    S_160BW_CCA_TIME[31..0]      - (RW) This counter measures secondary ED or CS CCA
                                     The source is selected by S160BW_CS_ED_SEL
                                     (unit: 1us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCTR4_S_160BW_CCA_TIME_ADDR             BN0_WF_MIB_TOP_MCTR4_ADDR
#define BN0_WF_MIB_TOP_MCTR4_S_160BW_CCA_TIME_MASK             0xFFFFFFFF                // S_160BW_CCA_TIME[31..0]
#define BN0_WF_MIB_TOP_MCTR4_S_160BW_CCA_TIME_SHFT             0

/* =====================================================================================

  ---MCS2TR0 (0x820ed000 + 0xA1C)---

    S_P20BW_ED_TIME[31..0]       - (RW) This counter measures secondary ED CCA for each sub 20MHz channel
                                     (unit: 1us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCS2TR0_S_P20BW_ED_TIME_ADDR            BN0_WF_MIB_TOP_MCS2TR0_ADDR
#define BN0_WF_MIB_TOP_MCS2TR0_S_P20BW_ED_TIME_MASK            0xFFFFFFFF                // S_P20BW_ED_TIME[31..0]
#define BN0_WF_MIB_TOP_MCS2TR0_S_P20BW_ED_TIME_SHFT            0

/* =====================================================================================

  ---MCS2TR1 (0x820ed000 + 0xA20)---

    S_P20BW_ED_TIME[31..0]       - (RW) This counter measures secondary ED CCA for each sub 20MHz channel
                                     (unit: 1us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCS2TR1_S_P20BW_ED_TIME_ADDR            BN0_WF_MIB_TOP_MCS2TR1_ADDR
#define BN0_WF_MIB_TOP_MCS2TR1_S_P20BW_ED_TIME_MASK            0xFFFFFFFF                // S_P20BW_ED_TIME[31..0]
#define BN0_WF_MIB_TOP_MCS2TR1_S_P20BW_ED_TIME_SHFT            0

/* =====================================================================================

  ---MCS2TR2 (0x820ed000 + 0xA24)---

    S_P20BW_ED_TIME[31..0]       - (RW) This counter measures secondary ED CCA for each sub 20MHz channel
                                     (unit: 1us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCS2TR2_S_P20BW_ED_TIME_ADDR            BN0_WF_MIB_TOP_MCS2TR2_ADDR
#define BN0_WF_MIB_TOP_MCS2TR2_S_P20BW_ED_TIME_MASK            0xFFFFFFFF                // S_P20BW_ED_TIME[31..0]
#define BN0_WF_MIB_TOP_MCS2TR2_S_P20BW_ED_TIME_SHFT            0

/* =====================================================================================

  ---MCS2TR3 (0x820ed000 + 0xA28)---

    S_P20BW_ED_TIME[31..0]       - (RW) This counter measures secondary ED CCA for each sub 20MHz channel
                                     (unit: 1us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCS2TR3_S_P20BW_ED_TIME_ADDR            BN0_WF_MIB_TOP_MCS2TR3_ADDR
#define BN0_WF_MIB_TOP_MCS2TR3_S_P20BW_ED_TIME_MASK            0xFFFFFFFF                // S_P20BW_ED_TIME[31..0]
#define BN0_WF_MIB_TOP_MCS2TR3_S_P20BW_ED_TIME_SHFT            0

/* =====================================================================================

  ---MCS2TR4 (0x820ed000 + 0xA2C)---

    S_P20BW_ED_TIME[31..0]       - (RW) This counter measures secondary ED CCA for each sub 20MHz channel
                                     (unit: 1us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCS2TR4_S_P20BW_ED_TIME_ADDR            BN0_WF_MIB_TOP_MCS2TR4_ADDR
#define BN0_WF_MIB_TOP_MCS2TR4_S_P20BW_ED_TIME_MASK            0xFFFFFFFF                // S_P20BW_ED_TIME[31..0]
#define BN0_WF_MIB_TOP_MCS2TR4_S_P20BW_ED_TIME_SHFT            0

/* =====================================================================================

  ---MCS2TR5 (0x820ed000 + 0xA30)---

    S_P20BW_ED_TIME[31..0]       - (RW) This counter measures secondary ED CCA for each sub 20MHz channel
                                     (unit: 1us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCS2TR5_S_P20BW_ED_TIME_ADDR            BN0_WF_MIB_TOP_MCS2TR5_ADDR
#define BN0_WF_MIB_TOP_MCS2TR5_S_P20BW_ED_TIME_MASK            0xFFFFFFFF                // S_P20BW_ED_TIME[31..0]
#define BN0_WF_MIB_TOP_MCS2TR5_S_P20BW_ED_TIME_SHFT            0

/* =====================================================================================

  ---MCS2TR6 (0x820ed000 + 0xA34)---

    S_P20BW_ED_TIME[31..0]       - (RW) This counter measures secondary ED CCA for each sub 20MHz channel
                                     (unit: 1us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCS2TR6_S_P20BW_ED_TIME_ADDR            BN0_WF_MIB_TOP_MCS2TR6_ADDR
#define BN0_WF_MIB_TOP_MCS2TR6_S_P20BW_ED_TIME_MASK            0xFFFFFFFF                // S_P20BW_ED_TIME[31..0]
#define BN0_WF_MIB_TOP_MCS2TR6_S_P20BW_ED_TIME_SHFT            0

/* =====================================================================================

  ---MCS2TR7 (0x820ed000 + 0xA38)---

    S_P20BW_ED_TIME[31..0]       - (RW) This counter measures secondary ED CCA for each sub 20MHz channel
                                     (unit: 1us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCS2TR7_S_P20BW_ED_TIME_ADDR            BN0_WF_MIB_TOP_MCS2TR7_ADDR
#define BN0_WF_MIB_TOP_MCS2TR7_S_P20BW_ED_TIME_MASK            0xFFFFFFFF                // S_P20BW_ED_TIME[31..0]
#define BN0_WF_MIB_TOP_MCS2TR7_S_P20BW_ED_TIME_SHFT            0

/* =====================================================================================

  ---MCS2TR8 (0x820ed000 + 0xA3C)---

    S_P20BW_ED_TIME[31..0]       - (RW) This counter measures secondary ED CCA for each sub 20MHz channel
                                     (unit: 1us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCS2TR8_S_P20BW_ED_TIME_ADDR            BN0_WF_MIB_TOP_MCS2TR8_ADDR
#define BN0_WF_MIB_TOP_MCS2TR8_S_P20BW_ED_TIME_MASK            0xFFFFFFFF                // S_P20BW_ED_TIME[31..0]
#define BN0_WF_MIB_TOP_MCS2TR8_S_P20BW_ED_TIME_SHFT            0

/* =====================================================================================

  ---MCS2TR9 (0x820ed000 + 0xA40)---

    S_P20BW_ED_TIME[31..0]       - (RW) This counter measures secondary ED CCA for each sub 20MHz channel
                                     (unit: 1us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCS2TR9_S_P20BW_ED_TIME_ADDR            BN0_WF_MIB_TOP_MCS2TR9_ADDR
#define BN0_WF_MIB_TOP_MCS2TR9_S_P20BW_ED_TIME_MASK            0xFFFFFFFF                // S_P20BW_ED_TIME[31..0]
#define BN0_WF_MIB_TOP_MCS2TR9_S_P20BW_ED_TIME_SHFT            0

/* =====================================================================================

  ---MCS2TR10 (0x820ed000 + 0xA44)---

    S_P20BW_ED_TIME[31..0]       - (RW) This counter measures secondary ED CCA for each sub 20MHz channel
                                     (unit: 1us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCS2TR10_S_P20BW_ED_TIME_ADDR           BN0_WF_MIB_TOP_MCS2TR10_ADDR
#define BN0_WF_MIB_TOP_MCS2TR10_S_P20BW_ED_TIME_MASK           0xFFFFFFFF                // S_P20BW_ED_TIME[31..0]
#define BN0_WF_MIB_TOP_MCS2TR10_S_P20BW_ED_TIME_SHFT           0

/* =====================================================================================

  ---MCS2TR11 (0x820ed000 + 0xA48)---

    S_P20BW_ED_TIME[31..0]       - (RW) This counter measures secondary ED CCA for each sub 20MHz channel
                                     (unit: 1us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCS2TR11_S_P20BW_ED_TIME_ADDR           BN0_WF_MIB_TOP_MCS2TR11_ADDR
#define BN0_WF_MIB_TOP_MCS2TR11_S_P20BW_ED_TIME_MASK           0xFFFFFFFF                // S_P20BW_ED_TIME[31..0]
#define BN0_WF_MIB_TOP_MCS2TR11_S_P20BW_ED_TIME_SHFT           0

/* =====================================================================================

  ---MCS2TR12 (0x820ed000 + 0xA4C)---

    S_P20BW_ED_TIME[31..0]       - (RW) This counter measures secondary ED CCA for each sub 20MHz channel
                                     (unit: 1us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCS2TR12_S_P20BW_ED_TIME_ADDR           BN0_WF_MIB_TOP_MCS2TR12_ADDR
#define BN0_WF_MIB_TOP_MCS2TR12_S_P20BW_ED_TIME_MASK           0xFFFFFFFF                // S_P20BW_ED_TIME[31..0]
#define BN0_WF_MIB_TOP_MCS2TR12_S_P20BW_ED_TIME_SHFT           0

/* =====================================================================================

  ---MCS2TR13 (0x820ed000 + 0xA50)---

    S_P20BW_ED_TIME[31..0]       - (RW) This counter measures secondary ED CCA for each sub 20MHz channel
                                     (unit: 1us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCS2TR13_S_P20BW_ED_TIME_ADDR           BN0_WF_MIB_TOP_MCS2TR13_ADDR
#define BN0_WF_MIB_TOP_MCS2TR13_S_P20BW_ED_TIME_MASK           0xFFFFFFFF                // S_P20BW_ED_TIME[31..0]
#define BN0_WF_MIB_TOP_MCS2TR13_S_P20BW_ED_TIME_SHFT           0

/* =====================================================================================

  ---MCS2TR14 (0x820ed000 + 0xA54)---

    S_P20BW_ED_TIME[31..0]       - (RW) This counter measures secondary ED CCA for each sub 20MHz channel
                                     (unit: 1us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCS2TR14_S_P20BW_ED_TIME_ADDR           BN0_WF_MIB_TOP_MCS2TR14_ADDR
#define BN0_WF_MIB_TOP_MCS2TR14_S_P20BW_ED_TIME_MASK           0xFFFFFFFF                // S_P20BW_ED_TIME[31..0]
#define BN0_WF_MIB_TOP_MCS2TR14_S_P20BW_ED_TIME_SHFT           0

/* =====================================================================================

  ---MCS2TR15 (0x820ed000 + 0xA58)---

    S_P20BW_ED_TIME[31..0]       - (RW) This counter measures secondary ED CCA for each sub 20MHz channel
                                     (unit: 1us)

 =====================================================================================*/
#define BN0_WF_MIB_TOP_MCS2TR15_S_P20BW_ED_TIME_ADDR           BN0_WF_MIB_TOP_MCS2TR15_ADDR
#define BN0_WF_MIB_TOP_MCS2TR15_S_P20BW_ED_TIME_MASK           0xFFFFFFFF                // S_P20BW_ED_TIME[31..0]
#define BN0_WF_MIB_TOP_MCS2TR15_S_P20BW_ED_TIME_SHFT           0

#ifdef __cplusplus
}
#endif

#endif // __BN0_WF_MIB_TOP_REGS_H__
