###############################################################################
# Bluetooth character device driver

###############################################################################

# ---------------------------------------------------
# Compile Options
# ---------------------------------------------------
# Support GKI mixed build
ifeq ($(DEVICE_MODULES_PATH),)
DEVICE_MODULES_PATH = $(srctree)
else
LINUXINCLUDE := $(DEVCIE_MODULES_INCLUDE) $(LINUXINCLUDE)
TOP := $(srctree)/..
endif
KO_PATH := $(if $(filter /%,$(src)),,$(srctree)/)$(src)
$(info [bt_drv] btif/Kbuild KO_PATH=$(KO_PATH) DEVICE_MODULES_PATH=$(DEVICE_MODULES_PATH))

ifndef TOP
    TOP := $(srctree)/..
endif

ifneq ($(KERNEL_OUT),)
    ccflags-y += -imacros $(KERNEL_OUT)/include/generated/autoconf.h
endif

# Force build fail on modpost warning
KBUILD_MODPOST_FAIL_ON_WARNINGS := y

# platform

ifeq ($(CONFIG_WLAN_DRV_BUILD_IN),y)
  $(info build-in mode!)
  $(info _MTK_BT_CHIP = $(_MTK_BT_CHIP))
  # _MTK_BT_CHIP comes from conninfra setting
  BT_PLATFORM = $(patsubst MTK_CONSYS_MT%,%,$(strip $(_MTK_BT_CHIP)))
endif


$(info $(LOG_TAG) TARGET_BUILD_VARIANT = $(TARGET_BUILD_VARIANT))
ifeq ("$(TARGET_BUILD_VARIANT)","user")
    ccflags-y += -D FW_LOG_DEFAULT_ON=0
    ccflags-y += -D BUILD_QA_DBG=0
else
    ccflags-y += -D FW_LOG_DEFAULT_ON=1
    ccflags-y += -D BUILD_QA_DBG=1
endif


ccflags-y += -D CONNAC20_CHIPID=$(BT_PLATFORM)
$(info $(LOG_TAG) BT_PLATFORM = $(BT_PLATFORM))
$(info $(LOG_TAG) srctree = $(srctree))

# connsys security
ifneq ($(filter 6983, $(BT_PLATFORM)),)
$(info $(LOG_TAG) support bin to img)
    ccflags-y += -D SUPPORT_BEIF=0
    ccflags-y += -D SUPPORT_BIN2IMG=1
    ccflags-y += -D CFG_BT_ATF_SUPPORT=1
    ccflags-y += -D DTS_REORDERED=0
    ccflags-y += -D BT_COREDUMP_CHECK=0
else ifneq ($(filter 6886, $(BT_PLATFORM)),)
$(info $(LOG_TAG) support bin to img)
    ccflags-y += -D SUPPORT_BEIF=0
    ccflags-y += -D SUPPORT_BIN2IMG=1
    ccflags-y += -D CFG_BT_ATF_SUPPORT=1
    ccflags-y += -D DTS_REORDERED=0
    ccflags-y += -D BT_COREDUMP_CHECK=0
else ifneq ($(filter 6897, $(BT_PLATFORM)),)
$(info $(LOG_TAG) support bin to img)
    ccflags-y += -D SUPPORT_BEIF=1
    ccflags-y += -D SUPPORT_BIN2IMG=1
    ccflags-y += -D CFG_BT_ATF_SUPPORT=0
    ccflags-y += -D DTS_REORDERED=0
    ccflags-y += -D BT_COREDUMP_CHECK=0
else ifneq ($(filter 6878, $(BT_PLATFORM)),)
$(info $(LOG_TAG) support bin to img)
    ccflags-y += -D SUPPORT_BEIF=1
    ccflags-y += -D SUPPORT_BIN2IMG=1
    ccflags-y += -D CFG_BT_ATF_SUPPORT=0
    ccflags-y += -D DTS_REORDERED=1
    ccflags-y += -D BT_COREDUMP_CHECK=1
else
$(info $(LOG_TAG) not support bin to img)
    ccflags-y += -D SUPPORT_BEIF=0
    ccflags-y += -D SUPPORT_BIN2IMG=0
    ccflags-y += -D CFG_BT_ATF_SUPPORT=0
    ccflags-y += -D DTS_REORDERED=0
    ccflags-y += -D BT_COREDUMP_CHECK=0
endif


# ---------------------------------------------------
# Compile Options: set feature flag (1: enable, 0: disable)
# ---------------------------------------------------

# build btif interface
ccflags-y += -D CHIP_IF_BTIF

# Use device node or hci_dev as native interface
ccflags-y += -D USE_DEVICE_NODE=1

# Customized fw update feature
ccflags-y += -D CUSTOMER_FW_UPDATE=0

# pm_qos control
ccflags-y += -D PM_QOS_CONTROL=0

# No function, only for build pass
ccflags-y += -D CONFIG_MP_WAKEUP_SOURCE_SYSFS_STAT=1

# Customized feature, load 1b fw bin
#ccflags-y += -D BT_CUS_FEATURE

# ---------------------------------------------------
# Include Path
# ---------------------------------------------------
CONN_INFRA_SRC := $(TOP)/vendor/mediatek/kernel_modules/connectivity/conninfra
CONNFEM_SRC := $(TOP)/vendor/mediatek/kernel_modules/connectivity/connfem
WMT_SRC := $(TOP)/vendor/mediatek/kernel_modules/connectivity/common
BTIF_SRC := $(DEVICE_MODULES_PATH)/drivers/misc/mediatek/btif
ccflags-y += -I$(DEVICE_MODULES_PATH)/drivers/misc/mediatek/connectivity/common
ccflags-y += -I$(DEVICE_MODULES_PATH)/drivers/misc/mediatek/include/mt-plat/
ccflags-y += -I$(DEVICE_MODULES_PATH)/drivers/misc/mediatek/connectivity/power_throttling
ccflags-y += -I$(DEVICE_MODULES_PATH)/drivers/gpu/drm/mediatek/mediatek_v2/
ccflags-y += -I$(CONN_INFRA_SRC)/include
ccflags-y += -I$(CONN_INFRA_SRC)/conn_drv/connv2/debug_utility/include
ccflags-y += -I$(CONN_INFRA_SRC)/conn_drv/connv2/debug_utility/metlog
ccflags-y += -I$(CONN_INFRA_SRC)/conn_drv/connv2/debug_utility/
ccflags-y += -I$(CONNFEM_SRC)/include
ccflags-y += -I$(WMT_SRC)/debug_utility
ccflags-y += -I$(BTIF_SRC)/common/inc

ccflags-y += -I$(KO_PATH)/core/include
ccflags-y += -I$(KO_PATH)/connsys/connac_2_0
ccflags-y += -I$(KO_PATH)/../include
ccflags-y += -I$(KO_PATH)/../include/btif

# ---------------------------------------------------
# Objects List
# ---------------------------------------------------
MODULE_NAME := bt_drv_$(BT_PLATFORM)
ifeq ($(CONFIG_WLAN_DRV_BUILD_IN),y)
  obj-y += $(MODULE_NAME).o
else
  obj-m += $(MODULE_NAME).o
endif

CORE_OBJS := btif/btmtk_dbg.o btif/btmtk_dbg_tp_evt_if.o btif/btmtk_irq.o btif/btmtk_char_dev.o btmtk_fw_log.o btmtk_main.o
CHIP_OBJS := btif/btmtk_mt66xx.o
HIF_OBJS := btif/btmtk_btif_main.o btif/btmtk_queue.o btif/btmtk_beif.o btif/btmtk_beif_plat.o

$(MODULE_NAME)-objs  += $(CORE_OBJS)
$(MODULE_NAME)-objs  += $(HIF_OBJS)
$(MODULE_NAME)-objs  += $(CHIP_OBJS)
